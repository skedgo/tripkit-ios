{"schemaVersion":{"major":0,"minor":1,"patch":2},"includedArchiveIdentifiers":["TripKitAPI","TripKitInterApp","TripKitUI","TripKit"],"interfaceLanguages":{"swift":[{"path":"\/documentation","children":[{"path":"\/documentation\/tripkitapi","type":"module","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkconfig\/appgroupname","type":"property","title":"var appGroupName: String?"},{"path":"\/documentation\/tripkitapi\/tkconfig\/configuration","type":"property","title":"let configuration: [String : AnyHashable]"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitapi\/tkconfig\/shared","type":"property","title":"static let shared: TKConfig"}],"title":"TKConfig","path":"\/documentation\/tripkitapi\/tkconfig"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(level: TKLog.LogLevel, subsystem: String?)","type":"init","path":"\/documentation\/tripkitapi\/tkconsolelogger\/init(level:subsystem:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let level: TKLog.LogLevel","type":"property","path":"\/documentation\/tripkitapi\/tkconsolelogger\/level"},{"title":"let subsystem: String","type":"property","path":"\/documentation\/tripkitapi\/tkconsolelogger\/subsystem"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func output(TKLog.LogLevel, identifier: String, message: String)","type":"method","path":"\/documentation\/tripkitapi\/tkconsolelogger\/output(_:identifier:message:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKLogger Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkconsolelogger\/log(_:identifier:message:)","title":"func log(TKLog.LogLevel, identifier: String, message: String)","type":"method"},{"path":"\/documentation\/tripkitapi\/tkconsolelogger\/log(identifier:request:)","title":"func log(identifier: String, request: TKLog.ServerRequest)","type":"method"},{"path":"\/documentation\/tripkitapi\/tkconsolelogger\/log(identifier:response:)","title":"func log(identifier: String, response: TKLog.ServerResponse)","type":"method"}],"path":"\/documentation\/tripkitapi\/tkconsolelogger\/tklogger-implementations"}],"title":"TKConsoleLogger","path":"\/documentation\/tripkitapi\/tkconsolelogger"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var details: TKAPI.ServerError?","path":"\/documentation\/tripkitapi\/tkerror\/details"},{"type":"property","title":"var isUserError: Bool","path":"\/documentation\/tripkitapi\/tkerror\/isusererror"},{"type":"property","title":"var title: String?","path":"\/documentation\/tripkitapi\/tkerror\/title"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"class func error(from: Data, domain: String) -> TKError?","path":"\/documentation\/tripkitapi\/tkerror\/error(from:domain:)"},{"type":"method","title":"class func error(from: Data?, statusCode: Int) -> TKError?","path":"\/documentation\/tripkitapi\/tkerror\/error(from:statuscode:)"},{"type":"method","title":"class func error(withCode: Int, userInfo: [String : Any]?) -> TKError","path":"\/documentation\/tripkitapi\/tkerror\/error(withcode:userinfo:)"}],"title":"TKError","path":"\/documentation\/tripkitapi\/tkerror"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tklocalcost\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let accuracy: TKLocalCostAccuracy","path":"\/documentation\/tripkitapi\/tklocalcost\/accuracy","type":"property"},{"title":"let cost: Double","path":"\/documentation\/tripkitapi\/tklocalcost\/cost","type":"property"},{"title":"let currency: String","path":"\/documentation\/tripkitapi\/tklocalcost\/currency","type":"property"},{"title":"let maxCost: Double?","path":"\/documentation\/tripkitapi\/tklocalcost\/maxcost","type":"property"},{"title":"let minCost: Double?","path":"\/documentation\/tripkitapi\/tklocalcost\/mincost","type":"property"}],"title":"TKLocalCost","path":"\/documentation\/tripkitapi\/tklocalcost"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKLog.ServerRequest","type":"struct","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func == (TKLog.ServerRequest, TKLog.ServerRequest) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/==(_:_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","type":"property","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/id"},{"title":"let request: URLRequest","type":"property","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/request"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/hash(into:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/equatable-implementations"}],"path":"\/documentation\/tripkitapi\/tklog\/serverrequest"},{"title":"TKLog.ServerResponse","type":"struct","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func == (TKLog.ServerResponse, TKLog.ServerResponse) -> Bool","path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/==(_:_:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let request: ServerRequest","path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/request"},{"type":"property","title":"let result: ServerResult","path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/result"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/hash(into:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/equatable-implementations"}],"path":"\/documentation\/tripkitapi\/tklog\/serverresponse"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKLog.ServerResult","type":"typealias","path":"\/documentation\/tripkitapi\/tklog\/serverresult"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var loggers: [TKLogger]","type":"property","path":"\/documentation\/tripkitapi\/tklog\/loggers"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func debug(String, text: @autoclosure () -> String)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/debug(_:text:)"},{"title":"class func debug(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/debug(identifier:_:file:)"},{"title":"class func error(String, text: String)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/error(_:text:)"},{"title":"class func error(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/error(identifier:_:file:)"},{"title":"class func format(response: URLResponse, data: Data?, for: TKLog.ServerRequest, detailed: Bool) -> String","type":"method","path":"\/documentation\/tripkitapi\/tklog\/format(response:data:for:detailed:)"},{"title":"class func formatForVCCode(request: TKLog.ServerRequest) -> String","type":"method","path":"\/documentation\/tripkitapi\/tklog\/formatforvccode(request:)"},{"title":"class func info(String, text: @autoclosure () -> String)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/info(_:text:)"},{"title":"class func info(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/info(identifier:_:file:)"},{"title":"class func log(String, request: URLRequest, uuid: UUID)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/log(_:request:uuid:)"},{"title":"class func log(String, response: URLResponse?, data: Data?, orError: Error?, for: URLRequest, uuid: UUID)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/log(_:response:data:orerror:for:uuid:)"},{"title":"class func verbose(String, text: @autoclosure () -> String)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/verbose(_:text:)"},{"title":"class func verbose(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/verbose(identifier:_:file:)"},{"title":"class func warn(String, text: String)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/warn(_:text:)"},{"title":"class func warn(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/warn(identifier:_:file:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKLog.LogLevel","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case debug","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/debug"},{"type":"case","title":"case error","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/error"},{"type":"case","title":"case info","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/info"},{"type":"case","title":"case verbose","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/verbose"},{"type":"case","title":"case warning","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/warning"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/hash(into:)","type":"method"}]}],"path":"\/documentation\/tripkitapi\/tklog\/loglevel"}],"title":"TKLog","path":"\/documentation\/tripkitapi\/tklog"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkmaptiles\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkmaptiles\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkitapi\/tkmaptiles\/sources","type":"property","title":"let sources: [TKAPI.DataAttribution]"},{"path":"\/documentation\/tripkitapi\/tkmaptiles\/urltemplates","type":"property","title":"let urlTemplates: [String]"}],"title":"TKMapTiles","path":"\/documentation\/tripkitapi\/tkmaptiles"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(coder: NSCoder)","path":"\/documentation\/tripkitapi\/tkminiinstruction\/init(coder:)"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkminiinstruction\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let detail: String?","path":"\/documentation\/tripkitapi\/tkminiinstruction\/detail"},{"type":"property","title":"let instruction: String","path":"\/documentation\/tripkitapi\/tkminiinstruction\/instruction"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(with: NSCoder)","path":"\/documentation\/tripkitapi\/tkminiinstruction\/encode(with:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var supportsSecureCoding: Bool","path":"\/documentation\/tripkitapi\/tkminiinstruction\/supportssecurecoding"}],"title":"TKMiniInstruction","path":"\/documentation\/tripkitapi\/tkminiinstruction"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/tripkitapi\/tkmodeinfo\/init(coder:)"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkmodeinfo\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alt: String","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/alt"},{"title":"var color: TKColor?","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/color"},{"title":"let descriptor: String?","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/descriptor"},{"title":"var hash: Int","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/hash"},{"title":"let identifier: String?","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/identifier"},{"title":"let localImageName: String?","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/localimagename"},{"title":"var remoteImageIsBranding: Bool","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/remoteimageisbranding"},{"title":"var remoteImageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/remoteimageistemplate"},{"title":"let remoteImageName: String?","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/remoteimagename"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(with: NSCoder)","type":"method","path":"\/documentation\/tripkitapi\/tkmodeinfo\/encode(with:)"},{"title":"func isEqual(Any?) -> Bool","type":"method","path":"\/documentation\/tripkitapi\/tkmodeinfo\/isequal(_:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var supportsSecureCoding: Bool","type":"property","path":"\/documentation\/tripkitapi\/tkmodeinfo\/supportssecurecoding"}],"title":"TKModeInfo","path":"\/documentation\/tripkitapi\/tkmodeinfo"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkregion\/init(asinternationalwithcode:modes:)","type":"init","title":"init(asInternationalWithCode: String, modes: [String])"},{"path":"\/documentation\/tripkitapi\/tkregion\/init(fortestingwithcode:modes:cities:)","type":"init","title":"init(forTestingWithCode: String, modes: [String], cities: [City])"},{"path":"\/documentation\/tripkitapi\/tkregion\/init(from:)","type":"init","title":"init(from: Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkregion\/cities","type":"property","title":"let cities: [City]"},{"path":"\/documentation\/tripkitapi\/tkregion\/code","type":"property","title":"let code: String"},{"path":"\/documentation\/tripkitapi\/tkregion\/isinternational","type":"property","title":"var isInternational: Bool"},{"path":"\/documentation\/tripkitapi\/tkregion\/modeidentifiers","type":"property","title":"let modeIdentifiers: [String]"},{"path":"\/documentation\/tripkitapi\/tkregion\/name","type":"property","title":"var name: String"},{"path":"\/documentation\/tripkitapi\/tkregion\/polygon","type":"property","title":"var polygon: MKPolygon"},{"title":"let timeZone: TimeZone","path":"\/documentation\/tripkitapi\/tkregion\/timezone","type":"property"},{"title":"let urls: [URL]","path":"\/documentation\/tripkitapi\/tkregion\/urls","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func contains(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Bool","path":"\/documentation\/tripkitapi\/tkregion\/contains(latitude:longitude:)","type":"method"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkitapi\/tkregion\/encode(to:)","type":"method"},{"title":"func intersects(polygonPoints: [(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)]) -> Bool","path":"\/documentation\/tripkitapi\/tkregion\/intersects(polygonpoints:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKRegion.City","path":"\/documentation\/tripkitapi\/tkregion\/city","type":"typealias"}],"title":"TKRegion","path":"\/documentation\/tripkitapi\/tkregion"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkregioncity\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkitapi\/tkregioncity\/init(title:latitude:longitude:)","type":"init","title":"init(title: String, latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkregioncity\/latitude","type":"property","title":"let latitude: TKAPI.Degrees"},{"path":"\/documentation\/tripkitapi\/tkregioncity\/longitude","type":"property","title":"let longitude: TKAPI.Degrees"},{"path":"\/documentation\/tripkitapi\/tkregioncity\/name","type":"property","title":"let name: String?"},{"path":"\/documentation\/tripkitapi\/tkregioncity\/orderinregion","type":"property","title":"var orderInRegion: Int?"},{"path":"\/documentation\/tripkitapi\/tkregioncity\/region","type":"property","title":"var region: TKRegion?"}],"title":"TKRegionCity","path":"\/documentation\/tripkitapi\/tkregioncity"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/hasregions","title":"var hasRegions: Bool"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/regions","title":"var regions: [TKRegion]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/regionshash","title":"var regionsHash: NSNumber?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/color(formodeidentifier:)","title":"func color(forModeIdentifier: String) -> TKColor?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/coordinateispartofanyregion(latitude:longitude:)","title":"func coordinateIsPartOfAnyRegion(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Bool"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/dependentmodeidentifier(formodeidentifier:)","title":"func dependentModeIdentifier(forModeIdentifier: String) -> [String]"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/fetchregions(forced:)","title":"func fetchRegions(forced: Bool) async throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/impliedmodes(bymodeidentifer:)","title":"func impliedModes(byModeIdentifer: String) -> [String]"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/loadregionsfromcache()","title":"func loadRegionsFromCache() async"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/localregion(code:)","title":"func localRegion(code: String) -> TKRegion?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/localregion(named:)","title":"func localRegion(named: String) -> TKRegion?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/localregions(containinglatitude:longitude:)","title":"func localRegions(containingLatitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Set<TKRegion>"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/localregions(start:end:)","title":"func localRegions(start: (latitude: TKAPI.Degrees, longitude: TKAPI.Degrees), end: (latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)) -> [TKRegion]"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/modedetails(formodeidentifier:)","title":"func modeDetails(forModeIdentifier: String) -> TKAPI.ModeDetails?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/modeidentifierisrequired(_:)","title":"func modeIdentifierIsRequired(String) -> Bool"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/requireregions()","title":"func requireRegions() async throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/requireregions(completion:)","title":"func requireRegions(completion: (Result<Void, Error>) -> Void)"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/subtitle(formodeidentifier:)","title":"func subtitle(forModeIdentifier: String) -> String?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/timezone(containinglatitude:longitude:)","title":"func timeZone(containingLatitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> TimeZone?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/title(formodeidentifier:)","title":"func title(forModeIdentifier: String) -> String?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/updateregions(forced:)","title":"func updateRegions(forced: Bool)"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/websiteurl(formodeidentifier:)","title":"func websiteURL(forModeIdentifier: String) -> URL?"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/cacheurl","title":"static var cacheURL: URL"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/shared","title":"static let shared: TKRegionManager"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/readlocalcache()","title":"static func readLocalCache() -> Data?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/savetocache(_:)","title":"static func saveToCache(Data)"}],"title":"TKRegionManager","path":"\/documentation\/tripkitapi\/tkregionmanager"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkrouter\/init(config:)","title":"init(config: TKAPIConfig)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkrouter\/config","title":"var config: TKAPIConfig","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/failonanyerror","title":"var failOnAnyError: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/finishedworkers","title":"var finishedWorkers: UInt","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/isactive","title":"var isActive: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/lastworkererror","title":"var lastWorkerError: Error?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/modeidentifiers","title":"var modeIdentifiers: Set<String>","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/server","title":"var server: TKServer?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/workerqueue","title":"var workerQueue: DispatchQueue?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/workers","title":"var workers: [Set<String> : TKRouter]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkrouter\/cancelrequests()","title":"func cancelRequests()","type":"method"},{"path":"\/documentation\/tripkitapi\/tkrouter\/cancelrequestsworker()","title":"func cancelRequestsWorker()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkrouter\/defaultparameters","title":"static var defaultParameters: [URLQueryItem]?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkrouter\/modestogroupinrequest","title":"static var modesToGroupInRequest: [String]?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkrouter\/fetchtripsresponse(for:modeidentifiers:bestonly:additional:config:server:)","title":"static func fetchTripsResponse<C>(for: TKRoutingQuery<C>, modeIdentifiers: Set<String>?, bestOnly: Bool, additional: Set<URLQueryItem>?, config: TKAPIConfig, server: TKServer?) async throws -> TKAPI.RoutingResponse","type":"method"},{"path":"\/documentation\/tripkitapi\/tkrouter\/multifetchtripresponses(request:config:server:)","title":"static func multiFetchTripResponses<C>(request: TKRoutingQuery<C>, config: TKAPIConfig, server: TKServer?) async throws -> [TKAPI.RoutingResponse]","type":"method"},{"path":"\/documentation\/tripkitapi\/tkrouter\/requestparameters(request:modeidentifiers:additional:config:bestonly:includeaddress:)","title":"static func requestParameters<C>(request: TKRoutingQuery<C>, modeIdentifiers: Set<String>?, additional: Set<URLQueryItem>?, config: TKAPIConfig, bestOnly: Bool, includeAddress: Bool) -> [String : Any]","type":"method"},{"path":"\/documentation\/tripkitapi\/tkrouter\/routingrequesturl(request:modes:includeaddress:config:)","title":"static func routingRequestURL<C>(request: TKRoutingQuery<C>, modes: Set<String>?, includeAddress: Bool, config: TKAPIConfig) -> String?","type":"method"},{"path":"\/documentation\/tripkitapi\/tkrouter\/urlrequest(request:modes:includeaddress:config:)","title":"static func urlRequest<C>(request: TKRoutingQuery<C>, modes: Set<String>?, includeAddress: Bool, config: TKAPIConfig) throws -> URLRequest","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkrouter\/routingerror","title":"TKRouter.RoutingError","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/endlocationnotdetermined","title":"case endLocationNotDetermined"},{"type":"case","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/invalidrequest(_:)","title":"case invalidRequest(String)"},{"type":"case","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/notripfound","title":"case noTripFound"},{"type":"case","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/routingnotsupported","title":"case routingNotSupported"},{"type":"case","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/startlocationnotdetermined","title":"case startLocationNotDetermined"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/error-implementations","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}]}],"title":"TKRouter","path":"\/documentation\/tripkitapi\/tkrouter"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkroutingserver\/init(baseurl:apikey:)","type":"init","title":"init(baseURL: URL?, apiKey: String?)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkroutingserver\/baseurls(for:)","type":"method","title":"func baseURLs(for: TKRegion?) -> [URL]"}],"title":"TKRoutingServer","path":"\/documentation\/tripkitapi\/tkroutingserver"},{"type":"class","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitapi\/tkserver\/response","title":"TKServer.Response","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkserver\/response\/headers","title":"var headers: [String : Any]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkserver\/response\/result","title":"var result: Result<T, Error>","type":"property"},{"path":"\/documentation\/tripkitapi\/tkserver\/response\/statuscode","title":"var statusCode: Int?","type":"property"}]},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkserver\/apikey","title":"var apiKey: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkserver\/customheaders","title":"var customHeaders: [String : String]?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkserver\/usertoken","title":"var userToken: String?","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkserver\/getrequestwithskedgohttpheaders(for:paras:)","title":"func GETRequestWithSkedGoHTTPHeaders(for: URL, paras: [String : Any]?) throws -> URLRequest","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/baseurls(for:)","title":"func baseURLs(for: TKRegion?) -> [URL]","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:path:input:headers:region:encoderconfig:decoderconfig:)","title":"func hit<Input, Output>(Output.Type, HTTPMethod, path: String, input: Input, headers: [String : String]?, region: TKRegion?, encoderConfig: (JSONEncoder) -> Void, decoderConfig: (JSONDecoder) -> Void) async throws -> Response<Output>","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:path:parameters:headers:region:)","title":"func hit<Model>(Model.Type, HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?) async -> Response<Model>","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:path:parameters:headers:region:callbackonmain:completion:)","title":"func hit<Model>(Model.Type, HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?, callbackOnMain: Bool, completion: (Int, [String : Any], Result<Model, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:url:parameters:headers:decoderconfig:)","title":"func hit<Model>(Model.Type, HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, decoderConfig: (JSONDecoder) -> Void) async -> Response<Model>","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:url:parameters:headers:decoderconfig:completion:)","title":"func hit<Model>(Model.Type, HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, decoderConfig: (JSONDecoder) -> Void, completion: (Int, [String : Any], Result<Model, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:path:input:headers:region:encoderconfig:)","title":"func hit<Input>(HTTPMethod, path: String, input: Input, headers: [String : String]?, region: TKRegion?, encoderConfig: (JSONEncoder) -> Void) async throws -> Response<Data?>","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:path:parameters:headers:region:)","title":"func hit(HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?) async -> Response<Data>","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:path:parameters:headers:region:callbackonmain:completion:)","title":"func hit(HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?, callbackOnMain: Bool, completion: (Int, [String : Any], Result<Data, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:url:parameters:headers:)","title":"func hit(HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?) async -> Response<Data>","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hit(_:url:parameters:headers:completion:)","title":"func hit(HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, completion: (Int, [String : Any], Result<Data, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/hitsync(_:url:parameters:timeout:)","title":"func hitSync(HTTPMethod, url: URL, parameters: [String : Any]?, timeout: DispatchTimeInterval) throws -> Data","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitapi\/tkserver\/custombaseurl","title":"static var customBaseURL: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkserver\/fallbackbaseurl","title":"static var fallbackBaseURL: URL","type":"property"},{"path":"\/documentation\/tripkitapi\/tkserver\/shared","title":"static let shared: TKServer","type":"property"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitapi\/tkserver\/xtripgoversion()","title":"static func xTripGoVersion() -> String?","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod","title":"TKServer.HTTPMethod","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/delete","type":"case","title":"case DELETE"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/get","type":"case","title":"case GET"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/post","type":"case","title":"case POST"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/put","type":"case","title":"case PUT"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkitapi\/tkserver\/repeathandler","title":"TKServer.RepeatHandler","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case repeatIn(TimeInterval)","path":"\/documentation\/tripkitapi\/tkserver\/repeathandler\/repeatin(_:)"},{"type":"case","title":"case repeatWithNewParameters(TimeInterval, [String : Any])","path":"\/documentation\/tripkitapi\/tkserver\/repeathandler\/repeatwithnewparameters(_:_:)"}]},{"path":"\/documentation\/tripkitapi\/tkserver\/requesterror","title":"TKServer.RequestError","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/invalidurl","title":"case invalidURL"},{"type":"case","path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/nobaseurls","title":"case noBaseURLs"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/error-implementations","title":"Error Implementations"}]},{"path":"\/documentation\/tripkitapi\/tkserver\/servererror","title":"TKServer.ServerError","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkserver\/servererror\/nodata","type":"case","title":"case noData"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkserver\/servererror\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkserver\/servererror\/!=(_:_:)"}]},{"path":"\/documentation\/tripkitapi\/tkserver\/servererror\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/servererror\/localizeddescription"}]}]}],"title":"TKServer","path":"\/documentation\/tripkitapi\/tkserver"},{"type":"class","title":"TKServerError","path":"\/documentation\/tripkitapi\/tkservererror"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkusererror\/isusererror","type":"property","title":"var isUserError: Bool"}],"title":"TKUserError","path":"\/documentation\/tripkitapi\/tkusererror"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","title":"BoolCodableStrategy","path":"\/documentation\/tripkitapi\/boolcodablestrategy"},{"type":"protocol","children":[{"title":"Associated Types","type":"groupMarker"},{"title":"DefaultValue","type":"associatedtype","path":"\/documentation\/tripkitapi\/defaultcodablestrategy\/defaultvalue-swift.associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: DefaultValue","type":"property","path":"\/documentation\/tripkitapi\/defaultcodablestrategy\/defaultvalue-swift.type.property"}],"title":"DefaultCodableStrategy","path":"\/documentation\/tripkitapi\/defaultcodablestrategy"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var level: TKLog.LogLevel","path":"\/documentation\/tripkitapi\/tklogger\/level"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func log(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkitapi\/tklogger\/log(_:identifier:message:)"},{"type":"method","title":"func log(identifier: String, request: TKLog.ServerRequest)","path":"\/documentation\/tripkitapi\/tklogger\/log(identifier:request:)","children":[{"type":"groupMarker","children":[{"title":"func log(identifier: String, request: TKLog.ServerRequest)","type":"method","path":"\/documentation\/tripkitapi\/tklogger\/log(identifier:request:)-4twvi"}],"title":"TKLogger Implementations"}]},{"type":"method","title":"func log(identifier: String, response: TKLog.ServerResponse)","path":"\/documentation\/tripkitapi\/tklogger\/log(identifier:response:)","children":[{"children":[{"path":"\/documentation\/tripkitapi\/tklogger\/log(identifier:response:)-6xrpe","type":"method","title":"func log(identifier: String, response: TKLog.ServerResponse)"}],"title":"TKLogger Implementations","type":"groupMarker"}]},{"type":"method","title":"func output(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkitapi\/tklogger\/output(_:identifier:message:)"}],"title":"TKLogger","path":"\/documentation\/tripkitapi\/tklogger"},{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: Default.DefaultValue)","path":"\/documentation\/tripkitapi\/defaultcodable\/init(wrappedvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: Default.DefaultValue","path":"\/documentation\/tripkitapi\/defaultcodable\/wrappedvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkitapi\/defaultcodable\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/defaultcodable\/init(from:)"}],"type":"symbol"},{"title":"Encodable Implementations","path":"\/documentation\/tripkitapi\/defaultcodable\/encodable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/defaultcodable\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"}],"type":"symbol"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/defaultcodable\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/defaultcodable\/!=(_:_:)"}],"type":"symbol"}],"title":"DefaultCodable","path":"\/documentation\/tripkitapi\/defaultcodable"},{"type":"struct","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/defaultemptyarraystrategy\/defaultvalue","title":"static var defaultValue: [T]","type":"property"}],"title":"DefaultEmptyArrayStrategy","path":"\/documentation\/tripkitapi\/defaultemptyarraystrategy"},{"type":"struct","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitapi\/defaultfalsestrategy\/defaultvalue","type":"property","title":"static var defaultValue: Bool"}],"title":"DefaultFalseStrategy","path":"\/documentation\/tripkitapi\/defaultfalsestrategy"},{"type":"struct","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: LossyArray<T>","type":"property","path":"\/documentation\/tripkitapi\/defaultlossyarray\/defaultvalue"}],"title":"DefaultLossyArray","path":"\/documentation\/tripkitapi\/defaultlossyarray"},{"type":"struct","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/defaulttruestrategy\/defaultvalue","title":"static var defaultValue: Bool","type":"property"}],"title":"DefaultTrueStrategy","path":"\/documentation\/tripkitapi\/defaulttruestrategy"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: Date)","type":"init","path":"\/documentation\/tripkitapi\/iso8601\/init(wrappedvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: Date","type":"property","path":"\/documentation\/tripkitapi\/iso8601\/wrappedvalue"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/iso8601\/init(from:)","type":"init","title":"init(from: Decoder) throws"}],"type":"symbol","path":"\/documentation\/tripkitapi\/iso8601\/decodable-implementations"},{"title":"Encodable Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkitapi\/iso8601\/encode(to:)"}],"type":"symbol","path":"\/documentation\/tripkitapi\/iso8601\/encodable-implementations"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/iso8601\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/tripkitapi\/iso8601\/equatable-implementations"}],"title":"ISO8601","path":"\/documentation\/tripkitapi\/iso8601"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: Date)","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/init(wrappedvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: Date","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/wrappedvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/init(from:)","type":"init"}]},{"title":"Encodable Implementations","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/encode(to:)","type":"method"}]},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/!=(_:_:)"}]}],"title":"ISO8601OrSecondsSince1970","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/lossyarray\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: [T])"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/lossyarray\/wrappedvalue","type":"property","title":"var wrappedValue: [T]"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/lossyarray\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/lossyarray\/init(from:)"}],"title":"Decodable Implementations"},{"path":"\/documentation\/tripkitapi\/lossyarray\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/lossyarray\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"title":"Encodable Implementations"},{"path":"\/documentation\/tripkitapi\/lossyarray\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/lossyarray\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}],"title":"LossyArray","path":"\/documentation\/tripkitapi\/lossyarray"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: Date?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/wrappedvalue","type":"property","title":"var wrappedValue: Date?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"type":"symbol","title":"Decodable Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/encodable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"}],"type":"symbol","title":"Encodable Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/optionaliso8601\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"}],"title":"OptionalISO8601","path":"\/documentation\/tripkitapi\/optionaliso8601"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/init(wrappedvalue:)","title":"init(wrappedValue: Date?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/wrappedvalue","title":"var wrappedValue: Date?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/decodable-implementations","title":"Decodable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/init(from:)"}]},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/encodable-implementations","title":"Encodable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/encode(to:)","title":"func encode(to: Encoder) throws"}]},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/!=(_:_:)","type":"op"}]}],"title":"OptionalISO8601OrSecondsSince1970","path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(latitude: Double, longitude: Double)","path":"\/documentation\/tripkitapi\/point\/init(latitude:longitude:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func decodePolyline(String) -> [Point]","path":"\/documentation\/tripkitapi\/point\/decodepolyline(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/point\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitapi\/point\/equatable-implementations"}],"title":"Point","path":"\/documentation\/tripkitapi\/point"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(points: [Point])","path":"\/documentation\/tripkitapi\/polygon\/init(points:)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func contains(Point, onLine: Bool) -> Bool","path":"\/documentation\/tripkitapi\/polygon\/contains(_:online:)","type":"method"}],"title":"Polygon","path":"\/documentation\/tripkitapi\/polygon"},{"type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.Alert","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/alert","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.Alert.Action","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let text: String","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/text"},{"type":"property","title":"let type: ActionType","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/type"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKAPI.Alert.Action.ActionType","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/actiontype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case reroute([String])","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/actiontype\/reroute(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/actiontype\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/actiontype\/equatable-implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Decodable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/decodable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/init(from:)","title":"init(from: Decoder) throws"}]},{"type":"symbol","title":"Encodable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/encodable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/encode(to:)","type":"method"}]},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/!=(_:_:)","type":"op"}]}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/alert\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let action: Action?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.property","type":"property"},{"title":"let fromDate: Date?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/fromdate","type":"property"},{"title":"let hashCode: Int","path":"\/documentation\/tripkitapi\/tkapi\/alert\/hashcode","type":"property"},{"title":"let lastUpdated: Date?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/lastupdated","type":"property"},{"title":"let location: TKAPI.Location?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/location","type":"property"},{"title":"let remoteIcon: URL?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/remoteicon","type":"property"},{"title":"let serviceTripID: String?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/servicetripid","type":"property"},{"title":"let severity: Severity","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.property","type":"property"},{"title":"let text: String?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/text","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitapi\/tkapi\/alert\/title","type":"property"},{"title":"let toDate: Date?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/todate","type":"property"},{"title":"let url: URL?","path":"\/documentation\/tripkitapi\/tkapi\/alert\/url","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.Alert.Severity","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case alert","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/alert"},{"type":"case","title":"case info","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/info"},{"type":"case","title":"case warning","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/warning"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/equatable-implementations"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/rawrepresentable-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alert\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"TKAPI.AlertMapping","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alert: TKAPI.Alert","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/alert"},{"title":"let modeInfo: TKModeInfo?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/modeinfo"},{"title":"let operators: [String]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/operators"},{"title":"let routes: [AlertRouteMapping]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/routes"},{"title":"let serviceTripIDs: [String]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/servicetripids"},{"title":"let stopCodes: [String]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/stopcodes"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"TKAPI.AlertRouteMapping","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var color: TKColor?","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/color"},{"type":"property","title":"let id: String","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/id"},{"type":"property","title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/modeinfo"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/name"},{"type":"property","title":"let number: String?","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/number"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/equatable-implementations"}]},{"title":"TKAPI.AppInfo","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/appinfo","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let deepLink: URL?","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/deeplink","type":"property"},{"title":"let downloadURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/downloadurl","type":"property"},{"title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/name","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case deepLink","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/deeplink"},{"type":"case","title":"case downloadURL","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/downloadurl"},{"type":"case","title":"case name","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/name"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(intValue: Int)","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/init(intvalue:)"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/init(rawvalue:)"},{"type":"init","title":"init?(stringValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/init(stringvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/debugdescription","type":"property","title":"var debugDescription: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/description","type":"property","title":"var description: String"}],"title":"CodingKey Implementations","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/codingkey-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/rawrepresentable-implementations"}],"title":"TKAPI.AppInfo.CodingKeys","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.CompanyInfo","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/init(from:)"},{"title":"init(name: String, website: URL?, phone: String?, remoteIcon: String?, remoteDarkIcon: String?, color: RGBColor?, appInfo: AppInfo?)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/init(name:website:phone:remoteicon:remotedarkicon:color:appinfo:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let appInfo: AppInfo?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/appinfo"},{"title":"let color: RGBColor?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/color"},{"title":"let name: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/name"},{"title":"let phone: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/phone"},{"title":"let remoteDarkIcon: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/remotedarkicon"},{"title":"let remoteIcon: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/remoteicon"},{"title":"let website: URL?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/website"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.DataAttribution","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/dataattribution","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/init(provider:disclaimer:)","title":"init(provider: CompanyInfo, disclaimer: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/disclaimer","title":"let disclaimer: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/provider","title":"let provider: CompanyInfo","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"TKAPI.Departure","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/departure","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/alerthashcodes","title":"var alertHashCodes: [Int]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/alternativevehicles","title":"var alternativeVehicles: [Vehicle]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/bicycleaccessible","title":"let bicycleAccessible: Bool?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/color","title":"let color: RGBColor?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/direction","title":"let direction: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/endplatform","title":"let endPlatform: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/endstopcode","title":"let endStopCode: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/endtime","title":"var endTime: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/frequency","title":"let frequency: Int?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/modeinfo","title":"let modeInfo: TKModeInfo","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/number","title":"let number: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/operatorid","title":"let operatorID: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/operatorname","title":"let operatorName: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/primaryvehicle","title":"let primaryVehicle: Vehicle?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/realtimearrival","title":"var realTimeArrival: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/realtimedeparture","title":"var realTimeDeparture: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/realtimestatus","title":"let realTimeStatus: RealTimeStatus?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/routeid","title":"let routeID: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/searchstring","title":"let searchString: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/servicetripid","title":"let serviceTripID: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/startplatform","title":"let startPlatform: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/starttime","title":"var startTime: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/timetableendplatform","title":"let timetableEndPlatform: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/timetablestartplatform","title":"let timetableStartPlatform: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/wheelchairaccessible","title":"let wheelchairAccessible: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/departure\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/departure\/!=(_:_:)"}]}]},{"title":"TKAPI.Departures","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/departures","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.Departures.Embarkations","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let services: [Departure]","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/services","type":"property"},{"title":"let stopCode: String","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/stopcode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/equatable-implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/departures\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alerts: [Alert]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/departures\/alerts"},{"title":"let embarkationStops: [Embarkations]","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkationstops"},{"title":"let parentStops: [Stop]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/departures\/parentstops"},{"title":"let stops: [Stop]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/departures\/stops"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/departures\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/departures\/equatable-implementations"}]},{"title":"TKAPI.DirectionStop","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/directionstop","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/iscommon","title":"let isCommon: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/latitude","title":"let latitude: Double","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/longitude","title":"let longitude: Double","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/stopcode","title":"let stopCode: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"TKAPI.Email","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/email","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(address: String, validated: Bool, primary: Bool)","path":"\/documentation\/tripkitapi\/tkapi\/email\/init(address:validated:primary:)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/email\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let address: String","path":"\/documentation\/tripkitapi\/tkapi\/email\/address","type":"property"},{"title":"let primary: Bool","path":"\/documentation\/tripkitapi\/tkapi\/email\/primary","type":"property"},{"title":"let verified: Bool","path":"\/documentation\/tripkitapi\/tkapi\/email\/verified","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/email\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/email\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"TKAPI.EventsResponse","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event","title":"TKAPI.EventsResponse.Event","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/description","type":"property","title":"let description: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/displayimage","type":"property","title":"let displayImage: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/endtime","type":"property","title":"let endTime: Date?"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/icon","type":"property","title":"let icon: Icon?"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/id","type":"property","title":"let id: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/location","type":"property","title":"let location: Location"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/starttime","type":"property","title":"let startTime: Date?"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/title","type":"property","title":"let title: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/url","type":"property","title":"let url: URL?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon","title":"TKAPI.EventsResponse.Icon","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let remoteIcon: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/remoteicon"},{"title":"let remoteIconIsTemplate: Bool?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/remoteiconistemplate"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/equatable-implementations"}]},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location","title":"TKAPI.EventsResponse.Location","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let lat: Double","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/lat","type":"property"},{"title":"let lng: Double","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/lng","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/equatable-implementations","type":"symbol"}]},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/events","title":"let events: [Event]","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/empty","title":"static let empty: EventsResponse","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/!=(_:_:)"}]}]},{"title":"TKAPI.GenericModeDetails","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var lockedModes: [SpecificModeDetails]","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/lockedmodes","type":"property"},{"title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/modeinfo","type":"property"},{"title":"var specificModes: [SpecificModeDetails]","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/specificmodes","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.LatestResponse","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/latestresponse","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/latestresponse\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let services: [LatestService]","path":"\/documentation\/tripkitapi\/tkapi\/latestresponse\/services"}]},{"title":"TKAPI.LatestService","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/latestservice","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alerts: [Alert]","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/alerts"},{"title":"var alternativeVehicles: [Vehicle]","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/alternativevehicles"},{"title":"let code: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/code"},{"title":"var endTime: Date?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/endtime"},{"title":"let primaryVehicle: Vehicle?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/primaryvehicle"},{"title":"var startTime: Date?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/starttime"},{"title":"var stops: [LatestStop]","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/stops"}]},{"title":"TKAPI.LatestStop","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/lateststop","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/lateststop\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var arrival: Date?","path":"\/documentation\/tripkitapi\/tkapi\/lateststop\/arrival","type":"property"},{"title":"var departure: Date?","path":"\/documentation\/tripkitapi\/tkapi\/lateststop\/departure","type":"property"},{"title":"let stopCode: String","path":"\/documentation\/tripkitapi\/tkapi\/lateststop\/stopcode","type":"property"}]},{"title":"TKAPI.Location","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/location","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/location\/init(from:)","type":"init"},{"title":"init(latitude: Degrees, longitude: Degrees, bearing: Direction?, name: String?, address: String?)","path":"\/documentation\/tripkitapi\/tkapi\/location\/init(latitude:longitude:bearing:name:address:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var address: String?","path":"\/documentation\/tripkitapi\/tkapi\/location\/address","type":"property"},{"title":"var bearing: Direction?","path":"\/documentation\/tripkitapi\/tkapi\/location\/bearing","type":"property"},{"title":"var isValid: Bool","path":"\/documentation\/tripkitapi\/tkapi\/location\/isvalid","type":"property"},{"title":"let latitude: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/location\/latitude","type":"property"},{"title":"let longitude: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/location\/longitude","type":"property"},{"title":"var name: String?","path":"\/documentation\/tripkitapi\/tkapi\/location\/name","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.Location.CodingKeys","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case address","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/address"},{"title":"case bearing","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/bearing"},{"title":"case latitude","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/latitude"},{"title":"case longitude","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/longitude"},{"title":"case name","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/name"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/init(intvalue:)"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/init(rawvalue:)"},{"title":"init?(stringValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/init(stringvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/debugdescription","title":"var debugDescription: String"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/description","title":"var description: String"}],"path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/codingkey-implementations"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/rawrepresentable-implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/location\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/location\/!=(_:_:)"}],"type":"symbol"}]},{"title":"TKAPI.ModeDetails","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/modedetails","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let icon: String?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/icon"},{"type":"property","title":"let implies: [String]?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/implies"},{"type":"property","title":"let isBranding: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/isbranding"},{"type":"property","title":"let isTemplate: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/istemplate"},{"type":"property","title":"let required: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/required"},{"type":"property","title":"let rgbColor: TKAPI.RGBColor","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/rgbcolor"},{"type":"property","title":"let subtitle: String?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/subtitle"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/title"},{"type":"property","title":"let vehicleIcon: String?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/vehicleicon"},{"type":"property","title":"let websiteURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/websiteurl"}]},{"title":"TKAPI.OpeningHours","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/openinghours","children":[{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/init(from:)","type":"init","title":"init(from: Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/closes","type":"property","title":"let closes: TimeInterval"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/opens","type":"property","title":"let opens: TimeInterval"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}],"type":"struct","title":"TKAPI.OpeningHours.Day.Time","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(day: DayOfWeek, times: [Time])","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/init(day:times:)"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let day: DayOfWeek","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/day"},{"type":"property","title":"let times: [Time]","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/times"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func contains(Date, in: TimeZone) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/contains(_:in:)"},{"type":"method","title":"func isOpen(at: Date, in: TimeZone) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/isopen(at:in:)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case friday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/friday"},{"title":"case monday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/monday"},{"title":"case publicHoliday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/publicholiday"},{"title":"case saturday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/saturday"},{"title":"case sunday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/sunday"},{"title":"case thursday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/thursday"},{"title":"case tuesday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/tuesday"},{"title":"case wednesday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/wednesday"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/init(rawvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var weekday: Int?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/weekday"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let weekdays: [DayOfWeek]","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/weekdays"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"type":"enum","title":"TKAPI.OpeningHours.Day.DayOfWeek","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/equatable-implementations"}],"type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day","title":"TKAPI.OpeningHours.Day"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/init(from:)","title":"init(from: Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/days","title":"let days: [Day]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/timezone","title":"let timeZone: TimeZone"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/encode(to:)","title":"func encode(to: Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/isopen(at:)","title":"func isOpen(at: Date) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/equatable-implementations","title":"Equatable Implementations"}]},{"title":"TKAPI.Operator","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/operator","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/operator\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String?","path":"\/documentation\/tripkitapi\/tkapi\/operator\/id","type":"property"},{"title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/operator\/name","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/operator\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/operator\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.Paratransit","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/paratransit","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let name: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/name"},{"title":"let number: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/number"},{"title":"let url: URL","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/url"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/equatable-implementations"}]},{"title":"TKAPI.Phone","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/phone","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/phone\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/phone\/init(number:countrycode:validated:type:id:)","type":"init","title":"init(number: String, countryCode: String?, validated: Bool, type: String?, id: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/phone\/countrycode","type":"property","title":"let countryCode: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/phone\/id","type":"property","title":"let id: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/phone\/number","type":"property","title":"let number: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/phone\/type","type":"property","title":"let type: String?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/phone\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/phone\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"title":"TKAPI.PricingTable","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.PricingTable.Entry","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/label","title":"let label: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/maxdurationinminutes","title":"let maxDurationInMinutes: Int?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/price","title":"let price: Float","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let currency: String","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/currency","type":"property"},{"title":"let entries: [Entry]","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entries","type":"property"},{"title":"let subtitle: String?","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/subtitle","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.PrivateVehicle","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/init(type:uuid:name:garage:)","type":"init","title":"init(type: PrivateVehicleType, UUID: String?, name: String?, garage: Location?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/uuid","type":"property","title":"let UUID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/garage","type":"property","title":"let garage: Location?"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/name","type":"property","title":"let name: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/type","type":"property","title":"let type: PrivateVehicleType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.Query","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/query","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/query\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var arrive: Date?","path":"\/documentation\/tripkitapi\/tkapi\/query\/arrive"},{"type":"property","title":"var depart: Date?","path":"\/documentation\/tripkitapi\/tkapi\/query\/depart"},{"type":"property","title":"let from: Location","path":"\/documentation\/tripkitapi\/tkapi\/query\/from"},{"type":"property","title":"let to: Location","path":"\/documentation\/tripkitapi\/tkapi\/query\/to"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/query\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/query\/equatable-implementations"}]},{"title":"TKAPI.RGBColor","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/init(for:)","type":"init","title":"init?(for: TKColor?)"},{"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/color","type":"property","title":"var color: TKColor"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"title":"TKAPI.RegionInfo","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let modes: [String : GenericModeDetails]","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/modes","type":"property"},{"title":"let paratransit: Paratransit?","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/paratransit","type":"property"},{"title":"let streetBicyclePaths: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/streetbicyclepaths","type":"property"},{"title":"let streetWheelchairAccessibility: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/streetwheelchairaccessibility","type":"property"},{"title":"let transitBicycleAccessibility: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/transitbicycleaccessibility","type":"property"},{"title":"let transitConcessionPricing: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/transitconcessionpricing","type":"property"},{"title":"let transitModes: [TKModeInfo]","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/transitmodes","type":"property"},{"title":"let transitWheelchairAccessibility: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/transitwheelchairaccessibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.RegionsResponse","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let hashCode: Int","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse\/hashcode"},{"title":"let modes: [String : ModeDetails]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse\/modes"},{"title":"let regions: [TKRegion]?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse\/regions"}]},{"title":"TKAPI.Route","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/route","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/route\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var color: TKColor?","path":"\/documentation\/tripkitapi\/tkapi\/route\/color"},{"type":"property","title":"var directions: [RouteDirection]","path":"\/documentation\/tripkitapi\/tkapi\/route\/directions"},{"type":"property","title":"let id: String","path":"\/documentation\/tripkitapi\/tkapi\/route\/id"},{"type":"property","title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkitapi\/tkapi\/route\/modeinfo"},{"type":"property","title":"var name: String?","path":"\/documentation\/tripkitapi\/tkapi\/route\/name"},{"type":"property","title":"var number: String?","path":"\/documentation\/tripkitapi\/tkapi\/route\/number"},{"type":"property","title":"let operatorID: String","path":"\/documentation\/tripkitapi\/tkapi\/route\/operatorid"},{"type":"property","title":"let operatorName: String?","path":"\/documentation\/tripkitapi\/tkapi\/route\/operatorname"},{"type":"property","title":"let regionCode: String","path":"\/documentation\/tripkitapi\/tkapi\/route\/regioncode"},{"type":"property","title":"var routeColor: TKColor?","path":"\/documentation\/tripkitapi\/tkapi\/route\/routecolor"},{"type":"property","title":"let routeDescription: String?","path":"\/documentation\/tripkitapi\/tkapi\/route\/routedescription"},{"type":"property","title":"let routeName: String?","path":"\/documentation\/tripkitapi\/tkapi\/route\/routename"},{"type":"property","title":"let shortName: String?","path":"\/documentation\/tripkitapi\/tkapi\/route\/shortname"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/route\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/route\/equatable-implementations"}]},{"title":"TKAPI.RouteDirection","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/routedirection","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let encodedShape: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/encodedshape"},{"title":"let id: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/id"},{"title":"let name: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/name"},{"title":"let shapeIsDetailed: Bool","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/shapeisdetailed"},{"title":"let stops: [DirectionStop]","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/stops"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/equatable-implementations"}]},{"title":"TKAPI.RoutingResponse","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/routingresponse","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/alerts","type":"property","title":"var alerts: [Alert]"},{"path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/error","type":"property","title":"let error: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/groups","type":"property","title":"let groups: [TripGroup]?"},{"path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/query","type":"property","title":"let query: Query?"},{"path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/segmenttemplates","type":"property","title":"var segmentTemplates: [SegmentTemplate]?"}]},{"title":"TKAPI.SegmentReference","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/alerthashcodes","type":"property","title":"var alertHashCodes: [Int]"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/bicycleaccessible","type":"property","title":"var bicycleAccessible: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/booking","type":"property","title":"var booking: TKBookingData?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/bookinghashcode","type":"property","title":"var bookingHashCode: Int?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/direction","type":"property","title":"var direction: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/endplatform","type":"property","title":"var endPlatform: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/endtime","type":"property","title":"var endTime: Date"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/frequency","type":"property","title":"var frequency: Int?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/linename","type":"property","title":"var lineName: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/number","type":"property","title":"var number: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/realtimestatus","type":"property","title":"var realTimeStatus: RealTimeStatus?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/realtimevehicle","type":"property","title":"var realTimeVehicle: Vehicle?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/realtimevehiclealternatives","type":"property","title":"var realTimeVehicleAlternatives: [Vehicle]"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/segmenttemplatehashcode","type":"property","title":"let segmentTemplateHashCode: Int"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/servicecolor","type":"property","title":"var serviceColor: RGBColor?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/servicestops","type":"property","title":"var serviceStops: Int?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/servicetripid","type":"property","title":"var serviceTripID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/sharedvehicle","type":"property","title":"var sharedVehicle: TKAPI.SharedVehicleInfo?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/startplatform","type":"property","title":"var startPlatform: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/starttime","type":"property","title":"var startTime: Date"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/ticket","type":"property","title":"var ticket: Ticket?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/ticketwebsite","type":"property","title":"var ticketWebsite: URL?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/timesarerealtime","type":"property","title":"var timesAreRealTime: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/timetableendtime","type":"property","title":"var timetableEndTime: Date?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/timetablestarttime","type":"property","title":"var timetableStartTime: Date?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/vehicleuuid","type":"property","title":"var vehicleUUID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/wheelchairaccessible","type":"property","title":"var wheelchairAccessible: Bool?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"title":"TKAPI.SegmentShape","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/segmentshape","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/bicycleaccessible","type":"property","title":"var bicycleAccessible: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/cyclingnetwork","type":"property","title":"var cyclingNetwork: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/direction","type":"property","title":"var direction: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/dismount","type":"property","title":"var dismount: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/encodedwaypoints","type":"property","title":"let encodedWaypoints: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/frequency","type":"property","title":"var frequency: Int?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/hop","type":"property","title":"var hop: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/instruction","type":"property","title":"var instruction: ShapeInstruction?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/linename","type":"property","title":"var lineName: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/metres","type":"property","title":"var metres: Distance?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/modeinfo","type":"property","title":"var modeInfo: TKModeInfo?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/name","type":"property","title":"var name: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/number","type":"property","title":"var number: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/operatorid","type":"property","title":"var operatorID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/operatorname","type":"property","title":"var operatorName: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/roadtags","type":"property","title":"var roadTags: [RoadTag]"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/routeid","type":"property","title":"var routeID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/safe","type":"property","title":"var safe: Bool?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/servicecolor","type":"property","title":"var serviceColor: RGBColor?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/servicetripid","type":"property","title":"var serviceTripID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/stops","type":"property","title":"var stops: [TKAPI.ShapeStop]"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/travelled","type":"property","title":"var travelled: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/wheelchairaccessible","type":"property","title":"var wheelchairAccessible: Bool?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}]},{"title":"TKAPI.SegmentTemplate","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/action","title":"let action: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/bearing","title":"var bearing: Int?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/durationwithouttraffic","title":"var durationWithoutTraffic: TimeInterval?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/endstopcode","title":"var endStopCode: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/from","title":"var from: Location?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/hascarparks","title":"var hasCarParks: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/hashcode","title":"let hashCode: Int","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/hideexacttimes","title":"var hideExactTimes: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/iscontinuation","title":"var isContinuation: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/localcost","title":"var localCost: TKLocalCost?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/location","title":"var location: Location?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/maptiles","title":"var mapTiles: TKMapTiles?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/metres","title":"var metres: Distance?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/metresdismount","title":"var metresDismount: Distance?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/metressafe","title":"var metresSafe: Distance?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/metresunsafe","title":"var metresUnsafe: Distance?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/mini","title":"var mini: TKMiniInstruction?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/modeidentifier","title":"let modeIdentifier: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/modeinfo","title":"let modeInfo: TKModeInfo?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/notes","title":"var notes: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/notifications","title":"var notifications: [TripNotification]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/operatorid","title":"var operatorID: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/operatorinfo","title":"let operatorInfo: CompanyInfo?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/operatorname","title":"var operatorName: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/shapes","title":"var shapes: [SegmentShape]?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/stopcode","title":"var stopCode: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/streets","title":"var streets: [SegmentShape]?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/to","title":"var to: Location?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/turnbyturn","title":"var turnByTurn: TKTurnByTurnMode?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/type","title":"let type: SegmentType","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/visibility","title":"let visibility: SegmentVisibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/!=(_:_:)"}]}]},{"title":"TKAPI.ServerError","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/servererror","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let errorCode: Int?","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/errorcode"},{"type":"property","title":"let errorMessage: String?","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/errormessage"},{"type":"property","title":"let isUserError: Bool","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/isusererror"},{"type":"property","title":"let option: Option?","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.property"},{"type":"property","title":"let recovery: String?","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/recovery"},{"type":"property","title":"let title: String?","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/title"},{"type":"property","title":"let url: URL?","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/url"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case abort","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/abort"},{"title":"case back","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/back"},{"title":"case retry","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/retry"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/rawrepresentable-implementations"}],"title":"TKAPI.ServerError.Option","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum"}]},{"title":"TKAPI.ServiceResponse","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var alerts: [Alert]","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/alerts"},{"type":"property","title":"var alternativeVehicles: [Vehicle]","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/alternativevehicles"},{"type":"property","title":"let error: String?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/error"},{"type":"property","title":"let modeInfo: TKModeInfo?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/modeinfo"},{"type":"property","title":"let primaryVehicle: Vehicle?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/primaryvehicle"},{"type":"property","title":"let realTimeStatus: RealTimeStatus?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/realtimestatus"},{"type":"property","title":"let shapes: [SegmentShape]?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/shapes"}]},{"title":"TKAPI.ShapeStop","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/shapestop","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var arrival: Date?","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/arrival","type":"property"},{"title":"var bearing: Int?","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/bearing","type":"property"},{"title":"let code: String","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/code","type":"property"},{"title":"var departure: Date?","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/departure","type":"property"},{"title":"let lat: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/lat","type":"property"},{"title":"let lng: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/lng","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/name","type":"property"},{"title":"var relativeArrival: TimeInterval?","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/relativearrival","type":"property"},{"title":"var relativeDeparture: TimeInterval?","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/relativedeparture","type":"property"},{"title":"let shortName: String?","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/shortname","type":"property"},{"title":"let wheelchairAccessible: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/wheelchairaccessible","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/!=(_:_:)"}],"type":"symbol"}]},{"title":"TKAPI.SharedVehicleInfo","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let batteryLevel: Int?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/batterylevel"},{"type":"property","title":"let currentRange: Distance?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/currentrange"},{"type":"property","title":"let deepLink: URL?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/deeplink"},{"type":"property","title":"let details: String?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/details"},{"type":"property","title":"let identifier: String","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/identifier"},{"type":"property","title":"let imageURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/imageurl"},{"type":"property","title":"var isAvailable: Bool","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/isavailable"},{"type":"property","title":"let isDisabled: Bool","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/isdisabled"},{"type":"property","title":"let isReserved: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/isreserved"},{"type":"property","title":"let lastReported: Date?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/lastreported"},{"type":"property","title":"let licensePlate: String?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/licenseplate"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/name"},{"type":"property","title":"let operatorInfo: TKAPI.CompanyInfo","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/operatorinfo"},{"type":"property","title":"let source: TKAPI.DataAttribution?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/source"},{"type":"property","title":"let vehicleType: VehicleTypeInfo","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/vehicletype"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/equatable-implementations"}]},{"title":"TKAPI.SpecificModeDetails","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var identifier: String","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/identifier"},{"type":"property","title":"var integrations: [Integrations]","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/integrations"},{"type":"property","title":"let minimumLocalCostForMembership: Decimal?","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/minimumlocalcostformembership"},{"type":"property","title":"var modeImageNames: [String]","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/modeimagenames"},{"type":"property","title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/modeinfo"},{"type":"property","title":"var operators: [String]","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/operators"},{"type":"property","title":"let title: String?","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/title"},{"type":"property","title":"let url: URL?","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/url"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/equatable-implementations"}]},{"title":"TKAPI.Stop","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/stop","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/stop\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let address: String?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/address","type":"property"},{"title":"var alertHashCodes: [Int]","path":"\/documentation\/tripkitapi\/tkapi\/stop\/alerthashcodes","type":"property"},{"title":"let availableRoutes: Int?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/availableroutes","type":"property"},{"title":"var children: [Stop]","path":"\/documentation\/tripkitapi\/tkapi\/stop\/children","type":"property"},{"title":"let code: String","path":"\/documentation\/tripkitapi\/tkapi\/stop\/code","type":"property"},{"title":"let lat: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/stop\/lat","type":"property"},{"title":"let lng: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/stop\/lng","type":"property"},{"title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkitapi\/tkapi\/stop\/modeinfo","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkitapi\/tkapi\/stop\/name","type":"property"},{"title":"let operators: [Operator]?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/operators","type":"property"},{"title":"let popularity: Int?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/popularity","type":"property"},{"title":"let routes: [Route]?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/routes","type":"property"},{"title":"let services: String?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/services","type":"property"},{"title":"let shortName: String?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/shortname","type":"property"},{"title":"let timeZoneName: String","path":"\/documentation\/tripkitapi\/tkapi\/stop\/timezonename","type":"property"},{"title":"let wheelchairAccessible: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/wheelchairaccessible","type":"property"},{"title":"let zoneID: String?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/zoneid","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/stop\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/stop\/!=(_:_:)"}],"type":"symbol"}]},{"title":"TKAPI.Ticket","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/ticket","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/ticket\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/ticket\/cost","type":"property","title":"let cost: Decimal?"},{"path":"\/documentation\/tripkitapi\/tkapi\/ticket\/fareid","type":"property","title":"let fareID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/ticket\/name","type":"property","title":"let name: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/ticket\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/ticket\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations"}]},{"title":"TKAPI.Trip","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/trip","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/trip\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var arrive: Date","path":"\/documentation\/tripkitapi\/tkapi\/trip\/arrive","type":"property"},{"title":"var availability: TripAvailability?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/availability","type":"property"},{"title":"var availabilityInfo: String?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/availabilityinfo","type":"property"},{"title":"var budgetPoints: Double?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/budgetpoints","type":"property"},{"title":"var bundleId: String?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/bundleid","type":"property"},{"title":"let caloriesCost: Double","path":"\/documentation\/tripkitapi\/tkapi\/trip\/caloriescost","type":"property"},{"title":"let carbonCost: Double","path":"\/documentation\/tripkitapi\/tkapi\/trip\/carboncost","type":"property"},{"title":"var currency: String?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/currency","type":"property"},{"title":"var depart: Date","path":"\/documentation\/tripkitapi\/tkapi\/trip\/depart","type":"property"},{"title":"let hassleCost: Double","path":"\/documentation\/tripkitapi\/tkapi\/trip\/hasslecost","type":"property"},{"title":"var hideExactTimes: Bool","path":"\/documentation\/tripkitapi\/tkapi\/trip\/hideexacttimes","type":"property"},{"title":"var id: String?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/id","type":"property"},{"title":"var logURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/logurl","type":"property"},{"title":"let mainSegmentHashCode: Int","path":"\/documentation\/tripkitapi\/tkapi\/trip\/mainsegmenthashcode","type":"property"},{"title":"var moneyCost: Double?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/moneycost","type":"property"},{"title":"var moneyCostUSD: Double?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/moneycostusd","type":"property"},{"title":"var plannedURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/plannedurl","type":"property"},{"title":"var progressURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/progressurl","type":"property"},{"title":"var saveURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/saveurl","type":"property"},{"title":"let segments: [SegmentReference]","path":"\/documentation\/tripkitapi\/tkapi\/trip\/segments","type":"property"},{"title":"var shareURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/shareurl","type":"property"},{"title":"var subscribeURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/subscribeurl","type":"property"},{"title":"var temporaryURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/temporaryurl","type":"property"},{"title":"var unsubscribeURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/unsubscribeurl","type":"property"},{"title":"var updateURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/trip\/updateurl","type":"property"},{"title":"let weightedScore: Double","path":"\/documentation\/tripkitapi\/tkapi\/trip\/weightedscore","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/trip\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/trip\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"TKAPI.TripGroup","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var frequency: Int?","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/frequency","type":"property"},{"title":"var sources: [DataAttribution]","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/sources","type":"property"},{"title":"var trips: [Trip]","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/trips","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.TripNotification","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let latitude: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/latitude","type":"property"},{"title":"let longitude: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/longitude","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.TripNotification.Coordinate.CodingKeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/latitude","title":"case latitude","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/longitude","title":"case longitude","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/codingkey-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/debugdescription","type":"property","title":"var debugDescription: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/description","type":"property","title":"var description: String"}],"title":"CodingKey Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/equatable-implementations","type":"symbol"}],"title":"TKAPI.TripNotification.Coordinate","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(id: String, kind: Kind, messageKind: MessageKind, messageTitle: String, messageBody: String)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/init(id:kind:messagekind:messagetitle:messagebody:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let id: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/id"},{"type":"property","title":"let kind: Kind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.property"},{"type":"property","title":"var messageBody: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagebody"},{"type":"property","title":"let messageKind: MessageKind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.property"},{"type":"property","title":"var messageTitle: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagetitle"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/center","title":"case center","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/kind","title":"case kind","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/messagebody","title":"case messageBody","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/messagekind","title":"case messageKind","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/messagetitle","title":"case messageTitle","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/radius","title":"case radius","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/time","title":"case time","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/trigger","title":"case trigger","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/codingkey-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/description","type":"property"}],"title":"CodingKey Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}],"title":"TKAPI.TripNotification.CodingKeys","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys"},{"type":"enum","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func == (TKAPI.TripNotification.Kind, TKAPI.TripNotification.Kind) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/==(_:_:)","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case circle(center: Coordinate, radius: Distance, trigger: Trigger)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/circle(center:radius:trigger:)","type":"case"},{"title":"case pushNotification","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/pushnotification","type":"case"},{"title":"case time(Date)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/time(_:)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/hash(into:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/equatable-implementations","type":"symbol"}],"title":"TKAPI.TripNotification.Kind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case arrivingAtYourStop","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/arrivingatyourstop"},{"type":"case","title":"case nextStopIsYours","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/nextstopisyours"},{"type":"case","title":"case tripEnd","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/tripend"},{"type":"case","title":"case tripStart","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/tripstart"},{"type":"case","title":"case vehicleIsApproaching","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/vehicleisapproaching"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/!=(_:_:)","type":"op"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"title":"TKAPI.TripNotification.MessageKind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/onenter","type":"case","title":"case onEnter"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/onexit","type":"case","title":"case onExit"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"title":"TKAPI.TripNotification.Trigger","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/init(from:)"}],"title":"Decodable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/decodable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"}],"title":"Encodable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/encodable-implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/equatable-implementations"}]},{"title":"TKAPI.User","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/user","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/user\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let address1: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/address1","type":"property"},{"title":"let address2: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/address2","type":"property"},{"title":"var appData: [String : Any]?","path":"\/documentation\/tripkitapi\/tkapi\/user\/appdata","type":"property"},{"title":"var emails: [Email]?","path":"\/documentation\/tripkitapi\/tkapi\/user\/emails","type":"property"},{"title":"let familyName: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/familyname","type":"property"},{"title":"let givenName: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/givenname","type":"property"},{"title":"let highResProfilePictureURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/user\/highresprofilepictureurl","type":"property"},{"title":"let lowResProfilePictureURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/user\/lowresprofilepictureurl","type":"property"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/name"},{"type":"property","title":"let phone: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/phone"},{"type":"property","title":"let phones: [Phone]?","path":"\/documentation\/tripkitapi\/tkapi\/user\/phones"},{"type":"property","title":"let postCode: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/postcode"},{"type":"property","title":"var userId: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/userid"},{"type":"property","title":"let userType: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/usertype"}]},{"title":"TKAPI.Vehicle","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/vehicle","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let components: [[VehicleComponents]]?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/components","type":"property"},{"title":"let icon: URL?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/icon","type":"property"},{"title":"let id: String?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/id","type":"property"},{"title":"let label: String?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/label","type":"property"},{"title":"let lastUpdate: TimeInterval?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/lastupdate","type":"property"},{"title":"let location: Location","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/location","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/!=(_:_:)"}]}]},{"title":"TKAPI.VehicleComponents","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/airconditioned","title":"let airConditioned: Bool?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/model","title":"let model: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/occupancy","title":"let occupancy: VehicleOccupancy?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/occupancytext","title":"let occupancyText: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/wheelchairaccessible","title":"let wheelchairAccessible: Bool?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/wheelchairseats","title":"let wheelchairSeats: Int?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/wifi","title":"let wifi: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}]},{"title":"TKAPI.VehicleTypeInfo","type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let formFactor: VehicleFormFactor","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/formfactor"},{"type":"property","title":"let maxRangeMeters: Int?","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/maxrangemeters"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/name"},{"type":"property","title":"let propulsionType: VehiclePropulsionType?","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/propulsiontype"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/!=(_:_:)"}]}]},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKAPI.Degrees","type":"typealias","path":"\/documentation\/tripkitapi\/tkapi\/degrees"},{"title":"TKAPI.Direction","type":"typealias","path":"\/documentation\/tripkitapi\/tkapi\/direction"},{"title":"TKAPI.Distance","type":"typealias","path":"\/documentation\/tripkitapi\/tkapi\/distance"},{"title":"TKAPI.Speed","type":"typealias","path":"\/documentation\/tripkitapi\/tkapi\/speed"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.Integrations","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/integrations","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bookings","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/bookings"},{"title":"case payments","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/payments"},{"title":"case realTime","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/realtime"},{"title":"case routing","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/routing"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/equatable-implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/integrations\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/integrations\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/integrations\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkapi\/integrations\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/rawrepresentable-implementations"}]},{"title":"TKAPI.PrivateVehicleType","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/suv","type":"case","title":"case SUV"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/bicycle","type":"case","title":"case bicycle"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/car","type":"case","title":"case car"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/motorbike","type":"case","title":"case motorbike"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/hash(into:)"}]}]},{"title":"TKAPI.RealTimeStatus","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/canceled","type":"case","title":"case canceled"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/capable","type":"case","title":"case capable"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/incapable","type":"case","title":"case incapable"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/isrealtime","type":"case","title":"case isRealTime"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"title":"TKAPI.RoadSafety","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/designated","type":"case","title":"case designated"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/hostile","type":"case","title":"case hostile"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/neutral","type":"case","title":"case neutral"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/safe","type":"case","title":"case safe"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/unknown","type":"case","title":"case unknown"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/comparable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'...(_:)-5r4wj","title":"static func ... (Self) -> PartialRangeFrom<Self>"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'...(_:)-7rqdb","title":"static func ... (Self) -> PartialRangeThrough<Self>"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/_(_:_:)","title":"static func > (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/_=(_:_:)-6dmo9","title":"static func >= (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/_=(_:_:)-8l8lg","title":"static func <= (Self, Self) -> Bool"}],"type":"symbol","title":"Comparable Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"title":"TKAPI.RoadTag","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/roadtag","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/cctvcamera","title":"case CCTVCamera"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/bicycleboulevard","title":"case bicycleBoulevard"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/bicycledesignated","title":"case bicycleDesignated"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/cyclelane","title":"case cycleLane"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/cyclenetwork","title":"case cycleNetwork"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/cycletrack","title":"case cycleTrack"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/litroute","title":"case litRoute"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/mainroad","title":"case mainRoad"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/other","title":"case other"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/sharedroad","title":"case sharedRoad"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/sideroad","title":"case sideRoad"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/sidewalk","title":"case sideWalk"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/streetlight","title":"case streetLight"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/safety","title":"var safety: RoadSafety"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"title":"TKAPI.SegmentType","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/segmenttype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/scheduled","title":"case scheduled","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/stationary","title":"case stationary","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/unscheduled","title":"case unscheduled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/hash(into:)"}]}]},{"title":"TKAPI.SegmentVisibility","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case hidden","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/hidden"},{"type":"case","title":"case inDetails","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/indetails"},{"type":"case","title":"case inSummary","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/insummary"},{"type":"case","title":"case onMap","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/onmap"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/hash(into:)"}]}]},{"title":"TKAPI.ShapeInstruction","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case continueStraight","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/continuestraight","type":"case"},{"title":"case headTowards","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/headtowards","type":"case"},{"title":"case turnLeft","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnleft","type":"case"},{"title":"case turnRight","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnright","type":"case"},{"title":"case turnSharplyLeft","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnsharplyleft","type":"case"},{"title":"case turnSharplyRight","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnsharplyright","type":"case"},{"title":"case turnSlightlyRight","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnslightlyright","type":"case"},{"title":"case turnSlightyLeft","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnslightyleft","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/hash(into:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/rawrepresentable-implementations","type":"symbol"}]},{"title":"TKAPI.TripAvailability","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case canceled","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/canceled","type":"case"},{"title":"case missedPrebookingWindow","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/missedprebookingwindow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/hash(into:)","type":"method"}]}]},{"title":"TKAPI.VehicleFormFactor","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/bicycle","title":"case bicycle"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/car","title":"case car"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/moped","title":"case moped"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/other","title":"case other"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/scooter","title":"case scooter"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"title":"TKAPI.VehicleOccupancy","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case crushedStandingRoomOnly","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/crushedstandingroomonly"},{"title":"case empty","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/empty"},{"title":"case fewSeatsAvailable","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/fewseatsavailable"},{"title":"case full","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/full"},{"title":"case manySeatsAvailable","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/manyseatsavailable"},{"title":"case notAcceptingPassengers","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/notacceptingpassengers"},{"title":"case standingRoomOnly","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/standingroomonly"},{"title":"case unknown","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/unknown"},{"title":"Initializers","type":"groupMarker"},{"title":"init(intValue: Int)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/init(intvalue:)"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/intvalue","type":"property","title":"var intValue: Int"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/hash(into:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"title":"TKAPI.VehiclePropulsionType","type":"enum","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case combustion","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/combustion"},{"title":"case electric","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/electric"},{"title":"case electricAssist","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/electricassist"},{"title":"case human","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/human"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/rawrepresentable-implementations"}]}],"title":"TKAPI","path":"\/documentation\/tripkitapi\/tkapi"},{"type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/carbon","title":"var carbon: Double"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/exercise","title":"var exercise: Double"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/hassle","title":"var hassle: Double"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/money","title":"var money: Double"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/time","title":"var time: Double"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"type":"struct","title":"TKAPIConfig.Weights"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/avoidmodes","type":"property","title":"var avoidModes: [String]"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/bookingsandbox","type":"property","title":"var bookingSandbox: Bool"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/concession","type":"property","title":"var concession: Bool"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/cyclingspeed","type":"property","title":"var cyclingSpeed: Speed"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.property","type":"property","title":"var distanceUnit: DistanceUnit"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/emissions","type":"property","title":"var emissions: [String : Double]"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/maximumwalkingminutes","type":"property","title":"var maximumWalkingMinutes: Double?"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/minimumtransferminutes","type":"property","title":"var minimumTransferMinutes: Double?"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/paras","type":"property","title":"var paras: [String : Any]"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/twowayhirecostincludesreturn","type":"property","title":"var twoWayHireCostIncludesReturn: Bool"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/version","type":"property","title":"let version: Int"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/walkingspeed","type":"property","title":"var walkingSpeed: Speed"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.property","type":"property","title":"var weights: Weights"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/wheelchair","type":"property","title":"var wheelchair: Bool"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/parserjsonversion","type":"property","title":"static let parserJsonVersion: Int"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/defaultvalues()","type":"method","title":"static func defaultValues() -> TKAPIConfig"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case auto","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/auto"},{"type":"case","title":"case imperial","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/imperial"},{"type":"case","title":"case metric","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/metric"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/equatable-implementations"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/rawrepresentable-implementations"}],"type":"enum","title":"TKAPIConfig.DistanceUnit"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case custom(TKAPI.Speed)","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/custom(_:)"},{"type":"case","title":"case fast","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/fast"},{"type":"case","title":"case impaired","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/impaired"},{"type":"case","title":"case medium","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/medium"},{"type":"case","title":"case slow","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/slow"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(apiValue: Any?)","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/init(apivalue:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var apiValue: Any","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/apivalue"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Decodable Implementations","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/init(from:)","type":"init"}]},{"type":"symbol","title":"Encodable Implementations","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/encodable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/encode(to:)"}]},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"type":"enum","title":"TKAPIConfig.Speed"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"type":"symbol","title":"Decodable Implementations"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations"}],"title":"TKAPIConfig","path":"\/documentation\/tripkitapi\/tkapiconfig"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/accessibilitylabel","title":"let accessibilityLabel: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/confirmation","title":"var confirmation: TKBooking.Confirmation?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/externalactions","title":"let externalActions: [String]?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/quickbookingsurl","title":"let quickBookingsUrl: URL?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/url","title":"let url: URL?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/virtualbookingurl","title":"let virtualBookingUrl: URL?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitapi\/tkbookingdata\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"title":"TKBookingData","path":"\/documentation\/tripkitapi\/tkbookingdata"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/init(from:to:at:modes:additional:)","type":"init","title":"init(from: TKAPI.Location, to: TKAPI.Location, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>)"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/init(from:to:at:modes:additional:context:)","type":"init","title":"init(from: TKAPI.Location, to: TKAPI.Location, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>, context: Context?)"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/init(url:)","type":"init","title":"init?(url: URL)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/additional","type":"property","title":"var additional: Set<URLQueryItem>"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/at","type":"property","title":"var at: TKRoutingQueryTime"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/context","type":"property","title":"var context: Context?"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/from","type":"property","title":"var from: TKAPI.Location"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/modes","type":"property","title":"var modes: Set<String>"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/to","type":"property","title":"var to: TKAPI.Location"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/parsedate(_:)","type":"method","title":"static func parseDate(Any?) -> Date?"}],"title":"TKRoutingQuery","path":"\/documentation\/tripkitapi\/tkroutingquery"},{"type":"struct","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/unknownnilstrategy\/defaultvalue","title":"static var defaultValue: T?","type":"property"}],"title":"UnknownNilStrategy","path":"\/documentation\/tripkitapi\/unknownnilstrategy"},{"type":"groupMarker","title":"Operators"},{"type":"op","title":"func == (Point, Point) -> Bool","path":"\/documentation\/tripkitapi\/==(_:_:)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"DefaultEmptyArray","path":"\/documentation\/tripkitapi\/defaultemptyarray"},{"type":"typealias","title":"DefaultFalse","path":"\/documentation\/tripkitapi\/defaultfalse"},{"type":"typealias","title":"DefaultTrue","path":"\/documentation\/tripkitapi\/defaulttrue"},{"type":"typealias","title":"EmptyLossyArray","path":"\/documentation\/tripkitapi\/emptylossyarray"},{"type":"typealias","title":"TKColor","path":"\/documentation\/tripkitapi\/tkcolor"},{"type":"typealias","title":"TKFont","path":"\/documentation\/tripkitapi\/tkfont"},{"type":"typealias","title":"TKImage","path":"\/documentation\/tripkitapi\/tkimage"},{"type":"typealias","title":"UnknownNil","path":"\/documentation\/tripkitapi\/unknownnil"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/field","title":"let field: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/value","title":"var value: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"}],"title":"TKBooking.Action.ActionInput","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/action\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let confirmation: ActionConfirmation?","path":"\/documentation\/tripkitapi\/tkbooking\/action\/confirmation","type":"property"},{"title":"let confirmationMessage: String?","path":"\/documentation\/tripkitapi\/tkbooking\/action\/confirmationmessage","type":"property"},{"title":"let externalAction: String?","path":"\/documentation\/tripkitapi\/tkbooking\/action\/externalaction","type":"property"},{"title":"var input: [ActionInput]?","path":"\/documentation\/tripkitapi\/tkbooking\/action\/input","type":"property"},{"title":"let internalURL: URL?","path":"\/documentation\/tripkitapi\/tkbooking\/action\/internalurl","type":"property"},{"title":"let isDestructive: Bool","path":"\/documentation\/tripkitapi\/tkbooking\/action\/isdestructive","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitapi\/tkbooking\/action\/title","type":"property"},{"title":"let type: ActionType?","path":"\/documentation\/tripkitapi\/tkbooking\/action\/type","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/activatetickets","title":"case activateTickets"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/cancel","title":"case cancel"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/lock","title":"case lock"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/plannext","title":"case planNext"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/showtickets","title":"case showTickets"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/showtrip","title":"case showTrip"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/unknown","title":"case unknown"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/unlock","title":"case unlock"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/init(from:)","title":"init(from: Decoder) throws"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/init(from:)-14sjg","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/hash(into:)","type":"method"}]}],"title":"TKBooking.Action.ActionType","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/action\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/action\/equatable-implementations","type":"symbol"}],"title":"TKBooking.Action"},{"path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/abortactiontitle","type":"property","title":"let abortActionTitle: String"},{"path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/confirmactiontitle","type":"property","title":"let confirmActionTitle: String"},{"path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/message","type":"property","title":"let message: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"title":"TKBooking.ActionConfirmation"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/id","type":"property","title":"let id: InputOptionId"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/title","type":"property","title":"let title: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/!=(_:_:)"}]}],"title":"TKBooking.BookingInput.InputOption","type":"struct","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/id"},{"title":"let options: [InputOption]?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/options"},{"title":"let required: Bool","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/required"},{"title":"let title: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/title"},{"title":"var type: InputType","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/type"},{"title":"var value: InputValue","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/value"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","type":"method","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/encode(to:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKBooking.BookingInput.InputOptionId","type":"typealias","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoptionid"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case longText","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/longtext","type":"case"},{"title":"case multipleSelections","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/multipleselections","type":"case"},{"title":"case number","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/number","type":"case"},{"title":"case requestReturnTrip","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/requestreturntrip","type":"case"},{"title":"case singleSelection","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/singleselection","type":"case"},{"title":"case terms","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/terms","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"TKBooking.BookingInput.InputType","type":"enum","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case longText(String)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/longtext(_:)","type":"case"},{"title":"case multipleSelections([InputOptionId])","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/multipleselections(_:)","type":"case"},{"title":"case number(Int, min: Int?, max: Int?)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/number(_:min:max:)","type":"case"},{"title":"case returnTripDate(ReturnTripDateValue)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/returntripdate(_:)","type":"case"},{"title":"case singleSelection(InputOptionId)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/singleselection(_:)","type":"case"},{"title":"case terms(URL, accepted: Bool)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/terms(_:accepted:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}],"title":"TKBooking.BookingInput.InputValue","type":"enum","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case date(Date)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/date(_:)","type":"case"},{"title":"case oneWayTrip","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/onewaytrip","type":"case"},{"title":"case unspecified","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/unspecified","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func toJSONString() -> String","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/tojsonstring()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/equatable-implementations","type":"symbol"}],"title":"TKBooking.BookingInput.ReturnTripDateValue","type":"enum","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/equatable-implementations"}],"title":"TKBooking.BookingInput"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/provider","title":"let provider: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/timestamp","title":"var timestamp: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}],"title":"TKBooking.BookingNote"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/actions","type":"property","title":"let actions: [Action]?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/input","type":"property","title":"let input: [BookingInput]?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/notes","type":"property","title":"let notes: [BookingNote]?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/provider","type":"property","title":"let provider: Detail?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/purchase","type":"property","title":"let purchase: Purchase?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/purchasedtickets","type":"property","title":"var purchasedTickets: [PurchasedTicket]"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/status","type":"property","title":"let status: Detail"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/vehicle","type":"property","title":"let vehicle: Detail?"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}],"title":"TKBooking.Confirmation"},{"path":"\/documentation\/tripkitapi\/tkbooking\/detail","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let imageURL: URL?","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/imageurl","type":"property"},{"title":"let subtitle: String?","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/subtitle","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkbooking\/detail\/equatable-implementations","type":"symbol"}],"title":"TKBooking.Detail"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/amount","title":"var amount: Int?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/currencycode","title":"let currencyCode: String?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/details","title":"let details: String?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/groupids","title":"var groupIDs: [FareGroup.ID]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/id-swift.property","title":"let id: ID"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/max","title":"var max: Int?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/name","title":"let name: String"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/price","title":"let price: Int?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/rider","title":"var rider: TKBooking.Rider?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/riders","title":"var riders: [TKBooking.Rider]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.property","title":"let status: Status?"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/id-swift.typealias","title":"TKBooking.Fare.ID"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/amount","title":"case amount","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/currencycode","title":"case currencyCode","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/details","title":"case details","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/groupids","title":"case groupIDs","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/max","title":"case max","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/name","title":"case name","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/price","title":"case price","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/riders","title":"case riders","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/type","title":"case type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/codingkey-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/debugdescription"},{"title":"var description: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/description"}],"title":"CodingKey Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys","title":"TKBooking.Fare.CodingKeys"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case amount(Int)","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue\/amount(_:)"},{"title":"case selection(Fare.ID)","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue\/selection(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue\/equatable-implementations"}],"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue","title":"TKBooking.Fare.InputValue"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/multiple","title":"case multiple","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/single","title":"case single","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype","title":"TKBooking.Fare.RideType"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case activated","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/activated","type":"case"},{"title":"case activeOnAnotherDevice","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/activeonanotherdevice","type":"case"},{"title":"case expired","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/expired","type":"case"},{"title":"case fareCapped","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/farecapped","type":"case"},{"title":"case inactive","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/inactive","type":"case"},{"title":"case invalid","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/invalid","type":"case"},{"title":"case refunded","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/refunded","type":"case"},{"title":"case stale","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/stale","type":"case"},{"title":"case unused","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/unused","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/equatable-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum","title":"TKBooking.Fare.Status"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/equatable-implementations","title":"Equatable Implementations"}],"title":"TKBooking.Fare"},{"path":"\/documentation\/tripkitapi\/tkbooking\/faregroup","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/id","type":"property","title":"let id: String"},{"path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/selected","type":"property","title":"var selected: Bool"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"}],"title":"TKBooking.FareGroup"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/location\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let address: String?","path":"\/documentation\/tripkitapi\/tkbooking\/location\/address"},{"type":"property","title":"let latitude: TKAPI.Degrees","path":"\/documentation\/tripkitapi\/tkbooking\/location\/latitude"},{"type":"property","title":"let longitude: TKAPI.Degrees","path":"\/documentation\/tripkitapi\/tkbooking\/location\/longitude"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkitapi\/tkbooking\/location\/name"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/address","title":"case address"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/latitude","title":"case latitude"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/longitude","title":"case longitude"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/name","title":"case name"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/codingkey-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/description","type":"property"}],"title":"CodingKey Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/hash(into:)"}],"title":"RawRepresentable Implementations"}],"type":"enum","title":"TKBooking.Location.CodingKeys","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/location\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/location\/equatable-implementations"}],"title":"TKBooking.Location"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let attribution: TKAPI.DataAttribution?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/attribution","type":"property"},{"title":"let branding: TSPBranding?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/branding","type":"property"},{"title":"let budgetPoints: Int?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/budgetpoints","type":"property"},{"title":"let currency: String?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/currency","type":"property"},{"title":"let id: String","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/id","type":"property"},{"title":"var isValid: Bool","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/isvalid","type":"property"},{"title":"var paymentDate: Date?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/paymentdate","type":"property"},{"title":"var price: NSDecimalNumber?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/price","type":"property"},{"title":"let productName: String?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/productname"},{"title":"let productType: String?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/producttype"},{"title":"let validFor: TimeInterval?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/validfor"},{"title":"var validFrom: Date?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/validfrom"},{"title":"var validTo: Date?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/validto"},{"title":"let waitTime: Int?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/waittime"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/!=(_:_:)","type":"op"}]}],"title":"TKBooking.Purchase"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/actions","title":"var actions: [Action]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/fare","title":"let fare: Fare"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/id-swift.property","title":"let id: ID"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/purchased","title":"var purchased: Date?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/qrcode","title":"let qrCode: String?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/status-swift.property","title":"let status: Status?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/ticketexpiration","title":"var ticketExpiration: Date?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/ticketurl","title":"let ticketURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/validfrom","title":"var validFrom: Date?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/validuntil","title":"var validUntil: Date?"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/id-swift.typealias","title":"TKBooking.PurchasedTicket.ID"},{"type":"typealias","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/status-swift.typealias","title":"TKBooking.PurchasedTicket.Status"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case actions","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/actions"},{"type":"case","title":"case fare","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/fare"},{"type":"case","title":"case id","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/id"},{"type":"case","title":"case purchased","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/purchased"},{"type":"case","title":"case qrCode","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/qrcode"},{"type":"case","title":"case status","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/status"},{"type":"case","title":"case ticketExpiration","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/ticketexpiration"},{"type":"case","title":"case ticketURL","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/ticketurl"},{"type":"case","title":"case validFrom","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/validfrom"},{"type":"case","title":"case validUntil","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/validuntil"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(intValue: Int)","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/init(intvalue:)"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/init(rawvalue:)"},{"type":"init","title":"init?(stringValue: String)","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/init(stringvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/debugdescription"},{"type":"property","title":"var description: String","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/description"}],"title":"CodingKey Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/codingkey-implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys","title":"TKBooking.PurchasedTicket.CodingKeys"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/equatable-implementations","title":"Equatable Implementations"}],"title":"TKBooking.PurchasedTicket"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String?","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/description","type":"property"},{"title":"var id: ID","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/id-swift.property","type":"property"},{"title":"var name: String","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/name","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKBooking.Rider.ID","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/id-swift.typealias","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKBooking.Rider.CodingKeys","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/description","title":"case description","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/name","title":"case name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/codingkey-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/description-swift.property","title":"var description: String","type":"property"}],"title":"CodingKey Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/!=(_:_:)"}]}],"title":"TKBooking.Rider"},{"path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var color: TKColor?","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/color"},{"type":"property","title":"let logoImageName: String?","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/logoimagename"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"title":"TKBooking.TSPBranding"}],"title":"TKBooking","path":"\/documentation\/tripkitapi\/tkbooking"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case arrivalTimeTooOld","path":"\/documentation\/tripkitapi\/tkerrorcode\/arrivaltimetooold"},{"type":"case","title":"case departureTimeTooOld","path":"\/documentation\/tripkitapi\/tkerrorcode\/departuretimetooold"},{"type":"case","title":"case destinationTooCloseToOrigin","path":"\/documentation\/tripkitapi\/tkerrorcode\/destinationtooclosetoorigin"},{"type":"case","title":"case internalError","path":"\/documentation\/tripkitapi\/tkerrorcode\/internalerror"},{"type":"case","title":"case noDestination","path":"\/documentation\/tripkitapi\/tkerrorcode\/nodestination"},{"type":"case","title":"case noOrigin","path":"\/documentation\/tripkitapi\/tkerrorcode\/noorigin"},{"type":"case","title":"case timeTooOld","path":"\/documentation\/tripkitapi\/tkerrorcode\/timetooold"},{"type":"case","title":"case unsupportedDestinationRegion","path":"\/documentation\/tripkitapi\/tkerrorcode\/unsupporteddestinationregion"},{"type":"case","title":"case unsupportedOriginRegion","path":"\/documentation\/tripkitapi\/tkerrorcode\/unsupportedoriginregion"},{"type":"case","title":"case unsupportedRegionCombination","path":"\/documentation\/tripkitapi\/tkerrorcode\/unsupportedregioncombination"},{"type":"case","title":"case userError","path":"\/documentation\/tripkitapi\/tkerrorcode\/usererror"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkitapi\/tkerrorcode\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkerrorcode\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkerrorcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkerrorcode\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkerrorcode\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkerrorcode\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"TKErrorCode","path":"\/documentation\/tripkitapi\/tkerrorcode"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/confirmed","title":"case confirmed"},{"type":"case","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/externalestimate","title":"case externalEstimate"},{"type":"case","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/internalestimate","title":"case internalEstimate"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"TKLocalCostAccuracy","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case badTimeZoneIdentifier(String)","type":"case","path":"\/documentation\/tripkitapi\/tkregionparsererror\/badtimezoneidentifier(_:)"},{"title":"case cannotParseInternationalRegion","type":"case","path":"\/documentation\/tripkitapi\/tkregionparsererror\/cannotparseinternationalregion"},{"title":"case emptyPolygon","type":"case","path":"\/documentation\/tripkitapi\/tkregionparsererror\/emptypolygon"},{"title":"case fetchingRegionsFailed","type":"case","path":"\/documentation\/tripkitapi\/tkregionparsererror\/fetchingregionsfailed"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/tripkitapi\/tkregionparsererror\/localizeddescription","type":"property"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkregionparsererror\/error-implementations"}],"title":"TKRegionParserError","path":"\/documentation\/tripkitapi\/tkregionparsererror"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case arriveBy(Date)","path":"\/documentation\/tripkitapi\/tkroutingquerytime\/arriveby(_:)","type":"case"},{"title":"case leaveASAP","path":"\/documentation\/tripkitapi\/tkroutingquerytime\/leaveasap","type":"case"},{"title":"case leaveAfter(Date)","path":"\/documentation\/tripkitapi\/tkroutingquerytime\/leaveafter(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkroutingquerytime\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkroutingquerytime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}],"title":"TKRoutingQueryTime","path":"\/documentation\/tripkitapi\/tkroutingquerytime"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bicycle","path":"\/documentation\/tripkitapi\/tktransportmode\/bicycle","type":"case"},{"title":"case bicycleDeprecated","path":"\/documentation\/tripkitapi\/tktransportmode\/bicycledeprecated","type":"case"},{"title":"case bicycleShared","path":"\/documentation\/tripkitapi\/tktransportmode\/bicycleshared","type":"case"},{"title":"case bikeShareDeprecated","path":"\/documentation\/tripkitapi\/tktransportmode\/bikesharedeprecated","type":"case"},{"title":"case car","path":"\/documentation\/tripkitapi\/tktransportmode\/car","type":"case"},{"title":"case carPool","path":"\/documentation\/tripkitapi\/tktransportmode\/carpool","type":"case"},{"title":"case carRental","path":"\/documentation\/tripkitapi\/tktransportmode\/carrental","type":"case"},{"title":"case carShare","path":"\/documentation\/tripkitapi\/tktransportmode\/carshare","type":"case"},{"title":"case drt","path":"\/documentation\/tripkitapi\/tktransportmode\/drt","type":"case"},{"title":"case flight","path":"\/documentation\/tripkitapi\/tktransportmode\/flight","type":"case"},{"title":"case limited","path":"\/documentation\/tripkitapi\/tktransportmode\/limited","type":"case"},{"title":"case micromobility","path":"\/documentation\/tripkitapi\/tktransportmode\/micromobility","type":"case"},{"title":"case micromobilityShared","path":"\/documentation\/tripkitapi\/tktransportmode\/micromobilityshared","type":"case"},{"title":"case motorbike","path":"\/documentation\/tripkitapi\/tktransportmode\/motorbike","type":"case"},{"title":"case publicTransport","path":"\/documentation\/tripkitapi\/tktransportmode\/publictransport","type":"case"},{"title":"case schoolBuses","path":"\/documentation\/tripkitapi\/tktransportmode\/schoolbuses","type":"case"},{"title":"case taxi","path":"\/documentation\/tripkitapi\/tktransportmode\/taxi","type":"case"},{"title":"case tnc","path":"\/documentation\/tripkitapi\/tktransportmode\/tnc","type":"case"},{"title":"case walking","path":"\/documentation\/tripkitapi\/tktransportmode\/walking","type":"case"},{"title":"case wheelchair","path":"\/documentation\/tripkitapi\/tktransportmode\/wheelchair","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(modeIdentifier: String)","path":"\/documentation\/tripkitapi\/tktransportmode\/init(modeidentifier:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tktransportmode\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var modeIdentifier: String","path":"\/documentation\/tripkitapi\/tktransportmode\/modeidentifier","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func genericModeIdentifier(forModeIdentifier: String) -> String","path":"\/documentation\/tripkitapi\/tktransportmode\/genericmodeidentifier(formodeidentifier:)","type":"method"},{"title":"static func groupModeIdentifiers(Set<String>, includeGroupForAll: Bool) -> Set<Set<String>>","path":"\/documentation\/tripkitapi\/tktransportmode\/groupmodeidentifiers(_:includegroupforall:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tktransportmode\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tktransportmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tktransportmode\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tktransportmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tktransportmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"TKTransportMode","path":"\/documentation\/tripkitapi\/tktransportmode"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case calories","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/calories"},{"title":"case carbon","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/carbon"},{"title":"case count","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/count"},{"title":"case duration","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/duration"},{"title":"case hassle","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/hassle"},{"title":"case price","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/price"},{"title":"case score","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/score"},{"title":"case time","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/time"},{"title":"case walking","type":"case","path":"\/documentation\/tripkitapi\/tktripcosttype\/walking"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/tripkitapi\/tktripcosttype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tktripcosttype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/tripkitapi\/tktripcosttype\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tktripcosttype\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkitapi\/tktripcosttype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkitapi\/tktripcosttype\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitapi\/tktripcosttype\/hash(into:)"}],"type":"symbol","path":"\/documentation\/tripkitapi\/tktripcosttype\/rawrepresentable-implementations"}],"title":"TKTripCostType","path":"\/documentation\/tripkitapi\/tktripcosttype"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case cycling","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/cycling"},{"type":"case","title":"case driving","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/driving"},{"type":"case","title":"case walking","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/walking"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/rawrepresentable-implementations"}],"title":"TKTurnByTurnMode","path":"\/documentation\/tripkitapi\/tkturnbyturnmode"},{"type":"groupMarker","title":"Extended Modules"},{"type":"extension","children":[{"type":"groupMarker","title":"Extended Classes"},{"path":"\/documentation\/tripkitapi\/foundation\/jsondecoder","type":"extension","title":"JSONDecoder","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/foundation\/jsondecoder\/decode(_:withjsonobject:options:)","type":"method","title":"func decode<T>(T.Type, withJSONObject: Any, options: JSONSerialization.WritingOptions) throws -> T"}]},{"path":"\/documentation\/tripkitapi\/foundation\/jsonencoder","type":"extension","title":"JSONEncoder","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encodeJSONObject<T>(T, options: JSONSerialization.ReadingOptions) throws -> Any","path":"\/documentation\/tripkitapi\/foundation\/jsonencoder\/encodejsonobject(_:options:)"}]},{"path":"\/documentation\/tripkitapi\/foundation\/nserror","type":"extension","title":"NSError","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(code: Int, message: String)","path":"\/documentation\/tripkitapi\/foundation\/nserror\/init(code:message:)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func error(code: Int, message: String) -> NSError","path":"\/documentation\/tripkitapi\/foundation\/nserror\/error(code:message:)","type":"method"}]},{"path":"\/documentation\/tripkitapi\/foundation\/userdefaults","type":"extension","title":"UserDefaults","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitapi\/foundation\/userdefaults\/shared","type":"property","title":"static let shared: UserDefaults"}]},{"type":"groupMarker","title":"Extended Structures"},{"path":"\/documentation\/tripkitapi\/foundation\/date","type":"extension","title":"Date","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(iso8601: String) throws","type":"init","path":"\/documentation\/tripkitapi\/foundation\/date\/init(iso8601:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var iso8601: String","type":"property","path":"\/documentation\/tripkitapi\/foundation\/date\/iso8601"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func midnight(in: TimeZone) -> Date","type":"method","path":"\/documentation\/tripkitapi\/foundation\/date\/midnight(in:)"},{"title":"func nextMidnight(in: TimeZone) -> Date","type":"method","path":"\/documentation\/tripkitapi\/foundation\/date\/nextmidnight(in:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"Date.DateConversionError","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/foundation\/date\/dateconversionerror\/invalidiso8601(_:)","type":"case","title":"case invalidISO8601(String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/foundation\/date\/dateconversionerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/tripkitapi\/foundation\/date\/dateconversionerror\/localizeddescription","type":"property"}],"type":"symbol","title":"Error Implementations"}],"path":"\/documentation\/tripkitapi\/foundation\/date\/dateconversionerror"}]},{"type":"groupMarker","title":"Extended Types"},{"path":"\/documentation\/tripkitapi\/foundation\/nsnotification","type":"extension","title":"NSNotification","children":[{"title":"Extended Structures","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/foundation\/nsnotification\/name","title":"NSNotification.Name","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/foundation\/nsnotification\/name\/tkregionmanagerupdatedregions","title":"static let TKRegionManagerUpdatedRegions: NSNotification.Name"}],"type":"extension"}]}],"title":"Foundation","path":"\/documentation\/tripkitapi\/foundation"},{"type":"extension","children":[{"type":"groupMarker","title":"Extended Structures"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/swift\/array\/tk_filterduplicates(includeelement:)","type":"method","title":"func tk_filterDuplicates(includeElement: (_ lhs: Element, _ rhs: Element) -> Bool) -> [Element]"}],"type":"extension","path":"\/documentation\/tripkitapi\/swift\/array","title":"Array"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-40dx3","title":"func decode<P>(DefaultCodable<P>.Type, forKey: Key) throws -> DefaultCodable<P>","type":"method"},{"path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-5zja1","title":"func decode(OptionalISO8601OrSecondsSince1970.Type, forKey: `Self`.Key) throws -> OptionalISO8601OrSecondsSince1970","type":"method"},{"path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-6ie5y","title":"func decode<P>(DefaultCodable<P>.Type, forKey: Key) throws -> DefaultCodable<P>","type":"method"},{"path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-98ax1","title":"func decode(OptionalISO8601.Type, forKey: `Self`.Key) throws -> OptionalISO8601","type":"method"}],"type":"extension","path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer","title":"KeyedDecodingContainer"}],"title":"Swift","path":"\/documentation\/tripkitapi\/swift"},{"type":"extension","children":[{"type":"groupMarker","title":"Extended Structures"},{"path":"\/documentation\/tripkitapi\/_locationessentials\/cllocationcoordinate2d","title":"CLLocationCoordinate2D","type":"extension","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/_locationessentials\/cllocationcoordinate2d\/decodepolyline(_:)","title":"static func decodePolyline(String) -> [CLLocationCoordinate2D]"}]}],"title":"_LocationEssentials","path":"\/documentation\/tripkitapi\/_locationessentials"}],"title":"TripKitAPI"},{"path":"\/documentation\/tripkitinterapp","type":"module","children":[{"title":"Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func == (TKInterAppCommunicator.ExternalAction, TKInterAppCommunicator.ExternalAction) -> Bool","type":"op","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/==(_:_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var accessibilityLabel: String","type":"property","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/accessibilitylabel"},{"title":"var identifier: AnyHashable","type":"property","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/identifier"},{"title":"var title: String","type":"property","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/title"},{"title":"let type: ExternalActionType","type":"property","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/type"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/equatable-implementations"}],"type":"struct","title":"TKInterAppCommunicator.ExternalAction","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var openStoreHandler: @MainActor (Int, UIViewController) -> Void","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/openstorehandler"},{"type":"property","title":"var openURLHandler: @MainActor (URL, String, UIViewController) -> Void","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/openurlhandler"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func canHandleExternalAction(String) -> Bool","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/canhandleexternalaction(_:)"},{"type":"method","title":"func canHandleExternalActions(for: TKSegment) -> Bool","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/canhandleexternalactions(for:)"},{"type":"method","title":"func externalActions(for: TKSegment) -> [ExternalAction]","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactions(for:)"},{"type":"method","title":"func handleExternalActions(for: TKSegment, presenter: UIViewController, sender: Any?, completion: ((String) -> Void)?)","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/handleexternalactions(for:presenter:sender:completion:)"},{"type":"method","title":"func perform(ExternalAction, for: TKSegment?, presenter: UIViewController, sender: Any?)","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/perform(_:for:presenter:sender:)"},{"type":"method","title":"func performExternalAction(String, for: TKSegment?, presenter: UIViewController, sender: Any?)","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/performexternalaction(_:for:presenter:sender:)"},{"type":"method","title":"func registerExternalActionHandlers([TKInterAppExternalActionHandler])","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/registerexternalactionhandlers(_:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: TKInterAppCommunicator","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/shared"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func canOpenInMapsApp(TKSegment) -> Bool","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/canopeninmapsapp(_:)"},{"type":"method","title":"static func openMapsApp(in: TKTurnByTurnMode, routeFrom: MKAnnotation?, to: MKAnnotation, viewController: UIViewController, initiatedBy: Any?)","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/openmapsapp(in:routefrom:to:viewcontroller:initiatedby:)"},{"type":"method","title":"static func openSegmentInMapsApp(TKSegment, forViewController: UIViewController, initiatedBy: Any, currentLocationHandler: ((TKSegment) -> Bool)?)","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/opensegmentinmapsapp(_:forviewcontroller:initiatedby:currentlocationhandler:)"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/appdeeplink","title":"case appDeepLink","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/appdownload","title":"case appDownload","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/message","title":"case message","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/phone","title":"case phone","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/ticket","title":"case ticket","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/website","title":"case website","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"type":"enum","title":"TKInterAppCommunicator.ExternalActionType","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype"}],"title":"TKInterAppCommunicator","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let priority: TKInterAppExternalActionPriority","type":"property","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/priority"},{"title":"let type: TKInterAppCommunicator.ExternalActionType","type":"property","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/type"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func canHandle(TKInterAppIdentifier) -> Bool","type":"method","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/canhandle(_:)"},{"title":"func performAction(for: TKInterAppIdentifier, segment: TKSegment?, presenter: UIViewController, sender: Any?)","type":"method","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/performaction(for:segment:presenter:sender:)"},{"title":"func title(for: TKInterAppIdentifier) -> String","type":"method","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/title(for:)"}],"title":"TKPhoneActionHandler","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/priority","title":"let priority: TKInterAppExternalActionPriority","type":"property"},{"path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/type","title":"let type: TKInterAppCommunicator.ExternalActionType","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/canhandle(_:)","title":"func canHandle(TKInterAppIdentifier) -> Bool","type":"method"},{"path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/performaction(for:segment:presenter:sender:)","title":"func performAction(for: TKInterAppIdentifier, segment: TKSegment?, presenter: UIViewController, sender: Any?)","type":"method"},{"path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/title(for:)","title":"func title(for: TKInterAppIdentifier) -> String","type":"method"}],"title":"TKSMSActionHandler","path":"\/documentation\/tripkitinterapp\/tksmsactionhandler","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/priority","title":"let priority: TKInterAppExternalActionPriority"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/type","title":"let type: TKInterAppCommunicator.ExternalActionType"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/canhandle(_:)","title":"func canHandle(TKInterAppIdentifier) -> Bool"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/performaction(for:segment:presenter:sender:)","title":"func performAction(for: TKInterAppIdentifier, segment: TKSegment?, presenter: UIViewController, sender: Any?)"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/title(for:)","title":"func title(for: TKInterAppIdentifier) -> String"}],"title":"TKWebActionHandler","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var priority: TKInterAppExternalActionPriority","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/priority","type":"property"},{"title":"var type: TKInterAppCommunicator.ExternalActionType","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func canHandle(TKInterAppIdentifier) -> Bool","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/canhandle(_:)","type":"method"},{"title":"func performAction(for: TKInterAppIdentifier, segment: TKSegment?, presenter: UIViewController, sender: Any?)","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/performaction(for:segment:presenter:sender:)","type":"method"},{"title":"func title(for: TKInterAppIdentifier) -> String","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/title(for:)","type":"method"}],"title":"TKInterAppExternalActionHandler","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler","type":"protocol"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKInterAppIdentifier","path":"\/documentation\/tripkitinterapp\/tkinterappidentifier","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/high","title":"case high"},{"type":"case","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/low","title":"case low"},{"type":"case","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/medium","title":"case medium"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations"}],"title":"TKInterAppExternalActionPriority","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tripkitapi\/tkconfig\/googlemapscallback","title":"var googleMapsCallback: String?"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tripkitapi\/tkconfig\/interappconfiguration","title":"var interAppConfiguration: [String : Any]"}],"path":"\/documentation\/tripkitinterapp\/tripkitapi\/tkconfig","title":"TKConfig","type":"extension"}],"title":"TripKitAPI","path":"\/documentation\/tripkitinterapp\/tripkitapi","type":"extension"}],"title":"TripKitInterApp"},{"path":"\/documentation\/tripkitui","type":"module","children":[{"type":"groupMarker","title":"Trip Planning Interface"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontroller\/init(coder:)","type":"init","title":"init(coder: NSCoder)"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontroller\/init(destination:)","type":"init","title":"init(destination: MKAnnotation)"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontroller\/init(request:modes:)","type":"init","title":"init(request: TripRequest, modes: Set<String>?)"}],"path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontroller","title":"TKUIRoutingResultsViewController"},{"type":"protocol","path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontrollerdelegate","title":"TKUIRoutingResultsViewControllerDelegate"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKUIRoutingResultsCard.Configuration","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var autocompletionDataProviders: [TKAutocompleting]","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/autocompletiondataproviders"},{"title":"var contactCustomerSupport: ((TKUIRoutingResultsCard, SupportType) -> Void)?","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/contactcustomersupport"},{"title":"var customItemProvider: TKUIRoutingResultsCustomItemProvider?","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/customitemprovider"},{"title":"var initialCardPosition: TGCardPosition","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/initialcardposition"},{"title":"var limitToModes: Set<String>?","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/limittomodes"},{"title":"var mapManagerFactory: (@MainActor (MKAnnotation?, Bool) -> TKUIRoutingResultsMapManagerType)","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/mapmanagerfactory"},{"title":"var timePickerConfig: TKUITimePickerSheet.Configuration","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/timepickerconfig"},{"title":"var tripBadgesToShow: Set<TKMetricClassifier.Classification>","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/tripbadgestoshow"},{"title":"var tripGroupActionFactory: ((TripGroup) -> TripGroupAction?)?","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/tripgroupactionfactory"},{"title":"var tripMetricsToShow: [TKTripCostType]","type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/tripmetricstoshow"}]},{"title":"TKUIRoutingResultsCard.CustomItem","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/init(payload:preferredindex:)","type":"init","title":"init(payload: AnyHashable, preferredIndex: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/payload","type":"property","title":"let payload: AnyHashable"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/preferredindex","type":"property","title":"let preferredIndex: Int"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(destination: MKAnnotation, origin: MKAnnotation?, zoomToDestination: Bool, initialPosition: TGCardPosition?)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/init(destination:origin:zoomtodestination:initialposition:)","type":"init"},{"title":"init(request: TripRequest, editable: Bool, modes: Set<String>?)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/init(request:editable:modes:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var keyCommands: [UIKeyCommand]?","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/keycommands","type":"property"},{"title":"var onSelection: ((Trip) -> Bool)?","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/onselection","type":"property"},{"title":"var preferredView: UIView?","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/preferredview","type":"property"},{"title":"var resultsDelegate: TKUIRoutingResultsCardDelegate?","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/resultsdelegate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func canPerformAction(Selector, withSender: Any?) -> Bool","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/canperformaction(_:withsender:)","type":"method"},{"title":"func debugActionCopyPrimaryRequest(AnyObject?)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/debugactioncopyprimaryrequest(_:)","type":"method"},{"title":"func didAppear(animated: Bool)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/didappear(animated:)","type":"method"},{"title":"func didBuild(tableView: UITableView, cardView: TGCardView)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/didbuild(tableview:cardview:)","type":"method"},{"title":"func refreshForUpdatedModes()","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/refreshforupdatedmodes()","type":"method"},{"title":"func traitCollectionDidChange(UITraitCollection?)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/traitcollectiondidchange(_:)","type":"method"},{"title":"func willAppear(animated: Bool)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/willappear(animated:)","type":"method"},{"title":"func willDisappear(animated: Bool)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/willdisappear(animated:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUIRoutingResultsCard.TripGroupAction","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tripgroupaction","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: TKUIRoutingResultsCard.Configuration","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/config","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKUIRoutingResultsCard.SupportType","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/supporttype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case routingError(Error, TripRequest)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/supporttype\/routingerror(_:_:)","type":"case"},{"title":"case unsupportedQuery(TripRequest)","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/supporttype\/unsupportedquery(_:)","type":"case"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUIRoutingQueryInputCardDelegate Implementations","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tkuiroutingqueryinputcarddelegate-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/routingqueryinput(card:selectedorigin:destination:)","type":"method","title":"func routingQueryInput(card: TKUIRoutingQueryInputCard, selectedOrigin: MKAnnotation, destination: MKAnnotation)"}]},{"title":"TKUITimePickerSheetDelegate Implementations","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tkuitimepickersheetdelegate-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func timePicker(TKUITimePickerSheet, pickedDate: Date, for: TKTimeType)","type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/timepicker(_:pickeddate:for:)"},{"title":"func timePickerRequestsResign(TKUITimePickerSheet)","type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/timepickerrequestsresign(_:)"}]},{"title":"UITableViewDelegate Implementations","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/uitableviewdelegate-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:contextmenuconfigurationforrowat:point:)","title":"func tableView(UITableView, contextMenuConfigurationForRowAt: IndexPath, point: CGPoint) -> UIContextMenuConfiguration?","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:estimatedheightforfooterinsection:)","title":"func tableView(UITableView, estimatedHeightForFooterInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:estimatedheightforheaderinsection:)","title":"func tableView(UITableView, estimatedHeightForHeaderInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:heightforfooterinsection:)","title":"func tableView(UITableView, heightForFooterInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:heightforheaderinsection:)","title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:viewforfooterinsection:)","title":"func tableView(UITableView, viewForFooterInSection: Int) -> UIView?","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:viewforheaderinsection:)","title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","type":"method"}]}],"path":"\/documentation\/tripkitui\/tkuiroutingresultscard","title":"TKUIRoutingResultsCard"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscarddelegate\/resultscard(_:requestsmodepickerwithmodes:for:sender:)","title":"func resultsCard(TKUIRoutingResultsCard, requestsModePickerWithModes: [String], for: TKRegion, sender: Any?)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuiroutingresultscarddelegate","title":"TKUIRoutingResultsCardDelegate"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/init(origin:destination:biasmaprect:)","title":"init(origin: MKAnnotation?, destination: MKAnnotation?, biasMapRect: MKMapRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/keycommands","title":"var keyCommands: [UIKeyCommand]?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/preferredview","title":"var preferredView: UIView?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/querydelegate","title":"var queryDelegate: TKUIRoutingQueryInputCardDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/didappear(animated:)","title":"func didAppear(animated: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/didbuild(tableview:)","title":"func didBuild(tableView: UITableView)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/willappear(animated:)","title":"func willAppear(animated: Bool)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/uiscrollviewdelegate-implementations","title":"UIScrollViewDelegate Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)"}]},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)"}]}],"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard","title":"TKUIRoutingQueryInputCard"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcarddelegate\/routingqueryinput(card:selectedorigin:destination:)","title":"func routingQueryInput(card: TKUIRoutingQueryInputCard, selectedOrigin: MKAnnotation, destination: MKAnnotation)"}],"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcarddelegate","title":"TKUIRoutingQueryInputCardDelegate"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontroller\/init(coder:)","type":"init"},{"title":"init(trip: Trip)","path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontroller\/init(trip:)","type":"init"}],"path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontroller","title":"TKUITripOverviewViewController"},{"type":"class","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var enableDropToAddStopover: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/enabledroptoaddstopover"},{"title":"var mapManagerFactory: (@MainActor (Trip) -> TKUITripMapManagerType)","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/mapmanagerfactory"},{"title":"var maximumAlertsPerSegment: Int","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/maximumalertspersegment"},{"title":"var presentSegmentHandler: (@MainActor (TKUITripOverviewCard, TKSegment) -> Void)?","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/presentsegmenthandler"},{"title":"var segmentActionsfactory: (@MainActor (TKSegment) -> [SegmentAction])?","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/segmentactionsfactory"},{"title":"var showTripActionTitle: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/showtripactiontitle"},{"title":"var tripActionsFactory: (@MainActor (Trip) -> [TripAction])?","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/tripactionsfactory"}],"type":"struct","title":"TKUITripOverviewCard.Configuration"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/init(trip:index:)","type":"init","title":"init(trip: Trip, index: Int?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/includetimetoleavenotification","type":"property","title":"var includeTimeToLeaveNotification: Bool"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/initialtrip","type":"property","title":"let initialTrip: Trip"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/selectedalternativetripcallback","type":"property","title":"var selectedAlternativeTripCallback: ((Trip) -> Bool)?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/didappear(animated:)","type":"method","title":"func didAppear(animated: Bool)"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/didbuild(tableview:cardview:)","type":"method","title":"func didBuild(tableView: UITableView, cardView: TGCardView)"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/shows(tripurl:tripid:)","type":"method","title":"func shows(tripURL: URL, tripID: String?) -> Bool"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/traitcollectiondidchange(_:)","type":"method","title":"func traitCollectionDidChange(UITraitCollection?)"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/willappear(animated:)","type":"method","title":"func willAppear(animated: Bool)"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/willdisappear(animated:)","type":"method","title":"func willDisappear(animated: Bool)"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/segmentaction","type":"typealias","title":"TKUITripOverviewCard.SegmentAction"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/tripaction","type":"typealias","title":"TKUITripOverviewCard.TripAction"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/config","type":"property","title":"static var config: TKUITripOverviewCard.Configuration"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/buildstarttripaction(startingon:label:mode:style:actionhandler:)","type":"method","title":"static func buildStartTripAction(startingOn: TKSegment?, label: String?, mode: TKUISegmentMode, style: TKUICardActionStyle, actionHandler: TKUITripModeByModeCard.TripStartedActionHandler?) -> TKUITripOverviewCard.TripAction"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case alternatives","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/alternatives"},{"type":"case","title":"case book","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/book"},{"type":"case","title":"case go","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/go"},{"type":"case","title":"case notify","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/notify"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/rawrepresentable-implementations"}],"type":"enum","title":"TKUITripOverviewCard.DefaultActionPriority"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/tkuitripmodebymodecarddelegate-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func modeByModeCard(TKUITripModeByModeCard, updatedTrip: Trip)","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/modebymodecard(_:updatedtrip:)","type":"method"}],"type":"symbol","title":"TKUITripModeByModeCardDelegate Implementations"}],"path":"\/documentation\/tripkitui\/tkuitripoverviewcard","title":"TKUITripOverviewCard"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","type":"init","path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontroller\/init(coder:)"},{"title":"init(startingOn: TKSegment, mode: TKUISegmentMode, initialPosition: TGCardPosition)","type":"init","path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontroller\/init(startingon:mode:initialposition:)"},{"title":"init(trip: Trip, initialPosition: TGCardPosition)","type":"init","path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontroller\/init(trip:initialposition:)"}],"path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontroller","title":"TKUITripModeByModeViewController"},{"type":"protocol","path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontrollerdelegate","title":"TKUITripModeByModeViewControllerDelegate"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var builder: TKUITripModeByModePageBuilder","type":"property","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/configuration\/builder"}],"title":"TKUITripModeByModeCard.Configuration","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(mapManager: TKUITripMapManager)","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/init(mapmanager:)","type":"init"},{"title":"init(startingOn: TKSegment, mode: TKUISegmentMode, mapManager: TKUITripMapManager?, initialPosition: TGCardPosition) throws","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/init(startingon:mode:mapmanager:initialposition:)","type":"init"},{"title":"init(trip: Trip, initialPosition: TGCardPosition)","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/init(trip:initialposition:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var modeByModeDelegate: TKUITripModeByModeCardDelegate?","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/modebymodedelegate","type":"property"},{"title":"var tripStartedHandler: TripStartedActionHandler?","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/tripstartedhandler","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didAppear(animated: Bool)","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/didappear(animated:)","type":"method"},{"title":"func didBuild(cardView: TGCardView?, headerView: TGHeaderView?)","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/didbuild(cardview:headerview:)","type":"method"},{"title":"func didMoveToPage(index: Int)","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/didmovetopage(index:)","type":"method"},{"title":"func offsetToReach(mode: TKUISegmentMode, in: TKSegment) -> Int?","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/offsettoreach(mode:in:)","type":"method"},{"title":"func shows(tripURL: URL, tripID: String?) -> Bool","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/shows(tripurl:tripid:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUITripModeByModeCard.TripStartedActionHandler","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/tripstartedactionhandler","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: TKUITripModeByModeCard.Configuration","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/config","type":"property"}],"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard","title":"TKUITripModeByModeCard"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder\/cardidentifier(for:)","title":"func cardIdentifier(for: TKSegment) -> String?"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder\/cards(for:mapmanager:)","title":"func cards(for: TKSegment, mapManager: TKUITripMapManager) -> [(TGCard, TKUISegmentMode)]"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder\/cleanup(existingcards:)","title":"func cleanUp(existingCards: [TGCard])"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder\/shouldupdate(trip:counter:)","title":"func shouldUpdate(trip: Trip, counter: Int) -> Bool"}],"path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder","title":"TKUITripModeByModePageBuilder"},{"type":"groupMarker","title":"Timetable Interface"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller\/init(coder:)","title":"init(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller\/init(dlstable:startdate:)","title":"init(dlsTable: TKDLSTable, startDate: Date)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller\/init(stop:filter:)","title":"init(stop: TKUIStopAnnotation, filter: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller\/timetabledelegate","title":"var timetableDelegate: TKUITimetableViewControllerDelegate?","type":"property"}],"path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller","title":"TKUITimetableViewController"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimetableviewcontrollerdelegate\/timetableviewcontroller(_:updatedfilter:)","title":"func timetableViewController(TKUITimetableViewController, updatedFilter: String)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuitimetableviewcontrollerdelegate","title":"TKUITimetableViewControllerDelegate"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKUITimetableCard.Configuration","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuitimetablecard\/configuration\/showoperatornames","type":"property","title":"var showOperatorNames: Bool"},{"path":"\/documentation\/tripkitui\/tkuitimetablecard\/configuration\/showtimetableactiontitle","type":"property","title":"var showTimetableActionTitle: Bool"},{"path":"\/documentation\/tripkitui\/tkuitimetablecard\/configuration\/timetableactionsfactory","type":"property","title":"var timetableActionsFactory: (@MainActor ([TKUIStopAnnotation]) -> [Action])?"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard\/configuration"},{"title":"Initializers","type":"groupMarker"},{"title":"init(titleView: (UIView, UIButton)?, dlsTable: TKDLSTable, startDate: Date, selectedServiceID: String?, reusing: TGMapManager?)","type":"init","path":"\/documentation\/tripkitui\/tkuitimetablecard\/init(titleview:dlstable:startdate:selectedserviceid:reusing:)"},{"title":"init(titleView: (UIView, UIButton)?, stops: [TKUIStopAnnotation], reusing: TGMapManager?, initialPosition: TGCardPosition?)","type":"init","path":"\/documentation\/tripkitui\/tkuitimetablecard\/init(titleview:stops:reusing:initialposition:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var departuresDelegate: TKUITimetableCardDelegate?","type":"property","path":"\/documentation\/tripkitui\/tkuitimetablecard\/departuresdelegate"},{"title":"var filter: String?","type":"property","path":"\/documentation\/tripkitui\/tkuitimetablecard\/filter"},{"title":"var filterUpdatedHandler: ((String) -> Void)?","type":"property","path":"\/documentation\/tripkitui\/tkuitimetablecard\/filterupdatedhandler"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/didappear(animated:)"},{"title":"func didBuild(tableView: UITableView, cardView: TGCardView)","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/didbuild(tableview:cardview:)"},{"title":"func visibleDepartures() -> [StopVisits]","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/visibledepartures()"},{"title":"func willAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/willappear(animated:)"},{"title":"func willDisappear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/willdisappear(animated:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUITimetableCard.Action","type":"typealias","path":"\/documentation\/tripkitui\/tkuitimetablecard\/action"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: TKUITimetableCard.Configuration","type":"property","path":"\/documentation\/tripkitui\/tkuitimetablecard\/config"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUITimePickerSheetDelegate Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func timePicker(TKUITimePickerSheet, pickedDate: Date, for: TKTimeType)","path":"\/documentation\/tripkitui\/tkuitimetablecard\/timepicker(_:pickeddate:for:)","type":"method"},{"title":"func timePickerRequestsResign(TKUITimePickerSheet)","path":"\/documentation\/tripkitui\/tkuitimetablecard\/timepickerrequestsresign(_:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard\/tkuitimepickersheetdelegate-implementations"},{"title":"UIScrollViewDelegate Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/scrollviewshouldscrolltotop(_:)","title":"func scrollViewShouldScrollToTop(UIScrollView) -> Bool"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard\/uiscrollviewdelegate-implementations"},{"title":"UISearchBarDelegate Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func searchBarSearchButtonClicked(UISearchBar)","path":"\/documentation\/tripkitui\/tkuitimetablecard\/searchbarsearchbuttonclicked(_:)"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard\/uisearchbardelegate-implementations"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard","title":"TKUITimetableCard"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func timetableCard(TKUITimetableCard, forSegmentAtIndex: Int, updatedWithTrip: Trip)","path":"\/documentation\/tripkitui\/tkuitimetablecarddelegate\/timetablecard(_:forsegmentatindex:updatedwithtrip:)"},{"type":"method","title":"func timetableCard(TKUITimetableCard, selectedDeparture: StopVisits)","path":"\/documentation\/tripkitui\/tkuitimetablecarddelegate\/timetablecard(_:selecteddeparture:)"}],"path":"\/documentation\/tripkitui\/tkuitimetablecarddelegate","title":"TKUITimetableCardDelegate"},{"type":"class","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/configuration","type":"struct","title":"TKUIServiceCard.Configuration","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var bicycleAccessibilityImage: UIImage","type":"property","path":"\/documentation\/tripkitui\/tkuiservicecard\/configuration\/bicycleaccessibilityimage"},{"title":"var bicycleAccessibilityImageMini: UIImage","type":"property","path":"\/documentation\/tripkitui\/tkuiservicecard\/configuration\/bicycleaccessibilityimagemini"},{"title":"var serviceActionsFactory: (@MainActor (EmbarkationPair) -> [TKUICardAction<TKUIServiceCard, EmbarkationPair>])?","type":"property","path":"\/documentation\/tripkitui\/tkuiservicecard\/configuration\/serviceactionsfactory"}]},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/init(titleview:embarkation:disembarkation:reusing:)","type":"init","title":"init(titleView: (UIView, UIButton)?, embarkation: StopVisits, disembarkation: StopVisits?, reusing: TKUITripMapManager?)"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/init(titleview:publictransportsegment:reusing:)","type":"init","title":"init(titleView: (UIView, UIButton)?, publicTransportSegment: TKSegment, reusing: TKUITripMapManager?)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/didappear(animated:)","type":"method","title":"func didAppear(animated: Bool)"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/didbuild(tableview:)","type":"method","title":"func didBuild(tableView: UITableView)"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/embarkationpair","type":"typealias","title":"TKUIServiceCard.EmbarkationPair"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/config","type":"property","title":"static var config: TKUIServiceCard.Configuration"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/uiscrollviewdelegate-implementations","type":"symbol","title":"UIScrollViewDelegate Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/scrollviewshouldscrolltotop(_:)","type":"method","title":"func scrollViewShouldScrollToTop(UIScrollView) -> Bool"}]},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/uitableviewdelegate-implementations","type":"symbol","title":"UITableViewDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tableView(UITableView, didSelectRowAt: IndexPath)","path":"\/documentation\/tripkitui\/tkuiservicecard\/tableview(_:didselectrowat:)","type":"method"},{"title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","path":"\/documentation\/tripkitui\/tkuiservicecard\/tableview(_:heightforheaderinsection:)","type":"method"},{"title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","path":"\/documentation\/tripkitui\/tkuiservicecard\/tableview(_:viewforheaderinsection:)","type":"method"}]}],"path":"\/documentation\/tripkitui\/tkuiservicecard","title":"TKUIServiceCard"},{"type":"groupMarker","title":"Search Interface"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/init(coder:)"},{"type":"init","title":"init(providers: [TKAutocompleting])","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/init(providers:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var biasMapRect: MKMapRect","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/biasmaprect"},{"type":"property","title":"var delegate: TKUIAutocompletionViewControllerDelegate?","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/delegate"},{"type":"property","title":"let providers: [TKAutocompleting]","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/providers"},{"type":"property","title":"var showAccessoryButtons: Bool","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/showaccessorybuttons"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func scrollViewDidScroll(UIScrollView)","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/scrollviewdidscroll(_:)"},{"type":"method","title":"func viewDidLoad()","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/viewdidload()"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/updatesearchresults(for:)","type":"method","title":"func updateSearchResults(for: UISearchController)"}],"type":"symbol","title":"UISearchResultsUpdating Implementations","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/uisearchresultsupdating-implementations"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller","title":"TKUIAutocompletionViewController"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func autocompleter(TKUIAutocompletionViewController, didSelect: TKAutocompletionSelection)","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontrollerdelegate\/autocompleter(_:didselect:)"},{"type":"method","title":"func autocompleter(TKUIAutocompletionViewController, didSelectAccessoryFor: TKAutocompletionSelection)","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontrollerdelegate\/autocompleter(_:didselectaccessoryfor:)"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontrollerdelegate","title":"TKUIAutocompletionViewControllerDelegate"},{"type":"groupMarker","title":"Home Screen Interface"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/init(mapmanager:initialposition:)","title":"init(mapManager: TKUICompatibleHomeMapManager?, initialPosition: TGCardPosition?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/autocompletiondataproviders","title":"var autocompletionDataProviders: [TKAutocompleting]?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/initialposition","title":"var initialPosition: TGCardPosition?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/mapmanager","title":"var mapManager: TKUICompatibleHomeMapManager?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/searchresultsdelegate","title":"var searchResultsDelegate: TKUIHomeCardSearchResultsDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"}],"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller","title":"TKUIHomeViewController"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKUIHomeCard.Configuration","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var autocompletionDataProviders: [TKAutocompleting]?","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/autocompletiondataproviders"},{"title":"var componentViewModelClasses: [TKUIHomeComponentViewModel.Type]","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/componentviewmodelclasses"},{"title":"var directionButtonStartsQueryInputInDestinationMode: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/directionbuttonstartsqueryinputindestinationmode"},{"title":"var ignoreComponentCustomization: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/ignorecomponentcustomization"},{"title":"var requestLocationServicesOnLoad: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/requestlocationservicesonload"},{"title":"var selectionMode: SelectionMode","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/selectionmode"},{"title":"var topMapToolbarItems: [UIView]?","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/topmaptoolbaritems"},{"title":"var voiceOverStartMode: TKUIHomeCard.VoiceOverMode","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/voiceoverstartmode"}],"type":"struct","path":"\/documentation\/tripkitui\/tkuihomecard\/configuration"},{"title":"Initializers","type":"groupMarker"},{"title":"init(mapManager: TKUICompatibleHomeMapManager?, initialPosition: TGCardPosition?)","type":"init","path":"\/documentation\/tripkitui\/tkuihomecard\/init(mapmanager:initialposition:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let disposeBag: DisposeBag","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/disposebag"},{"title":"var preferredView: UIView?","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/preferredview"},{"title":"var searchResultDelegate: TKUIHomeCardSearchResultsDelegate?","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/searchresultdelegate"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/didappear(animated:)"},{"title":"func didBuild(tableView: UITableView)","type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/didbuild(tableview:)"},{"title":"func didDisappear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/diddisappear(animated:)"},{"title":"func enterSearchMode()","type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/entersearchmode()"},{"title":"func showQueryInput(startingInDestinationMode: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/showqueryinput(startingindestinationmode:)"},{"title":"func willAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/willappear(animated:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: TKUIHomeCard.Configuration","type":"property","path":"\/documentation\/tripkitui\/tkuihomecard\/config"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func hideComponent(id: String)","type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/hidecomponent(id:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKUIHomeCard.ComponentAction","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/entersearchmode","title":"case enterSearchMode"},{"type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/handleselection(_:component:)","title":"case handleSelection(TKAutocompletionSelection, component: TKUIHomeComponentViewModel?)"},{"type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/hidesection(identifier:)","title":"case hideSection(identifier: String)"},{"type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/present(_:innavigationcontroller:)","title":"case present(UIViewController, inNavigationController: Bool)"},{"type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/push(_:selection:)","title":"case push(TGCard, selection: MKAnnotation?)"},{"type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/showcustomizer","title":"case showCustomizer"},{"type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/success","title":"case success"},{"type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/trigger(_:)","title":"case trigger((UIViewController) -> Void)"}],"type":"enum","path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction"},{"title":"TKUIHomeCard.SelectionMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case callback((TKAutocompletionSelection, TKUIHomeComponentViewModel?) -> Bool)","path":"\/documentation\/tripkitui\/tkuihomecard\/selectionmode\/callback(_:)","type":"case"},{"title":"case `default`","path":"\/documentation\/tripkitui\/tkuihomecard\/selectionmode\/default","type":"case"},{"title":"case selectOnMap","path":"\/documentation\/tripkitui\/tkuihomecard\/selectionmode\/selectonmap","type":"case"}],"type":"enum","path":"\/documentation\/tripkitui\/tkuihomecard\/selectionmode"},{"title":"TKUIHomeCard.VoiceOverMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case routeButton","path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode\/routebutton"},{"type":"case","title":"case searchBar","path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode\/searchbar"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"type":"enum","path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUIRoutingQueryInputCardDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func routingQueryInput(card: TKUIRoutingQueryInputCard, selectedOrigin: MKAnnotation, destination: MKAnnotation)","path":"\/documentation\/tripkitui\/tkuihomecard\/routingqueryinput(card:selectedorigin:destination:)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkitui\/tkuihomecard\/tkuiroutingqueryinputcarddelegate-implementations"},{"title":"UISearchBarDelegate Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/searchbar(_:textdidchange:)","type":"method","title":"func searchBar(UISearchBar, textDidChange: String)"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/searchbarcancelbuttonclicked(_:)","type":"method","title":"func searchBarCancelButtonClicked(UISearchBar)"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/searchbarsearchbuttonclicked(_:)","type":"method","title":"func searchBarSearchButtonClicked(UISearchBar)"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/searchbartextdidbeginediting(_:)","type":"method","title":"func searchBarTextDidBeginEditing(UISearchBar)"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/searchbartextdidendediting(_:)","type":"method","title":"func searchBarTextDidEndEditing(UISearchBar)"}],"type":"symbol","path":"\/documentation\/tripkitui\/tkuihomecard\/uisearchbardelegate-implementations"},{"title":"UITableViewDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tableView(UITableView, contextMenuConfigurationForRowAt: IndexPath, point: CGPoint) -> UIContextMenuConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecard\/tableview(_:contextmenuconfigurationforrowat:point:)","type":"method"},{"title":"func tableView(UITableView, leadingSwipeActionsConfigurationForRowAt: IndexPath) -> UISwipeActionsConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecard\/tableview(_:leadingswipeactionsconfigurationforrowat:)","type":"method"},{"title":"func tableView(UITableView, trailingSwipeActionsConfigurationForRowAt: IndexPath) -> UISwipeActionsConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecard\/tableview(_:trailingswipeactionsconfigurationforrowat:)","type":"method"},{"title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","path":"\/documentation\/tripkitui\/tkuihomecard\/tableview(_:viewforheaderinsection:)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkitui\/tkuihomecard\/uitableviewdelegate-implementations"}],"path":"\/documentation\/tripkitui\/tkuihomecard","title":"TKUIHomeCard"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func homeCard(TKUIHomeCard, selected: MKAnnotation)","type":"method","path":"\/documentation\/tripkitui\/tkuihomecardsearchresultsdelegate\/homecard(_:selected:)"}],"path":"\/documentation\/tripkitui\/tkuihomecardsearchresultsdelegate","title":"TKUIHomeCardSearchResultsDelegate"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var customizerItem: TKUIHomeCardCustomizerItem?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/customizeritem","children":[{"children":[{"path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/customizeritem-34abl","title":"var customizerItem: TKUIHomeCardCustomizerItem?","type":"property"}],"title":"TKUIHomeComponentViewModel Implementations","type":"groupMarker"}],"type":"property"},{"title":"var homeCardSection: Driver<TKUIHomeComponentContent>","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/homecardsection","type":"property"},{"title":"var identity: String","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/identity","type":"property"},{"title":"var nextAction: Signal<TKUIHomeCard.ComponentAction>","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/nextaction","children":[{"children":[{"type":"property","title":"var nextAction: Signal<TKUIHomeCard.ComponentAction>","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/nextaction-2luib"}],"title":"TKUIHomeComponentViewModel Implementations","type":"groupMarker"}],"type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cell(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UITableViewCell?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/cell(for:at:in:)","type":"method"},{"title":"func contextMenuConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UIContextMenuConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/contextmenuconfiguration(for:at:in:)","children":[{"type":"groupMarker","title":"TKUIHomeComponentViewModel Implementations","children":[{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/contextmenuconfiguration(for:at:in:)-4kdip","title":"func contextMenuConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UIContextMenuConfiguration?"}]}],"type":"method"},{"title":"func leadingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/leadingswipeactionsconfiguration(for:at:in:)","children":[{"type":"groupMarker","children":[{"title":"func leadingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/leadingswipeactionsconfiguration(for:at:in:)-62y67","type":"method"}],"title":"TKUIHomeComponentViewModel Implementations"}],"type":"method"},{"title":"func registerCell(with: UITableView)","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/registercell(with:)","children":[{"children":[{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/registercell(with:)-5ghju","title":"func registerCell(with: UITableView)"}],"title":"TKUIHomeComponentViewModel Implementations","type":"groupMarker"}],"type":"method"},{"title":"func trailingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/trailingswipeactionsconfiguration(for:at:in:)","children":[{"title":"TKUIHomeComponentViewModel Implementations","type":"groupMarker","children":[{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/trailingswipeactionsconfiguration(for:at:in:)-1ylze","title":"func trailingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?"}]}],"type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func buildInstance(from: TKUIHomeComponentInput) -> Self","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/buildinstance(from:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel","title":"TKUIHomeComponentViewModel"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(items: [TKUIHomeComponentItem]?, header: TKUIHomeHeaderConfiguration?)","path":"\/documentation\/tripkitui\/tkuihomecomponentcontent\/init(items:header:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let header: TKUIHomeHeaderConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecomponentcontent\/header","type":"property"},{"title":"let items: [TKUIHomeComponentItem]?","path":"\/documentation\/tripkitui\/tkuihomecomponentcontent\/items","type":"property"}],"path":"\/documentation\/tripkitui\/tkuihomecomponentcontent","title":"TKUIHomeComponentContent"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let homeCardWillAppear: Observable<Bool>","path":"\/documentation\/tripkitui\/tkuihomecomponentinput\/homecardwillappear","type":"property"},{"title":"let itemSelected: Signal<TKUIHomeComponentItem>","path":"\/documentation\/tripkitui\/tkuihomecomponentinput\/itemselected","type":"property"},{"title":"let mapRect: Driver<MKMapRect>","path":"\/documentation\/tripkitui\/tkuihomecomponentinput\/maprect","type":"property"}],"path":"\/documentation\/tripkitui\/tkuihomecomponentinput","title":"TKUIHomeComponentInput"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/canedit","title":"var canEdit: Bool","children":[{"type":"groupMarker","children":[{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/canedit-1jnvs","type":"property","title":"var canEdit: Bool"}],"title":"TKUIHomeComponentItem Implementations"}],"type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/equalitytoken","title":"var equalityToken: String","children":[{"type":"groupMarker","title":"TKUIHomeComponentItem Implementations","children":[{"title":"var equalityToken: String","type":"property","path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/equalitytoken-8otba"}]}],"type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/identity","title":"var identity: String","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/isaction","title":"var isAction: Bool","children":[{"title":"TKUIHomeComponentItem Implementations","children":[{"type":"property","path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/isaction-4pb8c","title":"var isAction: Bool"}],"type":"groupMarker"}],"type":"property"}],"path":"\/documentation\/tripkitui\/tkuihomecomponentitem","title":"TKUIHomeComponentItem"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(title: String, action: (String, (TKUIHomeCard) -> TKUIHomeCard.ComponentAction)?)","path":"\/documentation\/tripkitui\/tkuihomeheaderconfiguration\/init(title:action:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var action: (title: String, handler: (TKUIHomeCard) -> TKUIHomeCard.ComponentAction)?","path":"\/documentation\/tripkitui\/tkuihomeheaderconfiguration\/action"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkitui\/tkuihomeheaderconfiguration\/title"}],"path":"\/documentation\/tripkitui\/tkuihomeheaderconfiguration","title":"TKUIHomeHeaderConfiguration"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(name: String, icon: UIImage, canBeHidden: Bool)","path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem\/init(name:icon:canbehidden:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var canBeHidden: Bool","path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem\/canbehidden","type":"property"},{"title":"let icon: UIImage","path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem\/icon","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem\/name","type":"property"}],"path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem","title":"TKUIHomeCardCustomizerItem"},{"type":"groupMarker","title":"Core UI Components"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(content: AnyPublisher<TKUICardActionContent, Never>, priority: Int, handler: @MainActor (TKUICardAction<Card, Model>, Card, Model, UIView) -> Void)","path":"\/documentation\/tripkitui\/tkuicardaction\/init(content:priority:handler:)","type":"init"},{"title":"init(title: () -> String, accessibilityLabel: (() -> String)?, icon: () -> UIImage, style: (() -> TKUICardActionStyle)?, priority: Int, isEnabled: Bool, handler: @MainActor (Card, Model, UIView) -> Void)","path":"\/documentation\/tripkitui\/tkuicardaction\/init(title:accessibilitylabel:icon:style:priority:isenabled:handler:)-71i7z","type":"init"},{"title":"init(title: String, accessibilityLabel: String?, icon: UIImage, style: TKUICardActionStyle, priority: Int, isEnabled: Bool, handler: @MainActor (TKUICardAction<Card, Model>, Card, Model, UIView) -> Bool)","path":"\/documentation\/tripkitui\/tkuicardaction\/init(title:accessibilitylabel:icon:style:priority:isenabled:handler:)-7hz67","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var accessibilityLabel: String","path":"\/documentation\/tripkitui\/tkuicardaction\/accessibilitylabel","type":"property"},{"title":"let handler: @MainActor (TKUICardAction<Card, Model>, Card, Model, UIView) -> Bool","path":"\/documentation\/tripkitui\/tkuicardaction\/handler","type":"property"},{"title":"var icon: UIImage","path":"\/documentation\/tripkitui\/tkuicardaction\/icon","type":"property"},{"title":"var isEnabled: Bool","path":"\/documentation\/tripkitui\/tkuicardaction\/isenabled","type":"property"},{"title":"var isInProgress: Bool","path":"\/documentation\/tripkitui\/tkuicardaction\/isinprogress","type":"property"},{"title":"var priority: Int","path":"\/documentation\/tripkitui\/tkuicardaction\/priority","type":"property"},{"title":"var style: TKUICardActionStyle","path":"\/documentation\/tripkitui\/tkuicardaction\/style","type":"property"},{"title":"var title: String","path":"\/documentation\/tripkitui\/tkuicardaction\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"ObservableObject Implementations","path":"\/documentation\/tripkitui\/tkuicardaction\/observableobject-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var objectWillChange: ObservableObjectPublisher","path":"\/documentation\/tripkitui\/tkuicardaction\/objectwillchange"}]}],"path":"\/documentation\/tripkitui\/tkuicardaction","title":"TKUICardAction"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/alerthandler","type":"property","title":"var alertHandler: ((Error, UIViewController) -> Void)"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/cardactionnormalstyle","type":"property","title":"var cardActionNormalStyle: TKUICardActionNormalStyle"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/cardstyle","type":"property","title":"var cardStyle: TGCardStyle"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/colorcodetransiticons","type":"property","title":"var colorCodeTransitIcons: Bool"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/feedbackactiveitemhandler","type":"property","title":"var feedbackActiveItemHandler: ((Any) -> Void)?"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/forcecompactactionslayout","type":"property","title":"var forceCompactActionsLayout: Bool"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/locationinfotaphandler","type":"property","title":"var locationInfoTapHandler: ((TKUILocationInfo) -> TKUILocationHandlerAction)?"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/showcardactiontitle","type":"property","title":"var showCardActionTitle: Bool"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/shared","type":"property","title":"static let shared: TKUICustomization"}],"path":"\/documentation\/tripkitui\/tkuicustomization","title":"TKUICustomization"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var animatedAnnotations: [any MKAnnotation]","path":"\/documentation\/tripkitui\/tkuimapmanager\/animatedannotations","type":"property"},{"title":"var annotationSelectionEnabled: Bool","path":"\/documentation\/tripkitui\/tkuimapmanager\/annotationselectionenabled","type":"property"},{"title":"var attributionDisplayer: (([TKAPI.DataAttribution], _ sender: UIView) -> Void)?","path":"\/documentation\/tripkitui\/tkuimapmanager\/attributiondisplayer","type":"property"},{"title":"var dynamicAnnotations: [any MKAnnotation]","path":"\/documentation\/tripkitui\/tkuimapmanager\/dynamicannotations","type":"property"},{"title":"var overlays: [any MKOverlay]","path":"\/documentation\/tripkitui\/tkuimapmanager\/overlays","type":"property"},{"title":"var selectionIdentifier: String?","path":"\/documentation\/tripkitui\/tkuimapmanager\/selectionidentifier","type":"property"},{"title":"var selectionMode: TKUIPolylineRenderer.SelectionMode","path":"\/documentation\/tripkitui\/tkuimapmanager\/selectionmode","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annotationBuilder(for: MKAnnotation, in: MKMapView) -> TKUIAnnotationViewBuilder","path":"\/documentation\/tripkitui\/tkuimapmanager\/annotationbuilder(for:in:)","type":"method"},{"title":"func cleanUp(MKMapView, animated: Bool)","path":"\/documentation\/tripkitui\/tkuimapmanager\/cleanup(_:animated:)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:didadd:)","title":"func mapView(MKMapView, didAdd: [MKAnnotationView])","type":"method"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:didselect:)","title":"func mapView(MKMapView, didSelect: MKAnnotationView)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:regiondidchangeanimated:)","title":"func mapView(MKMapView, regionDidChangeAnimated: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:rendererfor:)","title":"func mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer","type":"method"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:viewfor:)","title":"func mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?","type":"method"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/takecharge(of:animated:)","title":"func takeCharge(of: MKMapView, animated: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/updatedynamicannotations(animated:)","title":"func updateDynamicAnnotations(animated: Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/annotationbuilderfactory","title":"static var annotationBuilderFactory: ((MKAnnotation, MKMapView) -> TKUIAnnotationViewBuilder)","type":"property"},{"path":"\/documentation\/tripkitui\/tkuimapmanager\/pointsofintereststoexclude","title":"static var pointsOfInterestsToExclude: [MKPointOfInterestCategory]","type":"property"}],"path":"\/documentation\/tripkitui\/tkuimapmanager","title":"TKUIMapManager"},{"type":"groupMarker","title":"Classes"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(configureCell: ConfigureCell, configureSupplementaryView: ConfigureSupplementaryView?, moveItem: MoveItem, canMoveItemAtIndexPath: CanMoveItemAtIndexPath)","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/init(configurecell:configuresupplementaryview:moveitem:canmoveitematindexpath:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var canMoveItemAtIndexPath: ((CollectionViewSectionedDataSource<Section>, IndexPath) -> Bool)?","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/canmoveitematindexpath-swift.property","type":"property"},{"title":"var configureCell: ConfigureCell","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/configurecell-swift.property","type":"property"},{"title":"var configureSupplementaryView: ConfigureSupplementaryView?","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/configuresupplementaryview-swift.property","type":"property"},{"title":"var moveItem: MoveItem","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/moveitem-swift.property","type":"property"},{"title":"var sectionModels: [Section]","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/sectionmodels","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func collectionView(UICollectionView, canMoveItemAt: IndexPath) -> Bool","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:canmoveitemat:)","type":"method"},{"title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:cellforitemat:)","type":"method"},{"title":"func collectionView(UICollectionView, moveItemAt: IndexPath, to: IndexPath)","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:moveitemat:to:)","type":"method"},{"title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:numberofitemsinsection:)","type":"method"},{"title":"func collectionView(UICollectionView, viewForSupplementaryElementOfKind: String, at: IndexPath) -> UICollectionReusableView","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:viewforsupplementaryelementofkind:at:)","type":"method"},{"title":"func model(at: IndexPath) throws -> Any","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/model(at:)","type":"method"},{"title":"func numberOfSections(in: UICollectionView) -> Int","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/numberofsections(in:)","type":"method"},{"title":"func responds(to: Selector!) -> Bool","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/responds(to:)","type":"method"},{"title":"func setSections([Section])","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/setsections(_:)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Int) -> Section","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/subscript(_:)-2ll7m","type":"subscript"},{"title":"subscript(IndexPath) -> Item","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/subscript(_:)-5hzlh","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"title":"CollectionViewSectionedDataSource.CanMoveItemAtIndexPath","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/canmoveitematindexpath-swift.typealias","type":"typealias"},{"title":"CollectionViewSectionedDataSource.ConfigureCell","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/configurecell-swift.typealias","type":"typealias"},{"title":"CollectionViewSectionedDataSource.ConfigureSupplementaryView","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/configuresupplementaryview-swift.typealias","type":"typealias"},{"title":"CollectionViewSectionedDataSource.Item","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/item","type":"typealias"},{"title":"CollectionViewSectionedDataSource.MoveItem","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/moveitem-swift.typealias","type":"typealias"},{"title":"CollectionViewSectionedDataSource.Section","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/section","type":"typealias"},{"title":"CollectionViewSectionedDataSource.SectionModelSnapshot","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/sectionmodelsnapshot","type":"typealias"}],"path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource","title":"CollectionViewSectionedDataSource"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(animationConfiguration: AnimationConfiguration, decideViewTransition: DecideViewTransition, configureCell: ConfigureCell, configureSupplementaryView: ConfigureSupplementaryView?, moveItem: MoveItem, canMoveItemAtIndexPath: CanMoveItemAtIndexPath)","type":"init","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/init(animationconfiguration:decideviewtransition:configurecell:configuresupplementaryview:moveitem:canmoveitematindexpath:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var animationConfiguration: AnimationConfiguration","type":"property","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/animationconfiguration"},{"title":"var decideViewTransition: DecideViewTransition","type":"property","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/decideviewtransition-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func collectionView(UICollectionView, observedEvent: Event<Element>)","type":"method","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/collectionview(_:observedevent:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxCollectionViewSectionedAnimatedDataSource.DecideViewTransition","type":"typealias","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/decideviewtransition-swift.typealias"},{"title":"RxCollectionViewSectionedAnimatedDataSource.Element","type":"typealias","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/element"}],"path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource","title":"RxCollectionViewSectionedAnimatedDataSource"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func collectionView(UICollectionView, observedEvent: Event<Element>)","type":"method","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedreloaddatasource\/collectionview(_:observedevent:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxCollectionViewSectionedReloadDataSource.Element","type":"typealias","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedreloaddatasource\/element"}],"path":"\/documentation\/tripkitui\/rxcollectionviewsectionedreloaddatasource","title":"RxCollectionViewSectionedReloadDataSource"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/rxpickerviewattributedstringadapter\/init(components:numberofcomponents:numberofrowsincomponent:attributedtitleforrow:)","type":"init","title":"init(components: Components, numberOfComponents: NumberOfComponents, numberOfRowsInComponent: NumberOfRowsInComponent, attributedTitleForRow: AttributedTitleForRow)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/rxpickerviewattributedstringadapter\/pickerview(_:attributedtitleforrow:forcomponent:)","type":"method","title":"func pickerView(UIPickerView, attributedTitleForRow: Int, forComponent: Int) -> NSAttributedString?"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/rxpickerviewattributedstringadapter\/attributedtitleforrow","type":"typealias","title":"RxPickerViewAttributedStringAdapter.AttributedTitleForRow"}],"path":"\/documentation\/tripkitui\/rxpickerviewattributedstringadapter","title":"RxPickerViewAttributedStringAdapter"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/numberofcomponents(in:)","title":"func numberOfComponents(in: UIPickerView) -> Int"},{"type":"method","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/pickerview(_:numberofrowsincomponent:)","title":"func pickerView(UIPickerView, numberOfRowsInComponent: Int) -> Int"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/numberofcomponents","title":"RxPickerViewDataSource.NumberOfComponents"},{"type":"typealias","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/numberofrowsincomponent","title":"RxPickerViewDataSource.NumberOfRowsInComponent"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func pickerView(UIPickerView, observedEvent: Event<Components>)","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/pickerview(_:observedevent:)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/rxpickerviewdatasourcetype-implementations","title":"RxPickerViewDataSourceType Implementations"}],"path":"\/documentation\/tripkitui\/rxpickerviewdatasource","title":"RxPickerViewDataSource"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/rxpickerviewstringadapter\/init(components:numberofcomponents:numberofrowsincomponent:titleforrow:)","title":"init(components: Components, numberOfComponents: NumberOfComponents, numberOfRowsInComponent: NumberOfRowsInComponent, titleForRow: TitleForRow)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/rxpickerviewstringadapter\/pickerview(_:titleforrow:forcomponent:)","title":"func pickerView(UIPickerView, titleForRow: Int, forComponent: Int) -> String?"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitui\/rxpickerviewstringadapter\/titleforrow","title":"RxPickerViewStringAdapter.TitleForRow"}],"path":"\/documentation\/tripkitui\/rxpickerviewstringadapter","title":"RxPickerViewStringAdapter"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/rxpickerviewviewadapter\/init(components:numberofcomponents:numberofrowsincomponent:viewforrow:)","title":"init(components: Components, numberOfComponents: NumberOfComponents, numberOfRowsInComponent: NumberOfRowsInComponent, viewForRow: ViewForRow)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/rxpickerviewviewadapter\/pickerview(_:viewforrow:forcomponent:reusing:)","title":"func pickerView(UIPickerView, viewForRow: Int, forComponent: Int, reusing: UIView?) -> UIView","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/rxpickerviewviewadapter\/viewforrow","title":"RxPickerViewViewAdapter.ViewForRow","type":"typealias"}],"path":"\/documentation\/tripkitui\/rxpickerviewviewadapter","title":"RxPickerViewViewAdapter"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func receive<S>(subscriber: S)","path":"\/documentation\/tripkitui\/rxpublisher\/receive(subscriber:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxPublisher.Failure","path":"\/documentation\/tripkitui\/rxpublisher\/failure","type":"typealias"},{"title":"RxPublisher.Output","path":"\/documentation\/tripkitui\/rxpublisher\/output","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Publisher Implementations","path":"\/documentation\/tripkitui\/rxpublisher\/publisher-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/rxpublisher\/asobservable()","title":"func asObservable() -> Observable<Output>","type":"method"}],"type":"symbol"},{"title":"Publisher Implementations","path":"\/documentation\/tripkitui\/rxpublisher\/publisher-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func asObservable() -> Observable<Output>","path":"\/documentation\/tripkitui\/rxpublisher\/asobservable()","type":"method"}],"type":"symbol"}],"path":"\/documentation\/tripkitui\/rxpublisher","title":"RxPublisher"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/init(animationconfiguration:decideviewtransition:configurecell:titleforheaderinsection:titleforfooterinsection:caneditrowatindexpath:canmoverowatindexpath:sectionindextitles:sectionforsectionindextitle:)","type":"init","title":"init(animationConfiguration: AnimationConfiguration, decideViewTransition: DecideViewTransition, configureCell: ConfigureCell, titleForHeaderInSection: TitleForHeaderInSection, titleForFooterInSection: TitleForFooterInSection, canEditRowAtIndexPath: CanEditRowAtIndexPath, canMoveRowAtIndexPath: CanMoveRowAtIndexPath, sectionIndexTitles: SectionIndexTitles, sectionForSectionIndexTitle: SectionForSectionIndexTitle)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/animationconfiguration","type":"property","title":"var animationConfiguration: AnimationConfiguration"},{"path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/decideviewtransition-swift.property","type":"property","title":"var decideViewTransition: DecideViewTransition"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/tableview(_:observedevent:)","type":"method","title":"func tableView(UITableView, observedEvent: Event<Element>)"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/decideviewtransition-swift.typealias","type":"typealias","title":"RxTableViewSectionedAnimatedDataSource.DecideViewTransition"},{"path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/element","type":"typealias","title":"RxTableViewSectionedAnimatedDataSource.Element"}],"path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource","title":"RxTableViewSectionedAnimatedDataSource"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tableView(UITableView, observedEvent: Event<Element>)","type":"method","path":"\/documentation\/tripkitui\/rxtableviewsectionedreloaddatasource\/tableview(_:observedevent:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxTableViewSectionedReloadDataSource.Element","type":"typealias","path":"\/documentation\/tripkitui\/rxtableviewsectionedreloaddatasource\/element"}],"path":"\/documentation\/tripkitui\/rxtableviewsectionedreloaddatasource","title":"RxTableViewSectionedReloadDataSource"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int"},{"type":"method","path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/setalerts(_:)","title":"func setAlerts([TKAPI.Alert])"},{"type":"method","path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell"},{"type":"method","path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int"},{"type":"method","path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/viewdidload()","title":"func viewDidLoad()"},{"type":"method","path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)"}],"path":"\/documentation\/tripkitui\/tkuialertviewcontroller","title":"TKUIAlertViewController"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(for: MKAnnotation, in: MKMapView)","path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/init(for:in:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let annotation: MKAnnotation","path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/annotation","type":"property"},{"title":"let mapView: MKMapView","path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/mapview","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func build() -> MKAnnotationView?","path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/build()","type":"method"},{"title":"func enableClustering(Bool) -> TKUIAnnotationViewBuilder","path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/enableclustering(_:)","type":"method"},{"title":"func preferMarker(Bool) -> TKUIAnnotationViewBuilder","path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/prefermarker(_:)","type":"method"},{"title":"func withHeading(CLLocationDirection) -> TKUIAnnotationViewBuilder","path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/withheading(_:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func update(annotationView: MKAnnotationView, forHeading: CLLocationDirection)","path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/update(annotationview:forheading:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder","title":"TKUIAnnotationViewBuilder"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/init(attributions:)","title":"init(attributions: [TKAPI.DataAttribution])"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/attributions","title":"var attributions: [TKAPI.DataAttribution]"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/tableview(_:accessorybuttontappedforrowwith:)","title":"func tableView(UITableView, accessoryButtonTappedForRowWith: IndexPath)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/viewdidload()","title":"func viewDidLoad()"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/presentattributionhandler","title":"static var presentAttributionHandler: ((TKUIAttributionTableViewController, URL) -> Void)?"}],"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller","title":"TKUIAttributionTableViewController"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/init(contentalignment:)","title":"init(contentAlignment: Alignment)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/contentalignment","title":"var contentAlignment: Alignment","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/logo","title":"var logo: UIImageView!","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.property","title":"var style: Style","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/title","title":"var title: UILabel!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/newview(_:wording:fitsin:alignment:)","title":"static func newView(TKAPI.DataAttribution, wording: Wording, fitsIn: UIView?, alignment: Alignment) -> TKUIAttributionView","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/newview(_:wording:fitsin:alignment:style:)","title":"static func newView([TKAPI.DataAttribution], wording: Wording, fitsIn: UIView?, alignment: Alignment, style: Style) -> TKUIAttributionView?","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/newview(title:icon:iconurl:url:alignment:wording:style:)","title":"static func newView(title: String, icon: UIImage?, iconURL: URL?, url: URL?, alignment: Alignment, wording: Wording, style: Style) -> TKUIAttributionView","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case center","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/center","type":"case"},{"title":"case leading","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/leading","type":"case"},{"title":"case trailing","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/trailing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/equatable-implementations","type":"symbol"}],"path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment","title":"TKUIAttributionView.Alignment","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case mapAnnotation","path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum\/mapannotation"},{"type":"case","title":"case regular","path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum\/regular"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum\/!=(_:_:)","type":"op"}]}],"path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum","title":"TKUIAttributionView.Style","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case dataProvidedBy","path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/dataprovidedby"},{"type":"case","title":"case mapBy","path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/mapby"},{"type":"case","title":"case poweredBy","path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/poweredby"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/!=(_:_:)"}],"path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/equatable-implementations"}],"path":"\/documentation\/tripkitui\/tkuiattributionview\/wording","title":"TKUIAttributionView.Wording","type":"enum"}],"path":"\/documentation\/tripkitui\/tkuiattributionview","title":"TKUIAttributionView"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(annotation: MKAnnotation?, drawLarge: Bool, reuseIdentifier: String?)","path":"\/documentation\/tripkitui\/tkuicircleannotationview\/init(annotation:drawlarge:reuseidentifier:)","type":"init"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuicircleannotationview\/init(coder:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var borderColor: UIColor?","path":"\/documentation\/tripkitui\/tkuicircleannotationview\/bordercolor","type":"property"},{"title":"var circleColor: UIColor?","path":"\/documentation\/tripkitui\/tkuicircleannotationview\/circlecolor","type":"property"},{"title":"var isFaded: Bool","path":"\/documentation\/tripkitui\/tkuicircleannotationview\/isfaded","type":"property"},{"title":"let isLarge: Bool","path":"\/documentation\/tripkitui\/tkuicircleannotationview\/islarge","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(CGRect)","path":"\/documentation\/tripkitui\/tkuicircleannotationview\/draw(_:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuicircleannotationview","title":"TKUICircleAnnotationView"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(composing: TKUIMapManager, onTopOf: TGMapManager)","path":"\/documentation\/tripkitui\/tkuicomposingmapmanager\/init(composing:ontopof:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func cleanUp(MKMapView, animated: Bool)","path":"\/documentation\/tripkitui\/tkuicomposingmapmanager\/cleanup(_:animated:)"},{"type":"method","title":"func takeCharge(of: MKMapView, animated: Bool)","path":"\/documentation\/tripkitui\/tkuicomposingmapmanager\/takecharge(of:animated:)"}],"path":"\/documentation\/tripkitui\/tkuicomposingmapmanager","title":"TKUIComposingMapManager"},{"type":"class","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewcontroller\/build(selection:timezone:items:minimumdate:maximumdate:onconfirm:)","type":"method","title":"static func build(selection: TKUIDateTimePickerViewModel.Selection, timeZone: TimeZone, items: [TKUIDateTimePickerViewModel.ToggleItem], minimumDate: Date?, maximumDate: Date?, onConfirm: (TKUIDateTimePickerViewModel.Selection) -> Void) -> TKUIDateTimePickerViewController"}],"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewcontroller","title":"TKUIDateTimePickerViewController"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKUIDateTimePickerViewModel.ToggleItem","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(name: String, isSelected: Bool)","path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/toggleitem\/init(name:isselected:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/toggleitem\/id","type":"property"}],"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/toggleitem"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKUIDateTimePickerViewModel.Selection","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case dateTime(Date)","path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/selection\/datetime(_:)","type":"case"},{"title":"case special(String)","path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/selection\/special(_:)","type":"case"}],"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/selection"},{"title":"Default Implementations","type":"groupMarker"},{"title":"ObservableObject Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectWillChange: ObservableObjectPublisher","type":"property","path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/objectwillchange"}],"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/observableobject-implementations"}],"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel","title":"TKUIDateTimePickerViewModel"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/init()"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cardIdentifier(for: TKSegment) -> String?","type":"method","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/cardidentifier(for:)"},{"title":"func cards(for: TKSegment, mapManager: TKUITripMapManager) -> [(TGCard, TKUISegmentMode)]","type":"method","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/cards(for:mapmanager:)"},{"title":"func cleanUp(existingCards: [TGCard])","type":"method","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/cleanup(existingcards:)"},{"title":"func shouldUpdate(trip: Trip, counter: Int) -> Bool","type":"method","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/shouldupdate(trip:counter:)"}],"path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder","title":"TKUIDefaultPageBuilder"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(annotation: MKAnnotation?, reuseIdentifier: String?)","path":"\/documentation\/tripkitui\/tkuiimageannotationview\/init(annotation:reuseidentifier:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var annotation: MKAnnotation?","path":"\/documentation\/tripkitui\/tkuiimageannotationview\/annotation","type":"property"}],"path":"\/documentation\/tripkitui\/tkuiimageannotationview","title":"TKUIImageAnnotationView"},{"type":"class","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var actionFactory: ((TKNamedCoordinate) -> [Action])?","path":"\/documentation\/tripkitui\/tkuilocationcard\/configuration\/actionfactory"}],"title":"TKUILocationCard.Configuration","path":"\/documentation\/tripkitui\/tkuilocationcard\/configuration"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(for: TKNamedCoordinate, routeButton: TKUILocationInfo.RouteButton)","path":"\/documentation\/tripkitui\/tkuilocationcard\/init(for:routebutton:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func didBuild(tableView: UITableView)","path":"\/documentation\/tripkitui\/tkuilocationcard\/didbuild(tableview:)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKUILocationCard.Action","path":"\/documentation\/tripkitui\/tkuilocationcard\/action"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var config: TKUILocationCard.Configuration","path":"\/documentation\/tripkitui\/tkuilocationcard\/config"}],"path":"\/documentation\/tripkitui\/tkuilocationcard","title":"TKUILocationCard"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuilocationmapmanager\/init(for:)","title":"init(for: TKNamedCoordinate)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuilocationmapmanager\/takecharge(of:animated:)","title":"func takeCharge(of: MKMapView, animated: Bool)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuilocationmapmanager","title":"TKUILocationMapManager"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/tkuimodeannotationview\/init(annotation:reuseidentifier:)","title":"init(annotation: MKAnnotation?, reuseIdentifier: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuimodeannotationview\/annotation","title":"var annotation: MKAnnotation?"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuimodeannotationview\/defaultsize","title":"static let defaultSize: CGSize"}],"path":"\/documentation\/tripkitui\/tkuimodeannotationview","title":"TKUIModeAnnotationView"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/tripkitui\/tkuimodepicker\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var containerView: UIView?","path":"\/documentation\/tripkitui\/tkuimodepicker\/containerview","type":"property"},{"title":"var isEnabled: Bool","path":"\/documentation\/tripkitui\/tkuimodepicker\/isenabled","type":"property"},{"title":"var rx_pickedModes: Signal<Set<Item>>","path":"\/documentation\/tripkitui\/tkuimodepicker\/rx_pickedmodes","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func configure(all: [Item], updateAll: Bool, currentlyEnabled: (Item) -> Bool)","path":"\/documentation\/tripkitui\/tkuimodepicker\/configure(all:updateall:currentlyenabled:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuimodepicker","title":"TKUIModePicker"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var nearbyItem: TKUINearbyViewModel.Item?","path":"\/documentation\/tripkitui\/tkuinearbycell\/nearbyitem","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/tripkitui\/tkuinearbycell\/awakefromnib()","type":"method"},{"title":"func prepareForReuse()","path":"\/documentation\/tripkitui\/tkuinearbycell\/prepareforreuse()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var nib: UINib","path":"\/documentation\/tripkitui\/tkuinearbycell\/nib","type":"property"},{"title":"static var reuseIdentifier: String","path":"\/documentation\/tripkitui\/tkuinearbycell\/reuseidentifier","type":"property"}],"path":"\/documentation\/tripkitui\/tkuinearbycell","title":"TKUINearbyCell"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(defaultMapRect: MKMapRect)","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/init(defaultmaprect:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var mapCenter: Driver<CLLocationCoordinate2D?>","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapcenter"},{"type":"property","title":"var mapRect: Driver<MKMapRect>","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/maprect"},{"type":"property","title":"var mapSelection: Signal<TKUIIdentifiableAnnotation?>","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapselection"},{"type":"property","title":"var searchResult: MKAnnotation?","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/searchresult"},{"type":"property","title":"var viewModel: TKUINearbyViewModel?","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/viewmodel"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func cleanUp(MKMapView, animated: Bool)","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/cleanup(_:animated:)"},{"type":"method","title":"func mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapview(_:didchange:animated:)"},{"type":"method","title":"func mapView(MKMapView, didSelect: MKAnnotationView)","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapview(_:didselect:)"},{"type":"method","title":"func mapView(MKMapView, regionDidChangeAnimated: Bool)","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapview(_:regiondidchangeanimated:)"},{"type":"method","title":"func takeCharge(of: MKMapView, animated: Bool)","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/takecharge(of:animated:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"TKUICompatibleHomeMapManager Implementations","path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/tkuicompatiblehomemapmanager-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/nextfrommap","type":"property","title":"var nextFromMap: Observable<TKUIHomeCard.ComponentAction>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/onhomecardappearance(_:)","type":"method","title":"func onHomeCardAppearance(Bool)"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/select(_:)","type":"method","title":"func select(MKAnnotation)"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/zoom(to:animated:)","type":"method","title":"func zoom(to: TKRegion.City, animated: Bool)"}]}],"path":"\/documentation\/tripkitui\/tkuinearbymapmanager","title":"TKUINearbyMapManager"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let distance: Driver<CLLocationDistance?>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/distance","type":"property"},{"title":"let heading: Driver<CLLocationDirection?>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/heading","type":"property"},{"title":"let identifier: String","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/identifier","type":"property"},{"title":"var mapAnnotation: TKUIIdentifiableAnnotation?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/mapannotation","type":"property"},{"title":"let modeCoordinate: TKModeCoordinate","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/modecoordinate","type":"property"},{"title":"let providerIcon: UIImage?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/providericon","type":"property"},{"title":"let providerIconURL: URL?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/providericonurl","type":"property"},{"title":"let subtitle: Driver<String?>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/subtitle","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/title","type":"property"},{"title":"let vehicle: TKAPI.SharedVehicleInfo?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/vehicle","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/==(_:_:)","title":"static func == (TKUINearbyViewModel.Item, TKUINearbyViewModel.Item) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/identifiabletype-implementations","children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/identity-swift.typealias","title":"TKUINearbyViewModel.Item.Identity","type":"typealias"}],"type":"symbol","title":"IdentifiableType Implementations"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/tkuihomecomponentitem-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var canEdit: Bool","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/canedit","type":"property"},{"title":"var equalityToken: String","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/equalitytoken","type":"property"},{"title":"var identity: Identity","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/identity-swift.property","type":"property"},{"title":"var isAction: Bool","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/isaction","type":"property"}],"type":"symbol","title":"TKUIHomeComponentItem Implementations"}],"title":"TKUINearbyViewModel.Item","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(pickedModes: Signal<Set<TKModeInfo>>, selection: Signal<TKUINearbyViewModel.Item>, searchResult: Driver<MKAnnotation>)","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput\/init(pickedmodes:selection:searchresult:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let pickedModes: Signal<Set<TKModeInfo>>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput\/pickedmodes","type":"property"},{"title":"let searchResult: Driver<MKAnnotation>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput\/searchresult","type":"property"},{"title":"let selection: Signal<TKUINearbyViewModel.Item>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput\/selection","type":"property"}],"title":"TKUINearbyViewModel.ListInput","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput\/init(maprect:selection:focus:)","title":"init(mapRect: Driver<MKMapRect>, selection: Signal<TKUIIdentifiableAnnotation?>, focus: Signal<MKAnnotation?>)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput\/focus","title":"let focus: Signal<MKAnnotation?>","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput\/maprect","title":"let mapRect: Driver<MKMapRect>","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput\/selection","title":"let selection: Signal<TKUIIdentifiableAnnotation?>","type":"property"}],"title":"TKUINearbyViewModel.MapInput","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var header: String","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/header"},{"title":"var items: [Item]","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/items"},{"title":"Default Implementations","type":"groupMarker"},{"title":"IdentifiableType Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var identity: Identity","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/identity-swift.property","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUINearbyViewModel.Section.Identity","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/identity-swift.typealias","type":"typealias"}],"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/identifiabletype-implementations"},{"title":"SectionModelType Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(original: TKUINearbyViewModel.Section, items: [Item])","type":"init","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/init(original:items:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUINearbyViewModel.Section.Item","type":"typealias","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/item"}],"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/sectionmodeltype-implementations"}],"title":"TKUINearbyViewModel.Section","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(limitTo: String?, strictModeMatch: Bool, fixedLocation: MKAnnotation?, selectedLocationID: String?, cardInput: ListInput, mapInput: MapInput)","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/init(limitto:strictmodematch:fixedlocation:selectedlocationid:cardinput:mapinput:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let availableModes: Driver<[TKModeInfo]>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/availablemodes","type":"property"},{"title":"let error: Driver<Error>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/error","type":"property"},{"title":"let fixedLocation: MKAnnotation?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/fixedlocation","type":"property"},{"title":"let limitToMode: String?","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/limittomode"},{"title":"let mapAnnotationToSelect: Signal<TKUIIdentifiableAnnotation>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapannotationtoselect"},{"title":"let mapAnnotations: Driver<[TKUIIdentifiableAnnotation]>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapannotations"},{"title":"let mapOverlays: Driver<[MKOverlay]>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapoverlays"},{"title":"let next: Signal<Next>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/next-swift.property"},{"title":"let searchResultToShow: Driver<MKAnnotation?>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/searchresulttoshow"},{"title":"let sections: Driver<[Section]>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/sections"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case location(TKModeCoordinate)","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/next-swift.enum\/location(_:)"},{"type":"case","title":"case stop(TKUIStopAnnotation)","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/next-swift.enum\/stop(_:)"}],"title":"TKUINearbyViewModel.Next","type":"enum","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/next-swift.enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var customizerItem: TKUIHomeCardCustomizerItem?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/customizeritem","type":"property"},{"title":"var homeCardSection: Driver<TKUIHomeComponentContent>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/homecardsection","type":"property"},{"title":"var identity: String","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/identity","type":"property"},{"title":"var nextAction: Signal<TKUIHomeCard.ComponentAction>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/nextaction","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cell(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UITableViewCell?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/cell(for:at:in:)","type":"method"},{"title":"func contextMenuConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UIContextMenuConfiguration?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/contextmenuconfiguration(for:at:in:)","type":"method"},{"title":"func leadingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/leadingswipeactionsconfiguration(for:at:in:)","type":"method"},{"title":"func registerCell(with: UITableView)","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/registercell(with:)","type":"method"},{"title":"func trailingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/trailingswipeactionsconfiguration(for:at:in:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func buildInstance(from: TKUIHomeComponentInput) -> Self","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/buildinstance(from:)","type":"method"}],"title":"TKUIHomeComponentViewModel Implementations","type":"symbol","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/tkuihomecomponentviewmodel-implementations"}],"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel","title":"TKUINearbyViewModel"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinotificationmanager\/delegate","title":"var delegate: TKUINotificationManagerDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinotificationmanager\/clearallrequests()","title":"func clearAllRequests()","type":"method"},{"path":"\/documentation\/tripkitui\/tkuinotificationmanager\/clearrequests(of:)","title":"func clearRequests(of: TKUINotificationSubscription.Context)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuinotificationmanager\/getrequests(from:)","title":"func getRequests(from: TKUINotificationSubscription.Context) -> [UNNotificationRequest]","type":"method"},{"path":"\/documentation\/tripkitui\/tkuinotificationmanager\/issubscribed(to:)","title":"func isSubscribed(to: TKUINotificationSubscription.Context) -> Bool","type":"method"},{"path":"\/documentation\/tripkitui\/tkuinotificationmanager\/subscribe(to:updates:)","title":"func subscribe(to: TKUINotificationSubscription.Context, updates: ([UNNotificationRequest]) -> Void)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinotificationmanager\/shared","title":"static let shared: TKUINotificationManager","type":"property"}],"path":"\/documentation\/tripkitui\/tkuinotificationmanager","title":"TKUINotificationManager"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func add(request: UNNotificationRequest)","type":"method","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/add(request:)"},{"title":"func clearRequests()","type":"method","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/clearrequests()"},{"title":"func getRequests() -> [UNNotificationRequest]","type":"method","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/getrequests()"},{"title":"func isSubscribed() -> Bool","type":"method","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/issubscribed()"},{"title":"func subscribe(([UNNotificationRequest]) -> Void)","type":"method","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/subscribe(_:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKUINotificationSubscription.Context","type":"enum","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case pushNotifications","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/pushnotifications","type":"case"},{"title":"case tripAlerts","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/tripalerts","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var identifier: String","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/identifier","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/!=(_:_:)","type":"op"}],"type":"symbol"}]}],"path":"\/documentation\/tripkitui\/tkuinotificationsubscription","title":"TKUINotificationSubscription"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(polyline: MKPolyline)","type":"init","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/init(polyline:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: UIColor?","type":"property","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/backgroundcolor"},{"title":"var borderColor: UIColor","type":"property","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/bordercolor"},{"title":"var borderMultiplier: CGFloat","type":"property","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/bordermultiplier"},{"title":"var fillDashBackground: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/filldashbackground"},{"title":"var selectionIdentifier: String?","type":"property","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionidentifier"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func draw(MKMapRect, zoomScale: MKZoomScale, in: CGContext)","type":"method","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/draw(_:zoomscale:in:)"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode\/regularwithnormalcolor","title":"case regularWithNormalColor","type":"case"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode\/thickwithselectioncolor","title":"case thickWithSelectionColor","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}],"title":"TKUIPolylineRenderer.SelectionMode","type":"enum","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode"}],"path":"\/documentation\/tripkitui\/tkuipolylinerenderer","title":"TKUIPolylineRenderer"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func awakeFromNib()","path":"\/documentation\/tripkitui\/tkuiprogresscell\/awakefromnib()","type":"method"},{"title":"func prepareForReuse()","path":"\/documentation\/tripkitui\/tkuiprogresscell\/prepareforreuse()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let nib: UINib","path":"\/documentation\/tripkitui\/tkuiprogresscell\/nib","type":"property"},{"title":"static let reuseIdentifier: String","path":"\/documentation\/tripkitui\/tkuiprogresscell\/reuseidentifier","type":"property"}],"path":"\/documentation\/tripkitui\/tkuiprogresscell","title":"TKUIProgressCell"},{"type":"class","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var modeReplacementHandler: ((TKRegion, Set<String>, TripRequest) -> Single<Set<String>>)?","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/modereplacementhandler","type":"property"},{"title":"static var replacementHandler: (CLLocation) -> TKNamedCoordinate","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/replacementhandler","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func streamTrips(for: TripRequest, modes: Set<String>?, classifier: TKTripClassifier?, baseURL: URL?) -> Observable<Progress>","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/streamtrips(for:modes:classifier:baseurl:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case finished","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/finished"},{"type":"case","title":"case locating","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/locating"},{"type":"case","title":"case partial(completed: Int, total: Int)","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/partial(completed:total:)"},{"type":"case","title":"case started(total: Int)","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/started(total:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/!=(_:_:)","type":"op"}]}],"title":"TKUIResultsFetcher.Progress","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress","type":"enum"}],"path":"\/documentation\/tripkitui\/tkuiresultsfetcher","title":"TKUIResultsFetcher"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func viewDidAppear(Bool)","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/viewdidappear(_:)","type":"method"},{"title":"func viewDidLoad()","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/viewdidload()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func newInstance(region: TKRegion) -> TKUISectionedAlertViewController","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/newinstance(region:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)","type":"method"}],"title":"UIScrollViewDelegate Implementations","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/uiscrollviewdelegate-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func searchBar(UISearchBar, textDidChange: String)","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbar(_:textdidchange:)"},{"type":"method","title":"func searchBarCancelButtonClicked(UISearchBar)","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbarcancelbuttonclicked(_:)"},{"type":"method","title":"func searchBarSearchButtonClicked(UISearchBar)","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbarsearchbuttonclicked(_:)"},{"type":"method","title":"func searchBarTextDidBeginEditing(UISearchBar)","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbartextdidbeginediting(_:)"},{"type":"method","title":"func searchBarTextDidEndEditing(UISearchBar)","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbartextdidendediting(_:)"}],"title":"UISearchBarDelegate Implementations","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/uisearchbardelegate-implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/tableview(_:viewforheaderinsection:)","type":"method"}],"title":"UITableViewDelegate Implementations","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/uitableviewdelegate-implementations","type":"symbol"}],"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller","title":"TKUISectionedAlertViewController"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKUISegmentDirectionsCard.Configuration","type":"struct","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/configuration","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var actionFactory: ((TKSegment) -> [Action])?","type":"property","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/configuration\/actionfactory"}]},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/didappear(animated:)"},{"title":"func didBuild(tableView: UITableView)","type":"method","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/didbuild(tableview:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUISegmentDirectionsCard.Action","type":"typealias","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/action"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: TKUISegmentDirectionsCard.Configuration","type":"property","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/config"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func canShowInstructions(for: TKSegment) -> Bool","type":"method","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/canshowinstructions(for:)"}],"path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard","title":"TKUISegmentDirectionsCard"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(for: TKSegment, mapManager: TKUITripMapManager)","path":"\/documentation\/tripkitui\/tkuisegmentinstructioncard\/init(for:mapmanager:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func didBuild(cardView: TGCardView?, headerView: TGHeaderView?)","path":"\/documentation\/tripkitui\/tkuisegmentinstructioncard\/didbuild(cardview:headerview:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func hasContent(for: TKSegment) -> Bool","path":"\/documentation\/tripkitui\/tkuisegmentinstructioncard\/hascontent(for:)"}],"path":"\/documentation\/tripkitui\/tkuisegmentinstructioncard","title":"TKUISegmentInstructionCard"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/dismissbutton","title":"var dismissButton: UIButton!","type":"property"},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/preferredview","title":"var preferredView: UIView?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/applystyletoclosebutton(_:)","title":"func applyStyleToCloseButton(TGCardStyle)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/configure(for:preferredtitle:showsubtitle:mode:)","title":"func configure(for: TKSegment, preferredTitle: String?, showSubtitle: Bool, mode: TKUISegmentMode)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/setcustomactions(_:for:card:)","title":"func setCustomActions([TKUISegmentTitleView.Action], for: TKSegment, card: TGCard)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/action","title":"TKUISegmentTitleView.Action","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/newinstance()","title":"static func newInstance() -> TKUISegmentTitleView","type":"method"}],"path":"\/documentation\/tripkitui\/tkuisegmenttitleview","title":"TKUISegmentTitleView"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/init(annotation:reuseidentifier:)","type":"init","title":"init(annotation: MKAnnotation?, reuseIdentifier: String?)"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/init(annotation:reuseidentifier:withheading:)","type":"init","title":"init(annotation: MKAnnotation?, reuseIdentifier: String?, withHeading: CLLocationDirection)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/annotation","type":"property","title":"var annotation: MKAnnotation?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/prepareforreuse()","type":"method","title":"func prepareForReuse()"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/update(for:)","type":"method","title":"func update(for: MKAnnotation?)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/customheadimage","type":"property","title":"static var customHeadImage: UIImage?"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/customheadtintcolor","type":"property","title":"static var customHeadTintColor: UIColor?"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/custompointerimage","type":"property","title":"static var customPointerImage: UIImage?"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside","type":"enum","title":"TKUISemaphoreView.LabelSide","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/onleft","type":"case","title":"case onLeft"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/onright","type":"case","title":"case onRight"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/defaultdirection","type":"property","title":"static var defaultDirection: LabelSide"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode","type":"enum","title":"TKUISemaphoreView.Mode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case headOnly","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/headonly","type":"case"},{"title":"case headWithFrequency(minutes: Int)","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/headwithfrequency(minutes:)","type":"case"},{"title":"case headWithTime(Date, TimeZone, isRealTime: Bool)","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/headwithtime(_:_:isrealtime:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/equatable-implementations","type":"symbol"}]}],"path":"\/documentation\/tripkitui\/tkuisemaphoreview","title":"TKUISemaphoreView"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/tripkitui\/tkuisheet\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/tripkitui\/tkuisheet\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isBeingOverlaid: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuisheet\/isbeingoverlaid"},{"title":"var overlayColor: UIColor","type":"property","path":"\/documentation\/tripkitui\/tkuisheet\/overlaycolor"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func removeOverlay(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuisheet\/removeoverlay(animated:)"},{"title":"func showWithOverlay(in: UIView, below: UIView?, hiding: [UIView], onDismiss: (() -> Void)?)","type":"method","path":"\/documentation\/tripkitui\/tkuisheet\/showwithoverlay(in:below:hiding:ondismiss:)"}],"path":"\/documentation\/tripkitui\/tkuisheet","title":"TKUISheet"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(sheet: TKUISheet)","type":"init","path":"\/documentation\/tripkitui\/tkuisheetviewcontroller\/init(sheet:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var preferredContentSize: CGSize","type":"property","path":"\/documentation\/tripkitui\/tkuisheetviewcontroller\/preferredcontentsize"},{"title":"var sheet: TKUISheet?","type":"property","path":"\/documentation\/tripkitui\/tkuisheetviewcontroller\/sheet"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func viewDidDisappear(Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuisheetviewcontroller\/viewdiddisappear(_:)"}],"path":"\/documentation\/tripkitui\/tkuisheetviewcontroller","title":"TKUISheetViewController"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuistyledlabel\/init(coder:)","type":"init"},{"title":"init(frame: CGRect)","path":"\/documentation\/tripkitui\/tkuistyledlabel\/init(frame:)","type":"init"}],"path":"\/documentation\/tripkitui\/tkuistyledlabel","title":"TKUIStyledLabel"},{"type":"class","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitablecard\/didbuild(tableview:)","title":"func didBuild(tableView: UITableView)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitablecard\/selectedindex(in:)","title":"func selectedIndex(in: UITableView) -> Signal<IndexPath>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitablecard\/selecteditem(in:datasource:)","title":"func selectedItem<Item, Section>(in: UITableView, dataSource: TableViewSectionedDataSource<Section>) -> Signal<Item>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitablecard\/selecteditemwithsender(in:datasource:)","title":"func selectedItemWithSender<Item, Section>(in: UITableView, dataSource: TableViewSectionedDataSource<Section>) -> Signal<(Item, sender: Any?)>"}],"path":"\/documentation\/tripkitui\/tkuitablecard","title":"TKUITableCard"},{"type":"class","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration","title":"TKUITimePickerSheet.Configuration","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowsASAP: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/allowsasap"},{"title":"var allowsOutOfRangeSelection: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/allowsoutofrangeselection"},{"title":"var arriveByLabel: String","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/arrivebylabel"},{"title":"var incrementInterval: Int","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/incrementinterval"},{"title":"var leaveAtLabel: String","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/leaveatlabel"},{"title":"var maximumDate: Date?","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/maximumdate"},{"title":"var minimumDate: Date?","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/minimumdate"},{"title":"var removeDateLimits: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/removedatelimits"},{"title":"var style: Style","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/style"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: TKUITimePickerSheet.Configuration","type":"property","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/default"}]},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarbuilder","title":"TKUITimePickerSheet.ToolbarBuilder","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarbuilder\/init(elements:accessibilityelements:)","type":"init","title":"init(elements: [TKUITimePickerSheet.ToolbarElement], accessibilityElements: [TKUITimePickerSheet.ToolbarElement])"}]},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/init(date:timezone:toolbarbuilder:config:)","title":"init(date: Date, timeZone: TimeZone, toolbarBuilder: ToolbarBuilder?, config: Configuration)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/init(time:timetype:timezone:toolbarbuilder:config:)","title":"init(time: Date, timeType: TKTimeType, timeZone: TimeZone, toolbarBuilder: ToolbarBuilder?, config: Configuration)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/delegate","title":"var delegate: TKUITimePickerSheetDelegate?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectaction","title":"var selectAction: (TKTimeType, Date) -> Void","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selecteddate","title":"var selectedDate: Date","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectedtimetype","title":"var selectedTimeType: TKTimeType","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatedelegate","title":"var selectionStateDelegate: TKUITimePickerSheetSelectionStateDelegate?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.property","title":"var selectionStatus: SelectionStatus","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/tappedoverlay(_:)","title":"func tappedOverlay(Any)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/updatespecialselectionstate(with:)","title":"func updateSpecialSelectionState(with: String)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum","title":"TKUITimePickerSheet.SelectionStatus","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case above","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum\/above","type":"case"},{"title":"case below","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum\/below","type":"case"},{"title":"case special(String)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum\/special(_:)","type":"case"},{"title":"case valid(Date)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum\/valid(_:)","type":"case"}]},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style","title":"TKUITimePickerSheet.Style","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case embed","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style\/embed"},{"type":"case","title":"case sheet","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style\/sheet"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style\/equatable-implementations"}]},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarelement","title":"TKUITimePickerSheet.ToolbarElement","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case button(title: String, tint: UIColor?, isSelector: Bool, handler: (Date) -> Void)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarelement\/button(title:tint:isselector:handler:)","type":"case"},{"title":"case picker","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarelement\/picker","type":"case"},{"title":"case spacer","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarelement\/spacer","type":"case"}]}],"path":"\/documentation\/tripkitui\/tkuitimepickersheet","title":"TKUITimePickerSheet"},{"type":"class","children":[{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/item","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/item\/init(title:color:)","title":"init(title: String, color: UIColor)","type":"init"}],"title":"TKUITimePickerViewController.Item"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/init(time:timezone:items:config:onselection:)","type":"init","title":"init(time: Date, timeZone: TimeZone, items: [Item], config: TKUITimePickerSheet.Configuration, onSelection: (TKUITimePickerSheet.SelectionStatus) -> Void)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/viewdidload()","type":"method","title":"func viewDidLoad()"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/tkuitimepickersheetselectionstatedelegate-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/timepicker(_:statuschanged:)","title":"func timePicker(TKUITimePickerSheet, statusChanged: TKUITimePickerSheet.SelectionStatus)"}],"title":"TKUITimePickerSheetSelectionStateDelegate Implementations"}],"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller","title":"TKUITimePickerViewController"},{"type":"class","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var actionButton: UIButton!","type":"property","path":"\/documentation\/tripkitui\/tkuitripboyview\/actionbutton"},{"title":"var retryButton: UIButton!","type":"property","path":"\/documentation\/tripkitui\/tkuitripboyview\/retrybutton"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func configure(title: String?, description: String?, actionTitle: String?, isHappy: Bool, allowRetry: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitripboyview\/configure(title:description:actiontitle:ishappy:allowretry:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func addTopPadding(CGFloat, from: UIView)","type":"method","path":"\/documentation\/tripkitui\/tkuitripboyview\/addtoppadding(_:from:)"},{"title":"static func clear(from: UIView)","type":"method","path":"\/documentation\/tripkitui\/tkuitripboyview\/clear(from:)"},{"title":"static func newInstance() -> TKUITripBoyView","type":"method","path":"\/documentation\/tripkitui\/tkuitripboyview\/newinstance()"},{"title":"static func show(error: Error, title: String?, in: UIView, aboveSubview: UIView?, topPadding: CGFloat, actionTitle: String?) -> TKUITripBoyView","type":"method","path":"\/documentation\/tripkitui\/tkuitripboyview\/show(error:title:in:abovesubview:toppadding:actiontitle:)"}],"path":"\/documentation\/tripkitui\/tkuitripboyview","title":"TKUITripBoyView"},{"type":"class","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/configure(_:allowfading:isarrivebefore:preferredcontentsizecategory:)","title":"func configure(Trip, allowFading: Bool, isArriveBefore: Bool?, preferredContentSizeCategory: UIContentSizeCategory)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/sethighlighted(_:animated:)","title":"func setHighlighted(Bool, animated: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/setselected(_:animated:)","title":"func setSelected(Bool, animated: Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/nib","title":"static let nib: UINib","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/reuseidentifier","title":"static let reuseIdentifier: String","type":"property"}],"path":"\/documentation\/tripkitui\/tkuitripcell","title":"TKUITripCell"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(trip: Trip)","type":"init","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/init(trip:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var annotationsToZoomToOnTakingCharge: [MKAnnotation]","type":"property","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/annotationstozoomtoontakingcharge"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cleanUp(MKMapView, animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/cleanup(_:animated:)"},{"title":"func deselectSegment(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/deselectsegment(animated:)"},{"title":"func mapView(MKMapView, didAdd: [MKAnnotationView])","type":"method","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/mapview(_:didadd:)"},{"title":"func refresh(with: Trip)","type":"method","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/refresh(with:)"},{"title":"func show(TKSegment, animated: Bool, mode: TKUISegmentMode)","type":"method","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/show(_:animated:mode:)"},{"title":"func showTrip(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/showtrip(animated:)"},{"title":"func takeCharge(of: MKMapView, animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/takecharge(of:animated:)"}],"path":"\/documentation\/tripkitui\/tkuitripmapmanager","title":"TKUITripMapManager"},{"type":"class","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"TKUITripMonitorManager.GeofenceMatch","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch\/notification","type":"property","title":"let notification: TKAPI.TripNotification"},{"path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch\/segment","type":"property","title":"let segment: TKSegment"},{"path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch\/trip","type":"property","title":"let trip: Trip"}]},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func match(geofenceID: String) -> GeofenceMatch?","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/match(geofenceid:)"},{"type":"method","title":"func monitorRegions(from: Trip, includeTimeToLeaveNotification: Bool) async throws","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/monitorregions(from:includetimetoleavenotification:)"},{"type":"method","title":"func stopMonitoring() async","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/stopmonitoring()"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: TKUITripMonitorManager","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/shared"},{"type":"property","title":"static let tripNotificationCategoryIdentifier: String","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/tripnotificationcategoryidentifier"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"ObservableObject Implementations","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/observableobject-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectWillChange: ObservableObjectPublisher","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/objectwillchange","type":"property"}]}],"path":"\/documentation\/tripkitui\/tkuitripmonitormanager","title":"TKUITripMonitorManager"},{"type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/init(coder:)"},{"type":"init","title":"init(frame: CGRect)","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/init(frame:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var allowBicycleAccessibilityIcon: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/allowbicycleaccessibilityicon"},{"type":"property","title":"var allowWheelchairIcon: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/allowwheelchairicon"},{"type":"property","title":"var colorCodingTransitIcon: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/colorcodingtransiticon"},{"type":"property","title":"var darkTextColor: UIColor","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/darktextcolor"},{"type":"property","title":"var intrinsicContentSize: CGSize","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/intrinsiccontentsize"},{"type":"property","title":"var isCanceled: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/iscanceled"},{"type":"property","title":"var lightTextColor: UIColor","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/lighttextcolor"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func configure([TKUITripSegmentDisplayable], allowSubtitles: Bool, allowInfoIcons: Bool)","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/configure(_:allowsubtitles:allowinfoicons:)","type":"method"},{"title":"func layoutSubviews()","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/layoutsubviews()","type":"method"},{"title":"func segmentIndex(atX: CGFloat) -> Int","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/segmentindex(atx:)","type":"method"},{"title":"func selectSegment(atIndex: Int)","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/selectsegment(atindex:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentsview","title":"TKUITripSegmentsView"},{"type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(configureCell: ConfigureCell, titleForHeaderInSection: TitleForHeaderInSection, titleForFooterInSection: TitleForFooterInSection, canEditRowAtIndexPath: CanEditRowAtIndexPath, canMoveRowAtIndexPath: CanMoveRowAtIndexPath, sectionIndexTitles: SectionIndexTitles, sectionForSectionIndexTitle: SectionForSectionIndexTitle)","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/init(configurecell:titleforheaderinsection:titleforfooterinsection:caneditrowatindexpath:canmoverowatindexpath:sectionindextitles:sectionforsectionindextitle:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var canEditRowAtIndexPath: CanEditRowAtIndexPath","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/caneditrowatindexpath-swift.property"},{"type":"property","title":"var canMoveRowAtIndexPath: CanMoveRowAtIndexPath","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/canmoverowatindexpath-swift.property"},{"type":"property","title":"var configureCell: ConfigureCell","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/configurecell-swift.property"},{"type":"property","title":"var sectionForSectionIndexTitle: SectionForSectionIndexTitle","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionforsectionindextitle-swift.property"},{"type":"property","title":"var sectionIndexTitles: SectionIndexTitles","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionindextitles-swift.property"},{"type":"property","title":"var sectionModels: [Section]","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionmodels"},{"type":"property","title":"var titleForFooterInSection: TitleForFooterInSection","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/titleforfooterinsection-swift.property"},{"type":"property","title":"var titleForHeaderInSection: TitleForHeaderInSection","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/titleforheaderinsection-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func model(at: IndexPath) throws -> Any","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/model(at:)","type":"method"},{"title":"func numberOfSections(in: UITableView) -> Int","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/numberofsections(in:)","type":"method"},{"title":"func sectionIndexTitles(for: UITableView) -> [String]?","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionindextitles(for:)","type":"method"},{"title":"func setSections([Section])","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/setsections(_:)","type":"method"},{"title":"func tableView(UITableView, canEditRowAt: IndexPath) -> Bool","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:caneditrowat:)","type":"method"},{"title":"func tableView(UITableView, canMoveRowAt: IndexPath) -> Bool","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:canmoverowat:)","type":"method"},{"title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:cellforrowat:)","type":"method"},{"title":"func tableView(UITableView, moveRowAt: IndexPath, to: IndexPath)","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:moverowat:to:)","type":"method"},{"title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:numberofrowsinsection:)","type":"method"},{"title":"func tableView(UITableView, sectionForSectionIndexTitle: String, at: Int) -> Int","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:sectionforsectionindextitle:at:)","type":"method"},{"title":"func tableView(UITableView, titleForFooterInSection: Int) -> String?","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:titleforfooterinsection:)","type":"method"},{"title":"func tableView(UITableView, titleForHeaderInSection: Int) -> String?","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:titleforheaderinsection:)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(IndexPath) -> Item","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/subscript(_:)-5cd95","type":"subscript"},{"title":"subscript(Int) -> Section","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/subscript(_:)-8bj11","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TableViewSectionedDataSource.CanEditRowAtIndexPath","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/caneditrowatindexpath-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.CanMoveRowAtIndexPath","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/canmoverowatindexpath-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.ConfigureCell","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/configurecell-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.Item","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/item","type":"typealias"},{"title":"TableViewSectionedDataSource.SectionForSectionIndexTitle","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionforsectionindextitle-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.SectionIndexTitles","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionindextitles-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.SectionModelSnapshot","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionmodelsnapshot","type":"typealias"},{"title":"TableViewSectionedDataSource.TitleForFooterInSection","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/titleforfooterinsection-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.TitleForHeaderInSection","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/titleforheaderinsection-swift.typealias","type":"typealias"}],"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource","title":"TableViewSectionedDataSource"},{"type":"groupMarker","title":"Protocols"},{"type":"protocol","path":"\/documentation\/tripkitui\/animatablesectionmodeltype","title":"AnimatableSectionModelType"},{"type":"protocol","children":[{"title":"Associated Types","type":"groupMarker"},{"title":"Output","type":"associatedtype","path":"\/documentation\/tripkitui\/anyobserverconvertible\/output"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func asAnyObserver() -> AnyObserver<Output>","type":"method","path":"\/documentation\/tripkitui\/anyobserverconvertible\/asanyobserver()","children":[{"title":"AnyObserverConvertible Implementations","children":[{"title":"func asAnyObserver() -> AnyObserver<Output>","path":"\/documentation\/tripkitui\/anyobserverconvertible\/asanyobserver()-95p1y","type":"method"}],"type":"groupMarker"}]}],"path":"\/documentation\/tripkitui\/anyobserverconvertible","title":"AnyObserverConvertible"},{"type":"protocol","children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/identifiabletype\/identity-swift.associatedtype","title":"Identity","type":"associatedtype"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/identifiabletype\/identity-swift.property","title":"var identity: Identity","type":"property"}],"path":"\/documentation\/tripkitui\/identifiabletype","title":"IdentifiableType"},{"type":"protocol","children":[{"title":"Associated Types","type":"groupMarker"},{"title":"Item","path":"\/documentation\/tripkitui\/sectionmodeltype\/item","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"title":"init(original: Self, items: [Item])","path":"\/documentation\/tripkitui\/sectionmodeltype\/init(original:items:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var items: [Item]","path":"\/documentation\/tripkitui\/sectionmodeltype\/items","type":"property"}],"path":"\/documentation\/tripkitui\/sectionmodeltype","title":"SectionModelType"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/batchupdates(_:animationconfiguration:)","title":"func batchUpdates<Section>(Changeset<Section>, animationConfiguration: AnimationConfiguration)"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/deleteitemsatindexpaths(_:animationstyle:)","title":"func deleteItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/deletesections(_:animationstyle:)","title":"func deleteSections([Int], animationStyle: UITableView.RowAnimation)"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/insertitemsatindexpaths(_:animationstyle:)","title":"func insertItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/insertsections(_:animationstyle:)","title":"func insertSections([Int], animationStyle: UITableView.RowAnimation)"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/moveitematindexpath(_:to:)","title":"func moveItemAtIndexPath(IndexPath, to: IndexPath)"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/movesection(_:to:)","title":"func moveSection(Int, to: Int)"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/reloaditemsatindexpaths(_:animationstyle:)","title":"func reloadItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)"},{"type":"method","path":"\/documentation\/tripkitui\/sectionedviewtype\/reloadsections(_:animationstyle:)","title":"func reloadSections([Int], animationStyle: UITableView.RowAnimation)"}],"path":"\/documentation\/tripkitui\/sectionedviewtype","title":"SectionedViewType"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicircledisplayable\/aslarge","title":"var asLarge: Bool"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicircledisplayable\/bordercolor","title":"var borderColor: UIColor?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicircledisplayable\/circlecolor","title":"var circleColor: UIColor"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicircledisplayable\/istravelled","title":"var isTravelled: Bool"}],"path":"\/documentation\/tripkitui\/tkuicircledisplayable","title":"TKUICircleDisplayable"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var mapRect: Driver<MKMapRect>","type":"property","path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/maprect"},{"title":"var nextFromMap: Observable<TKUIHomeCard.ComponentAction>","children":[{"children":[{"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/nextfrommap-l3op","title":"var nextFromMap: Observable<TKUIHomeCard.ComponentAction>","type":"property"}],"type":"groupMarker","title":"TKUICompatibleHomeMapManager Implementations"}],"type":"property","path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/nextfrommap"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func onHomeCardAppearance(Bool)","children":[{"type":"groupMarker","title":"TKUICompatibleHomeMapManager Implementations","children":[{"type":"method","title":"func onHomeCardAppearance(Bool)","path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/onhomecardappearance(_:)-4wefh"}]}],"type":"method","path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/onhomecardappearance(_:)"},{"title":"func select(MKAnnotation)","type":"method","path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/select(_:)"},{"title":"func zoom(to: TKRegion.City, animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/zoom(to:animated:)"}],"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager","title":"TKUICompatibleHomeMapManager"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func debugActionCopyPrimaryRequest(AnyObject?)","path":"\/documentation\/tripkitui\/tkuidebugactionhandler\/debugactioncopyprimaryrequest(_:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuidebugactionhandler","title":"TKUIDebugActionHandler"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var glyphColor: TKColor?","path":"\/documentation\/tripkitui\/tkuiglyphableannotation\/glyphcolor"},{"type":"property","title":"var glyphImage: TKImage?","path":"\/documentation\/tripkitui\/tkuiglyphableannotation\/glyphimage"},{"type":"property","title":"var glyphImageIsTemplate: Bool","path":"\/documentation\/tripkitui\/tkuiglyphableannotation\/glyphimageistemplate"},{"type":"property","title":"var glyphImageURL: URL?","path":"\/documentation\/tripkitui\/tkuiglyphableannotation\/glyphimageurl"}],"path":"\/documentation\/tripkitui\/tkuiglyphableannotation","title":"TKUIGlyphableAnnotation"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var identity: String?","type":"property","path":"\/documentation\/tripkitui\/tkuiidentifiableannotation\/identity"}],"path":"\/documentation\/tripkitui\/tkuiidentifiableannotation","title":"TKUIIdentifiableAnnotation"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tkuiimageannotation\/image","type":"property","children":[{"children":[{"path":"\/documentation\/tripkitui\/tkuiimageannotation\/image-367pr","title":"var image: TKImage?","type":"property"}],"title":"TKUIImageAnnotation Implementations","type":"groupMarker"}]},{"title":"var imageURL: URL?","path":"\/documentation\/tripkitui\/tkuiimageannotation\/imageurl","type":"property","children":[{"children":[{"type":"property","title":"var imageURL: URL?","path":"\/documentation\/tripkitui\/tkuiimageannotation\/imageurl-9pp85"}],"type":"groupMarker","title":"TKUIImageAnnotation Implementations"}]}],"path":"\/documentation\/tripkitui\/tkuiimageannotation","title":"TKUIImageAnnotation"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuimaptiles\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/tripkitui\/tkuimaptiles\/sources","title":"var sources: [TKAPI.DataAttribution]","type":"property"},{"path":"\/documentation\/tripkitui\/tkuimaptiles\/urltemplates","title":"var urlTemplates: [String]","type":"property"}],"path":"\/documentation\/tripkitui\/tkuimaptiles","title":"TKUIMapTiles"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var clusterIdentifier: String?","type":"property","path":"\/documentation\/tripkitui\/tkuimodeannotation\/clusteridentifier"},{"title":"var imageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuimodeannotation\/imageistemplate"},{"title":"var modeInfo: TKModeInfo?","type":"property","path":"\/documentation\/tripkitui\/tkuimodeannotation\/modeinfo"}],"path":"\/documentation\/tripkitui\/tkuimodeannotation","title":"TKUIModeAnnotation"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/image"},{"type":"property","title":"var imageTextRepresentation: String","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/imagetextrepresentation"},{"type":"property","title":"var imageURL: URL?","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/imageurl"},{"type":"property","title":"var imageURLIsBranding: Bool","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/imageurlisbranding"},{"type":"property","title":"var imageURLIsTemplate: Bool","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/imageurlistemplate"}],"path":"\/documentation\/tripkitui\/tkuimodepickeritem","title":"TKUIModePickerItem"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"children":[{"type":"groupMarker","title":"TKUINotificationManagerDelegate Implementations","children":[{"title":"func notificationRequireUserToken() async throws","path":"\/documentation\/tripkitui\/tkuinotificationmanagerdelegate\/notificationrequireusertoken()-4ls2w","type":"method"}]}],"path":"\/documentation\/tripkitui\/tkuinotificationmanagerdelegate\/notificationrequireusertoken()","type":"method","title":"func notificationRequireUserToken() async throws"},{"path":"\/documentation\/tripkitui\/tkuinotificationmanagerdelegate\/notificationspermissionsneeded()","type":"method","title":"func notificationsPermissionsNeeded() async -> Bool"}],"path":"\/documentation\/tripkitui\/tkuinotificationmanagerdelegate","title":"TKUINotificationManagerDelegate"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/cell(for:tableview:indexpath:)","type":"method","title":"func cell(for: TKUIRoutingResultsCard.CustomItem, tableView: UITableView, indexPath: IndexPath) -> UITableViewCell"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/item(for:)","type":"method","title":"func item(for: Observable<(TripRequest, [TripGroup])>) -> Observable<TKUIRoutingResultsCard.CustomItem?>"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/registercell(with:)","type":"method","title":"func registerCell(with: UITableView)","children":[{"title":"TKUIRoutingResultsCustomItemProvider Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/registercell(with:)-6yxry","type":"method","title":"func registerCell(with: UITableView)"}]}]},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/show(_:presenter:)","type":"method","title":"func show(TKUIRoutingResultsCard.CustomItem, presenter: TGCardViewController)"}],"path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider","title":"TKUIRoutingResultsCustomItemProvider"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var droppedPin: Signal<CLLocationCoordinate2D>","path":"\/documentation\/tripkitui\/tkuiroutingresultsmapmanagertype\/droppedpin","type":"property"},{"title":"var selectedMapRoute: Signal<TKUIRoutingResultsMapRouteItem>","path":"\/documentation\/tripkitui\/tkuiroutingresultsmapmanagertype\/selectedmaproute","type":"property"}],"path":"\/documentation\/tripkitui\/tkuiroutingresultsmapmanagertype","title":"TKUIRoutingResultsMapManagerType"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiselectableonmap\/selectioncondition","children":[{"title":"TKUISelectableOnMap Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkitui\/tkuiselectableonmap\/selectioncondition-2s9s0","title":"var selectionCondition: TKUISelectionCondition","type":"property"}]}],"title":"var selectionCondition: TKUISelectionCondition"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiselectableonmap\/selectionidentifier","children":[{"children":[{"path":"\/documentation\/tripkitui\/tkuiselectableonmap\/selectionidentifier-3mrsn","title":"var selectionIdentifier: String?","type":"property"}],"type":"groupMarker","title":"TKUISelectableOnMap Implementations"}],"title":"var selectionIdentifier: String?"}],"path":"\/documentation\/tripkitui\/tkuiselectableonmap","title":"TKUISelectableOnMap"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/bearing","type":"property","title":"var bearing: NSNumber?"},{"path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/imageistemplate","type":"property","title":"var imageIsTemplate: Bool"},{"path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/isterminal","children":[{"children":[{"type":"property","title":"var isTerminal: Bool","path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/isterminal-549mc"}],"title":"TKUISemaphoreDisplayable Implementations","type":"groupMarker"}],"type":"property","title":"var isTerminal: Bool"},{"path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/semaphoremode","type":"property","title":"var semaphoreMode: TKUISemaphoreView.Mode"}],"path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable","title":"TKUISemaphoreDisplayable"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var stopCode: String","path":"\/documentation\/tripkitui\/tkuistopannotation\/stopcode"},{"type":"property","title":"var timeZone: TimeZone?","path":"\/documentation\/tripkitui\/tkuistopannotation\/timezone"}],"path":"\/documentation\/tripkitui\/tkuistopannotation","title":"TKUIStopAnnotation"},{"type":"protocol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func timePicker(TKUITimePickerSheet, pickedDate: Date, for: TKTimeType)","path":"\/documentation\/tripkitui\/tkuitimepickersheetdelegate\/timepicker(_:pickeddate:for:)"},{"type":"method","title":"func timePickerRequestsResign(TKUITimePickerSheet)","path":"\/documentation\/tripkitui\/tkuitimepickersheetdelegate\/timepickerrequestsresign(_:)"}],"path":"\/documentation\/tripkitui\/tkuitimepickersheetdelegate","title":"TKUITimePickerSheetDelegate"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func timePicker(TKUITimePickerSheet, statusChanged: TKUITimePickerSheet.SelectionStatus)","path":"\/documentation\/tripkitui\/tkuitimepickersheetselectionstatedelegate\/timepicker(_:statuschanged:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuitimepickersheetselectionstatedelegate","title":"TKUITimePickerSheetSelectionStateDelegate"},{"type":"protocol","path":"\/documentation\/tripkitui\/tkuitripmapmanagertype","title":"TKUITripMapManagerType"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func modeByModeCard(TKUITripModeByModeCard, updatedTrip: Trip)","type":"method","path":"\/documentation\/tripkitui\/tkuitripmodebymodecarddelegate\/modebymodecard(_:updatedtrip:)"}],"path":"\/documentation\/tripkitui\/tkuitripmodebymodecarddelegate","title":"TKUITripModeByModeCardDelegate"},{"type":"protocol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tripOverview(TKUITripOverviewViewController, selected: Trip)","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontrollerdelegate\/tripoverview(_:selected:)"}],"path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontrollerdelegate","title":"TKUITripOverviewViewControllerDelegate"},{"type":"protocol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var tripSegmentAccessibilityLabel: String?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentaccessibilitylabel","type":"property"},{"title":"var tripSegmentBicycleAccessibility: TKBicycleAccessibility?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentbicycleaccessibility","children":[{"type":"groupMarker","children":[{"title":"var tripSegmentBicycleAccessibility: TKBicycleAccessibility?","type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentbicycleaccessibility-7kvjg"}],"title":"TKUITripSegmentDisplayable Implementations"}],"type":"property"},{"title":"var tripSegmentFixedDepartureTime: Date?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentfixeddeparturetime","children":[{"type":"groupMarker","children":[{"title":"var tripSegmentFixedDepartureTime: Date?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentfixeddeparturetime-1vmrc","type":"property"}],"title":"TKUITripSegmentDisplayable Implementations"}],"type":"property"},{"title":"var tripSegmentModeColor: TKColor?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodecolor","children":[{"type":"groupMarker","children":[{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodecolor-3noec","type":"property","title":"var tripSegmentModeColor: TKColor?"}],"title":"TKUITripSegmentDisplayable Implementations"}],"type":"property"},{"title":"var tripSegmentModeImage: TKImage?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimage","children":[{"title":"TKUITripSegmentDisplayable Implementations","children":[{"type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimage-4io9n","title":"var tripSegmentModeImage: TKImage?"}],"type":"groupMarker"}],"type":"property"},{"title":"var tripSegmentModeImageIsBranding: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageisbranding","children":[{"title":"TKUITripSegmentDisplayable Implementations","type":"groupMarker","children":[{"title":"var tripSegmentModeImageIsBranding: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageisbranding-9jrz5"}]}],"type":"property"},{"title":"var tripSegmentModeImageIsTemplate: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageistemplate","children":[{"children":[{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageistemplate-4j9vy","title":"var tripSegmentModeImageIsTemplate: Bool","type":"property"}],"type":"groupMarker","title":"TKUITripSegmentDisplayable Implementations"}],"type":"property"},{"title":"var tripSegmentModeImageURL: URL?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageurl","children":[{"type":"groupMarker","children":[{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageurl-1mzhf","type":"property","title":"var tripSegmentModeImageURL: URL?"}],"title":"TKUITripSegmentDisplayable Implementations"}],"type":"property"},{"title":"var tripSegmentModeInfoIconType: TKInfoIconType","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeinfoicontype","children":[{"title":"TKUITripSegmentDisplayable Implementations","type":"groupMarker","children":[{"title":"var tripSegmentModeInfoIconType: TKInfoIconType","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeinfoicontype-68t6y","type":"property"}]}],"type":"property"},{"title":"var tripSegmentModeSubtitle: String?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodesubtitle","children":[{"children":[{"title":"var tripSegmentModeSubtitle: String?","type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodesubtitle-9hvmt"}],"title":"TKUITripSegmentDisplayable Implementations","type":"groupMarker"}],"type":"property"},{"title":"var tripSegmentModeTitle: String?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodetitle","children":[{"children":[{"title":"var tripSegmentModeTitle: String?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodetitle-6z1is","type":"property"}],"type":"groupMarker","title":"TKUITripSegmentDisplayable Implementations"}],"type":"property"},{"title":"var tripSegmentSubtitleIconType: TKInfoIconType","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentsubtitleicontype","children":[{"type":"groupMarker","children":[{"title":"var tripSegmentSubtitleIconType: TKInfoIconType","type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentsubtitleicontype-4k2ac"}],"title":"TKUITripSegmentDisplayable Implementations"}],"type":"property"},{"title":"var tripSegmentTimeZone: TimeZone?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmenttimezone","children":[{"type":"groupMarker","title":"TKUITripSegmentDisplayable Implementations","children":[{"type":"property","title":"var tripSegmentTimeZone: TimeZone?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmenttimezone-9sanh"}]}],"type":"property"},{"title":"var tripSegmentTimesAreRealTime: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmenttimesarerealtime","children":[{"type":"groupMarker","title":"TKUITripSegmentDisplayable Implementations","children":[{"title":"var tripSegmentTimesAreRealTime: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmenttimesarerealtime-2ee9n","type":"property"}]}],"type":"property"},{"title":"var tripSegmentWheelchairAccessibility: TKWheelchairAccessibility","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentwheelchairaccessibility","children":[{"type":"groupMarker","title":"TKUITripSegmentDisplayable Implementations","children":[{"type":"property","title":"var tripSegmentWheelchairAccessibility: TKWheelchairAccessibility","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentwheelchairaccessibility-1h03n"}]}],"type":"property"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable","title":"TKUITripSegmentDisplayable"},{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/init(model:items:)","type":"init","title":"init(model: Section, items: [ItemType])"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/hashvalue","type":"property","title":"var hashValue: Int"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/items","type":"property","title":"var items: [Item]"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/model","type":"property","title":"var model: Section"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/customstringconvertible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/tripkitui\/animatablesectionmodel\/description"}],"title":"CustomStringConvertible Implementations"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitui\/animatablesectionmodel\/!=(_:_:)"},{"title":"static func == (AnimatableSectionModel, AnimatableSectionModel) -> Bool","type":"op","path":"\/documentation\/tripkitui\/animatablesectionmodel\/==(_:_:)"}],"title":"Equatable Implementations"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/identifiabletype-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/identity-swift.property","title":"var identity: Section.Identity","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/identity-swift.typealias","title":"AnimatableSectionModel.Identity","type":"typealias"}],"title":"IdentifiableType Implementations"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/sectionmodeltype-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(original: AnimatableSectionModel, items: [Item])","type":"init","path":"\/documentation\/tripkitui\/animatablesectionmodel\/init(original:items:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"AnimatableSectionModel.Item","type":"typealias","path":"\/documentation\/tripkitui\/animatablesectionmodel\/item"}],"title":"SectionModelType Implementations"}],"path":"\/documentation\/tripkitui\/animatablesectionmodel","title":"AnimatableSectionModel"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/animationconfiguration\/init(insertanimation:reloadanimation:deleteanimation:)","type":"init","title":"init(insertAnimation: UITableView.RowAnimation, reloadAnimation: UITableView.RowAnimation, deleteAnimation: UITableView.RowAnimation)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/animationconfiguration\/deleteanimation","type":"property","title":"let deleteAnimation: UITableView.RowAnimation"},{"path":"\/documentation\/tripkitui\/animationconfiguration\/insertanimation","type":"property","title":"let insertAnimation: UITableView.RowAnimation"},{"path":"\/documentation\/tripkitui\/animationconfiguration\/reloadanimation","type":"property","title":"let reloadAnimation: UITableView.RowAnimation"}],"path":"\/documentation\/tripkitui\/animationconfiguration","title":"AnimationConfiguration"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/changeset\/deleteditems","title":"let deletedItems: [ItemPath]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/deletedsections","title":"let deletedSections: [Int]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/finalsections","title":"let finalSections: [Section]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/inserteditems","title":"let insertedItems: [ItemPath]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/insertedsections","title":"let insertedSections: [Int]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/moveditems","title":"let movedItems: [(from: ItemPath, to: ItemPath)]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/movedsections","title":"let movedSections: [(from: Int, to: Int)]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/originalsections","title":"let originalSections: [Section]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/reloaddata","title":"let reloadData: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/updateditems","title":"let updatedItems: [ItemPath]","type":"property"},{"path":"\/documentation\/tripkitui\/changeset\/updatedsections","title":"let updatedSections: [Int]","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/changeset\/item","title":"Changeset.Item","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/changeset\/initialvalue(_:)","title":"static func initialValue([Section]) -> Changeset<Section>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/changeset\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/tripkitui\/changeset\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/tripkitui\/changeset","title":"Changeset"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let value: Value","path":"\/documentation\/tripkitui\/identifiablevalue\/value"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/tripkitui\/identifiablevalue\/debugdescription"}],"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/tripkitui\/identifiablevalue\/customdebugstringconvertible-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/identifiablevalue\/description","type":"property","title":"var description: String"}],"title":"CustomStringConvertible Implementations","path":"\/documentation\/tripkitui\/identifiablevalue\/customstringconvertible-implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitui\/identifiablevalue\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/identifiablevalue\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var identity: Identity","type":"property","path":"\/documentation\/tripkitui\/identifiablevalue\/identity-swift.property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"IdentifiableValue.Identity","type":"typealias","path":"\/documentation\/tripkitui\/identifiablevalue\/identity-swift.typealias"}],"title":"IdentifiableType Implementations","path":"\/documentation\/tripkitui\/identifiablevalue\/identifiabletype-implementations"}],"path":"\/documentation\/tripkitui\/identifiablevalue","title":"IdentifiableValue"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/itempath\/init(sectionindex:itemindex:)","title":"init(sectionIndex: Int, itemIndex: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/itempath\/itemindex","title":"let itemIndex: Int"},{"type":"property","path":"\/documentation\/tripkitui\/itempath\/sectionindex","title":"let sectionIndex: Int"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/itempath\/debugdescription","title":"var debugDescription: String"}],"path":"\/documentation\/tripkitui\/itempath\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/itempath\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkitui\/itempath\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitui\/itempath\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkitui\/itempath\/hashable-implementations","title":"Hashable Implementations"}],"path":"\/documentation\/tripkitui\/itempath","title":"ItemPath"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/sectionmodel\/init(model:items:)","title":"init(model: Section, items: [Item])","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/sectionmodel\/identity-swift.property","title":"var identity: Section","type":"property"},{"path":"\/documentation\/tripkitui\/sectionmodel\/items","title":"var items: [Item]","type":"property"},{"path":"\/documentation\/tripkitui\/sectionmodel\/model","title":"var model: Section","type":"property"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/sectionmodel\/identity-swift.typealias","title":"SectionModel.Identity","type":"typealias"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/sectionmodel\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/sectionmodel\/description","title":"var description: String"}]},{"path":"\/documentation\/tripkitui\/sectionmodel\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/sectionmodel\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"},{"path":"\/documentation\/tripkitui\/sectionmodel\/==(_:_:)","type":"op","title":"static func == (SectionModel, SectionModel) -> Bool"}]},{"path":"\/documentation\/tripkitui\/sectionmodel\/sectionmodeltype-implementations","title":"SectionModelType Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/sectionmodel\/init(original:items:)","title":"init(original: SectionModel<Section, Item>, items: [Item])"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitui\/sectionmodel\/item","title":"SectionModel.Item"}]}],"path":"\/documentation\/tripkitui\/sectionmodel","title":"SectionModel"},{"type":"struct","children":[{"type":"groupMarker","title":"Classes"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinator\/autocompleter(_:didselect:)","title":"func autocompleter(TKUIAutocompletionViewController, didSelect: TKAutocompletionSelection)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinator\/autocompleter(_:didselectaccessoryfor:)","title":"func autocompleter(TKUIAutocompletionViewController, didSelectAccessoryFor: TKAutocompletionSelection)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinator","type":"class","title":"TKUIAutocompletionView.Coordinator"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/init(providers:searchtext:biasmaprect:onresult:)","type":"init","title":"init(providers: [TKAutocompleting], searchText: String, biasMapRect: MKMapRect?, onResult: (TKAutocompletionSelection) -> Void)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/makecoordinator()","type":"method","title":"func makeCoordinator() -> Coordinator"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/makeuiviewcontroller(context:)","type":"method","title":"func makeUIViewController(context: Context) -> TKUIAutocompletionViewController"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/updateuiviewcontroller(_:context:)","type":"method","title":"func updateUIViewController(TKUIAutocompletionViewController, context: Context)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var body: Never","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/body","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func sizeThatFits(ProposedViewSize, uiViewController: Self.UIViewControllerType, context: Self.Context) -> CGSize?","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sizethatfits(_:uiviewcontroller:context:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func dismantleUIViewController(Self.UIViewControllerType, coordinator: Self.Coordinator)","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dismantleuiviewcontroller(_:coordinator:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/uiviewcontrollerrepresentable-implementations","type":"symbol","title":"UIViewControllerRepresentable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accentcolor(_:)","deprecated":true,"title":"func accentColor(Color?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(activationpoint:)-3rtwa","deprecated":true,"title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(activationpoint:)-z0h1","deprecated":true,"title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(addtraits:)","deprecated":true,"title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(hidden:)","deprecated":true,"title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(hint:)","deprecated":true,"title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(identifier:)","deprecated":true,"title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(inputlabels:)","deprecated":true,"title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(label:)","deprecated":true,"title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(removetraits:)","deprecated":true,"title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(selectionidentifier:)","deprecated":true,"title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(sortpriority:)","deprecated":true,"title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(value:)","deprecated":true,"title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(_:_:)","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(action:label:)","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(named:_:)-24dko","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(named:_:)-6gi57","title":"func accessibilityAction(named: LocalizedStringResource, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(named:_:)-7yenx","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(named:_:)-lejo","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactions(_:)","title":"func accessibilityActions<Content>(() -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactions(category:_:)","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactivationpoint(_:)-58vx3","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactivationpoint(_:)-7aool","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactivationpoint(_:isenabled:)-5p6f7","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactivationpoint(_:isenabled:)-6mp70","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaddtraits(_:)","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityadjustableaction(_:)","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitychartdescriptor(_:)","title":"func accessibilityChartDescriptor<R>(R) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitychildren(children:)","title":"func accessibilityChildren<V>(children: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-1c041","title":"func accessibilityCustomContent<V>(LocalizedStringResource, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-1sx4k","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-2phl","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-2w11v","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-3jm45","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-3ocbq","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-4tm06","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-5t6ti","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-6zeyv","title":"func accessibilityCustomContent(LocalizedStringResource, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-6zstj","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-8ckur","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-8jkeh","title":"func accessibilityCustomContent(LocalizedStringResource, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydefaultfocus(_:_:)","title":"func accessibilityDefaultFocus<Value>(AccessibilityFocusState<Value>.Binding, Value) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydirecttouch(_:options:)","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:)-1w8wm","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:)-23z3g","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:)-36xs2","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:)-8atff","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:isenabled:)-5yt2w","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:isenabled:)-6dfda","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:isenabled:)-83nb5","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:isenabled:)-9ly8z","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:)-1n9o1","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:)-328bw","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:)-5fz06","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:)-9e7yo","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:isenabled:)-7ke99","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:isenabled:)-8t507","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:isenabled:)-9k7co","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:isenabled:)-hhw9","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityelement(children:)","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityfocused(_:)","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityfocused(_:equals:)","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityheading(_:)","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhidden(_:)","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhidden(_:isenabled:)","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:)-4rjr6","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:)-5wnbp","title":"func accessibilityHint(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:)-7cz9i","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:)-912se","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:isenabled:)-1yzg0","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:isenabled:)-3nukq","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:isenabled:)-5uu9u","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:isenabled:)-8bfpl","title":"func accessibilityHint(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityidentifier(_:)","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityidentifier(_:isenabled:)","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityignoresinvertcolors(_:)","title":"func accessibilityIgnoresInvertColors(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:)-1rnc8","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:)-6clcx","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:)-98qsi","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:isenabled:)-89uf1","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:isenabled:)-8jsfg","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:isenabled:)-g7mj","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:)-3gqj7","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:)-3smn8","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:)-80qre","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:)-ino5","title":"func accessibilityLabel(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:isenabled:)-4m9lr","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:isenabled:)-6xo8u","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:isenabled:)-7icr6","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:isenabled:)-b3e4","title":"func accessibilityLabel(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(content:)","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabeledpair(role:id:in:)","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylinkedgroup(id:in:)","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityremovetraits(_:)","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrepresentation(representation:)","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrespondstouserinteraction(_:)","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrespondstouserinteraction(_:isenabled:)","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-44d2f","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-4u5lm","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-65fi1","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-6jj3w","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-9aiku","title":"func accessibilityRotor<Content>(LocalizedStringResource, entries: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1l2ag","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8ow7w","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-99jr3","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9hv8p","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-denw","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringResource, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-15rk9","title":"func accessibilityRotor<EntryModel>(LocalizedStringResource, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-5bb1","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-677l5","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-z4ug","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-zda5","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-1jtjd","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-1lke9","title":"func accessibilityRotor(LocalizedStringResource, textRanges: [Range<String.Index>]) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-3c56q","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-8x0f","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-9jsl6","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotorentry(id:in:)","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityscrollaction(_:)","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityscrollstatus(_:isenabled:)-2evkl","title":"func accessibilityScrollStatus(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityscrollstatus(_:isenabled:)-34eub","title":"func accessibilityScrollStatus(some StringProtocol, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityscrollstatus(_:isenabled:)-63df1","title":"func accessibilityScrollStatus(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityscrollstatus(_:isenabled:)-6cmbh","title":"func accessibilityScrollStatus(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityshowslargecontentviewer()","title":"func accessibilityShowsLargeContentViewer() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityshowslargecontentviewer(_:)","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitysortpriority(_:)","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitytextcontenttype(_:)","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:)-7xzbw","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:)-8jwhc","title":"func accessibilityValue(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:)-8qot4","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:)-ua6k","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:isenabled:)-3lciy","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:isenabled:)-41nsy","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:isenabled:)-5o2u7","title":"func accessibilityValue(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:isenabled:)-81flp","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityzoomaction(_:)","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/actionsheet(ispresented:content:)","deprecated":true,"title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/actionsheet(item:content:)","deprecated":true,"title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:)-1kmqz","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:)-4qa2l","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:)-6uxr0","title":"func alert<A>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:)-6vx16","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:message:)-3z2ms","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:message:)-6qj8a","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:message:)-923z9","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:message:)-lbw7","title":"func alert<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:)-2ks6p","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:)-5i1lr","title":"func alert<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:)-6l6de","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:)-71hmj","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:message:)-3z41m","title":"func alert<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:message:)-8xbjt","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:message:)-ol91","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:message:)-vcxr","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(ispresented:content:)","deprecated":true,"title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(ispresented:error:actions:)","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(ispresented:error:actions:message:)","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(item:content:)","deprecated":true,"title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alignmentguide(_:computevalue:)-70iyq","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alignmentguide(_:computevalue:)-79bc7","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alloweddynamicrange(_:)","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/allowshittesting(_:)","title":"func allowsHitTesting(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/allowstightening(_:)","title":"func allowsTightening(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/allowswindowactivationevents()","title":"func allowsWindowActivationEvents() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/allowswindowactivationevents(_:)","title":"func allowsWindowActivationEvents(Bool?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/anchorpreference(key:value:transform:)","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/animation(_:)","deprecated":true,"title":"func animation(Animation?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/animation(_:body:)","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/animation(_:value:)","title":"func animation<V>(Animation?, value: V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/aspectratio(_:contentmode:)-665rf","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/aspectratio(_:contentmode:)-rcz6","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/assistiveaccessnavigationicon(_:)","title":"func assistiveAccessNavigationIcon(Image) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/assistiveaccessnavigationicon(systemimage:)","title":"func assistiveAccessNavigationIcon(systemImage: String) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/attributedtextformattingdefinition(_:)-3ebzo","title":"func attributedTextFormattingDefinition<S>(KeyPath<AttributeScopes, S.Type>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/attributedtextformattingdefinition(_:)-5wyc9","title":"func attributedTextFormattingDefinition<S>(S.Type) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/attributedtextformattingdefinition(_:)-81jrp","title":"func attributedTextFormattingDefinition<D>(D) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/autocapitalization(_:)","deprecated":true,"title":"func autocapitalization(UITextAutocapitalizationType) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/autocorrectiondisabled(_:)","title":"func autocorrectionDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(_:alignment:)","deprecated":true,"title":"func background<Background>(Background, alignment: Alignment) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(_:ignoressafeareaedges:)","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(_:in:fillstyle:)-6rgra","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(_:in:fillstyle:)-9js2g","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(alignment:content:)","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(ignoressafeareaedges:)","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(in:fillstyle:)-2xaqg","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(in:fillstyle:)-34b34","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/backgroundextensioneffect()","title":"func backgroundExtensionEffect() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/backgroundextensioneffect(isenabled:)","title":"func backgroundExtensionEffect(isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/backgroundpreferencevalue(_:_:)","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/backgroundpreferencevalue(_:alignment:_:)","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/backgroundstyle(_:)","title":"func backgroundStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-3dkg8","title":"func badge<S>(S?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-3un19","title":"func badge(LocalizedStringKey?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-5kjgw","title":"func badge(LocalizedStringResource?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-6yba6","title":"func badge(Text?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-9cick","title":"func badge(Int) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badgeprominence(_:)","title":"func badgeProminence(BadgeProminence) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/baselineoffset(_:)","title":"func baselineOffset(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/blendmode(_:)","title":"func blendMode(BlendMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/blur(radius:opaque:)","title":"func blur(radius: CGFloat, opaque: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/bold(_:)","title":"func bold(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/border(_:width:)","title":"func border<S>(S, width: CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/brightness(_:)","title":"func brightness(Double) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonbordershape(_:)","title":"func buttonBorderShape(ButtonBorderShape) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonrepeatbehavior(_:)","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonsizing(_:)","title":"func buttonSizing(ButtonSizing) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonstyle(_:)-180ga","title":"func buttonStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonstyle(_:)-8wq5h","title":"func buttonStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chart3dcameraprojection(_:)","title":"func chart3DCameraProjection(Chart3DCameraProjection) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chart3dpose(_:)-1skn","title":"func chart3DPose(Binding<Chart3DPose>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chart3dpose(_:)-256f1","title":"func chart3DPose(Chart3DPose) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartangleselection(value:)","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartbackground(alignment:content:)","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(_:)","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(domain:mapping:)","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(domain:range:type:)","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(domain:type:)","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(mapping:)","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(range:type:)","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(type:)","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartgesture(_:)","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlegend(_:)","title":"func chartLegend(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlegend(position:alignment:spacing:)","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlegend(position:alignment:spacing:content:)","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(_:)","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(domain:)","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(domain:mapping:)","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(domain:range:)","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(mapping:)","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(range:)","title":"func chartLineStyleScale<Range>(range: Range) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartoverlay(alignment:content:)","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartplotstyle(content:)","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollposition(initialx:)","title":"func chartScrollPosition(initialX: some Plottable) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollposition(initialy:)","title":"func chartScrollPosition(initialY: some Plottable) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollposition(x:)","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollposition(y:)","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrolltargetbehavior(_:)","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollableaxes(_:)","title":"func chartScrollableAxes(Axis.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(_:)-528vy","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(_:)-8een4","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(domain:)","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(domain:mapping:)","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(domain:range:)-80zd","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(domain:range:)-82973","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(mapping:)","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(range:)-4natz","title":"func chartSymbolScale<Range>(range: Range) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(range:)-7r961","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(_:)","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(domain:mapping:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(domain:range:type:)","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(domain:type:)","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(mapping:)","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(range:type:)","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(type:)","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxis(_:)","title":"func chartXAxis(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxis(content:)","title":"func chartXAxis<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxislabel(_:position:alignment:spacing:)-371t8","title":"func chartXAxisLabel(LocalizedStringResource, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxislabel(_:position:alignment:spacing:)-8x1f9","title":"func chartXAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxislabel(_:position:alignment:spacing:)-b578","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxislabel(position:alignment:spacing:content:)","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxisstyle(content:)","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxscale(domain:range:type:)","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxscale(domain:type:)","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxscale(range:type:)","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxscale(type:)","title":"func chartXScale(type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxselection(range:)","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxselection(value:)","title":"func chartXSelection<P>(value: Binding<P?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxvisibledomain(length:)","title":"func chartXVisibleDomain<P>(length: P) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxis(_:)","title":"func chartYAxis(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxis(content:)","title":"func chartYAxis<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxislabel(_:position:alignment:spacing:)-5zgw","title":"func chartYAxisLabel(LocalizedStringResource, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxislabel(_:position:alignment:spacing:)-6g3ue","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxislabel(_:position:alignment:spacing:)-94fv1","title":"func chartYAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxislabel(position:alignment:spacing:content:)","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxisstyle(content:)","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyscale(domain:range:type:)","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyscale(domain:type:)","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyscale(range:type:)","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyscale(type:)","title":"func chartYScale(type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyselection(range:)","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyselection(value:)","title":"func chartYSelection<P>(value: Binding<P?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyvisibledomain(length:)","title":"func chartYVisibleDomain<P>(length: P) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzaxis(_:)","title":"func chartZAxis(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzaxis(content:)","title":"func chartZAxis<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzaxislabel(_:position:alignment:spacing:)-260qo","title":"func chartZAxisLabel(some StringProtocol, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzaxislabel(_:position:alignment:spacing:)-6z0nu","title":"func chartZAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzaxislabel(_:position:alignment:spacing:)-9v9zx","title":"func chartZAxisLabel(LocalizedStringResource, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzscale(domain:range:type:)","title":"func chartZScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzscale(domain:type:)","title":"func chartZScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzscale(range:type:)","title":"func chartZScale<Range>(range: Range, type: ScaleType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzselection(range:)","title":"func chartZSelection<P>(range: Binding<ClosedRange<P>?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartzselection(value:)","title":"func chartZSelection<P>(value: Binding<P?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/clipshape(_:style:)","title":"func clipShape<S>(S, style: FillStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/clipped(antialiased:)","title":"func clipped(antialiased: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coloreffect(_:isenabled:)","title":"func colorEffect(Shader, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/colorinvert()","title":"func colorInvert() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/colormultiply(_:)","title":"func colorMultiply(Color) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/colorscheme(_:)","deprecated":true,"title":"func colorScheme(ColorScheme) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/compositinggroup()","title":"func compositingGroup() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-198dq","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-4ttpy","title":"func confirmationDialog<A>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8m4xb","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-d99","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-11wrk","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5cv1c","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-9ail8","title":"func confirmationDialog<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-duj3","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5hc0k","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5uba4","title":"func confirmationDialog<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5ynha","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9qlwp","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1r4j2","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1unud","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-62t9b","title":"func confirmationDialog<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-99o6q","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerbackground(_:for:)","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerbackground(for:alignment:content:)","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containercorneroffset(_:sizetofit:)","title":"func containerCornerOffset(Edge.Set, sizeToFit: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerrelativeframe(_:alignment:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerrelativeframe(_:alignment:_:)","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerrelativeframe(_:count:span:spacing:alignment:)","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containershape(_:)-1ypii","title":"func containerShape(some RoundedRectangularShape) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containershape(_:)-3j3ri","title":"func containerShape<T>(T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containervalue(_:_:)","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentmargins(_:_:for:)-58438","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentmargins(_:_:for:)-73vxt","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentmargins(_:for:)","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentshape(_:_:eofill:)","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentshape(_:eofill:)","title":"func contentShape<S>(S, eoFill: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contenttoolbar(for:content:)-9orol","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contenttoolbar(for:content:)-ckw5","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contenttransition(_:)","title":"func contentTransition(ContentTransition) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contextmenu(_:)","deprecated":true,"title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contextmenu(forselectiontype:menu:primaryaction:)","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contextmenu(menuitems:)","deprecated":true,"title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contextmenu(menuitems:preview:)","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contrast(_:)","title":"func contrast(Double) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/controlgroupstyle(_:)","title":"func controlGroupStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/controlsize(_:)","title":"func controlSize(ControlSize) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinatespace(_:)","title":"func coordinateSpace(NamedCoordinateSpace) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinatespace(name:)","deprecated":true,"title":"func coordinateSpace<T>(name: T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/cornerradius(_:antialiased:)","deprecated":true,"title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/datepickerstyle(_:)","title":"func datePickerStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultadaptabletabbarplacement(_:)","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultappstorage(_:)","title":"func defaultAppStorage(UserDefaults) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultfocus(_:_:priority:)","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaulthovereffect(_:)-6ixit","title":"func defaultHoverEffect(HoverEffect?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaulthovereffect(_:)-8hi0q","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultscrollanchor(_:)","title":"func defaultScrollAnchor(UnitPoint?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultscrollanchor(_:for:)","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/deferssystemgestures(on:)","title":"func defersSystemGestures(on: Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/deletedisabled(_:)","title":"func deleteDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogicon(_:)","title":"func dialogIcon(Image?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(_:issuppressed:)-5dh9s","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(_:issuppressed:)-6uzkh","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(_:issuppressed:)-7jp10","title":"func dialogSuppressionToggle(LocalizedStringResource, isSuppressed: Binding<Bool>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(_:issuppressed:)-7szku","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(issuppressed:)","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/disableautocorrection(_:)","deprecated":true,"title":"func disableAutocorrection(Bool?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/disabled(_:)","title":"func disabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/disclosuregroupstyle(_:)","title":"func disclosureGroupStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/distortioneffect(_:maxsampleoffset:isenabled:)","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/documentbrowsercontextmenu(_:)","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/draggable(_:)","title":"func draggable<T>(@autoclosure () -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/draggable(_:preview:)","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/drawinggroup(opaque:colormode:)","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dropdestination(for:action:istargeted:)","deprecated":true,"title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dropdestination(for:isenabled:action:)","title":"func dropDestination<T>(for: T.Type, isEnabled: Bool, action: ([T], DropSession) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dynamictypesize(_:)","title":"func dynamicTypeSize(DynamicTypeSize) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/edgesignoringsafearea(_:)","deprecated":true,"title":"func edgesIgnoringSafeArea(Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/environment(_:)","title":"func environment<T>(T?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/environment(_:_:)","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/environmentobject(_:)","title":"func environmentObject<T>(T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogbrowseroptions(_:)","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogconfirmationlabel(_:)-2p83h","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogconfirmationlabel(_:)-4455","title":"func fileDialogConfirmationLabel<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogconfirmationlabel(_:)-65mac","title":"func fileDialogConfirmationLabel(Text?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogconfirmationlabel(_:)-94n6h","title":"func fileDialogConfirmationLabel(LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogcustomizationid(_:)","title":"func fileDialogCustomizationID(String) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogdefaultdirectory(_:)","title":"func fileDialogDefaultDirectory(URL?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogimportsunresolvedaliases(_:)","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogmessage(_:)-5070e","title":"func fileDialogMessage(Text?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogmessage(_:)-83npc","title":"func fileDialogMessage(LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogmessage(_:)-9oazi","title":"func fileDialogMessage(LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogmessage(_:)-9x4ge","title":"func fileDialogMessage<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogurlenabled(_:)","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-251i0","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7vvw9","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3k4lu","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-rjal","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-10e5z","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8zx8","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-1ea4v","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9yq02","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporterfilenamelabel(_:)-2bwdr","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporterfilenamelabel(_:)-4biso","title":"func fileExporterFilenameLabel(LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporterfilenamelabel(_:)-9fcux","title":"func fileExporterFilenameLabel<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporterfilenamelabel(_:)-9vbfr","title":"func fileExporterFilenameLabel(Text?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filemover(ispresented:file:oncompletion:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filemover(ispresented:file:oncompletion:oncancellation:)","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filemover(ispresented:files:oncompletion:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filemover(ispresented:files:oncompletion:oncancellation:)","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/finddisabled(_:)","title":"func findDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/findnavigator(ispresented:)","title":"func findNavigator(isPresented: Binding<Bool>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fixedsize()","title":"func fixedSize() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fixedsize(horizontal:vertical:)","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/flipsforrighttoleftlayoutdirection(_:)","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focuseffectdisabled(_:)","title":"func focusEffectDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusable(_:)","title":"func focusable(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusable(_:interactions:)","title":"func focusable(Bool, interactions: FocusInteractions) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focused(_:)","title":"func focused(FocusState<Bool>.Binding) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focused(_:equals:)","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedobject(_:)-1h8ua","title":"func focusedObject<T>(T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedobject(_:)-1yjkv","title":"func focusedObject<T>(T?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedsceneobject(_:)-1oplb","title":"func focusedSceneObject<T>(T?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedsceneobject(_:)-5o7vl","title":"func focusedSceneObject<T>(T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedscenevalue(_:)","title":"func focusedSceneValue<T>(T?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedscenevalue(_:_:)-5z32i","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedscenevalue(_:_:)-hwxn","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedvalue(_:)","title":"func focusedValue<T>(T?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedvalue(_:_:)-1wg55","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedvalue(_:_:)-6srfx","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/font(_:)","title":"func font(Font?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fontdesign(_:)","title":"func fontDesign(Font.Design?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fontweight(_:)","title":"func fontWeight(Font.Weight?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fontwidth(_:)","title":"func fontWidth(Font.Width?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/foregroundcolor(_:)","deprecated":true,"title":"func foregroundColor(Color?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/foregroundstyle(_:)","title":"func foregroundStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/foregroundstyle(_:_:)","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/foregroundstyle(_:_:_:)","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/formstyle(_:)","title":"func formStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/frame()","title":"func frame() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/frame(width:height:alignment:)","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fullscreencover(ispresented:ondismiss:content:)","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fullscreencover(item:ondismiss:content:)","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gaugestyle(_:)","title":"func gaugeStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/geometrygroup()","title":"func geometryGroup() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gesture(_:)","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gesture(_:including:)","title":"func gesture<T>(T, including: GestureMask) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gesture(_:isenabled:)","title":"func gesture<T>(T, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gesture(_:name:isenabled:)","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/glasseffect(_:in:)","title":"func glassEffect(Glass, in: some Shape) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/glasseffectid(_:in:)","title":"func glassEffectID((some Hashable & Sendable)?, in: Namespace.ID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/glasseffecttransition(_:)","title":"func glassEffectTransition(GlassEffectTransition) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/glasseffectunion(id:namespace:)","title":"func glassEffectUnion(id: (some Hashable & Sendable)?, namespace: Namespace.ID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/grayscale(_:)","title":"func grayscale(Double) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gridcellanchor(_:)","title":"func gridCellAnchor(UnitPoint) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gridcellcolumns(_:)","title":"func gridCellColumns(Int) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gridcellunsizedaxes(_:)","title":"func gridCellUnsizedAxes(Axis.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gridcolumnalignment(_:)","title":"func gridColumnAlignment(HorizontalAlignment) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/groupboxstyle(_:)","title":"func groupBoxStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/handgestureshortcut(_:isenabled:)","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/handlesexternalevents(preferring:allowing:)","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/headerprominence(_:)","title":"func headerProminence(Prominence) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/help(_:)-1n81b","title":"func help(LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/help(_:)-5121t","title":"func help(Text) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/help(_:)-8tvbx","title":"func help(LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/help(_:)-96xf4","title":"func help<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hidden()","title":"func hidden() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/highprioritygesture(_:including:)","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/highprioritygesture(_:isenabled:)","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/highprioritygesture(_:name:isenabled:)","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hovereffect(_:)","title":"func hoverEffect(HoverEffect) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hovereffect(_:isenabled:)-20t3c","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hovereffect(_:isenabled:)-2w19t","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hovereffectdisabled(_:)","title":"func hoverEffectDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/huerotation(_:)","title":"func hueRotation(Angle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/id(_:)","title":"func id<ID>(ID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ignoressafearea(_:edges:)","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/imagescale(_:)","title":"func imageScale(Image.Scale) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/indexviewstyle(_:)","title":"func indexViewStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/inspector(ispresented:content:)","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/inspectorcolumnwidth(_:)","title":"func inspectorColumnWidth(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/inspectorcolumnwidth(min:ideal:max:)","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/interactionactivitytrackingtag(_:)","title":"func interactionActivityTrackingTag(String) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/interactivedismissdisabled(_:)","title":"func interactiveDismissDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/invalidatablecontent(_:)","title":"func invalidatableContent(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/italic(_:)","title":"func italic(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/itemprovider(_:)","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/kerning(_:)","title":"func kerning(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardshortcut(_:)-3rxwi","title":"func keyboardShortcut(KeyboardShortcut) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardshortcut(_:)-43dtr","title":"func keyboardShortcut(KeyboardShortcut?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardshortcut(_:modifiers:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardshortcut(_:modifiers:localization:)","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardtype(_:)","title":"func keyboardType(UIKeyboardType) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labelicontotitlespacing(_:)","title":"func labelIconToTitleSpacing(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labelreservediconwidth(_:)","title":"func labelReservedIconWidth(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labelstyle(_:)","title":"func labelStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labeledcontentstyle(_:)","title":"func labeledContentStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labelshidden()","title":"func labelsHidden() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labelsvisibility(_:)","title":"func labelsVisibility(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/layereffect(_:maxsampleoffset:isenabled:)","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/layoutdirectionbehavior(_:)","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/layoutpriority(_:)","title":"func layoutPriority(Double) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/layoutvalue(key:value:)","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/lineheight(_:)","title":"func lineHeight(AttributedString.LineHeight?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/linelimit(_:)","title":"func lineLimit(Int?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/linelimit(_:reservesspace:)","title":"func lineLimit(Int, reservesSpace: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/linespacing(_:)","title":"func lineSpacing(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listitemtint(_:)-2j0fn","title":"func listItemTint(Color?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listitemtint(_:)-87a5u","title":"func listItemTint(ListItemTint?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowbackground(_:)","title":"func listRowBackground<V>(V?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowinsets(_:)","title":"func listRowInsets(EdgeInsets?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowinsets(_:_:)","title":"func listRowInsets(Edge.Set, CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowseparator(_:edges:)","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowseparatortint(_:edges:)","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowspacing(_:)","title":"func listRowSpacing(CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionindexvisibility(_:)","title":"func listSectionIndexVisibility(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionmargins(_:_:)","title":"func listSectionMargins(Edge.Set, CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionseparator(_:edges:)","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionseparatortint(_:edges:)","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionspacing(_:)-3pn0z","title":"func listSectionSpacing(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionspacing(_:)-90php","title":"func listSectionSpacing(ListSectionSpacing) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/liststyle(_:)","title":"func listStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/lookaroundviewer(ispresented:initialscene:allowsnavigation:showsroadlabels:pointsofinterest:ondismiss:)","title":"func lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/lookaroundviewer(ispresented:scene:allowsnavigation:showsroadlabels:pointsofinterest:ondismiss:)","title":"func lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/luminancetoalpha()","title":"func luminanceToAlpha() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapcamerakeyframeanimator(trigger:keyframes:)","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapcontrolvisibility(_:)","title":"func mapControlVisibility(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapcontrols(_:)","title":"func mapControls(() -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapfeatureselectionaccessory(_:)","title":"func mapFeatureSelectionAccessory(MapItemDetailSelectionAccessoryStyle?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapfeatureselectioncontent(content:)","title":"func mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapfeatureselectiondisabled(_:)","title":"func mapFeatureSelectionDisabled((MapFeature) -> Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailpopover(ispresented:item:displaysmap:attachmentanchor:)","title":"func mapItemDetailPopover(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailpopover(ispresented:item:displaysmap:attachmentanchor:arrowedge:)","title":"func mapItemDetailPopover(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailpopover(item:displaysmap:attachmentanchor:)","title":"func mapItemDetailPopover(item: Binding<MKMapItem?>, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailpopover(item:displaysmap:attachmentanchor:arrowedge:)","title":"func mapItemDetailPopover(item: Binding<MKMapItem?>, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailsheet(ispresented:item:displaysmap:)","title":"func mapItemDetailSheet(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailsheet(item:displaysmap:)","title":"func mapItemDetailSheet(item: Binding<MKMapItem?>, displaysMap: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapscope(_:)","title":"func mapScope(Namespace.ID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapstyle(_:)","title":"func mapStyle(MapStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mask(_:)","deprecated":true,"title":"func mask<Mask>(Mask) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mask(alignment:_:)","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/matchedtransitionsource(id:in:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/matchedtransitionsource(id:in:configuration:)","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/materialactiveappearance(_:)","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/menuactiondismissbehavior(_:)","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/menuindicator(_:)","title":"func menuIndicator(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/menuorder(_:)","title":"func menuOrder(MenuOrder) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/menustyle(_:)","title":"func menuStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/minimumscalefactor(_:)","title":"func minimumScaleFactor(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/modifier(_:)","title":"func modifier<T>(T) -> ModifiedContent<Self, T>"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/monospaced(_:)","title":"func monospaced(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/monospaceddigit()","title":"func monospacedDigit() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/movedisabled(_:)","title":"func moveDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/multilinetextalignment(_:)","title":"func multilineTextAlignment(TextAlignment) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/multilinetextalignment(strategy:)","title":"func multilineTextAlignment(strategy: Text.AlignmentStrategy) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbarbackbuttonhidden(_:)","title":"func navigationBarBackButtonHidden(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbarhidden(_:)","deprecated":true,"title":"func navigationBarHidden(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbaritems(leading:)","deprecated":true,"title":"func navigationBarItems<L>(leading: L) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbaritems(leading:trailing:)","deprecated":true,"title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbaritems(trailing:)","deprecated":true,"title":"func navigationBarItems<T>(trailing: T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:)-1ghzs","deprecated":true,"title":"func navigationBarTitle(LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:)-3k47y","deprecated":true,"title":"func navigationBarTitle(Text) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:)-73rp","deprecated":true,"title":"func navigationBarTitle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:displaymode:)-3ndjg","deprecated":true,"title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:displaymode:)-61c5k","deprecated":true,"title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:displaymode:)-utjc","deprecated":true,"title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitledisplaymode(_:)","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdestination(for:destination:)","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdestination(ispresented:destination:)","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdestination(item:destination:)","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:)-4c5dq","title":"func navigationDocument(URL) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:)-4z902","title":"func navigationDocument<D>(D) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:preview:)-1jw04","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:preview:)-1mr8t","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:preview:)-3o7lj","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:preview:)-4hy58","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationlinkindicatorvisibility(_:)","title":"func navigationLinkIndicatorVisibility(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsplitviewcolumnwidth(_:)","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsplitviewcolumnwidth(min:ideal:max:)","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsplitviewstyle(_:)","title":"func navigationSplitViewStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsubtitle(_:)-61wwm","title":"func navigationSubtitle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsubtitle(_:)-6pyk0","title":"func navigationSubtitle(LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsubtitle(_:)-7n1wn","title":"func navigationSubtitle(Text) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsubtitle(_:)-7vir","title":"func navigationSubtitle(LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-3exhs","title":"func navigationTitle(LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-4bp0x","title":"func navigationTitle(Text) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-5j8vh","title":"func navigationTitle(LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-8m98f","title":"func navigationTitle<V>(() -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-9myme","title":"func navigationTitle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-j6on","title":"func navigationTitle(Binding<String>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtransition(_:)","title":"func navigationTransition(some NavigationTransition) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationviewstyle(_:)","deprecated":true,"title":"func navigationViewStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/offset(_:)","title":"func offset(CGSize) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/offset(x:y:)","title":"func offset(x: CGFloat, y: CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onappear(perform:)","title":"func onAppear(perform: (() -> Void)?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onchange(of:initial:_:)-5hswj","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onchange(of:initial:_:)-86cw0","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onchange(of:perform:)","deprecated":true,"title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/oncontinueuseractivity(_:perform:)","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/oncontinuoushover(coordinatespace:perform:)-3c957","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/oncontinuoushover(coordinatespace:perform:)-9xwlo","deprecated":true,"title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondisappear(perform:)","title":"func onDisappear(perform: (() -> Void)?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrag(_:)","title":"func onDrag(() -> NSItemProvider) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrag(_:preview:)","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:delegate:)-1ofvq","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:delegate:)-6zb3x","deprecated":true,"title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:istargeted:perform:)-1rsm0","deprecated":true,"title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:istargeted:perform:)-8mdd6","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:istargeted:perform:)-9a5ci","deprecated":true,"title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:istargeted:perform:)-fp7q","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ongeometrychange(for:of:action:)-28xk8","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ongeometrychange(for:of:action:)-9284q","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onhover(perform:)","title":"func onHover(perform: (Bool) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/oninteractiveresizechange(_:)","title":"func onInteractiveResizeChange((Bool) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(_:action:)","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(_:phases:action:)","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(characters:phases:action:)","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(keys:phases:action:)","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(phases:action:)","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","deprecated":true,"title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onlongpressgesture(minimumduration:pressing:perform:)","deprecated":true,"title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onmapcamerachange(frequency:_:)-21nla","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onmapcamerachange(frequency:_:)-7yt7d","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onopenurl(perform:)","title":"func onOpenURL(perform: (URL) -> ()) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onopenurl(prefersinapp:)","title":"func onOpenURL(prefersInApp: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onpencildoubletap(perform:)","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onpencilsqueeze(perform:)","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onpreferencechange(_:perform:)","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onreceive(_:perform:)","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrollgeometrychange(for:of:action:)","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrollphasechange(_:)-4zqug","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrollphasechange(_:)-8m500","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrolltargetvisibilitychange(idtype:threshold:_:)","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrollvisibilitychange(threshold:_:)","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onsubmit(of:_:)","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ontapgesture(count:coordinatespace:perform:)-3p065","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ontapgesture(count:coordinatespace:perform:)-6612b","deprecated":true,"title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ontapgesture(count:perform:)","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/opacity(_:)","title":"func opacity(Double) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlay(_:alignment:)","deprecated":true,"title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlay(_:ignoressafeareaedges:)","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlay(_:in:fillstyle:)","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlay(alignment:content:)","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlaypreferencevalue(_:_:)","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlaypreferencevalue(_:alignment:_:)","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/padding(_:)-1ej1y","title":"func padding(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/padding(_:)-7mn9z","title":"func padding(EdgeInsets) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/padding(_:_:)","title":"func padding(Edge.Set, CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/paletteselectioneffect(_:)","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/persistentsystemoverlays(_:)","title":"func persistentSystemOverlays(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/phaseanimator(_:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/phaseanimator(_:trigger:content:animation:)","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/pickerstyle(_:)","title":"func pickerStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/popover(ispresented:attachmentanchor:arrowedge:content:)","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/popover(item:attachmentanchor:arrowedge:content:)","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/popovertip(_:arrowedge:action:)","title":"func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/popovertip(_:ispresented:attachmentanchor:arrowedge:action:)","title":"func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/popovertip(_:ispresented:attachmentanchor:arrowedges:action:)","title":"func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdges: Edge.Set, action: (Tips.Action) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/position(_:)","title":"func position(CGPoint) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/position(x:y:)","title":"func position(x: CGFloat, y: CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/preference(key:value:)","title":"func preference<K>(key: K.Type, value: K.Value) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/preferredcolorscheme(_:)","title":"func preferredColorScheme(ColorScheme?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationbackground(_:)","title":"func presentationBackground<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationbackground(alignment:content:)","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationbackgroundinteraction(_:)","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationcompactadaptation(_:)","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationcompactadaptation(horizontal:vertical:)","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationcontentinteraction(_:)","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationcornerradius(_:)","title":"func presentationCornerRadius(CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationdetents(_:)","title":"func presentationDetents(Set<PresentationDetent>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationdetents(_:selection:)","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationdragindicator(_:)","title":"func presentationDragIndicator(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationsizing(_:)","title":"func presentationSizing(some PresentationSizing) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewcontext(_:)","title":"func previewContext<C>(C) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewdevice(_:)","title":"func previewDevice(PreviewDevice?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewdisplayname(_:)","title":"func previewDisplayName(String?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewinterfaceorientation(_:)","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewlayout(_:)","title":"func previewLayout(PreviewLayout) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/privacysensitive(_:)","title":"func privacySensitive(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/progressviewstyle(_:)","title":"func progressViewStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/projectioneffect(_:)","title":"func projectionEffect(ProjectionTransform) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/redacted(reason:)","title":"func redacted(reason: RedactionReasons) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/refreshable(action:)","title":"func refreshable(action: () async -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/renameaction(_:)-5j8vb","title":"func renameAction(FocusState<Bool>.Binding) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/renameaction(_:)-te4p","title":"func renameAction(() -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/replacedisabled(_:)","title":"func replaceDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/rotationeffect(_:anchor:)","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareabar(edge:alignment:spacing:content:)-5g671","title":"func safeAreaBar(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareabar(edge:alignment:spacing:content:)-86ezy","title":"func safeAreaBar(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareainset(edge:alignment:spacing:content:)-22tm2","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareainset(edge:alignment:spacing:content:)-526lv","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareapadding(_:)-4hcm4","title":"func safeAreaPadding(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareapadding(_:)-6t7k","title":"func safeAreaPadding(EdgeInsets) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareapadding(_:_:)","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/saturation(_:)","title":"func saturation(Double) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaleeffect(_:anchor:)-4019i","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaleeffect(_:anchor:)-9sk8j","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaleeffect(x:y:anchor:)","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaledtofill()","title":"func scaledToFill() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaledtofit()","title":"func scaledToFit() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scenepadding(_:)","title":"func scenePadding(Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scenepadding(_:edges:)","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollbouncebehavior(_:axes:)","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollclipdisabled(_:)","title":"func scrollClipDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollcontentbackground(_:)","title":"func scrollContentBackground(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolldisabled(_:)","title":"func scrollDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolldismisseskeyboard(_:)","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolledgeeffecthidden(_:for:)","title":"func scrollEdgeEffectHidden(Bool, for: Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolledgeeffectstyle(_:for:)","title":"func scrollEdgeEffectStyle(ScrollEdgeEffectStyle?, for: Edge.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollindicators(_:axes:)","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollindicatorsflash(onappear:)","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollindicatorsflash(trigger:)","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollinputbehavior(_:for:)","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollposition(_:anchor:)","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollposition(id:anchor:)","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolltargetbehavior(_:)","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolltargetlayout(isenabled:)","title":"func scrollTargetLayout(isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolltransition(_:axis:transition:)","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchcompletion(_:)","title":"func searchCompletion(String) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchdictationbehavior(_:)","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchfocused(_:)","title":"func searchFocused(FocusState<Bool>.Binding) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchfocused(_:equals:)","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchpresentationtoolbarbehavior(_:)","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchscopes(_:activation:_:)","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchscopes(_:scopes:)","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchselection(_:)","title":"func searchSelection(Binding<TextSelection?>) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchsuggestions(_:)","title":"func searchSuggestions<S>(() -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchsuggestions(_:for:)","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchtoolbarbehavior(_:)","title":"func searchToolbarBehavior(SearchToolbarBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3synv","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6gtga","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6ov7o","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-84az3","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:placement:prompt:token:)-1jg6p","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:placement:prompt:token:)-8obvd","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:placement:prompt:token:)-si7q","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:placement:prompt:token:)-uosa","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:ispresented:placement:prompt:)-1kweh","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:ispresented:placement:prompt:)-1mse6","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:ispresented:placement:prompt:)-1radr","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:ispresented:placement:prompt:)-5qh72","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:)-2nlrs","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:)-6e1gz","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:)-7sycf","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:)-8qo46","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:suggestions:)-69nfh","deprecated":true,"title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:suggestions:)-7szd7","deprecated":true,"title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:suggestions:)-9wrn1","deprecated":true,"title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:ispresented:placement:prompt:token:)-11tbs","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:ispresented:placement:prompt:token:)-56mpd","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7jhc1","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:ispresented:placement:prompt:token:)-99d36","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:placement:prompt:token:)-2l90s","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:placement:prompt:token:)-8xoqc","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:placement:prompt:token:)-9bd8i","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:placement:prompt:token:)-9qdqk","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-3xgd0","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4ev44","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6hizm","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9glt7","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1aoyg","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-393x6","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4unsj","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-9llhx","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sectionactions(content:)","title":"func sectionActions<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sectionindexlabel(_:)-514gn","title":"func sectionIndexLabel<S>(S?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sectionindexlabel(_:)-9h1ag","title":"func sectionIndexLabel(Text?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/selectiondisabled(_:)","title":"func selectionDisabled(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sensoryfeedback(_:trigger:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sensoryfeedback(_:trigger:condition:)","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sensoryfeedback(trigger:_:)-5vwr9","title":"func sensoryFeedback<T>(trigger: T, () -> SensoryFeedback?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sensoryfeedback(trigger:_:)-6n3io","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/shadow(color:radius:x:y:)","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sheet(ispresented:ondismiss:content:)","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sheet(item:ondismiss:content:)","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/simultaneousgesture(_:including:)","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/simultaneousgesture(_:isenabled:)","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/simultaneousgesture(_:name:isenabled:)","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sliderthumbvisibility(_:)","title":"func sliderThumbVisibility(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/speechadjustedpitch(_:)","title":"func speechAdjustedPitch(Double) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/speechalwaysincludespunctuation(_:)","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/speechannouncementsqueued(_:)","title":"func speechAnnouncementsQueued(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/speechspellsoutcharacters(_:)","title":"func speechSpellsOutCharacters(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/springloadingbehavior(_:)","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/statusbar(hidden:)","deprecated":true,"title":"func statusBar(hidden: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/statusbarhidden(_:)","title":"func statusBarHidden(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/strikethrough(_:pattern:color:)","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/submitlabel(_:)","title":"func submitLabel(SubmitLabel) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/submitscope(_:)","title":"func submitScope(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/swipeactions(edge:allowsfullswipe:content:)","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symbolcolorrenderingmode(_:)","title":"func symbolColorRenderingMode(SymbolColorRenderingMode?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symboleffect(_:options:isactive:)","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symboleffect(_:options:value:)","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symboleffectsremoved(_:)","title":"func symbolEffectsRemoved(Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symbolrenderingmode(_:)","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symbolvariablevaluemode(_:)","title":"func symbolVariableValueMode(SymbolVariableValueMode?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symbolvariant(_:)","title":"func symbolVariant(SymbolVariants) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabbarminimizebehavior(_:)","title":"func tabBarMinimizeBehavior(TabBarMinimizeBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabitem(_:)","deprecated":true,"title":"func tabItem<V>(() -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewbottomaccessory(content:)","title":"func tabViewBottomAccessory<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewcustomization(_:)","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewsearchactivation(_:)","title":"func tabViewSearchActivation(TabSearchActivation) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewsidebarbottombar(content:)","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewsidebarfooter(content:)","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewsidebarheader(content:)","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewstyle(_:)","title":"func tabViewStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tablecolumnheaders(_:)","title":"func tableColumnHeaders(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tablestyle(_:)","title":"func tableStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tag(_:includeoptional:)","title":"func tag<V>(V, includeOptional: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/task(id:priority:_:)","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/task(priority:_:)","title":"func task(priority: TaskPriority, () async -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textcase(_:)","title":"func textCase(Text.Case?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textcontenttype(_:)","title":"func textContentType(UITextContentType?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/texteditorstyle(_:)","title":"func textEditorStyle(some TextEditorStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textfieldstyle(_:)","title":"func textFieldStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textinputautocapitalization(_:)","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textinputformattingcontrolvisibility(_:for:)","title":"func textInputFormattingControlVisibility(Visibility, for: TextInputFormattingControlPlacement.Set) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textrenderer(_:)","title":"func textRenderer<T>(T) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textscale(_:isenabled:)","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textselection(_:)","title":"func textSelection<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textselectionaffinity(_:)","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tint(_:)","title":"func tint(Color?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipanchor(_:)","title":"func tipAnchor<AnchorID>(AnchorID) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipbackground(_:)","title":"func tipBackground<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipbackgroundinteraction(_:)","title":"func tipBackgroundInteraction(PresentationBackgroundInteraction) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipcornerradius(_:antialiased:)","title":"func tipCornerRadius(CGFloat, antialiased: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipimagesize(_:)","title":"func tipImageSize(CGSize) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipimagestyle(_:)","title":"func tipImageStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipimagestyle(_:_:)","title":"func tipImageStyle<S1, S2>(S1, S2) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipimagestyle(_:_:_:)","title":"func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipviewstyle(_:)","title":"func tipViewStyle(some TipViewStyle) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/togglestyle(_:)","title":"func toggleStyle<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(_:for:)","deprecated":true,"title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(content:)-4mg8z","title":"func toolbar<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(content:)-8ac4v","title":"func toolbar<Content>(content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(id:content:)","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(removing:)","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarbackground(_:for:)-1cb5","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarbackground(_:for:)-4ki5q","deprecated":true,"title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarbackgroundvisibility(_:for:)","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarcolorscheme(_:for:)","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarforegroundstyle(_:for:)","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarrole(_:)","title":"func toolbarRole(ToolbarRole) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbartitledisplaymode(_:)","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbartitlemenu(content:)","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarvisibility(_:for:)","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tracking(_:)","title":"func tracking(CGFloat) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transaction(_:)","title":"func transaction((inout Transaction) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transaction(_:body:)","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transaction(value:_:)","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transformanchorpreference(key:value:transform:)","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transformeffect(_:)","title":"func transformEffect(CGAffineTransform) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transformenvironment(_:transform:)","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transformpreference(_:_:)","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transition(_:)","title":"func transition(AnyTransition) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/truncationmode(_:)","title":"func truncationMode(Text.TruncationMode) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typeselectequivalent(_:)-4uf7k","title":"func typeSelectEquivalent(LocalizedStringResource) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typeselectequivalent(_:)-5iorw","title":"func typeSelectEquivalent<S>(S) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typeselectequivalent(_:)-64glb","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typeselectequivalent(_:)-7i795","title":"func typeSelectEquivalent(Text?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typesettinglanguage(_:isenabled:)-6zq5o","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typesettinglanguage(_:isenabled:)-9wihd","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/underline(_:pattern:color:)","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/unredacted()","title":"func unredacted() -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/useractivity(_:element:_:)","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/useractivity(_:isactive:_:)","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/visualeffect(_:)","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/windowtoolbarfullscreenvisibility(_:)","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/writingdirection(strategy:)","title":"func writingDirection(strategy: Text.WritingDirectionStrategy) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/writingtoolsaffordancevisibility(_:)","title":"func writingToolsAffordanceVisibility(Visibility) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/writingtoolsbehavior(_:)","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/zindex(_:)","title":"func zIndex(Double) -> some View"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/view-implementations","type":"symbol","title":"View Implementations"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionview","title":"TKUIAutocompletionView"},{"type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(title: String, accessibilityLabel: String?, icon: UIImage, style: TKUICardActionStyle, isInProgress: Bool, isEnabled: Bool)","path":"\/documentation\/tripkitui\/tkuicardactioncontent\/init(title:accessibilitylabel:icon:style:isinprogress:isenabled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var accessibilityLabel: String?","path":"\/documentation\/tripkitui\/tkuicardactioncontent\/accessibilitylabel","type":"property"},{"title":"var icon: UIImage","path":"\/documentation\/tripkitui\/tkuicardactioncontent\/icon","type":"property"},{"title":"var isEnabled: Bool","path":"\/documentation\/tripkitui\/tkuicardactioncontent\/isenabled","type":"property"},{"title":"var isInProgress: Bool","path":"\/documentation\/tripkitui\/tkuicardactioncontent\/isinprogress","type":"property"},{"title":"var style: TKUICardActionStyle","path":"\/documentation\/tripkitui\/tkuicardactioncontent\/style","type":"property"},{"title":"var title: String","path":"\/documentation\/tripkitui\/tkuicardactioncontent\/title","type":"property"}],"path":"\/documentation\/tripkitui\/tkuicardactioncontent","title":"TKUICardActionContent"},{"type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var body: some View","type":"property","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/body"},{"title":"Default Implementations","type":"groupMarker"},{"title":"View Implementations","type":"symbol","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/view-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","deprecated":true,"title":"func accentColor(Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accentcolor(_:)"},{"type":"method","deprecated":true,"title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(activationpoint:)-2xu24"},{"type":"method","deprecated":true,"title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(activationpoint:)-3h02a"},{"type":"method","deprecated":true,"title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(addtraits:)"},{"type":"method","deprecated":true,"title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(hidden:)"},{"type":"method","deprecated":true,"title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(hint:)"},{"type":"method","deprecated":true,"title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(identifier:)"},{"type":"method","deprecated":true,"title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(inputlabels:)"},{"type":"method","deprecated":true,"title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(label:)"},{"type":"method","deprecated":true,"title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(removetraits:)"},{"type":"method","deprecated":true,"title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(selectionidentifier:)"},{"type":"method","deprecated":true,"title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(sortpriority:)"},{"type":"method","deprecated":true,"title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(value:)"},{"type":"method","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(_:_:)"},{"type":"method","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(action:label:)"},{"type":"method","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(named:_:)-3zdwy"},{"type":"method","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(named:_:)-5i1uz"},{"type":"method","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(named:_:)-7zuu4"},{"type":"method","title":"func accessibilityAction(named: LocalizedStringResource, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(named:_:)-9epxi"},{"type":"method","title":"func accessibilityActions<Content>(() -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactions(_:)"},{"type":"method","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactions(category:_:)"},{"type":"method","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactivationpoint(_:)-5n7l9"},{"type":"method","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactivationpoint(_:)-7j5n0"},{"type":"method","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactivationpoint(_:isenabled:)-5z9zj"},{"type":"method","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactivationpoint(_:isenabled:)-7c80b"},{"type":"method","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaddtraits(_:)"},{"type":"method","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityadjustableaction(_:)"},{"type":"method","title":"func accessibilityChartDescriptor<R>(R) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitychartdescriptor(_:)"},{"type":"method","title":"func accessibilityChildren<V>(children: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitychildren(children:)"},{"type":"method","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-10u11"},{"type":"method","title":"func accessibilityCustomContent(LocalizedStringResource, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-138uo"},{"type":"method","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringResource, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-2k1uc"},{"type":"method","title":"func accessibilityCustomContent<V>(LocalizedStringResource, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-2vdq5"},{"type":"method","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-3l0cz"},{"type":"method","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-47uns"},{"type":"method","title":"func accessibilityCustomContent(LocalizedStringResource, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-4k7is"},{"type":"method","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-5huac"},{"type":"method","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-6dkti"},{"type":"method","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-6gky"},{"type":"method","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-6umdk"},{"type":"method","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-8su64"},{"type":"method","title":"func accessibilityDefaultFocus<Value>(AccessibilityFocusState<Value>.Binding, Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydefaultfocus(_:_:)"},{"type":"method","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydirecttouch(_:options:)"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:)-2qluo"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:)-3ncow"},{"type":"method","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:)-65tbu"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:)-98qnc"},{"type":"method","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:isenabled:)-41b0o"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:isenabled:)-4xla2"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:isenabled:)-7ccv8"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:isenabled:)-8iap4"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:)-494j3"},{"type":"method","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:)-5q2ky"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:)-6s3bu"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:)-9svbr"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:isenabled:)-10qzr"},{"type":"method","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:isenabled:)-3l253"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:isenabled:)-58a3v"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:isenabled:)-6wd77"},{"type":"method","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityelement(children:)"},{"type":"method","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityfocused(_:)"},{"type":"method","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityfocused(_:equals:)"},{"type":"method","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityheading(_:)"},{"type":"method","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhidden(_:)"},{"type":"method","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhidden(_:isenabled:)"},{"type":"method","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:)-5sm6m"},{"type":"method","title":"func accessibilityHint(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:)-6u0x3"},{"type":"method","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:)-9apy9"},{"type":"method","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:)-sj2z"},{"type":"method","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:isenabled:)-811z8"},{"type":"method","title":"func accessibilityHint(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:isenabled:)-8uqtj"},{"type":"method","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:isenabled:)-9mc9g"},{"type":"method","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:isenabled:)-ygz9"},{"type":"method","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityidentifier(_:)"},{"type":"method","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityidentifier(_:isenabled:)"},{"type":"method","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityignoresinvertcolors(_:)"},{"type":"method","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:)-3jl4n"},{"type":"method","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:)-756rb"},{"type":"method","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:)-95dgf"},{"type":"method","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:isenabled:)-2h7ur"},{"type":"method","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:isenabled:)-2l0da"},{"type":"method","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:isenabled:)-3ccq"},{"type":"method","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:)-4enpc"},{"type":"method","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:)-70to6"},{"type":"method","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:)-966dn"},{"type":"method","title":"func accessibilityLabel(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:)-qktw"},{"type":"method","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:isenabled:)-1plha"},{"type":"method","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:isenabled:)-2nl4o"},{"type":"method","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:isenabled:)-586pj"},{"type":"method","title":"func accessibilityLabel(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:isenabled:)-8oibc"},{"type":"method","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(content:)"},{"type":"method","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabeledpair(role:id:in:)"},{"type":"method","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylinkedgroup(id:in:)"},{"type":"method","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityremovetraits(_:)"},{"type":"method","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrepresentation(representation:)"},{"type":"method","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrespondstouserinteraction(_:)"},{"type":"method","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrespondstouserinteraction(_:isenabled:)"},{"type":"method","title":"func accessibilityRotor<Content>(LocalizedStringResource, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-3lcxv"},{"type":"method","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-6379i"},{"type":"method","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-6dj76"},{"type":"method","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-6yied"},{"type":"method","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-72szv"},{"type":"method","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3isrz"},{"type":"method","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5iupa"},{"type":"method","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5ze2j"},{"type":"method","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7lk8v"},{"type":"method","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringResource, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-s25v"},{"type":"method","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-1xaau"},{"type":"method","title":"func accessibilityRotor<EntryModel>(LocalizedStringResource, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-3nr3i"},{"type":"method","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-3ta4a"},{"type":"method","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-5bs5w"},{"type":"method","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-6x2nv"},{"type":"method","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-7chhc"},{"type":"method","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-8pslo"},{"type":"method","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-924hq"},{"type":"method","title":"func accessibilityRotor(LocalizedStringResource, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-9cagk"},{"type":"method","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-rave"},{"type":"method","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotorentry(id:in:)"},{"type":"method","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityscrollaction(_:)"},{"type":"method","title":"func accessibilityScrollStatus(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityscrollstatus(_:isenabled:)-2r7n"},{"type":"method","title":"func accessibilityScrollStatus(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityscrollstatus(_:isenabled:)-6bagc"},{"type":"method","title":"func accessibilityScrollStatus(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityscrollstatus(_:isenabled:)-8uloa"},{"type":"method","title":"func accessibilityScrollStatus(some StringProtocol, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityscrollstatus(_:isenabled:)-gqj7"},{"type":"method","title":"func accessibilityShowsLargeContentViewer() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityshowslargecontentviewer()"},{"type":"method","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityshowslargecontentviewer(_:)"},{"type":"method","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitysortpriority(_:)"},{"type":"method","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitytextcontenttype(_:)"},{"type":"method","title":"func accessibilityValue(LocalizedStringResource) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:)-1egfn"},{"type":"method","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:)-2s0uz"},{"type":"method","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:)-46mzb"},{"type":"method","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:)-iqkv"},{"type":"method","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:isenabled:)-3d2lk"},{"type":"method","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:isenabled:)-3z52h"},{"type":"method","title":"func accessibilityValue(LocalizedStringResource, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:isenabled:)-74kul"},{"type":"method","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:isenabled:)-9xime"},{"type":"method","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityzoomaction(_:)"},{"type":"method","deprecated":true,"title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/actionsheet(ispresented:content:)"},{"type":"method","deprecated":true,"title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/actionsheet(item:content:)"},{"type":"method","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:)-24e23"},{"type":"method","title":"func alert<A>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:)-5e8wr"},{"type":"method","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:)-7dana"},{"type":"method","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:)-9n9fm"},{"type":"method","title":"func alert<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:message:)-6dzre"},{"type":"method","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:message:)-6w4jp"},{"type":"method","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:message:)-93ziu"},{"type":"method","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:message:)-9kywi"},{"type":"method","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:)-4pda5"},{"type":"method","title":"func alert<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:)-8dyyt"},{"type":"method","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:)-8tnqa"},{"type":"method","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:)-9frgt"},{"type":"method","title":"func alert<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:message:)-1q5qs"},{"type":"method","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:message:)-79h3i"},{"type":"method","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:message:)-7xe9l"},{"type":"method","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:message:)-x8jg"},{"type":"method","deprecated":true,"title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(ispresented:content:)"},{"type":"method","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(ispresented:error:actions:)"},{"type":"method","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(ispresented:error:actions:message:)"},{"type":"method","deprecated":true,"title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(item:content:)"},{"type":"method","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alignmentguide(_:computevalue:)-6fbgx"},{"type":"method","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alignmentguide(_:computevalue:)-6lr7n"},{"type":"method","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alloweddynamicrange(_:)"},{"type":"method","title":"func allowsHitTesting(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/allowshittesting(_:)"},{"type":"method","title":"func allowsTightening(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/allowstightening(_:)"},{"type":"method","title":"func allowsWindowActivationEvents() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/allowswindowactivationevents()"},{"type":"method","title":"func allowsWindowActivationEvents(Bool?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/allowswindowactivationevents(_:)"},{"type":"method","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/anchorpreference(key:value:transform:)"},{"type":"method","deprecated":true,"title":"func animation(Animation?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/animation(_:)"},{"type":"method","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/animation(_:body:)"},{"type":"method","title":"func animation<V>(Animation?, value: V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/animation(_:value:)"},{"type":"method","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/aspectratio(_:contentmode:)-7z93p"},{"type":"method","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/aspectratio(_:contentmode:)-lzpn"},{"type":"method","title":"func assistiveAccessNavigationIcon(Image) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/assistiveaccessnavigationicon(_:)"},{"type":"method","title":"func assistiveAccessNavigationIcon(systemImage: String) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/assistiveaccessnavigationicon(systemimage:)"},{"type":"method","title":"func attributedTextFormattingDefinition<D>(D) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/attributedtextformattingdefinition(_:)-3d6o0"},{"type":"method","title":"func attributedTextFormattingDefinition<S>(KeyPath<AttributeScopes, S.Type>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/attributedtextformattingdefinition(_:)-5yooo"},{"type":"method","title":"func attributedTextFormattingDefinition<S>(S.Type) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/attributedtextformattingdefinition(_:)-6gggn"},{"type":"method","deprecated":true,"title":"func autocapitalization(UITextAutocapitalizationType) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/autocapitalization(_:)"},{"type":"method","title":"func autocorrectionDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/autocorrectiondisabled(_:)"},{"type":"method","deprecated":true,"title":"func background<Background>(Background, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(_:alignment:)"},{"type":"method","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(_:ignoressafeareaedges:)"},{"type":"method","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(_:in:fillstyle:)-7buuu"},{"type":"method","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(_:in:fillstyle:)-8imam"},{"type":"method","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(alignment:content:)"},{"type":"method","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(ignoressafeareaedges:)"},{"type":"method","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(in:fillstyle:)-30fit"},{"type":"method","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(in:fillstyle:)-61d75"},{"type":"method","title":"func backgroundExtensionEffect() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/backgroundextensioneffect()"},{"type":"method","title":"func backgroundExtensionEffect(isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/backgroundextensioneffect(isenabled:)"},{"type":"method","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/backgroundpreferencevalue(_:_:)"},{"type":"method","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/backgroundpreferencevalue(_:alignment:_:)"},{"type":"method","title":"func backgroundStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/backgroundstyle(_:)"},{"type":"method","title":"func badge(LocalizedStringKey?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-2h1g9"},{"type":"method","title":"func badge(Int) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-4hqja"},{"type":"method","title":"func badge(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-7vu1l"},{"type":"method","title":"func badge<S>(S?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-9fxzg"},{"type":"method","title":"func badge(LocalizedStringResource?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-cgek"},{"type":"method","title":"func badgeProminence(BadgeProminence) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badgeprominence(_:)"},{"type":"method","title":"func baselineOffset(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/baselineoffset(_:)"},{"type":"method","title":"func blendMode(BlendMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/blendmode(_:)"},{"type":"method","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/blur(radius:opaque:)"},{"type":"method","title":"func bold(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/bold(_:)"},{"type":"method","title":"func border<S>(S, width: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/border(_:width:)"},{"type":"method","title":"func brightness(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/brightness(_:)"},{"type":"method","title":"func buttonBorderShape(ButtonBorderShape) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonbordershape(_:)"},{"type":"method","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonrepeatbehavior(_:)"},{"type":"method","title":"func buttonSizing(ButtonSizing) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonsizing(_:)"},{"type":"method","title":"func buttonStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonstyle(_:)-2afjy"},{"type":"method","title":"func buttonStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonstyle(_:)-41yc7"},{"type":"method","title":"func chart3DCameraProjection(Chart3DCameraProjection) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chart3dcameraprojection(_:)"},{"type":"method","title":"func chart3DPose(Chart3DPose) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chart3dpose(_:)-466zt"},{"type":"method","title":"func chart3DPose(Binding<Chart3DPose>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chart3dpose(_:)-97dzy"},{"type":"method","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartangleselection(value:)"},{"type":"method","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartbackground(alignment:content:)"},{"type":"method","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(_:)"},{"type":"method","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(domain:mapping:)"},{"type":"method","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(domain:range:type:)"},{"type":"method","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(domain:type:)"},{"type":"method","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(mapping:)"},{"type":"method","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(range:type:)"},{"type":"method","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(type:)"},{"type":"method","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartgesture(_:)"},{"type":"method","title":"func chartLegend(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlegend(_:)"},{"type":"method","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlegend(position:alignment:spacing:)"},{"type":"method","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlegend(position:alignment:spacing:content:)"},{"type":"method","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(_:)"},{"type":"method","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(domain:)"},{"type":"method","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(domain:mapping:)"},{"type":"method","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(domain:range:)"},{"type":"method","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(mapping:)"},{"type":"method","title":"func chartLineStyleScale<Range>(range: Range) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(range:)"},{"type":"method","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartoverlay(alignment:content:)"},{"type":"method","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartplotstyle(content:)"},{"type":"method","title":"func chartScrollPosition(initialX: some Plottable) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollposition(initialx:)"},{"type":"method","title":"func chartScrollPosition(initialY: some Plottable) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollposition(initialy:)"},{"type":"method","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollposition(x:)"},{"type":"method","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollposition(y:)"},{"type":"method","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrolltargetbehavior(_:)"},{"type":"method","title":"func chartScrollableAxes(Axis.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollableaxes(_:)"},{"type":"method","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(_:)-7we3w"},{"type":"method","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(_:)-7y2pu"},{"type":"method","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(domain:)"},{"type":"method","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(domain:mapping:)"},{"type":"method","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(domain:range:)-1t51j"},{"type":"method","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(domain:range:)-71qtg"},{"type":"method","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(mapping:)"},{"type":"method","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(range:)-59lkp"},{"type":"method","title":"func chartSymbolScale<Range>(range: Range) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(range:)-5lfkn"},{"type":"method","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(_:)"},{"type":"method","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(domain:mapping:)"},{"type":"method","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(domain:range:type:)"},{"type":"method","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(domain:type:)"},{"type":"method","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(mapping:)"},{"type":"method","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(range:type:)"},{"type":"method","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(type:)"},{"type":"method","title":"func chartXAxis(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxis(_:)"},{"type":"method","title":"func chartXAxis<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxis(content:)"},{"type":"method","title":"func chartXAxisLabel(LocalizedStringResource, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxislabel(_:position:alignment:spacing:)-26jc1"},{"type":"method","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxislabel(_:position:alignment:spacing:)-35aja"},{"type":"method","title":"func chartXAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxislabel(_:position:alignment:spacing:)-7gcc0"},{"type":"method","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxislabel(position:alignment:spacing:content:)"},{"type":"method","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxisstyle(content:)"},{"type":"method","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxscale(domain:range:type:)"},{"type":"method","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxscale(domain:type:)"},{"type":"method","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxscale(range:type:)"},{"type":"method","title":"func chartXScale(type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxscale(type:)"},{"type":"method","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxselection(range:)"},{"type":"method","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxselection(value:)"},{"type":"method","title":"func chartXVisibleDomain<P>(length: P) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxvisibledomain(length:)"},{"type":"method","title":"func chartYAxis(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxis(_:)"},{"type":"method","title":"func chartYAxis<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxis(content:)"},{"type":"method","title":"func chartYAxisLabel(LocalizedStringResource, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxislabel(_:position:alignment:spacing:)-6i5t4"},{"type":"method","title":"func chartYAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxislabel(_:position:alignment:spacing:)-6sbij"},{"type":"method","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxislabel(_:position:alignment:spacing:)-962j4"},{"type":"method","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxislabel(position:alignment:spacing:content:)"},{"type":"method","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxisstyle(content:)"},{"type":"method","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyscale(domain:range:type:)"},{"type":"method","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyscale(domain:type:)"},{"type":"method","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyscale(range:type:)"},{"type":"method","title":"func chartYScale(type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyscale(type:)"},{"type":"method","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyselection(range:)"},{"type":"method","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyselection(value:)"},{"type":"method","title":"func chartYVisibleDomain<P>(length: P) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyvisibledomain(length:)"},{"type":"method","title":"func chartZAxis(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzaxis(_:)"},{"type":"method","title":"func chartZAxis<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzaxis(content:)"},{"type":"method","title":"func chartZAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzaxislabel(_:position:alignment:spacing:)-27i6j"},{"type":"method","title":"func chartZAxisLabel(some StringProtocol, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzaxislabel(_:position:alignment:spacing:)-434j0"},{"type":"method","title":"func chartZAxisLabel(LocalizedStringResource, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzaxislabel(_:position:alignment:spacing:)-64k8n"},{"type":"method","title":"func chartZScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzscale(domain:range:type:)"},{"type":"method","title":"func chartZScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzscale(domain:type:)"},{"type":"method","title":"func chartZScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzscale(range:type:)"},{"type":"method","title":"func chartZSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzselection(range:)"},{"type":"method","title":"func chartZSelection<P>(value: Binding<P?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartzselection(value:)"},{"type":"method","title":"func clipShape<S>(S, style: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/clipshape(_:style:)"},{"type":"method","title":"func clipped(antialiased: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/clipped(antialiased:)"},{"type":"method","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/coloreffect(_:isenabled:)"},{"type":"method","title":"func colorInvert() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/colorinvert()"},{"type":"method","title":"func colorMultiply(Color) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/colormultiply(_:)"},{"type":"method","deprecated":true,"title":"func colorScheme(ColorScheme) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/colorscheme(_:)"},{"type":"method","title":"func compositingGroup() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/compositinggroup()"},{"type":"method","title":"func confirmationDialog<A>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-36cq2"},{"type":"method","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5a1w3"},{"type":"method","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5mgkq"},{"type":"method","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8dsbt"},{"type":"method","title":"func confirmationDialog<A, M>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-1q5fn"},{"type":"method","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2zvh5"},{"type":"method","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-tzgv"},{"type":"method","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-wjlx"},{"type":"method","title":"func confirmationDialog<A, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-2696w"},{"type":"method","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6qxdc"},{"type":"method","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6xu46"},{"type":"method","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-84v94"},{"type":"method","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-201hv"},{"type":"method","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2gkvd"},{"type":"method","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6o3tj"},{"type":"method","title":"func confirmationDialog<A, M, T>(LocalizedStringResource, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-70c0q"},{"type":"method","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerbackground(_:for:)"},{"type":"method","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerbackground(for:alignment:content:)"},{"type":"method","title":"func containerCornerOffset(Edge.Set, sizeToFit: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containercorneroffset(_:sizetofit:)"},{"type":"method","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerrelativeframe(_:alignment:)"},{"type":"method","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerrelativeframe(_:alignment:_:)"},{"type":"method","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerrelativeframe(_:count:span:spacing:alignment:)"},{"type":"method","title":"func containerShape<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containershape(_:)-1a88o"},{"type":"method","title":"func containerShape(some RoundedRectangularShape) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containershape(_:)-2wmor"},{"type":"method","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containervalue(_:_:)"},{"type":"method","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentmargins(_:_:for:)-1he8u"},{"type":"method","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentmargins(_:_:for:)-4edn8"},{"type":"method","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentmargins(_:for:)"},{"type":"method","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentshape(_:_:eofill:)"},{"type":"method","title":"func contentShape<S>(S, eoFill: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentshape(_:eofill:)"},{"type":"method","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contenttoolbar(for:content:)-80s69"},{"type":"method","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contenttoolbar(for:content:)-yhp5"},{"type":"method","title":"func contentTransition(ContentTransition) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contenttransition(_:)"},{"type":"method","deprecated":true,"title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contextmenu(_:)"},{"type":"method","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contextmenu(forselectiontype:menu:primaryaction:)"},{"type":"method","deprecated":true,"title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contextmenu(menuitems:)"},{"type":"method","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contextmenu(menuitems:preview:)"},{"type":"method","title":"func contrast(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contrast(_:)"},{"type":"method","title":"func controlGroupStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/controlgroupstyle(_:)"},{"type":"method","title":"func controlSize(ControlSize) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/controlsize(_:)"},{"type":"method","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/coordinatespace(_:)"},{"type":"method","deprecated":true,"title":"func coordinateSpace<T>(name: T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/coordinatespace(name:)"},{"type":"method","deprecated":true,"title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/cornerradius(_:antialiased:)"},{"type":"method","title":"func datePickerStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/datepickerstyle(_:)"},{"type":"method","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultadaptabletabbarplacement(_:)"},{"type":"method","title":"func defaultAppStorage(UserDefaults) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultappstorage(_:)"},{"type":"method","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultfocus(_:_:priority:)"},{"type":"method","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaulthovereffect(_:)-1eysk"},{"type":"method","title":"func defaultHoverEffect(HoverEffect?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaulthovereffect(_:)-6t179"},{"type":"method","title":"func defaultScrollAnchor(UnitPoint?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultscrollanchor(_:)"},{"type":"method","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultscrollanchor(_:for:)"},{"type":"method","title":"func defersSystemGestures(on: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/deferssystemgestures(on:)"},{"type":"method","title":"func deleteDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/deletedisabled(_:)"},{"type":"method","title":"func dialogIcon(Image?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogicon(_:)"},{"type":"method","title":"func dialogSuppressionToggle(LocalizedStringResource, isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(_:issuppressed:)-1v3lq"},{"type":"method","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(_:issuppressed:)-3rw6b"},{"type":"method","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(_:issuppressed:)-7xen5"},{"type":"method","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(_:issuppressed:)-av66"},{"type":"method","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(issuppressed:)"},{"type":"method","deprecated":true,"title":"func disableAutocorrection(Bool?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/disableautocorrection(_:)"},{"type":"method","title":"func disabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/disabled(_:)"},{"type":"method","title":"func disclosureGroupStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/disclosuregroupstyle(_:)"},{"type":"method","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/distortioneffect(_:maxsampleoffset:isenabled:)"},{"type":"method","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/documentbrowsercontextmenu(_:)"},{"type":"method","title":"func draggable<T>(@autoclosure () -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/draggable(_:)"},{"type":"method","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/draggable(_:preview:)"},{"type":"method","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/drawinggroup(opaque:colormode:)"},{"type":"method","deprecated":true,"title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dropdestination(for:action:istargeted:)"},{"type":"method","title":"func dropDestination<T>(for: T.Type, isEnabled: Bool, action: ([T], DropSession) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dropdestination(for:isenabled:action:)"},{"type":"method","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dynamictypesize(_:)"},{"type":"method","deprecated":true,"title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/edgesignoringsafearea(_:)"},{"type":"method","title":"func environment<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/environment(_:)"},{"type":"method","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/environment(_:_:)"},{"type":"method","title":"func environmentObject<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/environmentobject(_:)"},{"type":"method","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogbrowseroptions(_:)"},{"type":"method","title":"func fileDialogConfirmationLabel(LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogconfirmationlabel(_:)-1v36u"},{"type":"method","title":"func fileDialogConfirmationLabel(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogconfirmationlabel(_:)-2kwbh"},{"type":"method","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogconfirmationlabel(_:)-5ma5m"},{"type":"method","title":"func fileDialogConfirmationLabel<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogconfirmationlabel(_:)-8n0n1"},{"type":"method","title":"func fileDialogCustomizationID(String) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogcustomizationid(_:)"},{"type":"method","title":"func fileDialogDefaultDirectory(URL?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogdefaultdirectory(_:)"},{"type":"method","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogimportsunresolvedaliases(_:)"},{"type":"method","title":"func fileDialogMessage(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogmessage(_:)-529c0"},{"type":"method","title":"func fileDialogMessage<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogmessage(_:)-5w0ur"},{"type":"method","title":"func fileDialogMessage(LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogmessage(_:)-6g6ls"},{"type":"method","title":"func fileDialogMessage(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogmessage(_:)-8dval"},{"type":"method","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogurlenabled(_:)"},{"type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3wiys"},{"type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8h7m8"},{"type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1owwv"},{"type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6h6nz"},{"type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-35b5z"},{"type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8r11c"},{"type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8ob21"},{"type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-ds5g"},{"type":"method","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)"},{"type":"method","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)"},{"type":"method","title":"func fileExporterFilenameLabel(LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporterfilenamelabel(_:)-3covv"},{"type":"method","title":"func fileExporterFilenameLabel<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporterfilenamelabel(_:)-3e7qi"},{"type":"method","title":"func fileExporterFilenameLabel(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporterfilenamelabel(_:)-46psd"},{"type":"method","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporterfilenamelabel(_:)-8y6ho"},{"type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)"},{"type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)"},{"type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)"},{"type":"method","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filemover(ispresented:file:oncompletion:)"},{"type":"method","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filemover(ispresented:file:oncompletion:oncancellation:)"},{"type":"method","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filemover(ispresented:files:oncompletion:)"},{"type":"method","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filemover(ispresented:files:oncompletion:oncancellation:)"},{"type":"method","title":"func findDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/finddisabled(_:)"},{"type":"method","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/findnavigator(ispresented:)"},{"type":"method","title":"func fixedSize() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fixedsize()"},{"type":"method","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fixedsize(horizontal:vertical:)"},{"type":"method","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/flipsforrighttoleftlayoutdirection(_:)"},{"type":"method","title":"func focusEffectDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focuseffectdisabled(_:)"},{"type":"method","title":"func focusable(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusable(_:)"},{"type":"method","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusable(_:interactions:)"},{"type":"method","title":"func focused(FocusState<Bool>.Binding) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focused(_:)"},{"type":"method","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focused(_:equals:)"},{"type":"method","title":"func focusedObject<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedobject(_:)-1zmpl"},{"type":"method","title":"func focusedObject<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedobject(_:)-6nsku"},{"type":"method","title":"func focusedSceneObject<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedsceneobject(_:)-4mxde"},{"type":"method","title":"func focusedSceneObject<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedsceneobject(_:)-8id43"},{"type":"method","title":"func focusedSceneValue<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedscenevalue(_:)"},{"type":"method","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedscenevalue(_:_:)-5ymgn"},{"type":"method","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedscenevalue(_:_:)-8w54n"},{"type":"method","title":"func focusedValue<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedvalue(_:)"},{"type":"method","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedvalue(_:_:)-5yrob"},{"type":"method","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedvalue(_:_:)-74in9"},{"type":"method","title":"func font(Font?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/font(_:)"},{"type":"method","title":"func fontDesign(Font.Design?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fontdesign(_:)"},{"type":"method","title":"func fontWeight(Font.Weight?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fontweight(_:)"},{"type":"method","title":"func fontWidth(Font.Width?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fontwidth(_:)"},{"type":"method","deprecated":true,"title":"func foregroundColor(Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/foregroundcolor(_:)"},{"type":"method","title":"func foregroundStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/foregroundstyle(_:)"},{"type":"method","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/foregroundstyle(_:_:)"},{"type":"method","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/foregroundstyle(_:_:_:)"},{"type":"method","title":"func formStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/formstyle(_:)"},{"type":"method","title":"func frame() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/frame()"},{"type":"method","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)"},{"type":"method","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/frame(width:height:alignment:)"},{"type":"method","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fullscreencover(ispresented:ondismiss:content:)"},{"type":"method","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fullscreencover(item:ondismiss:content:)"},{"type":"method","title":"func gaugeStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gaugestyle(_:)"},{"type":"method","title":"func geometryGroup() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/geometrygroup()"},{"type":"method","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gesture(_:)"},{"type":"method","title":"func gesture<T>(T, including: GestureMask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gesture(_:including:)"},{"type":"method","title":"func gesture<T>(T, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gesture(_:isenabled:)"},{"type":"method","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gesture(_:name:isenabled:)"},{"type":"method","title":"func glassEffect(Glass, in: some Shape) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/glasseffect(_:in:)"},{"type":"method","title":"func glassEffectID((some Hashable & Sendable)?, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/glasseffectid(_:in:)"},{"type":"method","title":"func glassEffectTransition(GlassEffectTransition) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/glasseffecttransition(_:)"},{"type":"method","title":"func glassEffectUnion(id: (some Hashable & Sendable)?, namespace: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/glasseffectunion(id:namespace:)"},{"type":"method","title":"func grayscale(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/grayscale(_:)"},{"type":"method","title":"func gridCellAnchor(UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gridcellanchor(_:)"},{"type":"method","title":"func gridCellColumns(Int) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gridcellcolumns(_:)"},{"type":"method","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gridcellunsizedaxes(_:)"},{"type":"method","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gridcolumnalignment(_:)"},{"type":"method","title":"func groupBoxStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/groupboxstyle(_:)"},{"type":"method","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/handgestureshortcut(_:isenabled:)"},{"type":"method","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/handlesexternalevents(preferring:allowing:)"},{"type":"method","title":"func headerProminence(Prominence) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/headerprominence(_:)"},{"type":"method","title":"func help(LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/help(_:)-1rbrf"},{"type":"method","title":"func help<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/help(_:)-3ibs2"},{"type":"method","title":"func help(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/help(_:)-6eqo8"},{"type":"method","title":"func help(Text) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/help(_:)-cp30"},{"type":"method","title":"func hidden() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hidden()"},{"type":"method","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/highprioritygesture(_:including:)"},{"type":"method","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/highprioritygesture(_:isenabled:)"},{"type":"method","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/highprioritygesture(_:name:isenabled:)"},{"type":"method","title":"func hoverEffect(HoverEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hovereffect(_:)"},{"type":"method","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hovereffect(_:isenabled:)-1ft9e"},{"type":"method","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hovereffect(_:isenabled:)-2h9g2"},{"type":"method","title":"func hoverEffectDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hovereffectdisabled(_:)"},{"type":"method","title":"func hueRotation(Angle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/huerotation(_:)"},{"type":"method","title":"func id<ID>(ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/id(_:)"},{"type":"method","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ignoressafearea(_:edges:)"},{"type":"method","title":"func imageScale(Image.Scale) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/imagescale(_:)"},{"type":"method","title":"func indexViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/indexviewstyle(_:)"},{"type":"method","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/inspector(ispresented:content:)"},{"type":"method","title":"func inspectorColumnWidth(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/inspectorcolumnwidth(_:)"},{"type":"method","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/inspectorcolumnwidth(min:ideal:max:)"},{"type":"method","title":"func interactionActivityTrackingTag(String) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/interactionactivitytrackingtag(_:)"},{"type":"method","title":"func interactiveDismissDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/interactivedismissdisabled(_:)"},{"type":"method","title":"func invalidatableContent(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/invalidatablecontent(_:)"},{"type":"method","title":"func italic(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/italic(_:)"},{"type":"method","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/itemprovider(_:)"},{"type":"method","title":"func kerning(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/kerning(_:)"},{"type":"method","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardshortcut(_:)-40v5q"},{"type":"method","title":"func keyboardShortcut(KeyboardShortcut) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardshortcut(_:)-4abo9"},{"type":"method","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardshortcut(_:modifiers:)"},{"type":"method","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardshortcut(_:modifiers:localization:)"},{"type":"method","title":"func keyboardType(UIKeyboardType) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardtype(_:)"},{"type":"method","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyframeanimator(initialvalue:repeating:content:keyframes:)"},{"type":"method","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyframeanimator(initialvalue:trigger:content:keyframes:)"},{"type":"method","title":"func labelIconToTitleSpacing(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labelicontotitlespacing(_:)"},{"type":"method","title":"func labelReservedIconWidth(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labelreservediconwidth(_:)"},{"type":"method","title":"func labelStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labelstyle(_:)"},{"type":"method","title":"func labeledContentStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labeledcontentstyle(_:)"},{"type":"method","title":"func labelsHidden() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labelshidden()"},{"type":"method","title":"func labelsVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labelsvisibility(_:)"},{"type":"method","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/layereffect(_:maxsampleoffset:isenabled:)"},{"type":"method","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/layoutdirectionbehavior(_:)"},{"type":"method","title":"func layoutPriority(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/layoutpriority(_:)"},{"type":"method","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/layoutvalue(key:value:)"},{"type":"method","title":"func lineHeight(AttributedString.LineHeight?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/lineheight(_:)"},{"type":"method","title":"func lineLimit(Int?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/linelimit(_:)"},{"type":"method","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/linelimit(_:reservesspace:)"},{"type":"method","title":"func lineSpacing(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/linespacing(_:)"},{"type":"method","title":"func listItemTint(Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listitemtint(_:)-3z5a7"},{"type":"method","title":"func listItemTint(ListItemTint?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listitemtint(_:)-5fh2"},{"type":"method","title":"func listRowBackground<V>(V?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowbackground(_:)"},{"type":"method","title":"func listRowInsets(EdgeInsets?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowinsets(_:)"},{"type":"method","title":"func listRowInsets(Edge.Set, CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowinsets(_:_:)"},{"type":"method","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowseparator(_:edges:)"},{"type":"method","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowseparatortint(_:edges:)"},{"type":"method","title":"func listRowSpacing(CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowspacing(_:)"},{"type":"method","title":"func listSectionIndexVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionindexvisibility(_:)"},{"type":"method","title":"func listSectionMargins(Edge.Set, CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionmargins(_:_:)"},{"type":"method","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionseparator(_:edges:)"},{"type":"method","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionseparatortint(_:edges:)"},{"type":"method","title":"func listSectionSpacing(ListSectionSpacing) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionspacing(_:)-3y66y"},{"type":"method","title":"func listSectionSpacing(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionspacing(_:)-6iey5"},{"type":"method","title":"func listStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/liststyle(_:)"},{"type":"method","title":"func lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/lookaroundviewer(ispresented:initialscene:allowsnavigation:showsroadlabels:pointsofinterest:ondismiss:)"},{"type":"method","title":"func lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/lookaroundviewer(ispresented:scene:allowsnavigation:showsroadlabels:pointsofinterest:ondismiss:)"},{"type":"method","title":"func luminanceToAlpha() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/luminancetoalpha()"},{"type":"method","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapcamerakeyframeanimator(trigger:keyframes:)"},{"type":"method","title":"func mapControlVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapcontrolvisibility(_:)"},{"type":"method","title":"func mapControls(() -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapcontrols(_:)"},{"type":"method","title":"func mapFeatureSelectionAccessory(MapItemDetailSelectionAccessoryStyle?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapfeatureselectionaccessory(_:)"},{"type":"method","title":"func mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapfeatureselectioncontent(content:)"},{"type":"method","title":"func mapFeatureSelectionDisabled((MapFeature) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapfeatureselectiondisabled(_:)"},{"type":"method","title":"func mapItemDetailPopover(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailpopover(ispresented:item:displaysmap:attachmentanchor:)"},{"type":"method","title":"func mapItemDetailPopover(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailpopover(ispresented:item:displaysmap:attachmentanchor:arrowedge:)"},{"type":"method","title":"func mapItemDetailPopover(item: Binding<MKMapItem?>, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailpopover(item:displaysmap:attachmentanchor:)"},{"type":"method","title":"func mapItemDetailPopover(item: Binding<MKMapItem?>, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailpopover(item:displaysmap:attachmentanchor:arrowedge:)"},{"type":"method","title":"func mapItemDetailSheet(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailsheet(ispresented:item:displaysmap:)"},{"type":"method","title":"func mapItemDetailSheet(item: Binding<MKMapItem?>, displaysMap: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailsheet(item:displaysmap:)"},{"type":"method","title":"func mapScope(Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapscope(_:)"},{"type":"method","title":"func mapStyle(MapStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapstyle(_:)"},{"type":"method","deprecated":true,"title":"func mask<Mask>(Mask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mask(_:)"},{"type":"method","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mask(alignment:_:)"},{"type":"method","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/matchedgeometryeffect(id:in:properties:anchor:issource:)"},{"type":"method","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/matchedtransitionsource(id:in:)"},{"type":"method","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/matchedtransitionsource(id:in:configuration:)"},{"type":"method","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/materialactiveappearance(_:)"},{"type":"method","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/menuactiondismissbehavior(_:)"},{"type":"method","title":"func menuIndicator(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/menuindicator(_:)"},{"type":"method","title":"func menuOrder(MenuOrder) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/menuorder(_:)"},{"type":"method","title":"func menuStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/menustyle(_:)"},{"type":"method","title":"func minimumScaleFactor(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/minimumscalefactor(_:)"},{"type":"method","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/modifier(_:)"},{"type":"method","title":"func monospaced(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/monospaced(_:)"},{"type":"method","title":"func monospacedDigit() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/monospaceddigit()"},{"type":"method","title":"func moveDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/movedisabled(_:)"},{"type":"method","title":"func multilineTextAlignment(TextAlignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/multilinetextalignment(_:)"},{"type":"method","title":"func multilineTextAlignment(strategy: Text.AlignmentStrategy) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/multilinetextalignment(strategy:)"},{"type":"method","title":"func navigationBarBackButtonHidden(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbarbackbuttonhidden(_:)"},{"type":"method","deprecated":true,"title":"func navigationBarHidden(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbarhidden(_:)"},{"type":"method","deprecated":true,"title":"func navigationBarItems<L>(leading: L) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbaritems(leading:)"},{"type":"method","deprecated":true,"title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbaritems(leading:trailing:)"},{"type":"method","deprecated":true,"title":"func navigationBarItems<T>(trailing: T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbaritems(trailing:)"},{"type":"method","deprecated":true,"title":"func navigationBarTitle(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:)-5eru6"},{"type":"method","deprecated":true,"title":"func navigationBarTitle(Text) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:)-7toiq"},{"type":"method","deprecated":true,"title":"func navigationBarTitle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:)-rhrt"},{"type":"method","deprecated":true,"title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:displaymode:)-244i3"},{"type":"method","deprecated":true,"title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:displaymode:)-8tr07"},{"type":"method","deprecated":true,"title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:displaymode:)-95vh2"},{"type":"method","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitledisplaymode(_:)"},{"type":"method","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdestination(for:destination:)"},{"type":"method","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdestination(ispresented:destination:)"},{"type":"method","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdestination(item:destination:)"},{"type":"method","title":"func navigationDocument(URL) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:)-49mpp"},{"type":"method","title":"func navigationDocument<D>(D) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:)-4ix74"},{"type":"method","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:preview:)-30dpi"},{"type":"method","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:preview:)-4s1to"},{"type":"method","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:preview:)-6ry9x"},{"type":"method","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:preview:)-mu5p"},{"type":"method","title":"func navigationLinkIndicatorVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationlinkindicatorvisibility(_:)"},{"type":"method","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsplitviewcolumnwidth(_:)"},{"type":"method","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsplitviewcolumnwidth(min:ideal:max:)"},{"type":"method","title":"func navigationSplitViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsplitviewstyle(_:)"},{"type":"method","title":"func navigationSubtitle(LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsubtitle(_:)-2qln3"},{"type":"method","title":"func navigationSubtitle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsubtitle(_:)-651nr"},{"type":"method","title":"func navigationSubtitle(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsubtitle(_:)-96bba"},{"type":"method","title":"func navigationSubtitle(Text) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsubtitle(_:)-hlp6"},{"type":"method","title":"func navigationTitle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-2hy88"},{"type":"method","title":"func navigationTitle(LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-42jvs"},{"type":"method","title":"func navigationTitle(Binding<String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-5g5uw"},{"type":"method","title":"func navigationTitle(Text) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-5z1ey"},{"type":"method","title":"func navigationTitle(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-6io82"},{"type":"method","title":"func navigationTitle<V>(() -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-87hgk"},{"type":"method","title":"func navigationTransition(some NavigationTransition) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtransition(_:)"},{"type":"method","deprecated":true,"title":"func navigationViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationviewstyle(_:)"},{"type":"method","title":"func offset(CGSize) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/offset(_:)"},{"type":"method","title":"func offset(x: CGFloat, y: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/offset(x:y:)"},{"type":"method","title":"func onAppear(perform: (() -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onappear(perform:)"},{"type":"method","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onchange(of:initial:_:)-3d8f6"},{"type":"method","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onchange(of:initial:_:)-4k62a"},{"type":"method","deprecated":true,"title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onchange(of:perform:)"},{"type":"method","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/oncontinueuseractivity(_:perform:)"},{"type":"method","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/oncontinuoushover(coordinatespace:perform:)-5ih1p"},{"type":"method","deprecated":true,"title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/oncontinuoushover(coordinatespace:perform:)-6ahkf"},{"type":"method","title":"func onDisappear(perform: (() -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondisappear(perform:)"},{"type":"method","title":"func onDrag(() -> NSItemProvider) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrag(_:)"},{"type":"method","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrag(_:preview:)"},{"type":"method","deprecated":true,"title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:delegate:)-199zg"},{"type":"method","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:delegate:)-5mwga"},{"type":"method","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:istargeted:perform:)-1vu8y"},{"type":"method","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:istargeted:perform:)-62dit"},{"type":"method","deprecated":true,"title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:istargeted:perform:)-7wjky"},{"type":"method","deprecated":true,"title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:istargeted:perform:)-9f9nh"},{"type":"method","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ongeometrychange(for:of:action:)-2ysje"},{"type":"method","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ongeometrychange(for:of:action:)-4dv51"},{"type":"method","title":"func onHover(perform: (Bool) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onhover(perform:)"},{"type":"method","title":"func onInteractiveResizeChange((Bool) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/oninteractiveresizechange(_:)"},{"type":"method","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(_:action:)"},{"type":"method","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(_:phases:action:)"},{"type":"method","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(characters:phases:action:)"},{"type":"method","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(keys:phases:action:)"},{"type":"method","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(phases:action:)"},{"type":"method","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)"},{"type":"method","deprecated":true,"title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)"},{"type":"method","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)"},{"type":"method","deprecated":true,"title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onlongpressgesture(minimumduration:pressing:perform:)"},{"type":"method","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onmapcamerachange(frequency:_:)-8wbyw"},{"type":"method","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onmapcamerachange(frequency:_:)-9dkuh"},{"type":"method","title":"func onOpenURL(perform: (URL) -> ()) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onopenurl(perform:)"},{"type":"method","title":"func onOpenURL(prefersInApp: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onopenurl(prefersinapp:)"},{"type":"method","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onpencildoubletap(perform:)"},{"type":"method","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onpencilsqueeze(perform:)"},{"type":"method","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onpreferencechange(_:perform:)"},{"type":"method","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onreceive(_:perform:)"},{"type":"method","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrollgeometrychange(for:of:action:)"},{"type":"method","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrollphasechange(_:)-9wpxx"},{"type":"method","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrollphasechange(_:)-fmwd"},{"type":"method","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrolltargetvisibilitychange(idtype:threshold:_:)"},{"type":"method","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrollvisibilitychange(threshold:_:)"},{"type":"method","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onsubmit(of:_:)"},{"type":"method","deprecated":true,"title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ontapgesture(count:coordinatespace:perform:)-4ijz3"},{"type":"method","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ontapgesture(count:coordinatespace:perform:)-53d3c"},{"type":"method","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ontapgesture(count:perform:)"},{"type":"method","title":"func opacity(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/opacity(_:)"},{"type":"method","deprecated":true,"title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlay(_:alignment:)"},{"type":"method","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlay(_:ignoressafeareaedges:)"},{"type":"method","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlay(_:in:fillstyle:)"},{"type":"method","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlay(alignment:content:)"},{"type":"method","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlaypreferencevalue(_:_:)"},{"type":"method","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlaypreferencevalue(_:alignment:_:)"},{"type":"method","title":"func padding(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/padding(_:)-7erqo"},{"type":"method","title":"func padding(EdgeInsets) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/padding(_:)-8511u"},{"type":"method","title":"func padding(Edge.Set, CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/padding(_:_:)"},{"type":"method","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/paletteselectioneffect(_:)"},{"type":"method","title":"func persistentSystemOverlays(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/persistentsystemoverlays(_:)"},{"type":"method","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/phaseanimator(_:content:animation:)"},{"type":"method","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/phaseanimator(_:trigger:content:animation:)"},{"type":"method","title":"func pickerStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/pickerstyle(_:)"},{"type":"method","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/popover(ispresented:attachmentanchor:arrowedge:content:)"},{"type":"method","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/popover(item:attachmentanchor:arrowedge:content:)"},{"type":"method","title":"func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/popovertip(_:arrowedge:action:)"},{"type":"method","title":"func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/popovertip(_:ispresented:attachmentanchor:arrowedge:action:)"},{"type":"method","title":"func popoverTip((any Tip)?, isPresented: Binding<Bool>?, attachmentAnchor: PopoverAttachmentAnchor, arrowEdges: Edge.Set, action: (Tips.Action) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/popovertip(_:ispresented:attachmentanchor:arrowedges:action:)"},{"type":"method","title":"func position(CGPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/position(_:)"},{"type":"method","title":"func position(x: CGFloat, y: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/position(x:y:)"},{"type":"method","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/preference(key:value:)"},{"type":"method","title":"func preferredColorScheme(ColorScheme?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/preferredcolorscheme(_:)"},{"type":"method","title":"func presentationBackground<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationbackground(_:)"},{"type":"method","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationbackground(alignment:content:)"},{"type":"method","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationbackgroundinteraction(_:)"},{"type":"method","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationcompactadaptation(_:)"},{"type":"method","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationcompactadaptation(horizontal:vertical:)"},{"type":"method","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationcontentinteraction(_:)"},{"type":"method","title":"func presentationCornerRadius(CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationcornerradius(_:)"},{"type":"method","title":"func presentationDetents(Set<PresentationDetent>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationdetents(_:)"},{"type":"method","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationdetents(_:selection:)"},{"type":"method","title":"func presentationDragIndicator(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationdragindicator(_:)"},{"type":"method","title":"func presentationSizing(some PresentationSizing) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationsizing(_:)"},{"type":"method","title":"func previewContext<C>(C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewcontext(_:)"},{"type":"method","title":"func previewDevice(PreviewDevice?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewdevice(_:)"},{"type":"method","title":"func previewDisplayName(String?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewdisplayname(_:)"},{"type":"method","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewinterfaceorientation(_:)"},{"type":"method","title":"func previewLayout(PreviewLayout) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewlayout(_:)"},{"type":"method","title":"func privacySensitive(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/privacysensitive(_:)"},{"type":"method","title":"func progressViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/progressviewstyle(_:)"},{"type":"method","title":"func projectionEffect(ProjectionTransform) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/projectioneffect(_:)"},{"type":"method","title":"func redacted(reason: RedactionReasons) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/redacted(reason:)"},{"type":"method","title":"func refreshable(action: () async -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/refreshable(action:)"},{"type":"method","title":"func renameAction(FocusState<Bool>.Binding) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/renameaction(_:)-1vtsq"},{"type":"method","title":"func renameAction(() -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/renameaction(_:)-6jdf5"},{"type":"method","title":"func replaceDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/replacedisabled(_:)"},{"type":"method","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)"},{"type":"method","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/rotationeffect(_:anchor:)"},{"type":"method","title":"func safeAreaBar(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareabar(edge:alignment:spacing:content:)-1h5hu"},{"type":"method","title":"func safeAreaBar(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareabar(edge:alignment:spacing:content:)-6ife6"},{"type":"method","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareainset(edge:alignment:spacing:content:)-2aqqp"},{"type":"method","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareainset(edge:alignment:spacing:content:)-5loq5"},{"type":"method","title":"func safeAreaPadding(EdgeInsets) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareapadding(_:)-14c67"},{"type":"method","title":"func safeAreaPadding(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareapadding(_:)-2td20"},{"type":"method","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareapadding(_:_:)"},{"type":"method","title":"func saturation(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/saturation(_:)"},{"type":"method","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaleeffect(_:anchor:)-1aiyp"},{"type":"method","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaleeffect(_:anchor:)-2q0v1"},{"type":"method","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaleeffect(x:y:anchor:)"},{"type":"method","title":"func scaledToFill() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaledtofill()"},{"type":"method","title":"func scaledToFit() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaledtofit()"},{"type":"method","title":"func scenePadding(Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scenepadding(_:)"},{"type":"method","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scenepadding(_:edges:)"},{"type":"method","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollbouncebehavior(_:axes:)"},{"type":"method","title":"func scrollClipDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollclipdisabled(_:)"},{"type":"method","title":"func scrollContentBackground(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollcontentbackground(_:)"},{"type":"method","title":"func scrollDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolldisabled(_:)"},{"type":"method","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolldismisseskeyboard(_:)"},{"type":"method","title":"func scrollEdgeEffectHidden(Bool, for: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolledgeeffecthidden(_:for:)"},{"type":"method","title":"func scrollEdgeEffectStyle(ScrollEdgeEffectStyle?, for: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolledgeeffectstyle(_:for:)"},{"type":"method","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollindicators(_:axes:)"},{"type":"method","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollindicatorsflash(onappear:)"},{"type":"method","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollindicatorsflash(trigger:)"},{"type":"method","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollinputbehavior(_:for:)"},{"type":"method","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollposition(_:anchor:)"},{"type":"method","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollposition(id:anchor:)"},{"type":"method","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolltargetbehavior(_:)"},{"type":"method","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolltargetlayout(isenabled:)"},{"type":"method","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolltransition(_:axis:transition:)"},{"type":"method","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolltransition(topleading:bottomtrailing:axis:transition:)"},{"type":"method","title":"func searchCompletion(String) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchcompletion(_:)"},{"type":"method","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchdictationbehavior(_:)"},{"type":"method","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchfocused(_:)"},{"type":"method","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchfocused(_:equals:)"},{"type":"method","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchpresentationtoolbarbehavior(_:)"},{"type":"method","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchscopes(_:activation:_:)"},{"type":"method","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchscopes(_:scopes:)"},{"type":"method","title":"func searchSelection(Binding<TextSelection?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchselection(_:)"},{"type":"method","title":"func searchSuggestions<S>(() -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchsuggestions(_:)"},{"type":"method","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchsuggestions(_:for:)"},{"type":"method","title":"func searchToolbarBehavior(SearchToolbarBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchtoolbarbehavior(_:)"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-2c9ru"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3h4x1"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6ws93"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8nm2p"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:placement:prompt:token:)-50wsw"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:placement:prompt:token:)-74oay"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:placement:prompt:token:)-7k0tz"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:placement:prompt:token:)-8aa0y"},{"type":"method","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:ispresented:placement:prompt:)-2if6w"},{"type":"method","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:ispresented:placement:prompt:)-4pi5u"},{"type":"method","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:ispresented:placement:prompt:)-7crsq"},{"type":"method","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:ispresented:placement:prompt:)-9or1c"},{"type":"method","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:)-1nooo"},{"type":"method","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:)-2pzcb"},{"type":"method","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:)-2qeug"},{"type":"method","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:)-9o1wk"},{"type":"method","deprecated":true,"title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:suggestions:)-3gfiu"},{"type":"method","deprecated":true,"title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:suggestions:)-77rj5"},{"type":"method","deprecated":true,"title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:suggestions:)-uozv"},{"type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2xfqn"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-4cmx3"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6iiy0"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-89slp"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:placement:prompt:token:)-2wxdo"},{"type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:placement:prompt:token:)-4glhk"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:placement:prompt:token:)-50h82"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:placement:prompt:token:)-58hjd"},{"type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-56ztg"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6c5x7"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9buih"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9f5i8"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-37spg"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3agcl"},{"type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-751jj"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringResource, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-959sv"},{"type":"method","title":"func sectionActions<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sectionactions(content:)"},{"type":"method","title":"func sectionIndexLabel<S>(S?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sectionindexlabel(_:)-62pvu"},{"type":"method","title":"func sectionIndexLabel(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sectionindexlabel(_:)-9r4ug"},{"type":"method","title":"func selectionDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/selectiondisabled(_:)"},{"type":"method","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sensoryfeedback(_:trigger:)"},{"type":"method","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sensoryfeedback(_:trigger:condition:)"},{"type":"method","title":"func sensoryFeedback<T>(trigger: T, () -> SensoryFeedback?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sensoryfeedback(trigger:_:)-32ov2"},{"type":"method","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sensoryfeedback(trigger:_:)-5o9lf"},{"type":"method","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/shadow(color:radius:x:y:)"},{"type":"method","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sheet(ispresented:ondismiss:content:)"},{"type":"method","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sheet(item:ondismiss:content:)"},{"type":"method","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/simultaneousgesture(_:including:)"},{"type":"method","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/simultaneousgesture(_:isenabled:)"},{"type":"method","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/simultaneousgesture(_:name:isenabled:)"},{"type":"method","title":"func sliderThumbVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sliderthumbvisibility(_:)"},{"type":"method","title":"func speechAdjustedPitch(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/speechadjustedpitch(_:)"},{"type":"method","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/speechalwaysincludespunctuation(_:)"},{"type":"method","title":"func speechAnnouncementsQueued(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/speechannouncementsqueued(_:)"},{"type":"method","title":"func speechSpellsOutCharacters(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/speechspellsoutcharacters(_:)"},{"type":"method","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/springloadingbehavior(_:)"},{"type":"method","deprecated":true,"title":"func statusBar(hidden: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/statusbar(hidden:)"},{"type":"method","title":"func statusBarHidden(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/statusbarhidden(_:)"},{"type":"method","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/strikethrough(_:pattern:color:)"},{"type":"method","title":"func submitLabel(SubmitLabel) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/submitlabel(_:)"},{"type":"method","title":"func submitScope(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/submitscope(_:)"},{"type":"method","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/swipeactions(edge:allowsfullswipe:content:)"},{"type":"method","title":"func symbolColorRenderingMode(SymbolColorRenderingMode?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symbolcolorrenderingmode(_:)"},{"type":"method","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symboleffect(_:options:isactive:)"},{"type":"method","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symboleffect(_:options:value:)"},{"type":"method","title":"func symbolEffectsRemoved(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symboleffectsremoved(_:)"},{"type":"method","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symbolrenderingmode(_:)"},{"type":"method","title":"func symbolVariableValueMode(SymbolVariableValueMode?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symbolvariablevaluemode(_:)"},{"type":"method","title":"func symbolVariant(SymbolVariants) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symbolvariant(_:)"},{"type":"method","title":"func tabBarMinimizeBehavior(TabBarMinimizeBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabbarminimizebehavior(_:)"},{"type":"method","deprecated":true,"title":"func tabItem<V>(() -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabitem(_:)"},{"type":"method","title":"func tabViewBottomAccessory<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewbottomaccessory(content:)"},{"type":"method","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewcustomization(_:)"},{"type":"method","title":"func tabViewSearchActivation(TabSearchActivation) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewsearchactivation(_:)"},{"type":"method","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewsidebarbottombar(content:)"},{"type":"method","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewsidebarfooter(content:)"},{"type":"method","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewsidebarheader(content:)"},{"type":"method","title":"func tabViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewstyle(_:)"},{"type":"method","title":"func tableColumnHeaders(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tablecolumnheaders(_:)"},{"type":"method","title":"func tableStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tablestyle(_:)"},{"type":"method","title":"func tag<V>(V, includeOptional: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tag(_:includeoptional:)"},{"type":"method","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/task(id:priority:_:)"},{"type":"method","title":"func task(priority: TaskPriority, () async -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/task(priority:_:)"},{"type":"method","title":"func textCase(Text.Case?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textcase(_:)"},{"type":"method","title":"func textContentType(UITextContentType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textcontenttype(_:)"},{"type":"method","title":"func textEditorStyle(some TextEditorStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/texteditorstyle(_:)"},{"type":"method","title":"func textFieldStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textfieldstyle(_:)"},{"type":"method","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textinputautocapitalization(_:)"},{"type":"method","title":"func textInputFormattingControlVisibility(Visibility, for: TextInputFormattingControlPlacement.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textinputformattingcontrolvisibility(_:for:)"},{"type":"method","title":"func textRenderer<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textrenderer(_:)"},{"type":"method","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textscale(_:isenabled:)"},{"type":"method","title":"func textSelection<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textselection(_:)"},{"type":"method","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textselectionaffinity(_:)"},{"type":"method","title":"func tint(Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tint(_:)"},{"type":"method","title":"func tipAnchor<AnchorID>(AnchorID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipanchor(_:)"},{"type":"method","title":"func tipBackground<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipbackground(_:)"},{"type":"method","title":"func tipBackgroundInteraction(PresentationBackgroundInteraction) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipbackgroundinteraction(_:)"},{"type":"method","title":"func tipCornerRadius(CGFloat, antialiased: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipcornerradius(_:antialiased:)"},{"type":"method","title":"func tipImageSize(CGSize) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipimagesize(_:)"},{"type":"method","title":"func tipImageStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipimagestyle(_:)"},{"type":"method","title":"func tipImageStyle<S1, S2>(S1, S2) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipimagestyle(_:_:)"},{"type":"method","title":"func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipimagestyle(_:_:_:)"},{"type":"method","title":"func tipViewStyle(some TipViewStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipviewstyle(_:)"},{"type":"method","title":"func toggleStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/togglestyle(_:)"},{"type":"method","deprecated":true,"title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(_:for:)"},{"type":"method","title":"func toolbar<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(content:)-5o1q6"},{"type":"method","title":"func toolbar<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(content:)-9qgyz"},{"type":"method","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(id:content:)"},{"type":"method","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(removing:)"},{"type":"method","deprecated":true,"title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarbackground(_:for:)-1mbd"},{"type":"method","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarbackground(_:for:)-kuj3"},{"type":"method","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarbackgroundvisibility(_:for:)"},{"type":"method","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarcolorscheme(_:for:)"},{"type":"method","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarforegroundstyle(_:for:)"},{"type":"method","title":"func toolbarRole(ToolbarRole) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarrole(_:)"},{"type":"method","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbartitledisplaymode(_:)"},{"type":"method","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbartitlemenu(content:)"},{"type":"method","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarvisibility(_:for:)"},{"type":"method","title":"func tracking(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tracking(_:)"},{"type":"method","title":"func transaction((inout Transaction) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transaction(_:)"},{"type":"method","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transaction(_:body:)"},{"type":"method","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transaction(value:_:)"},{"type":"method","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transformanchorpreference(key:value:transform:)"},{"type":"method","title":"func transformEffect(CGAffineTransform) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transformeffect(_:)"},{"type":"method","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transformenvironment(_:transform:)"},{"type":"method","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transformpreference(_:_:)"},{"type":"method","title":"func transition(AnyTransition) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transition(_:)"},{"type":"method","title":"func truncationMode(Text.TruncationMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/truncationmode(_:)"},{"type":"method","title":"func typeSelectEquivalent<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typeselectequivalent(_:)-1brb2"},{"type":"method","title":"func typeSelectEquivalent(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typeselectequivalent(_:)-5u7np"},{"type":"method","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typeselectequivalent(_:)-6mu5m"},{"type":"method","title":"func typeSelectEquivalent(LocalizedStringResource) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typeselectequivalent(_:)-74ozh"},{"type":"method","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typesettinglanguage(_:isenabled:)-6j781"},{"type":"method","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typesettinglanguage(_:isenabled:)-77ne7"},{"type":"method","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/underline(_:pattern:color:)"},{"type":"method","title":"func unredacted() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/unredacted()"},{"type":"method","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/useractivity(_:element:_:)"},{"type":"method","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/useractivity(_:isactive:_:)"},{"type":"method","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/visualeffect(_:)"},{"type":"method","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/windowtoolbarfullscreenvisibility(_:)"},{"type":"method","title":"func writingDirection(strategy: Text.WritingDirectionStrategy) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/writingdirection(strategy:)"},{"type":"method","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/writingtoolsaffordancevisibility(_:)"},{"type":"method","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/writingtoolsbehavior(_:)"},{"type":"method","title":"func zIndex(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/zindex(_:)"}]}],"path":"\/documentation\/tripkitui\/tkuidatetimepickerview","title":"TKUIDateTimePickerView"},{"type":"struct","children":[{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static var handler: @MainActor (Event) -> Void","path":"\/documentation\/tripkitui\/tkuieventcallback\/handler"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","title":"TKUIEventCallback.Event","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case cardAppeared(TGCard)","path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/cardappeared(_:)"},{"type":"case","title":"case routesLoaded(TripRequest, controller: TGCardViewController)","path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/routesloaded(_:controller:)"},{"type":"case","title":"case screenAppeared(name: String, controller: UIViewController)","path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/screenappeared(name:controller:)"},{"type":"case","title":"case timetableSelected(TKTimetable, controller: TGCardViewController)","path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/timetableselected(_:controller:)"},{"type":"case","title":"case tripSelected(Trip, controller: TGCardViewController, DisposeBag)","path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/tripselected(_:controller:_:)"}],"path":"\/documentation\/tripkitui\/tkuieventcallback\/event"}],"path":"\/documentation\/tripkitui\/tkuieventcallback","title":"TKUIEventCallback"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let annotation: MKAnnotation","path":"\/documentation\/tripkitui\/tkuilocationinfo\/annotation"},{"type":"property","title":"let routeButton: RouteButton","path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.property"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKUILocationInfo.RouteButton","path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.enum\/allowed","title":"case allowed","type":"case"},{"path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.enum\/notallowed","title":"case notAllowed","type":"case"},{"path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.enum\/replace(title:ontap:)","title":"case replace(title: String, onTap: () -> Void)","type":"case"}]}],"path":"\/documentation\/tripkitui\/tkuilocationinfo","title":"TKUILocationInfo"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let polyline: TKRoutePolyline","path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem\/polyline"},{"type":"property","title":"let selectionIdentifier: String","path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem\/selectionidentifier"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem\/!=(_:_:)"}]}],"path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem","title":"TKUIRoutingResultsMapRouteItem"},{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitui\/==(_:_:)-1c1fc","title":"func == (TKUIRoutingResultsMapRouteItem, TKUIRoutingResultsMapRouteItem) -> Bool"},{"type":"op","path":"\/documentation\/tripkitui\/==(_:_:)-3iayo","title":"func == (ItemPath, ItemPath) -> Bool"},{"type":"op","path":"\/documentation\/tripkitui\/==(_:_:)-4emib","title":"func == <V>(IdentifiableValue<V>, IdentifiableValue<V>) -> Bool"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitui\/tklocationrealtime\/fetchlocationinfo(locationid:in:)","type":"method","title":"static func fetchLocationInfo(locationID: String, in: TKRegion) -> Single<TKAPI.LocationInfo>"},{"path":"\/documentation\/tripkitui\/tklocationrealtime\/streamrealtime(for:)","type":"method","title":"static func streamRealTime(for: TKNamedCoordinate) -> Observable<TKAPI.LocationInfo>"},{"path":"\/documentation\/tripkitui\/tklocationrealtime\/streamrealtime(for:fetchonlyon:)","type":"method","title":"static func streamRealTime(for: TKNamedCoordinate, fetchOnlyOn: Observable<Bool>) -> Observable<TKAPI.LocationInfo>"}],"path":"\/documentation\/tripkitui\/tklocationrealtime","title":"TKLocationRealTime"},{"type":"enum","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func streamRealTime(for: Trip, pause: Observable<Bool>) -> Observable<Trip>","path":"\/documentation\/tripkitui\/tkrealtimehelper\/streamrealtime(for:pause:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkrealtimehelper","title":"TKRealTimeHelper"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle\/fadedtint","type":"case","title":"case fadedTint"},{"path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle\/outline","type":"case","title":"case outline"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle\/!=(_:_:)"}],"title":"Equatable Implementations"}],"path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle","title":"TKUICardActionNormalStyle"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicardactionstyle\/bold","title":"case bold","type":"case"},{"path":"\/documentation\/tripkitui\/tkuicardactionstyle\/destructive","title":"case destructive","type":"case"},{"path":"\/documentation\/tripkitui\/tkuicardactionstyle\/normal","title":"case normal","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicardactionstyle\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuicardactionstyle\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/tripkitui\/tkuicardactionstyle","title":"TKUICardActionStyle"},{"type":"enum","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitui\/tkuicardactionsviewfactory\/build(actions:card:model:container:padding:)","type":"method","title":"static func build<C, M>(actions: [TKUICardAction<C, M>], card: C, model: M, container: UIView, padding: Edge.Set) -> UIView"}],"path":"\/documentation\/tripkitui\/tkuicardactionsviewfactory","title":"TKUICardActionsViewFactory"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitui\/tkuilocationhandleraction\/push(_:)","title":"case push(TGCard)"}],"path":"\/documentation\/tripkitui\/tkuilocationhandleraction","title":"TKUILocationHandlerAction"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuisegmentmode\/book","title":"case book","type":"case"},{"path":"\/documentation\/tripkitui\/tkuisegmentmode\/getready","title":"case getReady","type":"case"},{"path":"\/documentation\/tripkitui\/tkuisegmentmode\/onsegment","title":"case onSegment","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuisegmentmode\/!=(_:_:)"}],"path":"\/documentation\/tripkitui\/tkuisegmentmode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tripkitui\/tkuisegmentmode","title":"TKUISegmentMode"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case ifSelectedOrNoSelection","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/ifselectedornoselection"},{"type":"case","title":"case onlyIfSelected","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/onlyifselected"},{"type":"case","title":"case onlyIfSomethingElseIsSelected","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/onlyifsomethingelseisselected"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiselectioncondition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/equatable-implementations"}],"path":"\/documentation\/tripkitui\/tkuiselectioncondition","title":"TKUISelectionCondition"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitui\/viewtransition\/animated","type":"case","title":"case animated"},{"path":"\/documentation\/tripkitui\/viewtransition\/reload","type":"case","title":"case reload"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/viewtransition\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitui\/viewtransition\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"}],"path":"\/documentation\/tripkitui\/viewtransition","title":"ViewTransition"},{"type":"groupMarker","title":"Extended Modules"},{"type":"extension","children":[{"type":"groupMarker","title":"Extended Classes"},{"type":"extension","path":"\/documentation\/tripkitui\/combine\/currentvaluesubject","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"AnyObserverConvertible Implementations","path":"\/documentation\/tripkitui\/combine\/currentvaluesubject\/anyobserverconvertible-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/combine\/currentvaluesubject\/asanyobserver()","type":"method","title":"func asAnyObserver() -> AnyObserver<Output>"}]}],"title":"CurrentValueSubject"},{"type":"extension","path":"\/documentation\/tripkitui\/combine\/passthroughsubject","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"AnyObserverConvertible Implementations","path":"\/documentation\/tripkitui\/combine\/passthroughsubject\/anyobserverconvertible-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/combine\/passthroughsubject\/asanyobserver()","title":"func asAnyObserver() -> AnyObserver<Output>","type":"method"}]}],"title":"PassthroughSubject"},{"type":"groupMarker","title":"Extended Protocols"},{"type":"extension","path":"\/documentation\/tripkitui\/combine\/publisher","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/combine\/publisher\/asinfallible()","title":"func asInfallible() -> Infallible<Output>","type":"method"},{"path":"\/documentation\/tripkitui\/combine\/publisher\/asobservable()","title":"func asObservable() -> Observable<Output>","type":"method"}],"title":"Publisher"}],"path":"\/documentation\/tripkitui\/combine","title":"Combine"},{"type":"extension","children":[{"title":"Extended Types","type":"groupMarker"},{"title":"NSNotification","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"NSNotification.Name","path":"\/documentation\/tripkitui\/foundation\/nsnotification\/name","type":"extension","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitui\/foundation\/nsnotification\/name\/tkuimapmanagerselectionchanged","title":"static let TKUIMapManagerSelectionChanged: Notification.Name"},{"type":"property","path":"\/documentation\/tripkitui\/foundation\/nsnotification\/name\/tkuiupdatedrealtimedata","title":"static let TKUIUpdatedRealTimeData: Notification.Name"}]}],"path":"\/documentation\/tripkitui\/foundation\/nsnotification","type":"extension"}],"path":"\/documentation\/tripkitui\/foundation","title":"Foundation"},{"type":"extension","children":[{"title":"Extended Protocols","type":"groupMarker"},{"title":"SharedSequenceConvertibleType","path":"\/documentation\/tripkitui\/rxcocoa\/sharedsequenceconvertibletype","type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func safeMap<T>(catchError: (Error) -> Void, (Element) async throws -> T?) -> SharedSequence<SharingStrategy, T>","path":"\/documentation\/tripkitui\/rxcocoa\/sharedsequenceconvertibletype\/safemap(catcherror:_:)-1o1yv","type":"method"},{"title":"func safeMap<T>(catchError: (Error) -> Void, (Element) throws -> T?) -> SharedSequence<SharingStrategy, T>","path":"\/documentation\/tripkitui\/rxcocoa\/sharedsequenceconvertibletype\/safemap(catcherror:_:)-8krkn","type":"method"}]}],"path":"\/documentation\/tripkitui\/rxcocoa","title":"RxCocoa"},{"type":"extension","children":[{"title":"Extended Protocols","type":"groupMarker"},{"title":"ObservableConvertibleType","path":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var publisher: AnyPublisher<Element, Swift.Error>","path":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/publisher"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func asPublisher() -> AnyPublisher<Element, Swift.Error>","path":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/aspublisher()"},{"type":"method","title":"func bind<S>(to: S) -> Disposable","path":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/bind(to:)"}]},{"title":"ObservableType","path":"\/documentation\/tripkitui\/rxswift\/observabletype","type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/rxswift\/observabletype\/asyncmap(_:)-7qjd4","title":"func asyncMap<T>((Element) async throws -> T) -> Observable<T>","type":"method"},{"path":"\/documentation\/tripkitui\/rxswift\/observabletype\/asyncmap(_:)-7y3pu","title":"func asyncMap<T>((Element) async -> T) -> Observable<T>","type":"method"}]},{"title":"PrimitiveSequenceType","path":"\/documentation\/tripkitui\/rxswift\/primitivesequencetype","type":"extension","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func create(() async throws -> Element) -> Single<Element>","path":"\/documentation\/tripkitui\/rxswift\/primitivesequencetype\/create(_:)-1favr"},{"type":"method","title":"static func create(() async -> Element) -> Single<Element>","path":"\/documentation\/tripkitui\/rxswift\/primitivesequencetype\/create(_:)-7xiz7"}]},{"title":"Extended Structures","type":"groupMarker"},{"title":"Reactive","path":"\/documentation\/tripkitui\/rxswift\/reactive","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/bikepod","type":"property","title":"var bikePod: Observable<TKAPI.BikePodInfo>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/carpark","type":"property","title":"var carPark: Observable<TKAPI.CarParkInfo>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/carpod","type":"property","title":"var carPod: Observable<TKAPI.CarPodInfo>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/currentlocation","type":"property","title":"var currentLocation: Observable<CLLocation>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/deviceheading","type":"property","title":"var deviceHeading: Observable<CLHeading>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/trip","type":"property","title":"var trip: Infallible<Trip?>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/vehicle","type":"property","title":"var vehicle: Observable<TKAPI.SharedVehicleInfo>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchcurrentlocation(within:)","type":"method","title":"func fetchCurrentLocation(within: TimeInterval) -> Single<CLLocation>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchobjects(_:sortdescriptors:predicate:relationshipkeypathsforprefetching:)","type":"method","title":"func fetchObjects<E>(E.Type, sortDescriptors: [NSSortDescriptor], predicate: NSPredicate?, relationshipKeyPathsForPrefetching: [String]?) -> Observable<[E]>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/hit(_:_:path:parameters:headers:region:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, path: String, parameters: [String : Any], headers: [String : String], region: TKRegion?) -> Single<(Int?, [String : Any], Model)>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/hit(_:_:url:parameters:decoderconfig:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, url: URL, parameters: [String : Any], decoderConfig: (JSONDecoder) -> Void) -> Single<(Int, [String : Any], Model)>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/hit(_:path:parameters:headers:region:)","type":"method","title":"func hit(TKServer.HTTPMethod, path: String, parameters: [String : Any], headers: [String : String], region: TKRegion?) -> Single<(Int?, [String : Any], Data?)>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/hit(_:url:parameters:)","type":"method","title":"func hit(TKServer.HTTPMethod, url: URL, parameters: [String : Any]?) -> Single<(Int, [String : Any], Data)>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/requireregion(_:)-1493","type":"method","title":"func requireRegion(CLLocationCoordinate2D) -> Single<TKRegion>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/requireregion(_:)-f99k","type":"method","title":"func requireRegion(MKCoordinateRegion) -> Single<TKRegion>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/requireregions()","type":"method","title":"func requireRegions() -> Single<Void>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/start()","type":"method","title":"func start() -> Single<[MKMapItem]>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/stream(_:_:path:parameters:headers:region:repeathandler:)","type":"method","title":"func stream<Model>(Model.Type, TKServer.HTTPMethod, path: String, parameters: [String : Any], headers: [String : String], region: TKRegion?, repeatHandler: ((Int?, Model?) -> TKServer.RepeatHandler?)?) -> Observable<(Int?, [String : Any], Model?)>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/stream(_:path:parameters:headers:region:repeathandler:)","type":"method","title":"func stream(TKServer.HTTPMethod, path: String, parameters: [String : Any], headers: [String : String], region: TKRegion?, repeatHandler: ((Int?, Data?) -> TKServer.RepeatHandler?)?) -> Observable<(Int?, [String : Any], Data?)>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/tryauthorization()","type":"method","title":"func tryAuthorization() -> Single<Bool>"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/hiddenmodeidentifiers","type":"property","title":"static var hiddenModeIdentifiers: Observable<Set<String>>"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/downloadcontent(of:forembarkationdate:in:)","type":"method","title":"static func downloadContent(of: Service, forEmbarkationDate: Date, in: TKRegion) -> Single<Void>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/downloadtrip(_:identifier:into:)","type":"method","title":"static func downloadTrip(URL, identifier: String?, into: NSManagedObjectContext) -> Single<Trip>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchbesttrip(for:modes:)","type":"method","title":"static func fetchBestTrip<C>(for: TripRequest, modes: C) -> Single<Trip>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchtransitalertmappings(forregion:)","type":"method","title":"static func fetchTransitAlertMappings(forRegion: TKRegion) -> Single<[TKAPI.AlertMapping]>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchtransitalerts(forregion:)","type":"method","title":"static func fetchTransitAlerts(forRegion: TKRegion) -> Single<[TKAPI.Alert]>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/geocode(_:using:near:)","type":"method","title":"static func geocode(TKGeocodable, using: TKGeocoding, near: MKMapRect) -> Single<Void>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/reportplannedtrip(_:userinfo:includeuserid:)","type":"method","title":"static func reportPlannedTrip(Trip, userInfo: [String : Any], includeUserID: Bool) -> Single<Bool>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/streamupdates(_:updateinterval:active:)","type":"method","title":"static func streamUpdates(Trip, updateInterval: DispatchTimeInterval, active: Observable<Bool>) -> Observable<Trip>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/update(_:)","type":"method","title":"static func update(Trip) -> Single<(Trip, didUpdate: Bool)>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/update(_:url:aborter:)","type":"method","title":"static func update(Trip, url: URL?, aborter: ((URL) -> Bool)) -> Single<Bool>"},{"path":"\/documentation\/tripkitui\/rxswift\/reactive\/update(tripgroups:)","type":"method","title":"static func update(tripGroups: [TripGroup]) -> Observable<TKRealTimeUpdateProgress<Void>>"}]}],"path":"\/documentation\/tripkitui\/rxswift","title":"RxSwift"},{"type":"extension","children":[{"title":"Extended Protocols","type":"groupMarker"},{"title":"BinaryInteger","path":"\/documentation\/tripkitui\/swift\/binaryinteger","type":"extension","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var identity: Self","type":"property","path":"\/documentation\/tripkitui\/swift\/binaryinteger\/identity"}]},{"title":"FloatingPoint","path":"\/documentation\/tripkitui\/swift\/floatingpoint","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/swift\/floatingpoint\/identity","title":"var identity: Self"}]},{"title":"Extended Structures","type":"groupMarker"},{"title":"Array","path":"\/documentation\/tripkitui\/swift\/array","type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func autocomplete(Observable<(String, forced: Bool)>, mapRect: Observable<MKMapRect>) -> Observable<[TKAutocompletionResult]>","type":"method","path":"\/documentation\/tripkitui\/swift\/array\/autocomplete(_:maprect:)"}]},{"title":"String","path":"\/documentation\/tripkitui\/swift\/string","type":"extension","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/swift\/string\/identifiabletype-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/swift\/string\/identity-swift.property","type":"property","title":"var identity: String"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/swift\/string\/identity-swift.typealias","type":"typealias","title":"String.Identity"}],"title":"IdentifiableType Implementations"}]}],"path":"\/documentation\/tripkitui\/swift","title":"Swift"},{"type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tgcardviewcontroller\/tgcardviewcontroller","title":"TGCardViewController","type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func present(UIViewController, inNavigator: Bool, includeClose: Bool, preferredStyle: UIModalPresentationStyle, sender: Any?)","path":"\/documentation\/tripkitui\/tgcardviewcontroller\/tgcardviewcontroller\/present(_:innavigator:includeclose:preferredstyle:sender:)","type":"method"},{"title":"func show(Error, title: String?)","path":"\/documentation\/tripkitui\/tgcardviewcontroller\/tgcardviewcontroller\/show(_:title:)","type":"method"}]}],"path":"\/documentation\/tripkitui\/tgcardviewcontroller","title":"TGCardViewController"},{"type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/alert","title":"Alert","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var icon: TKImage?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/alert\/icon"},{"title":"var iconURL: URL?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/alert\/iconurl"},{"title":"var infoURL: URL?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/alert\/infourl"},{"title":"var lastUpdated: Date?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/alert\/lastupdated"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func isCritical() -> Bool","type":"method","path":"\/documentation\/tripkitui\/tripkit\/alert\/iscritical()"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUIImageAnnotation Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tripkit\/alert\/image","title":"var image: TKImage?"}],"type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/alert\/tkuiimageannotation-implementations"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/stoplocation","title":"StopLocation","children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var clusterIdentifier: String?","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/clusteridentifier","type":"property"},{"title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/image","type":"property"},{"title":"var imageIsTemplate: Bool","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/imageistemplate","type":"property"},{"title":"var imageURL: URL?","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/imageurl","type":"property"},{"title":"var modeInfo: TKModeInfo?","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/modeinfo","type":"property"}],"title":"TKUIModeAnnotation Implementations","type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/tkuimodeannotation-implementations"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits","title":"StopVisits","children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/clusteridentifier","title":"var clusterIdentifier: String?","type":"property"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/image","title":"var image: TKImage?","type":"property"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/imageistemplate","title":"var imageIsTemplate: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/imageurl","title":"var imageURL: URL?","type":"property"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/modeinfo","title":"var modeInfo: TKModeInfo?","type":"property"}],"title":"TKUIModeAnnotation Implementations","path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/tkuimodeannotation-implementations","type":"symbol"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider","title":"TKDeparturesProvider","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"class func downloadDepartures(for: [StopLocation], fromDate: Date, filters: [Filter], limit: Int) -> Single<Bool>","path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/downloaddepartures(for:fromdate:filters:limit:)","type":"method"},{"title":"class func downloadDepartures(for: TKDLSTable, fromDate: Date, limit: Int) -> Single<Set<String>>","path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/downloaddepartures(for:fromdate:limit:)","type":"method"},{"title":"class func fetchDepartures(for: TKDLSTable, fromDate: Date, limit: Int) -> Single<TKAPI.Departures>","path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/fetchdepartures(for:fromdate:limit:)","type":"method"},{"title":"class func fetchDepartures(forStopCodes: [String], fromDate: Date, filters: [Filter], limit: Int, in: TKRegion) -> Single<TKAPI.Departures>","path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/fetchdepartures(forstopcodes:fromdate:filters:limit:in:)","type":"method"},{"title":"class func streamDepartures(forStopCodes: [String], limit: Int, in: TKRegion, repeatHandler: ((Int?, TKAPI.Departures) -> TimeInterval?)?) -> Observable<TKAPI.Departures>","path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/streamdepartures(forstopcodes:limit:in:repeathandler:)","type":"method"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate","title":"TKModeCoordinate","children":[{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/tkuiglyphableannotation-implementations","title":"TKUIGlyphableAnnotation Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/glyphcolor","title":"var glyphColor: TKColor?","type":"property"},{"path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/glyphimage","title":"var glyphImage: TKImage?","type":"property"},{"path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/glyphimageistemplate","title":"var glyphImageIsTemplate: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/glyphimageurl","title":"var glyphImageURL: URL?","type":"property"}]},{"path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/tkuimodeannotation-implementations","title":"TKUIModeAnnotation Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var image: TKImage?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/image"},{"title":"var imageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/imageistemplate"},{"title":"var imageURL: URL?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/imageurl"},{"title":"var modeInfo: TKModeInfo?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/modeinfo"}]}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tknamedcoordinate","title":"TKNamedCoordinate","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUIIdentifiableAnnotation Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tknamedcoordinate\/identity","title":"var identity: String?","type":"property"}],"type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/tknamedcoordinate\/tkuiidentifiableannotation-implementations"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation","title":"TKOnStreetParkingLocation","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var routeColor: TKColor?","path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/routecolor","type":"property"},{"title":"var routeDashPattern: [NSNumber]?","path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/routedashpattern","type":"property"},{"title":"var routeIsTravelled: Bool","path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/routeistravelled","type":"property"},{"title":"var routePath: [Any]","path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/routepath","type":"property"},{"title":"var selectionIdentifier: String?","path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/selectionidentifier","type":"property"}],"title":"TKDisplayableRoute Implementations","path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/tkdisplayableroute-implementations"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tkrealtimefetcher","title":"TKRealTimeFetcher","children":[{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkrealtimefetcher\/reactivecompatible-implementations","title":"ReactiveCompatible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var rx: Reactive<Self>","path":"\/documentation\/tripkitui\/tripkit\/tkrealtimefetcher\/rx","type":"property"}],"type":"symbol"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tkreporter","title":"TKReporter","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"ReactiveCompatible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var rx: Reactive<Self>","path":"\/documentation\/tripkitui\/tripkit\/tkreporter\/rx","type":"property"}],"type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/tkreporter\/reactivecompatible-implementations"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tksegment","title":"TKSegment","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/canflipimage","title":"var canFlipImage: Bool"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/tkuiimageannotation-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/image"}],"title":"TKUIImageAnnotation Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/tkuimodeannotation-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var clusterIdentifier: String?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/clusteridentifier"},{"title":"var imageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/imageistemplate"},{"title":"var imageURL: URL?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/imageurl"}],"title":"TKUIModeAnnotation Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/tkuiselectableonmap-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var selectionCondition: TKUISelectionCondition","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/selectioncondition"},{"title":"var selectionIdentifier: String?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/selectionidentifier"}],"title":"TKUISelectableOnMap Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/tkuisemaphoredisplayable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isTerminal: Bool","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/isterminal"},{"type":"property","title":"var semaphoreMode: TKUISemaphoreView.Mode","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/semaphoremode"}],"title":"TKUISemaphoreDisplayable Implementations"}],"type":"extension"},{"title":"Extended Protocols","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkautocompleting","title":"TKAutocompleting","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func annotation(for: TKAutocompletionResult) -> Single<MKAnnotation?>","type":"method","path":"\/documentation\/tripkitui\/tripkit\/tkautocompleting\/annotation(for:)"},{"title":"func autocomplete(String, near: MKMapRect) -> Single<[TKAutocompletionResult]>","type":"method","path":"\/documentation\/tripkitui\/tripkit\/tkautocompleting\/autocomplete(_:near:)"},{"title":"func triggerAdditional(presenter: UIViewController) -> Single<Bool>","type":"method","path":"\/documentation\/tripkitui\/tripkit\/tkautocompleting\/triggeradditional(presenter:)"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tkgeocoding","title":"TKGeocoding","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func geocode(String, near: MKMapRect) -> Single<[TKNamedCoordinate]>","path":"\/documentation\/tripkitui\/tripkit\/tkgeocoding\/geocode(_:near:)-5lv23","type":"method"},{"title":"func geocode(TKGeocodable, near: MKMapRect) -> Single<Void>","path":"\/documentation\/tripkitui\/tripkit\/tkgeocoding\/geocode(_:near:)-7a5uf","type":"method"}],"type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider","title":"TKBuzzInfoProvider","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider\/fetchvehicleavailabilities(locationid:in:filter:)","title":"static func fetchVehicleAvailabilities(locationId: String, in: TKRegion, filter: Observable<(start: Date, end: Date?)>) -> Observable<[TKAPI.CarAvailability]>","type":"method"},{"path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider\/fetchvehicleavailabilities(locationid:in:start:end:)","title":"static func fetchVehicleAvailabilities(locationId: String, in: TKRegion, start: Date?, end: Date?) -> Single<[TKAPI.CarAvailability]>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider\/reactivecompatible-implementations","title":"ReactiveCompatible Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider\/rx","type":"property","title":"var rx: Reactive<Self>"}]}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tkpathfriendliness","title":"TKPathFriendliness","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tripkit\/tkpathfriendliness\/_(_:_:)","type":"op","title":"static func < (TKPathFriendliness, TKPathFriendliness) -> Bool"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/tripkit\/tktripfetcher","title":"TKTripFetcher","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var rx: Reactive<Self>","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tktripfetcher\/rx"}],"title":"ReactiveCompatible Implementations","path":"\/documentation\/tripkitui\/tripkit\/tktripfetcher\/reactivecompatible-implementations"}],"type":"extension"}],"path":"\/documentation\/tripkitui\/tripkit","title":"TripKit"},{"type":"extension","children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"TKMapTiles","path":"\/documentation\/tripkitui\/tripkitapi\/tkmaptiles","type":"extension","children":[{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmaptiles\/tkuimaptiles-implementations","type":"symbol","title":"TKUIMapTiles Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var id: String","path":"\/documentation\/tripkitui\/tripkitapi\/tkmaptiles\/id","type":"property"}]}]},{"title":"TKModeInfo","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo","type":"extension","children":[{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/comparable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'...(_:)-2ud47","title":"static func ... (Self) -> PartialRangeFrom<Self>"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'...(_:)-3xz0b","title":"static func ... (Self) -> PartialRangeThrough<Self>"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/_(_:_:)","title":"static func < (TKModeInfo, TKModeInfo) -> Bool"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/_(_:_:)-3a08o","title":"static func > (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/_=(_:_:)-427il","title":"static func <= (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/_=(_:_:)-6m9l2","title":"static func >= (Self, Self) -> Bool"}],"type":"symbol","title":"Comparable Implementations"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/tkuimodepickeritem-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/imagetextrepresentation","type":"property","title":"var imageTextRepresentation: String"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/imageurlisbranding","type":"property","title":"var imageURLIsBranding: Bool"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/imageurlistemplate","type":"property","title":"var imageURLIsTemplate: Bool"}],"type":"symbol","title":"TKUIModePickerItem Implementations"}]},{"title":"TKRegionCity","path":"\/documentation\/tripkitui\/tripkitapi\/tkregioncity","type":"extension","children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkregioncity\/image","title":"var image: TKImage?","type":"property"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkregioncity\/imageurl","title":"var imageURL: URL?","type":"property"}],"path":"\/documentation\/tripkitui\/tripkitapi\/tkregioncity\/tkuiimageannotation-implementations","title":"TKUIImageAnnotation Implementations","type":"symbol"}]},{"title":"TKServer","path":"\/documentation\/tripkitui\/tripkitapi\/tkserver","type":"extension","children":[{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkserver\/reactivecompatible-implementations","type":"symbol","title":"ReactiveCompatible Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkserver\/rx","title":"var rx: Reactive<Self>"}]}]},{"title":"Extended Types","type":"groupMarker"},{"title":"TKAPI","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi","type":"extension","children":[{"title":"Extended Types","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert","children":[{"type":"groupMarker","title":"Extended Enumerations"},{"type":"extension","title":"TKAPI.Alert.Severity","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert\/severity","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: UIColor","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert\/severity\/backgroundcolor"},{"title":"var icon: UIImage","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert\/severity\/icon"},{"title":"var textColor: UIColor","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert\/severity\/textcolor"}]}],"title":"TKAPI.Alert","type":"extension"}]},{"title":"TKRegion","path":"\/documentation\/tripkitui\/tripkitapi\/tkregion","type":"extension","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"TKRegion.RoutingMode","path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode","type":"extension","children":[{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode\/tkuimodepickeritem-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var imageTextRepresentation: String","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode\/imagetextrepresentation"},{"title":"var imageURLIsBranding: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode\/imageurlisbranding"},{"title":"var imageURLIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode\/imageurlistemplate"}],"title":"TKUIModePickerItem Implementations"}]}]}],"path":"\/documentation\/tripkitui\/tripkitapi","title":"TripKitAPI"},{"type":"extension","children":[{"type":"groupMarker","title":"Extended Classes"},{"type":"extension","path":"\/documentation\/tripkitui\/uikit\/uibutton","title":"UIButton","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/uikit\/uibutton\/setimage(with:astemplate:placeholder:for:completion:)","type":"method","title":"func setImage(with: URL?, asTemplate: Bool, placeholder: TKImage?, for: UIControl.State, completion: ((Bool) -> Void)?)"}]},{"type":"extension","path":"\/documentation\/tripkitui\/uikit\/uicollectionview","title":"UICollectionView","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/sectionedviewtype-implementations","title":"SectionedViewType Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/batchupdates(_:animationconfiguration:)","type":"method","title":"func batchUpdates<Section>(Changeset<Section>, animationConfiguration: AnimationConfiguration)"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/deleteitemsatindexpaths(_:animationstyle:)","type":"method","title":"func deleteItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/deletesections(_:animationstyle:)","type":"method","title":"func deleteSections([Int], animationStyle: UITableView.RowAnimation)"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/insertitemsatindexpaths(_:animationstyle:)","type":"method","title":"func insertItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/insertsections(_:animationstyle:)","type":"method","title":"func insertSections([Int], animationStyle: UITableView.RowAnimation)"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/moveitematindexpath(_:to:)","type":"method","title":"func moveItemAtIndexPath(IndexPath, to: IndexPath)"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/movesection(_:to:)","type":"method","title":"func moveSection(Int, to: Int)"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/reloaditemsatindexpaths(_:animationstyle:)","type":"method","title":"func reloadItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/reloadsections(_:animationstyle:)","type":"method","title":"func reloadSections([Int], animationStyle: UITableView.RowAnimation)"}]}]},{"type":"extension","path":"\/documentation\/tripkitui\/uikit\/uicolor","title":"UIColor","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isDark: Bool","type":"property","path":"\/documentation\/tripkitui\/uikit\/uicolor\/isdark"}]},{"type":"extension","path":"\/documentation\/tripkitui\/uikit\/uiimage","title":"UIImage","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let badgeCheck: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgecheck"},{"type":"property","title":"static let badgeHeart: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgeheart"},{"type":"property","title":"static let badgeLeaf: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgeleaf"},{"type":"property","title":"static let badgeLightning: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgelightning"},{"type":"property","title":"static let badgeLike: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgelike"},{"type":"property","title":"static let badgeMoney: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgemoney"},{"type":"property","title":"static let iconAlert: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconalert"},{"type":"property","title":"static let iconAlternative: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconalternative"},{"type":"property","title":"static let iconArrow: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconarrow"},{"type":"property","title":"static let iconArrowUp: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconarrowup"},{"type":"property","title":"static let iconChevronDown: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconchevrondown"},{"type":"property","title":"static let iconChevronTimetable: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconchevrontimetable"},{"type":"property","title":"static let iconCompass: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconcompass"},{"type":"property","title":"static let iconCross: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconcross"},{"type":"property","title":"static let iconHidePassword: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconhidepassword"},{"type":"property","title":"static let iconShare: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconshare"},{"type":"property","title":"static let iconShowPassword: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconshowpassword"}]},{"type":"extension","path":"\/documentation\/tripkitui\/uikit\/uiimageview","title":"UIImageView","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func setImage(with: URL?, asTemplate: Bool, placeholder: TKImage?, completion: ((Bool) -> Void)?)","type":"method","path":"\/documentation\/tripkitui\/uikit\/uiimageview\/setimage(with:astemplate:placeholder:completion:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func resetCaches()","type":"method","path":"\/documentation\/tripkitui\/uikit\/uiimageview\/resetcaches()"}]},{"type":"extension","path":"\/documentation\/tripkitui\/uikit\/uitableview","title":"UITableView","children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/batchupdates(_:animationconfiguration:)","title":"func batchUpdates<Section>(Changeset<Section>, animationConfiguration: AnimationConfiguration)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/deleteitemsatindexpaths(_:animationstyle:)","title":"func deleteItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/deletesections(_:animationstyle:)","title":"func deleteSections([Int], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/insertitemsatindexpaths(_:animationstyle:)","title":"func insertItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/insertsections(_:animationstyle:)","title":"func insertSections([Int], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/moveitematindexpath(_:to:)","title":"func moveItemAtIndexPath(IndexPath, to: IndexPath)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/movesection(_:to:)","title":"func moveSection(Int, to: Int)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/reloaditemsatindexpaths(_:animationstyle:)","title":"func reloadItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/reloadsections(_:animationstyle:)","title":"func reloadSections([Int], animationStyle: UITableView.RowAnimation)","type":"method"}],"title":"SectionedViewType Implementations","path":"\/documentation\/tripkitui\/uikit\/uitableview\/sectionedviewtype-implementations","type":"symbol"}]},{"type":"extension","path":"\/documentation\/tripkitui\/uikit\/uiviewcontroller","title":"UIViewController","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/uikit\/uiviewcontroller\/showerrorasalert(_:title:)","type":"method","title":"func showErrorAsAlert(Error, title: String?)"}]}],"path":"\/documentation\/tripkitui\/uikit","title":"UIKit"},{"type":"extension","children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/_locationessentials\/cllocationcoordinate2d\/bearing(from:)","type":"method","title":"func bearing(from: CLLocationCoordinate2D) -> CLLocationDirection"}],"path":"\/documentation\/tripkitui\/_locationessentials\/cllocationcoordinate2d","title":"CLLocationCoordinate2D","type":"extension"}],"path":"\/documentation\/tripkitui\/_locationessentials","title":"_LocationEssentials"}],"title":"TripKitUI"},{"path":"\/documentation\/tripkit","type":"module","children":[{"type":"groupMarker","title":"Setup & Configuration"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var appGroupName: String?","type":"property","path":"\/documentation\/tripkit\/tkconfig\/appgroupname"},{"title":"var appURLScheme: String?","type":"property","path":"\/documentation\/tripkit\/tkconfig\/appurlscheme"},{"title":"var attributionRequired: Bool","type":"property","path":"\/documentation\/tripkit\/tkconfig\/attributionrequired"},{"title":"var betaServerBaseURL: String","type":"property","path":"\/documentation\/tripkit\/tkconfig\/betaserverbaseurl"},{"title":"let configuration: [String : AnyHashable]","type":"property","path":"\/documentation\/tripkit\/tkconfig\/configuration"},{"title":"var oauthCallbackURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkconfig\/oauthcallbackurl"},{"title":"var shareURLDomain: String?","type":"property","path":"\/documentation\/tripkit\/tkconfig\/shareurldomain"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKConfig","type":"property","path":"\/documentation\/tripkit\/tkconfig\/shared"}],"type":"class","path":"\/documentation\/tripkit\/tkconfig","title":"TKConfig"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"TKRegion.RoutingMode","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor?","path":"\/documentation\/tripkit\/tkregion\/routingmode\/color","type":"property"},{"title":"let identifier: String","path":"\/documentation\/tripkit\/tkregion\/routingmode\/identifier","type":"property"},{"title":"var image: TKImage?","path":"\/documentation\/tripkit\/tkregion\/routingmode\/image","type":"property"},{"title":"var imageURL: URL?","path":"\/documentation\/tripkit\/tkregion\/routingmode\/imageurl","type":"property"},{"title":"var remoteImageIsBranding: Bool","path":"\/documentation\/tripkit\/tkregion\/routingmode\/remoteimageisbranding","type":"property"},{"title":"var remoteImageIsTemplate: Bool","path":"\/documentation\/tripkit\/tkregion\/routingmode\/remoteimageistemplate","type":"property"},{"title":"var subtitle: String?","path":"\/documentation\/tripkit\/tkregion\/routingmode\/subtitle","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkit\/tkregion\/routingmode\/title","type":"property"},{"title":"var website: URL?","path":"\/documentation\/tripkit\/tkregion\/routingmode\/website","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/image(type:)","type":"method","title":"func image(type: TKStyleModeIconType) -> TKImage?"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/imageurl(type:)","type":"method","title":"func imageURL(type: TKStyleModeIconType) -> URL?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkregion\/routingmode\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"}],"type":"struct","path":"\/documentation\/tripkit\/tkregion\/routingmode"},{"title":"Initializers","type":"groupMarker"},{"title":"init(asInternationalWithCode: String, modes: [String])","type":"init","path":"\/documentation\/tripkit\/tkregion\/init(asinternationalwithcode:modes:)"},{"title":"init(forTestingWithCode: String, modes: [String], cities: [TKRegion.City])","type":"init","path":"\/documentation\/tripkit\/tkregion\/init(fortestingwithcode:modes:cities:)"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkregion\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let cities: [TKRegion.City]","type":"property","path":"\/documentation\/tripkit\/tkregion\/cities"},{"title":"let code: String","type":"property","path":"\/documentation\/tripkit\/tkregion\/code"},{"title":"var isInternational: Bool","type":"property","path":"\/documentation\/tripkit\/tkregion\/isinternational"},{"title":"let modeIdentifiers: [String]","type":"property","path":"\/documentation\/tripkit\/tkregion\/modeidentifiers"},{"title":"var name: String","type":"property","path":"\/documentation\/tripkit\/tkregion\/name"},{"title":"var polygon: MKPolygon","type":"property","path":"\/documentation\/tripkit\/tkregion\/polygon"},{"title":"var routingModes: [RoutingMode]","type":"property","path":"\/documentation\/tripkit\/tkregion\/routingmodes"},{"title":"let timeZone: TimeZone","type":"property","path":"\/documentation\/tripkit\/tkregion\/timezone"},{"title":"let urls: [URL]","type":"property","path":"\/documentation\/tripkit\/tkregion\/urls"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func contains(CLLocationCoordinate2D) -> Bool","type":"method","path":"\/documentation\/tripkit\/tkregion\/contains(_:)"},{"title":"func contains(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Bool","type":"method","path":"\/documentation\/tripkit\/tkregion\/contains(latitude:longitude:)"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkregion\/encode(to:)"},{"title":"func intersects(MKMapRect) -> Bool","type":"method","path":"\/documentation\/tripkit\/tkregion\/intersects(_:)"},{"title":"func intersects(polygonPoints: [(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)]) -> Bool","type":"method","path":"\/documentation\/tripkit\/tkregion\/intersects(polygonpoints:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKRegion.City","type":"typealias","path":"\/documentation\/tripkit\/tkregion\/city"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var international: TKInternationalRegion","type":"property","path":"\/documentation\/tripkit\/tkregion\/international"}],"type":"class","path":"\/documentation\/tripkit\/tkregion","title":"TKRegion"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hasRegions: Bool","path":"\/documentation\/tripkit\/tkregionmanager\/hasregions"},{"type":"property","title":"var regions: [TKRegion]","path":"\/documentation\/tripkit\/tkregionmanager\/regions"},{"type":"property","title":"var regionsHash: NSNumber?","path":"\/documentation\/tripkit\/tkregionmanager\/regionshash"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func city(nearestTo: CLLocationCoordinate2D) -> TKRegion.City?","path":"\/documentation\/tripkit\/tkregionmanager\/city(nearestto:)"},{"type":"method","title":"func color(forModeIdentifier: String) -> TKColor?","path":"\/documentation\/tripkit\/tkregionmanager\/color(formodeidentifier:)"},{"type":"method","title":"func coordinateIsPartOfAnyRegion(CLLocationCoordinate2D) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/coordinateispartofanyregion(_:)"},{"type":"method","title":"func coordinateIsPartOfAnyRegion(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/coordinateispartofanyregion(latitude:longitude:)"},{"type":"method","title":"func dependentModeIdentifier(forModeIdentifier: String) -> [String]","path":"\/documentation\/tripkit\/tkregionmanager\/dependentmodeidentifier(formodeidentifier:)"},{"type":"method","title":"func fetchRegions(forced: Bool) async throws","path":"\/documentation\/tripkit\/tkregionmanager\/fetchregions(forced:)"},{"type":"method","title":"func imageURL(forModeIdentifier: String?, iconType: TKStyleModeIconType) -> URL?","path":"\/documentation\/tripkit\/tkregionmanager\/imageurl(formodeidentifier:icontype:)"},{"type":"method","title":"func impliedModes(byModeIdentifer: String) -> [String]","path":"\/documentation\/tripkit\/tkregionmanager\/impliedmodes(bymodeidentifer:)"},{"type":"method","title":"func loadRegionsFromCache() async","path":"\/documentation\/tripkit\/tkregionmanager\/loadregionsfromcache()"},{"type":"method","title":"func localRegion(code: String) -> TKRegion?","path":"\/documentation\/tripkit\/tkregionmanager\/localregion(code:)"},{"type":"method","title":"func localRegion(named: String) -> TKRegion?","path":"\/documentation\/tripkit\/tkregionmanager\/localregion(named:)"},{"type":"method","title":"func localRegions(containing: CLLocationCoordinate2D) -> Set<TKRegion>","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(containing:)"},{"type":"method","title":"func localRegions(containingLatitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Set<TKRegion>","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(containinglatitude:longitude:)"},{"type":"method","title":"func localRegions(overlapping: MKCoordinateRegion) -> [TKRegion]","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(overlapping:)"},{"type":"method","title":"func localRegions(start: (latitude: TKAPI.Degrees, longitude: TKAPI.Degrees), end: (latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)) -> [TKRegion]","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(start:end:)-4916t"},{"type":"method","title":"func localRegions(start: CLLocationCoordinate2D, end: CLLocationCoordinate2D) -> [TKRegion]","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(start:end:)-p11e"},{"type":"method","title":"func mapRectIntersectsAnyRegion(MKMapRect) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/maprectintersectsanyregion(_:)"},{"type":"method","title":"func modeDetails(forModeIdentifier: String) -> TKAPI.ModeDetails?","path":"\/documentation\/tripkit\/tkregionmanager\/modedetails(formodeidentifier:)"},{"type":"method","title":"func modeIdentifierIsRequired(String) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/modeidentifierisrequired(_:)"},{"type":"method","title":"func region(containing: MKCoordinateRegion) -> TKRegion","path":"\/documentation\/tripkit\/tkregionmanager\/region(containing:)"},{"type":"method","title":"func region(containing: CLLocationCoordinate2D, CLLocationCoordinate2D) -> TKRegion","path":"\/documentation\/tripkit\/tkregionmanager\/region(containing:_:)"},{"type":"method","title":"func remoteImageIsBranding(forModeIdentifier: String) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/remoteimageisbranding(formodeidentifier:)"},{"type":"method","title":"func remoteImageIsTemplate(forModeIdentifier: String) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/remoteimageistemplate(formodeidentifier:)"},{"type":"method","title":"func requireRegion(for: MKCoordinateRegion) async throws -> TKRegion","path":"\/documentation\/tripkit\/tkregionmanager\/requireregion(for:)-1pca3"},{"type":"method","title":"func requireRegion(for: CLLocationCoordinate2D) async throws -> TKRegion","path":"\/documentation\/tripkit\/tkregionmanager\/requireregion(for:)-8w8o4"},{"type":"method","title":"func requireRegions() async throws","path":"\/documentation\/tripkit\/tkregionmanager\/requireregions()"},{"type":"method","title":"func requireRegions(completion: (Result<Void, any Error>) -> Void)","path":"\/documentation\/tripkit\/tkregionmanager\/requireregions(completion:)"},{"type":"method","title":"func subtitle(forModeIdentifier: String) -> String?","path":"\/documentation\/tripkit\/tkregionmanager\/subtitle(formodeidentifier:)"},{"type":"method","title":"func timeZone(containingLatitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> TimeZone?","path":"\/documentation\/tripkit\/tkregionmanager\/timezone(containinglatitude:longitude:)"},{"type":"method","title":"func timeZone(for: CLLocationCoordinate2D) -> TimeZone?","path":"\/documentation\/tripkit\/tkregionmanager\/timezone(for:)"},{"type":"method","title":"func title(forModeIdentifier: String) -> String?","path":"\/documentation\/tripkit\/tkregionmanager\/title(formodeidentifier:)"},{"type":"method","title":"func updateRegions(forced: Bool)","path":"\/documentation\/tripkit\/tkregionmanager\/updateregions(forced:)"},{"type":"method","title":"func websiteURL(forModeIdentifier: String) -> URL?","path":"\/documentation\/tripkit\/tkregionmanager\/websiteurl(formodeidentifier:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var cacheURL: URL","path":"\/documentation\/tripkit\/tkregionmanager\/cacheurl"},{"type":"property","title":"static let shared: TKRegionManager","path":"\/documentation\/tripkit\/tkregionmanager\/shared"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func readLocalCache() -> Data?","path":"\/documentation\/tripkit\/tkregionmanager\/readlocalcache()"},{"type":"method","title":"static func saveToCache(Data)","path":"\/documentation\/tripkit\/tkregionmanager\/savetocache(_:)"},{"type":"method","title":"static func sortedModes(in: [TKRegion]) -> [TKRegion.RoutingMode]","path":"\/documentation\/tripkit\/tkregionmanager\/sortedmodes(in:)"}],"type":"class","path":"\/documentation\/tripkit\/tkregionmanager","title":"TKRegionManager"},{"children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkserver\/response","type":"struct","title":"TKServer.Response","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkserver\/response\/headers","title":"var headers: [String : Any]","type":"property"},{"path":"\/documentation\/tripkit\/tkserver\/response\/result","title":"var result: Result<T, any Error>","type":"property"},{"path":"\/documentation\/tripkit\/tkserver\/response\/statuscode","title":"var statusCode: Int?","type":"property"}]},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkserver\/apikey","type":"property","title":"var apiKey: String"},{"path":"\/documentation\/tripkit\/tkserver\/customheaders","type":"property","title":"var customHeaders: [String : String]?"},{"path":"\/documentation\/tripkit\/tkserver\/usertoken","type":"property","title":"var userToken: String?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkserver\/getrequestwithskedgohttpheaders(for:paras:)","type":"method","title":"func GETRequestWithSkedGoHTTPHeaders(for: URL, paras: [String : Any]?) throws -> URLRequest"},{"path":"\/documentation\/tripkit\/tkserver\/baseurls(for:)","type":"method","title":"func baseURLs(for: TKRegion?) -> [URL]"},{"path":"\/documentation\/tripkit\/tkserver\/deleteuserdataandsignout()","type":"method","title":"func deleteUserDataAndSignOut() async throws"},{"path":"\/documentation\/tripkit\/tkserver\/downloaduserdata()","type":"method","title":"func downloadUserData() async throws -> Data"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:path:input:headers:region:encoderconfig:decoderconfig:)","type":"method","title":"func hit<Input, Output>(Output.Type, TKServer.HTTPMethod, path: String, input: Input, headers: [String : String]?, region: TKRegion?, encoderConfig: (JSONEncoder) -> Void, decoderConfig: (JSONDecoder) -> Void) async throws -> TKServer.Response<Output>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:path:parameters:headers:region:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?) async -> TKServer.Response<Model>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:path:parameters:headers:region:callbackonmain:completion:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?, callbackOnMain: Bool, completion: (Int, [String : Any], Result<Model, any Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:url:parameters:headers:decoderconfig:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, decoderConfig: (JSONDecoder) -> Void) async -> TKServer.Response<Model>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:url:parameters:headers:decoderconfig:completion:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, decoderConfig: (JSONDecoder) -> Void, completion: (Int, [String : Any], Result<Model, any Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:path:input:headers:region:encoderconfig:)","type":"method","title":"func hit<Input>(TKServer.HTTPMethod, path: String, input: Input, headers: [String : String]?, region: TKRegion?, encoderConfig: (JSONEncoder) -> Void) async throws -> TKServer.Response<Data?>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:path:parameters:headers:region:)","type":"method","title":"func hit(TKServer.HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?) async -> TKServer.Response<Data>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:path:parameters:headers:region:callbackonmain:completion:)","type":"method","title":"func hit(TKServer.HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?, callbackOnMain: Bool, completion: (Int, [String : Any], Result<Data, any Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:url:parameters:headers:)","type":"method","title":"func hit(TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?) async -> TKServer.Response<Data>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:url:parameters:headers:completion:)","type":"method","title":"func hit(TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, completion: (Int, [String : Any], Result<Data, any Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkserver\/hitsync(_:url:parameters:timeout:)","type":"method","title":"func hitSync(TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, timeout: DispatchTimeInterval) throws -> Data"},{"path":"\/documentation\/tripkit\/tkserver\/removeimage()","type":"method","title":"func removeImage() async -> Int?"},{"path":"\/documentation\/tripkit\/tkserver\/signin(withcloudkitid:)","type":"method","title":"func signIn(withCloudKitID: String) async throws -> String"},{"path":"\/documentation\/tripkit\/tkserver\/signin(withuuid:)","type":"method","title":"func signIn(withUUID: String) async throws -> String"},{"path":"\/documentation\/tripkit\/tkserver\/upload(imagedata:contenttype:)","type":"method","title":"func upload(imageData: Data, contentType: String) async throws"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkserver\/custombaseurl","type":"property","title":"static var customBaseURL: String?"},{"path":"\/documentation\/tripkit\/tkserver\/fallbackbaseurl","type":"property","title":"static var fallbackBaseURL: URL"},{"path":"\/documentation\/tripkit\/tkserver\/shared","type":"property","title":"static let shared: TKServer"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tkserver\/imageurl(iconfilenamepart:icontype:)","type":"method","title":"static func imageURL(iconFileNamePart: String?, iconType: TKStyleModeIconType?) -> URL?"},{"path":"\/documentation\/tripkit\/tkserver\/xtripgoversion()","type":"method","title":"static func xTripGoVersion() -> String?"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod","type":"enum","title":"TKServer.HTTPMethod","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case DELETE","type":"case","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/delete"},{"title":"case GET","type":"case","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/get"},{"title":"case POST","type":"case","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/post"},{"title":"case PUT","type":"case","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/put"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/rawrepresentable-implementations"}]},{"path":"\/documentation\/tripkit\/tkserver\/repeathandler","type":"enum","title":"TKServer.RepeatHandler","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkserver\/repeathandler\/repeatin(_:)","title":"case repeatIn(TimeInterval)","type":"case"},{"path":"\/documentation\/tripkit\/tkserver\/repeathandler\/repeatwithnewparameters(_:_:)","title":"case repeatWithNewParameters(TimeInterval, [String : Any])","type":"case"}]},{"path":"\/documentation\/tripkit\/tkserver\/requesterror","type":"enum","title":"TKServer.RequestError","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidURL","type":"case","path":"\/documentation\/tripkit\/tkserver\/requesterror\/invalidurl"},{"title":"case noBaseURLs","type":"case","path":"\/documentation\/tripkit\/tkserver\/requesterror\/nobaseurls"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkserver\/requesterror\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkserver\/requesterror\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkserver\/requesterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkserver\/requesterror\/error-implementations"}]},{"path":"\/documentation\/tripkit\/tkserver\/servererror","type":"enum","title":"TKServer.ServerError","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkserver\/servererror\/nodata","type":"case","title":"case noData"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkserver\/servererror\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkserver\/servererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/tripkit\/tkserver\/servererror\/error-implementations","type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkserver\/servererror\/localizeddescription","type":"property","title":"var localizedDescription: String"}]}]}],"type":"class","path":"\/documentation\/tripkit\/tkserver","title":"TKServer"},{"children":[{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkit\/tksettings\/config-swift.typealias","title":"TKSettings.Config"},{"type":"typealias","path":"\/documentation\/tripkit\/tksettings\/speed","title":"TKSettings.Speed"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/config-swift.type.property","title":"static var config: [String : Any]"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/cyclingspeed","title":"static var cyclingSpeed: TKAPIConfig.Speed"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/disabledsharedvehiclemodes","title":"class var disabledSharedVehicleModes: [Data]"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/dislikedtransitmodes","title":"static var dislikedTransitModes: Set<String>"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/hiddenmodeidentifiers","title":"static var hiddenModeIdentifiers: Set<String>"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/hiddenmodespickedmanually","title":"static var hiddenModesPickedManually: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/includecosttoreturncarhirevehicle","title":"static var includeCostToReturnCarHireVehicle: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/maximumwalkingduration","title":"static var maximumWalkingDuration: TimeInterval?"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/minimumtransferminutes","title":"static var minimumTransferMinutes: Double?"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/minimumtransfertime","title":"static var minimumTransferTime: TimeInterval?"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/notificationtimetoleaveheadway","title":"static var notificationTimeToLeaveHeadway: Int"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/parserjsonversion","title":"static var parserJsonVersion: Int"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/showwheelchairinformation","title":"class var showWheelchairInformation: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/sortorder","title":"static var sortOrder: TKTripCostType"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/transportemissions","title":"class var transportEmissions: [String : Double]"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/useconcessionpricing","title":"class var useConcessionPricing: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/walkingspeed","title":"static var walkingSpeed: TKAPIConfig.Speed"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/clearemissions()","title":"class func clearEmissions()"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/enabledmodeidentifiers(_:)","title":"static func enabledModeIdentifiers([String]) -> Set<String>"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/modeidentifierishidden(_:)","title":"static func modeIdentifierIsHidden(String) -> Bool"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/orderedenabledmodeidentifiersforavailablemodeidentifiers(_:)","title":"static func orderedEnabledModeIdentifiersForAvailableModeIdentifiers([String]) -> [String]"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/setemissions(gramsco2perkm:modeidentifier:)","title":"class func setEmissions(gramsCO2PerKm: Double, modeIdentifier: String)"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/setmodeidentifier(_:tohidden:)","title":"static func setModeIdentifier(String, toHidden: Bool)"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/settransitmode(_:asdisliked:)","title":"static func setTransitMode(String, asDisliked: Bool)"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/update(pickedmodes:allmodes:)","title":"class func update(pickedModes: Set<TKModeInfo>, allModes: Set<TKModeInfo>)"},{"type":"method","path":"\/documentation\/tripkit\/tksettings\/updatetransportmodeswithenabledorder(_:hidden:)","title":"static func updateTransportModesWithEnabledOrder([String]?, hidden: Set<String>?)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/tripkit\/tksettings\/defaultskey","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case bookingsUseSandbox","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/bookingsusesandbox"},{"type":"case","title":"case concessionPricing","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/concessionpricing"},{"type":"case","title":"case cyclingSpeed","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/cyclingspeed"},{"type":"case","title":"case disabled","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/disabled"},{"type":"case","title":"case disliked","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/disliked"},{"type":"case","title":"case hidden","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/hidden"},{"type":"case","title":"case includeCostToReturnCarHireVehicle","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/includecosttoreturncarhirevehicle"},{"type":"case","title":"case maximumWalkDuration","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/maximumwalkduration"},{"type":"case","title":"case minimumTransferTime","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/minimumtransfertime"},{"type":"case","title":"case onWheelchair","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/onwheelchair"},{"type":"case","title":"case sortIndex","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/sortindex"},{"type":"case","title":"case sortedEnabled","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/sortedenabled"},{"type":"case","title":"case timeToLeaveHeadway","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/timetoleaveheadway"},{"type":"case","title":"case transportEmissions","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/transportemissions"},{"type":"case","title":"case walkingSpeed","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/walkingspeed"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/rawrepresentable-implementations"}],"title":"TKSettings.DefaultsKey"},{"type":"enum","path":"\/documentation\/tripkit\/tksettings\/weight","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/carbon","type":"case","title":"case carbon"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/exercise","type":"case","title":"case exercise"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/hassle","type":"case","title":"case hassle"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/money","type":"case","title":"case money"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/time","type":"case","title":"case time"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/defaultskey","type":"property","title":"var defaultsKey: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tksettings\/weight\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksettings\/weight\/!=(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tksettings\/weight\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tksettings\/weight\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tksettings\/weight\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tksettings\/weight\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tksettings\/weight\/hash(into:)"}],"title":"RawRepresentable Implementations"}],"title":"TKSettings.Weight"},{"type":"groupMarker","title":"Type Subscripts"},{"type":"subscript","path":"\/documentation\/tripkit\/tksettings\/subscript(_:)","title":"static subscript(TKSettings.Weight) -> Double"}],"type":"class","path":"\/documentation\/tripkit\/tksettings","title":"TKSettings"},{"type":"groupMarker","title":"Trip Planning"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(config: TKAPIConfig)","path":"\/documentation\/tripkit\/tkrouter\/init(config:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var config: TKAPIConfig","path":"\/documentation\/tripkit\/tkrouter\/config"},{"type":"property","title":"var failOnAnyError: Bool","path":"\/documentation\/tripkit\/tkrouter\/failonanyerror"},{"type":"property","title":"var finishedWorkers: UInt","path":"\/documentation\/tripkit\/tkrouter\/finishedworkers"},{"type":"property","title":"var isActive: Bool","path":"\/documentation\/tripkit\/tkrouter\/isactive"},{"type":"property","title":"var lastWorkerError: (any Error)?","path":"\/documentation\/tripkit\/tkrouter\/lastworkererror"},{"type":"property","title":"var modeIdentifiers: Set<String>","path":"\/documentation\/tripkit\/tkrouter\/modeidentifiers"},{"type":"property","title":"var server: TKServer?","path":"\/documentation\/tripkit\/tkrouter\/server"},{"type":"property","title":"var workerQueue: DispatchQueue?","path":"\/documentation\/tripkit\/tkrouter\/workerqueue"},{"title":"var workers: [Set<String> : TKRouter]","path":"\/documentation\/tripkit\/tkrouter\/workers","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cancelRequests()","path":"\/documentation\/tripkit\/tkrouter\/cancelrequests()","type":"method"},{"title":"func cancelRequestsWorker()","path":"\/documentation\/tripkit\/tkrouter\/cancelrequestsworker()","type":"method"},{"title":"func fetchBestTrip(for: TKRouterRequestable, completion: (Result<Trip, Error>) -> Void)","path":"\/documentation\/tripkit\/tkrouter\/fetchbesttrip(for:completion:)","type":"method"},{"title":"func fetchTrips(for: TripRequest, additional: Set<URLQueryItem>?, visibility: TripGroup.Visibility, callbackQueue: DispatchQueue, completion: (Result<Void, Error>) -> Void)","path":"\/documentation\/tripkit\/tkrouter\/fetchtrips(for:additional:visibility:callbackqueue:completion:)","type":"method"},{"title":"func fetchTrips(for: TKRoutingQuery<NSManagedObjectContext>, completion: (Result<TripRequest, Error>) -> Void)","path":"\/documentation\/tripkit\/tkrouter\/fetchtrips(for:completion:)","type":"method"},{"title":"func multiFetchTrips(for: TKRoutingQuery<NSManagedObjectContext>, classifier: TKTripClassifier?) async throws -> TripRequest","path":"\/documentation\/tripkit\/tkrouter\/multifetchtrips(for:classifier:)","type":"method"},{"title":"func multiFetchTrips(for: TKRoutingQuery<NSManagedObjectContext>, classifier: TKTripClassifier?, progress: ((UInt) -> Void)?, completion: (Result<TripRequest, Error>) -> Void) -> UInt","path":"\/documentation\/tripkit\/tkrouter\/multifetchtrips(for:classifier:progress:completion:)","type":"method"},{"title":"func multiFetchTrips(for: TripRequest, modes: Set<String>?, classifier: TKTripClassifier?, progress: ((UInt) -> Void)?, completion: (Result<Void, Error>) -> Void) -> UInt","path":"\/documentation\/tripkit\/tkrouter\/multifetchtrips(for:modes:classifier:progress:completion:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultParameters: [URLQueryItem]?","path":"\/documentation\/tripkit\/tkrouter\/defaultparameters","type":"property"},{"title":"static var modesToGroupInRequest: [String]?","path":"\/documentation\/tripkit\/tkrouter\/modestogroupinrequest","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func fetchTripsResponse<C>(for: TKRoutingQuery<C>, modeIdentifiers: Set<String>?, bestOnly: Bool, additional: Set<URLQueryItem>?, config: TKAPIConfig, server: TKServer?) async throws -> TKAPI.RoutingResponse","path":"\/documentation\/tripkit\/tkrouter\/fetchtripsresponse(for:modeidentifiers:bestonly:additional:config:server:)","type":"method"},{"title":"static func multiFetchTripResponses<C>(request: TKRoutingQuery<C>, config: TKAPIConfig, server: TKServer?) async throws -> [TKAPI.RoutingResponse]","path":"\/documentation\/tripkit\/tkrouter\/multifetchtripresponses(request:config:server:)","type":"method"},{"title":"static func requestParameters(for: TKRouterRequestable, modeIdentifiers: Set<String>?, additional: Set<URLQueryItem>?, config: TKAPIConfig?, bestOnly: Bool, includeAddress: Bool) -> [String : Any]","path":"\/documentation\/tripkit\/tkrouter\/requestparameters(for:modeidentifiers:additional:config:bestonly:includeaddress:)","type":"method"},{"title":"static func requestParameters<C>(request: TKRoutingQuery<C>, modeIdentifiers: Set<String>?, additional: Set<URLQueryItem>?, config: TKAPIConfig, bestOnly: Bool, includeAddress: Bool) -> [String : Any]","path":"\/documentation\/tripkit\/tkrouter\/requestparameters(request:modeidentifiers:additional:config:bestonly:includeaddress:)","type":"method"},{"title":"static func routingRequestURL(for: TKRouterRequestable, modes: Set<String>?, includeAddress: Bool) -> String?","path":"\/documentation\/tripkit\/tkrouter\/routingrequesturl(for:modes:includeaddress:)","type":"method"},{"title":"static func routingRequestURL<C>(request: TKRoutingQuery<C>, modes: Set<String>?, includeAddress: Bool, config: TKAPIConfig) -> String?","path":"\/documentation\/tripkit\/tkrouter\/routingrequesturl(request:modes:includeaddress:config:)","type":"method"},{"title":"static func urlRequest(for: TKRouterRequestable, modes: Set<String>?, includeAddress: Bool) throws -> URLRequest","path":"\/documentation\/tripkit\/tkrouter\/urlrequest(for:modes:includeaddress:)","type":"method"},{"title":"static func urlRequest<C>(request: TKRoutingQuery<C>, modes: Set<String>?, includeAddress: Bool, config: TKAPIConfig) throws -> URLRequest","path":"\/documentation\/tripkit\/tkrouter\/urlrequest(request:modes:includeaddress:config:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKRouter.RoutingError","path":"\/documentation\/tripkit\/tkrouter\/routingerror","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkrouter\/routingerror\/endlocationnotdetermined","title":"case endLocationNotDetermined","type":"case"},{"path":"\/documentation\/tripkit\/tkrouter\/routingerror\/invalidrequest(_:)","title":"case invalidRequest(String)","type":"case"},{"path":"\/documentation\/tripkit\/tkrouter\/routingerror\/notripfound","title":"case noTripFound","type":"case"},{"path":"\/documentation\/tripkit\/tkrouter\/routingerror\/routingnotsupported","title":"case routingNotSupported","type":"case"},{"path":"\/documentation\/tripkit\/tkrouter\/routingerror\/startlocationnotdetermined","title":"case startLocationNotDetermined","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkrouter\/routingerror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/localizeddescription"}],"title":"Error Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkrouter\/routingerror\/localizederror-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var errorDescription: String?","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/errordescription"},{"type":"property","title":"var failureReason: String?","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/failurereason"},{"type":"property","title":"var helpAnchor: String?","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/helpanchor"},{"type":"property","title":"var recoverySuggestion: String?","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/recoverysuggestion"}],"title":"LocalizedError Implementations","type":"symbol"}]}],"type":"class","path":"\/documentation\/tripkit\/tkrouter","title":"TKRouter"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func update(Set<DLSEntry>, in: TKRegion, completion: (Result<Set<DLSEntry>, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkrealtimefetcher\/update(_:in:completion:)-4e3mv"},{"title":"static func update(Set<Service>, in: TKRegion, completion: (Result<Set<Service>, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkrealtimefetcher\/update(_:in:completion:)-5827n"},{"title":"static func update(Set<StopVisits>, in: TKRegion, completion: (Result<Set<StopVisits>, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkrealtimefetcher\/update(_:in:completion:)-629lg"}],"type":"class","path":"\/documentation\/tripkit\/tkrealtimefetcher","title":"TKRealTimeFetcher"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/input","title":"TKWaypointRouter.Input","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkwaypointrouter\/input\/init(from:)"}]},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/segment","title":"TKWaypointRouter.Segment","type":"struct","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/init(from:)","title":"init(from: Decoder) throws","type":"init"}]},{"title":"Encodable Implementations","path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/encodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/encode(to:)"}]},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/!=(_:_:)","type":"op"}]}]},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchnexttrip(after:usingprivatevehicles:completion:)","title":"static func fetchNextTrip(after: Trip, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(addingstopover:to:usingprivatevehicles:)","title":"static func fetchTrip(addingStopOver: CLLocationCoordinate2D, to: Trip, usingPrivateVehicles: [TKVehicular]) async throws -> Trip","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(addingstopover:to:usingprivatevehicles:completion:)","title":"static func fetchTrip(addingStopOver: CLLocationCoordinate2D, to: Trip, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(bymoving:to:usingprivatevehicles:completion:)","title":"static func fetchTrip(byMoving: TKSegment, to: TKModeCoordinate, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(input:region:into:completion:)","title":"static func fetchTrip(input: TKWaypointRouter.Input, region: TKRegion?, into: NSManagedObjectContext, completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(moving:to:atstart:usingprivatevehicles:completion:)","title":"static func fetchTrip(moving: TKSegment, to: StopVisits, atStart: Bool, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(pattern:departure:usingprivatevehicles:into:in:completion:)","title":"static func fetchTrip(pattern: [TKSegmentPattern], departure: Date, usingPrivateVehicles: [TKVehicular], into: NSManagedObjectContext, in: TKRegion, completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(replacing:with:usingprivatevehicles:completion:)","title":"static func fetchTrip(replacing: TKSegment, with: DLSEntry, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror","title":"TKWaypointRouter.WaypointError","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/builderismissingrequiredinput(_:)","title":"case builderIsMissingRequiredInput(String)","type":"case"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/cannotmovetofrequencybasedvisit","title":"case cannotMoveToFrequencyBasedVisit","type":"case"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/couldnotfindregionfortrip","title":"case couldNotFindRegionForTrip","type":"case"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/fetchedresultsbutgotnotrip","title":"case fetchedResultsButGotNoTrip","type":"case"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/segmentnoteligible","title":"case segmentNotEligible","type":"case"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/serverfailedwithunknownerror","title":"case serverFailedWithUnknownError","type":"case"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/timetabledvisitismissingtimes","title":"case timetabledVisitIsMissingTimes","type":"case"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/tripgotdisassociatedfromcoredata","title":"case tripGotDisassociatedFromCoreData","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/error-implementations","title":"Error Implementations","type":"symbol"}]}],"type":"enum","path":"\/documentation\/tripkit\/tkwaypointrouter","title":"TKWaypointRouter"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func classification(of: TripGroup) -> String?","type":"method","path":"\/documentation\/tripkit\/tktripclassifier\/classification(of:)"},{"title":"func prepareForClassification(of: Set<TripGroup>)","type":"method","path":"\/documentation\/tripkit\/tktripclassifier\/prepareforclassification(of:)"}],"type":"protocol","path":"\/documentation\/tripkit\/tktripclassifier","title":"TKTripClassifier"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func classification(for: TripGroup) -> Classification?","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification(for:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKMetricClassifier.Classification","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/cheapest","title":"case cheapest"},{"type":"case","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/easiest","title":"case easiest"},{"type":"case","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/fastest","title":"case fastest"},{"type":"case","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/greenest","title":"case greenest"},{"type":"case","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/healthiest","title":"case healthiest"},{"type":"case","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/recommended","title":"case recommended"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/!=(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/tripkit\/tkmetricclassifier\/classification"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"TKTripClassifier Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func classification(of: TripGroup) -> String?","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification(of:)","type":"method"},{"title":"func prepareForClassification(of: Set<TripGroup>)","path":"\/documentation\/tripkit\/tkmetricclassifier\/prepareforclassification(of:)","type":"method"}],"path":"\/documentation\/tripkit\/tkmetricclassifier\/tktripclassifier-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkmetricclassifier","title":"TKMetricClassifier"},{"type":"groupMarker","title":"Search & Geocoding"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/tripkit\/tkapplegeocoder\/init()"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var pointsOfInterestsToExclude: [MKPointOfInterestCategory]","type":"property","path":"\/documentation\/tripkit\/tkapplegeocoder\/pointsofintereststoexclude"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKAutocompleting Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","path":"\/documentation\/tripkit\/tkapplegeocoder\/allowlocationinfobutton","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","path":"\/documentation\/tripkit\/tkapplegeocoder\/additionalactiontitle()","type":"method"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","path":"\/documentation\/tripkit\/tkapplegeocoder\/annotation(for:completion:)","type":"method"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","path":"\/documentation\/tripkit\/tkapplegeocoder\/autocomplete(_:near:completion:)","type":"method"},{"title":"func cancelAutocompletion()","path":"\/documentation\/tripkit\/tkapplegeocoder\/cancelautocompletion()","type":"method"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","path":"\/documentation\/tripkit\/tkapplegeocoder\/triggeradditional(presenter:completion:)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapplegeocoder\/tkautocompleting-implementations"},{"title":"TKGeocoding Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func geocode(TKGeocodable, near: MKMapRect) async throws","path":"\/documentation\/tripkit\/tkapplegeocoder\/geocode(_:near:)-36d9o"},{"type":"method","title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tkapplegeocoder\/geocode(_:near:)-6pan9"},{"type":"method","title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","path":"\/documentation\/tripkit\/tkapplegeocoder\/geocode(_:near:completion:)"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapplegeocoder\/tkgeocoding-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkapplegeocoder","title":"TKAppleGeocoder"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var eventStore: EKEventStore","type":"property","path":"\/documentation\/tripkit\/tkcalendarmanager\/eventstore"},{"title":"var openSettingsHandler: (() -> Void)?","type":"property","path":"\/documentation\/tripkit\/tkcalendarmanager\/opensettingshandler"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func fetchEvents(matching: String) -> [EKEvent]","type":"method","path":"\/documentation\/tripkit\/tkcalendarmanager\/fetchevents(matching:)"},{"title":"func fetchEvents(start: Date, end: Date, from: [EKCalendar]?) -> [EKEvent]","type":"method","path":"\/documentation\/tripkit\/tkcalendarmanager\/fetchevents(start:end:from:)"},{"title":"func fetchUpcomingEvents(from: [EKCalendar]?) -> [EKEvent]","type":"method","path":"\/documentation\/tripkit\/tkcalendarmanager\/fetchupcomingevents(from:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKCalendarManager","type":"property","path":"\/documentation\/tripkit\/tkcalendarmanager\/shared"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func title(for: EKEvent) -> String","type":"method","path":"\/documentation\/tripkit\/tkcalendarmanager\/title(for:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKAutocompleting Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","path":"\/documentation\/tripkit\/tkcalendarmanager\/allowlocationinfobutton","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","path":"\/documentation\/tripkit\/tkcalendarmanager\/additionalactiontitle()","type":"method"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","path":"\/documentation\/tripkit\/tkcalendarmanager\/annotation(for:completion:)","type":"method"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","path":"\/documentation\/tripkit\/tkcalendarmanager\/autocomplete(_:near:completion:)","type":"method"},{"title":"func cancelAutocompletion()","path":"\/documentation\/tripkit\/tkcalendarmanager\/cancelautocompletion()","type":"method"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","path":"\/documentation\/tripkit\/tkcalendarmanager\/triggeradditional(presenter:completion:)","type":"method"}],"path":"\/documentation\/tripkit\/tkcalendarmanager\/tkautocompleting-implementations"},{"title":"TKPermissionManager Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/authorizationalerttext","type":"property","title":"var authorizationAlertText: String"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/authorizationrestrictionsapply","type":"property","title":"var authorizationRestrictionsApply: Bool"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/authorizationstatus","type":"property","title":"var authorizationStatus: TKAuthorizationStatus"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/featureisavailable","type":"property","title":"var featureIsAvailable: Bool"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/isauthorized","type":"property","title":"var isAuthorized: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/askforpermission(_:)","type":"method","title":"func askForPermission((Bool) -> Void)"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/showauthorizationalert(sender:in:)","type":"method","title":"func showAuthorizationAlert(sender: Any?, in: UIViewController)"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/tryauthorization(sender:in:completion:)","type":"method","title":"func tryAuthorization(sender: Any?, in: UIViewController, completion: (Bool) -> Void)"}],"path":"\/documentation\/tripkit\/tkcalendarmanager\/tkpermissionmanager-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkcalendarmanager","title":"TKCalendarManager"},{"children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress","type":"struct","title":"TKContactsManager.ContactAddress","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/image","title":"let image: TKImage?","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/kind","title":"let kind: AddressKind?","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/postaladdress","title":"let postalAddress: CNPostalAddress","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/authorizationalerttext","type":"property","title":"var authorizationAlertText: String"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/authorizationstatus","type":"property","title":"var authorizationStatus: TKAuthorizationStatus"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/opensettingshandler","type":"property","title":"var openSettingsHandler: (() -> Void)?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/askforpermission(_:)","type":"method","title":"func askForPermission((Bool) -> Void)"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/fetchcontacts(searchstring:kind:)","type":"method","title":"func fetchContacts(searchString: String, kind: AddressKind?) throws -> [ContactAddress]"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/fetchmylocations(limitto:)","type":"method","title":"func fetchMyLocations(limitTo: AddressKind?) throws -> [ContactAddress]"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/shared","type":"property","title":"static let shared: TKContactsManager"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind","type":"enum","title":"TKContactsManager.AddressKind","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/home","type":"case","title":"case home"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/work","type":"case","title":"case work"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/init(label:)","type":"init","title":"init?(label: String?)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/tkautocompleting-implementations","type":"symbol","title":"TKAutocompleting Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkcontactsmanager\/allowlocationinfobutton","title":"var allowLocationInfoButton: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/additionalactiontitle()","title":"func additionalActionTitle() -> String?"},{"type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/annotation(for:completion:)","title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)"},{"type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/autocomplete(_:near:completion:)","title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)"},{"type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/cancelautocompletion()","title":"func cancelAutocompletion()"},{"type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/triggeradditional(presenter:completion:)","title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)"}]},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/tkgeocoding-implementations","type":"symbol","title":"TKGeocoding Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tkcontactsmanager\/geocode(_:near:)-1gso4","type":"method"},{"title":"func geocode(TKGeocodable, near: MKMapRect) async throws","path":"\/documentation\/tripkit\/tkcontactsmanager\/geocode(_:near:)-jkx","type":"method"},{"title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","path":"\/documentation\/tripkit\/tkcontactsmanager\/geocode(_:near:completion:)","type":"method"}]},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/tkpermissionmanager-implementations","type":"symbol","title":"TKPermissionManager Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var authorizationRestrictionsApply: Bool","type":"property","path":"\/documentation\/tripkit\/tkcontactsmanager\/authorizationrestrictionsapply"},{"title":"var featureIsAvailable: Bool","type":"property","path":"\/documentation\/tripkit\/tkcontactsmanager\/featureisavailable"},{"title":"var isAuthorized: Bool","type":"property","path":"\/documentation\/tripkit\/tkcontactsmanager\/isauthorized"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func showAuthorizationAlert(sender: Any?, in: UIViewController)","type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/showauthorizationalert(sender:in:)"},{"title":"func tryAuthorization(sender: Any?, in: UIViewController, completion: (Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/tryauthorization(sender:in:completion:)"}]}],"type":"class","path":"\/documentation\/tripkit\/tkcontactsmanager","title":"TKContactsManager"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkpeliasgeocoder\/init()","title":"init()","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkpeliasgeocoder\/tkautocompleting-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var allowLocationInfoButton: Bool","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/allowlocationinfobutton"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func additionalActionTitle() -> String?","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/additionalactiontitle()"},{"type":"method","title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/annotation(for:completion:)"},{"type":"method","title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/autocomplete(_:near:completion:)"},{"type":"method","title":"func cancelAutocompletion()","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/cancelautocompletion()"},{"type":"method","title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/triggeradditional(presenter:completion:)"}],"title":"TKAutocompleting Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkpeliasgeocoder\/tkgeocoding-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func geocode(TKGeocodable, near: MKMapRect) async throws","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/geocode(_:near:)-4s43e","type":"method"},{"title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/geocode(_:near:)-5k4tv","type":"method"},{"title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/geocode(_:near:completion:)","type":"method"}],"title":"TKGeocoding Implementations","type":"symbol"}],"type":"class","path":"\/documentation\/tripkit\/tkpeliasgeocoder","title":"TKPeliasGeocoder"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkregionautocompleter\/init()","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkregionautocompleter\/allowlocationinfobutton","title":"var allowLocationInfoButton: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkregionautocompleter\/annotation(for:completion:)","title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)"},{"type":"method","path":"\/documentation\/tripkit\/tkregionautocompleter\/autocomplete(_:near:completion:)","title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkregionautocompleter\/tkautocompleting-implementations","title":"TKAutocompleting Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkregionautocompleter\/additionalactiontitle()","title":"func additionalActionTitle() -> String?"},{"type":"method","path":"\/documentation\/tripkit\/tkregionautocompleter\/cancelautocompletion()","title":"func cancelAutocompletion()"},{"type":"method","path":"\/documentation\/tripkit\/tkregionautocompleter\/triggeradditional(presenter:completion:)","title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)"}]}],"type":"class","path":"\/documentation\/tripkit\/tkregionautocompleter","title":"TKRegionAutocompleter"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/tripkit\/tkrouteautocompleter\/init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let allowLocationInfoButton: Bool","path":"\/documentation\/tripkit\/tkrouteautocompleter\/allowlocationinfobutton","type":"property"},{"title":"var modes: [String]","path":"\/documentation\/tripkit\/tkrouteautocompleter\/modes","type":"property"},{"title":"var operatorID: String?","path":"\/documentation\/tripkit\/tkrouteautocompleter\/operatorid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","path":"\/documentation\/tripkit\/tkrouteautocompleter\/annotation(for:completion:)","type":"method"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","path":"\/documentation\/tripkit\/tkrouteautocompleter\/autocomplete(_:near:completion:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKAutocompleting Implementations","path":"\/documentation\/tripkit\/tkrouteautocompleter\/tkautocompleting-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","path":"\/documentation\/tripkit\/tkrouteautocompleter\/additionalactiontitle()","type":"method"},{"title":"func cancelAutocompletion()","path":"\/documentation\/tripkit\/tkrouteautocompleter\/cancelautocompletion()","type":"method"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","path":"\/documentation\/tripkit\/tkrouteautocompleter\/triggeradditional(presenter:completion:)","type":"method"}],"type":"symbol"}],"type":"class","path":"\/documentation\/tripkit\/tkrouteautocompleter","title":"TKRouteAutocompleter"},{"children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tktripgogeocoder\/tkautocompleting-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","type":"property","path":"\/documentation\/tripkit\/tktripgogeocoder\/allowlocationinfobutton"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","type":"method","path":"\/documentation\/tripkit\/tktripgogeocoder\/additionalactiontitle()"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tktripgogeocoder\/annotation(for:completion:)"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tktripgogeocoder\/autocomplete(_:near:completion:)"},{"title":"func cancelAutocompletion()","type":"method","path":"\/documentation\/tripkit\/tktripgogeocoder\/cancelautocompletion()"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tktripgogeocoder\/triggeradditional(presenter:completion:)"}],"title":"TKAutocompleting Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tktripgogeocoder\/tkgeocoding-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/geocode(_:near:)-7sqbk","title":"func geocode(TKGeocodable, near: MKMapRect) async throws","type":"method"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/geocode(_:near:)-7xmxy","title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","type":"method"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/geocode(_:near:completion:)","title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","type":"method"}],"title":"TKGeocoding Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tktripgogeocoder","title":"TKTripGoGeocoder"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkaggregategeocoder\/init(geocoders:)","type":"init","title":"init(geocoders: [TKGeocoding])"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkaggregategeocoder\/geocoders","type":"property","title":"let geocoders: [TKGeocoding]"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkaggregategeocoder\/tkgeocoding-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","type":"method","path":"\/documentation\/tripkit\/tkaggregategeocoder\/geocode(_:near:)-32f5l"},{"title":"func geocode(TKGeocodable, near: MKMapRect) async throws","type":"method","path":"\/documentation\/tripkit\/tkaggregategeocoder\/geocode(_:near:)-37icq"},{"title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkaggregategeocoder\/geocode(_:near:completion:)"}],"title":"TKGeocoding Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkaggregategeocoder","title":"TKAggregateGeocoder"},{"type":"groupMarker","title":"Data Providers"},{"children":[{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/alertstransitresponse\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alerts: [TKAPI.AlertMapping]","path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/alertstransitresponse\/alerts","type":"property"}],"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/alertstransitresponse","type":"struct","title":"TKBuzzInfoProvider.AlertsTransitResponse"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/addcontent(from:to:)","type":"method","title":"static func addContent(from: TKAPI.ServiceResponse, to: Service) -> Bool"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/downloadcontent(of:embarkationdate:region:completion:)","type":"method","title":"static func downloadContent(of: Service, embarkationDate: Date, region: TKRegion?, completion: (Service, Bool) -> Void)"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchlocationinformation(_:for:)-4of3y","type":"method","title":"static func fetchLocationInformation(CLLocationCoordinate2D, for: TKRegion) async throws -> TKAPI.LocationInfo"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchlocationinformation(_:for:)-6wihz","type":"method","title":"static func fetchLocationInformation(MKAnnotation, for: TKRegion) async throws -> TKAPI.LocationInfo"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchlocationinformation(locationid:for:)","type":"method","title":"static func fetchLocationInformation(locationID: String, for: TKRegion) async throws -> TKAPI.LocationInfo"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchparatransitinformation(for:)","type":"method","title":"static func fetchParatransitInformation(for: TKRegion) async -> TKAPI.Paratransit?"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchparatransitinformation(forregion:)","type":"method","title":"static func fetchParatransitInformation(forRegion: TKRegion) async -> TKAPI.Paratransit?"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchpublictransportmodes(for:)","type":"method","title":"static func fetchPublicTransportModes(for: TKRegion) async -> [TKModeInfo]?"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchpublictransportmodes(forregion:)","type":"method","title":"static func fetchPublicTransportModes(forRegion: TKRegion) async throws -> [TKModeInfo]?"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchregioninformation(for:)","type":"method","title":"static func fetchRegionInformation(for: TKRegion) async -> TKAPI.RegionInfo?"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchregioninformation(forregion:)","type":"method","title":"static func fetchRegionInformation(forRegion: TKRegion) async -> TKAPI.RegionInfo?"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchroutedetails(routeid:operatorid:region:)","type":"method","title":"static func fetchRouteDetails(routeID: String, operatorID: String, region: TKRegion) async throws -> TKAPI.Route"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchroutes(forregion:query:modes:operatorid:)","type":"method","title":"static func fetchRoutes(forRegion: TKRegion, query: String?, modes: [String], operatorID: String?) async throws -> [TKAPI.Route]"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchtransitalerts(for:)","type":"method","title":"static func fetchTransitAlerts(for: TKRegion) async throws -> [TKAPI.AlertMapping]"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchtransitalerts(forregion:)","type":"method","title":"static func fetchTransitAlerts(forRegion: TKRegion) async throws -> [TKAPI.AlertMapping]"}],"type":"enum","path":"\/documentation\/tripkit\/tkbuzzinfoprovider","title":"TKBuzzInfoProvider"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"TKDeparturesProvider.Filter","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"init","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/init(operatorid:routeid:directionid:)","title":"init(operatorID: String, routeID: String?, directionID: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/directionid","title":"let directionID: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/operatorid","title":"let operatorID: String"},{"type":"property","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/routeid","title":"let routeID: String?"}]},{"title":"Type Methods","type":"groupMarker"},{"title":"static func addDepartures(TKAPI.Departures, into: NSManagedObjectContext) -> Set<String>","path":"\/documentation\/tripkit\/tkdeparturesprovider\/adddepartures(_:into:)","type":"method"},{"title":"static func addDepartures(TKAPI.Departures, to: [StopLocation]) -> Bool","path":"\/documentation\/tripkit\/tkdeparturesprovider\/adddepartures(_:to:)","type":"method"},{"title":"static func downloadDepartures(for: [StopLocation], fromDate: Date, filters: [Filter], limit: Int) async throws -> Bool","path":"\/documentation\/tripkit\/tkdeparturesprovider\/downloaddepartures(for:fromdate:filters:limit:)","type":"method"},{"title":"static func downloadDepartures(for: TKDLSTable, fromDate: Date, limit: Int) async throws -> Set<String>","path":"\/documentation\/tripkit\/tkdeparturesprovider\/downloaddepartures(for:fromdate:limit:)","type":"method"},{"title":"static func fetchDepartures(for: TKDLSTable, fromDate: Date, limit: Int) async throws -> TKAPI.Departures","path":"\/documentation\/tripkit\/tkdeparturesprovider\/fetchdepartures(for:fromdate:limit:)","type":"method"},{"title":"static func fetchDepartures(stopCodes: [String], fromDate: Date, filters: [Filter], limit: Int, in: TKRegion) async throws -> TKAPI.Departures","path":"\/documentation\/tripkit\/tkdeparturesprovider\/fetchdepartures(stopcodes:fromdate:filters:limit:in:)","type":"method"},{"title":"static func queryParameters(for: TKDLSTable, fromDate: Date, limit: Int) -> [String : Any]","path":"\/documentation\/tripkit\/tkdeparturesprovider\/queryparameters(for:fromdate:limit:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror","title":"TKDeparturesProvider.InputError","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case emptyField(String)","path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror\/emptyfield(_:)","type":"case"},{"title":"case missingField(String)","path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror\/missingfield(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror\/localizeddescription","type":"property"}],"title":"Error Implementations","path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror\/error-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror","title":"TKDeparturesProvider.OutputError","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/couldnotfetchregions","type":"case","title":"case couldNotFetchRegions"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/stopsincedeleted","type":"case","title":"case stopSinceDeleted"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/error-implementations","type":"symbol","title":"Error Implementations"}]}],"type":"class","path":"\/documentation\/tripkit\/tkdeparturesprovider","title":"TKDeparturesProvider"},{"type":"groupMarker","title":"Classes"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/alert\/action","type":"property","title":"var action: NSDictionary?"},{"path":"\/documentation\/tripkit\/alert\/alertseverity","type":"property","title":"var alertSeverity: TKAlertSeverity"},{"path":"\/documentation\/tripkit\/alert\/endtime","type":"property","title":"var endTime: Date?"},{"path":"\/documentation\/tripkit\/alert\/hashcode","type":"property","title":"var hashCode: Int32"},{"path":"\/documentation\/tripkit\/alert\/idservice","type":"property","title":"var idService: String?"},{"path":"\/documentation\/tripkit\/alert\/idstopcode","type":"property","title":"var idStopCode: String?"},{"path":"\/documentation\/tripkit\/alert\/imageurl","type":"property","title":"var imageURL: URL?"},{"path":"\/documentation\/tripkit\/alert\/infoicontype","type":"property","title":"var infoIconType: TKInfoIconType"},{"path":"\/documentation\/tripkit\/alert\/location","type":"property","title":"var location: TKNamedCoordinate?"},{"path":"\/documentation\/tripkit\/alert\/remoteicon","type":"property","title":"var remoteIcon: String?"},{"path":"\/documentation\/tripkit\/alert\/severity","type":"property","title":"var severity: Int16"},{"path":"\/documentation\/tripkit\/alert\/starttime","type":"property","title":"var startTime: Date?"},{"path":"\/documentation\/tripkit\/alert\/stopsexcludedfromrouting","type":"property","title":"var stopsExcludedFromRouting: [String]"},{"path":"\/documentation\/tripkit\/alert\/text","type":"property","title":"var text: String?"},{"path":"\/documentation\/tripkit\/alert\/url","type":"property","title":"var url: String?"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/alert\/fetch(hashcode:in:)","type":"method","title":"static func fetch(hashCode: NSNumber, in: NSManagedObjectContext) -> Alert?"},{"path":"\/documentation\/tripkit\/alert\/fetchrequest()","type":"method","title":"class func fetchRequest() -> NSFetchRequest<Alert>"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/alert\/actiontypeidentifier","type":"enum","title":"Alert.ActionTypeIdentifier"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/alert\/mkannotation-implementations","type":"symbol","title":"MKAnnotation Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var coordinate: CLLocationCoordinate2D","path":"\/documentation\/tripkit\/alert\/coordinate","type":"property"},{"title":"var title: String?","path":"\/documentation\/tripkit\/alert\/title","type":"property"}]},{"path":"\/documentation\/tripkit\/alert\/mkannotation-implementations","type":"symbol","title":"MKAnnotation Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var coordinate: CLLocationCoordinate2D","path":"\/documentation\/tripkit\/alert\/coordinate"},{"type":"property","title":"var title: String?","path":"\/documentation\/tripkit\/alert\/title"}]}],"type":"class","path":"\/documentation\/tripkit\/alert","title":"Alert"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/dlsentry\/arrivalplatform","title":"var arrivalPlatform: String?"},{"type":"property","path":"\/documentation\/tripkit\/dlsentry\/endplatform","title":"var endPlatform: String?"},{"type":"property","path":"\/documentation\/tripkit\/dlsentry\/endstop","title":"var endStop: StopLocation"},{"type":"property","path":"\/documentation\/tripkit\/dlsentry\/timetableendplatform","title":"var timetableEndPlatform: String?"},{"type":"property","path":"\/documentation\/tripkit\/dlsentry\/wantsrealtimeupdates","title":"var wantsRealTimeUpdates: Bool"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/dlsentry\/clearallentries(in:)","title":"static func clearAllEntries(in: NSManagedObjectContext)"},{"type":"method","path":"\/documentation\/tripkit\/dlsentry\/departurespredicate(pairs:from:filter:)","title":"static func departuresPredicate(pairs: Set<String>, from: Date, filter: String) -> NSPredicate"},{"type":"method","path":"\/documentation\/tripkit\/dlsentry\/fetchdlsentries(pairs:from:limit:in:)","title":"static func fetchDLSEntries(pairs: Set<String>, from: Date, limit: Int, in: NSManagedObjectContext) -> [DLSEntry]"},{"type":"method","path":"\/documentation\/tripkit\/dlsentry\/fetchrequest()","title":"class func fetchRequest() -> NSFetchRequest<DLSEntry>"}],"type":"class","path":"\/documentation\/tripkit\/dlsentry","title":"DLSEntry"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var ActionGo: String","path":"\/documentation\/tripkit\/loc\/actiongo"},{"type":"property","title":"static var ActionStart: String","path":"\/documentation\/tripkit\/loc\/actionstart"},{"type":"property","title":"static var Alert: String","path":"\/documentation\/tripkit\/loc\/alert"},{"type":"property","title":"static var AlertMe: String","path":"\/documentation\/tripkit\/loc\/alertme"},{"type":"property","title":"static var Alerts: String","path":"\/documentation\/tripkit\/loc\/alerts"},{"type":"property","title":"static var AllDay: String","path":"\/documentation\/tripkit\/loc\/allday"},{"type":"property","title":"static var AlreadyHaveAnAccount: String","path":"\/documentation\/tripkit\/loc\/alreadyhaveanaccount"},{"type":"property","title":"static var Alternatives: String","path":"\/documentation\/tripkit\/loc\/alternatives"},{"type":"property","title":"static var AppleMaps: String","path":"\/documentation\/tripkit\/loc\/applemaps"},{"type":"property","title":"static var ArriveBy: String","path":"\/documentation\/tripkit\/loc\/arriveby"},{"type":"property","path":"\/documentation\/tripkit\/loc\/attempttochangepasswordwithoutemailverified","title":"static var AttemptToChangePasswordWithoutEmailVerified: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/authorizationneeded","title":"static var AuthorizationNeeded: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/authorizationneededdescription","title":"static var AuthorizationNeededDescription: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/back","title":"static var Back: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/badgecheapest","title":"static var BadgeCheapest: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/badgeeasiest","title":"static var BadgeEasiest: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/badgefastest","title":"static var BadgeFastest: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/badgegreenest","title":"static var BadgeGreenest: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/badgehealthiest","title":"static var BadgeHealthiest: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/badgerecommended","title":"static var BadgeRecommended: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/bicycleaccessible","title":"static var BicycleAccessible: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/book","title":"static var Book: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/call","title":"static var Call: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/cancel","title":"static var Cancel: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/cancelled","title":"static var Cancelled: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/change","title":"static var Change: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/changeroute","title":"static var ChangeRoute: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/checkmark","title":"static var Checkmark: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/close","title":"static var Close: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/collapse","title":"static var Collapse: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/confirm","title":"static var Confirm: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/confirmpassword","title":"static var ConfirmPassword: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/contactsupport","title":"static var ContactSupport: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/contactsauthorizationalerttext","title":"static var ContactsAuthorizationAlertText: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/couldnotfetchcurrentlocationrecovery","title":"static var CouldNotFetchCurrentLocationRecovery: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/couldnotfetchcurrentlocationtitle","title":"static var CouldNotFetchCurrentLocationTitle: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/currentlocation","title":"static var CurrentLocation: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/customizehome","title":"static var CustomizeHome: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/dataerror","title":"static var DataError: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/dataproviders","title":"static var DataProviders: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/datetimeselectionabove","title":"static var DateTimeSelectionAbove: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/datetimeselectionbelow","title":"static var DateTimeSelectionBelow: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/delete","title":"static var Delete: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/direction","title":"static var Direction: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/disabled","title":"static var Disabled: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/disconnect","title":"static var Disconnect: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/dismiss","title":"static var Dismiss: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/dismount","title":"static var Dismount: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/distance","title":"static var Distance: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/done","title":"static var Done: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/donthaveanaccount","title":"static var DontHaveAnAccount: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/editaccount","title":"static var EditAccount: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/enabled","title":"static var Enabled: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/endhere","title":"static var EndHere: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/endlocation","title":"static var EndLocation: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/enternewpassword","title":"static var EnterNewPassword: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/error","title":"static var Error: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/examplemail","title":"static var ExampleMail: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/expand","title":"static var Expand: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/extendbooking","title":"static var ExtendBooking: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/failedtosend","title":"static var FailedToSend: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/firstname","title":"static var FirstName: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/forwhentoleave","title":"static var ForWhenToLeave: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/forgotpassword","title":"static var ForgotPassword: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/friendlypath","title":"static var FriendlyPath: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/getapp","title":"static var GetApp: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/getdirections","title":"static var GetDirections: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/getreadytoleave","title":"static var GetReadyToLeave: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/googlemaps","title":"static var GoogleMaps: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/instantresults","title":"static var InstantResults: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/invalidcredentials","title":"static var InvalidCredentials: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/johnappleseed","title":"static var JohnAppleseed: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/lastname","title":"static var LastName: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/later","title":"static var Later: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/leaveat","title":"static var LeaveAt: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/leavenow","title":"static var LeaveNow: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/less","title":"static var Less: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/livetraffic","title":"static var LiveTraffic: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/loadingdotdotdot","title":"static var LoadingDotDotDot: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/localizationpermissionsmissing","title":"static var LocalizationPermissionsMissing: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/location","title":"static var Location: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/mail","title":"static var Mail: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/minutesbeforetrip","title":"static var MinutesBeforeTrip: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/missingusertoken","title":"static var MissingUserToken: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/more","title":"static var More: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/moreresults","title":"static var MoreResults: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/mute","title":"static var Mute: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/name","title":"static var Name: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/nearme","title":"static var NearMe: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/never","title":"static var Never: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/next","title":"static var Next: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/norealtimeavailable","title":"static var NoRealTimeAvailable: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/noroutesfound","title":"static var NoRoutesFound: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/now","title":"static var Now: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/ok","title":"static var OK: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/ontime","title":"static var OnTime: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/onewayonly","title":"static var OneWayOnly: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/openapp","title":"static var OpenApp: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/openindotdotdot","title":"static var OpenInDotDotDot: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/openinsafari","title":"static var OpenInSafari: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/opensettings","title":"static var OpenSettings: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/openinghours","title":"static var OpeningHours: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/optionalreferralcode","title":"static var OptionalReferralCode: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/password","title":"static var Password: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/passwordisempty","title":"static var PasswordIsEmpty: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/passwordresetinstructionsentbyemail","title":"static var PasswordResetInstructionSentByEmail: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/phone","title":"static var Phone: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/pickerdatetitle","title":"static var PickerDateTitle: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/pickertimetitle","title":"static var PickerTimeTitle: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/plananewtrip","title":"static var PlanANewTrip: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/plantrip","title":"static var PlanTrip: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/pleaseentercurrentpasswordforyoursecurity","title":"static var PleaseEnterCurrentPasswordForYourSecurity: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/pleaseenteryourregisteredemailtoresetpassword","title":"static var PleaseEnterYourRegisteredEmailToResetPassword: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/pleaseselectalocation","title":"static var PleaseSelectALocation: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/pleaseverifythelocation","title":"static var PleaseVerifyTheLocation: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/poweredby","title":"static var PoweredBy: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/primaryemailnotset","title":"static var PrimaryEmailNotSet: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/publicholiday","title":"static var PublicHoliday: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/realtime","title":"static var RealTime: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/reminder","title":"static var Reminder: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/reportproblem","title":"static var ReportProblem: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/requestsupport","title":"static var RequestSupport: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/resetpassword","title":"static var ResetPassword: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/responsecontainsnodata","title":"static var ResponseContainsNoData: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/retry","title":"static var Retry: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/route","title":"static var Route: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/routingbetweentheselocationsisnotyetsupported","title":"static var RoutingBetweenTheseLocationsIsNotYetSupported: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/scheduled","title":"static var Scheduled: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/score","title":"static var Score: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/search","title":"static var Search: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/searchfordestination","title":"static var SearchForDestination: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/searchresults","title":"static var SearchResults: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/securepasswordareatleastfivecharaterslongandincludenumbersandsymbols","title":"static var SecurePasswordAreAtLeastFiveCharatersLongAndIncludeNumbersAndSymbols: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/select","title":"static var Select: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/selectreturndate","title":"static var SelectReturnDate: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/selecttime","title":"static var SelectTime: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/sendsms","title":"static var SendSMS: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/sent","title":"static var Sent: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/servererror","title":"static var ServerError: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/service","title":"static var Service: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/servicehasbeenchancelled","title":"static var ServiceHasBeenChancelled: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/settime","title":"static var SetTime: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/setup","title":"static var Setup: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/showtimetable","title":"static var ShowTimetable: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/showwebsite","title":"static var ShowWebsite: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/signin","title":"static var SignIn: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/signout","title":"static var SignOut: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/signup","title":"static var SignUp: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/starthere","title":"static var StartHere: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/startlocation","title":"static var StartLocation: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/taptochangestartandendlocations","title":"static var TapToChangeStartAndEndLocations: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/taptolearnlocationinfo","title":"static var TapToLearnLocationInfo: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/taptoselectaddress","title":"static var TapToSelectAddress: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/taptoselectcurrentlocation","title":"static var TapToSelectCurrentLocation: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/taptosetlocation","title":"static var TapToSetLocation: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/timetable","title":"static var Timetable: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/transport","title":"static var Transport: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/trip","title":"static var Trip: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/tripnotifications","title":"static var TripNotifications: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/tripnotificationsarrivingatstop","title":"static var TripNotificationsArrivingAtStop: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/tripnotificationsnextstop","title":"static var TripNotificationsNextStop: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/tripnotificationssubtitle","title":"static var TripNotificationsSubtitle: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/tripnotificationstripend","title":"static var TripNotificationsTripEnd: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/tripnotificationstripstart","title":"static var TripNotificationsTripStart: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/tripnotificationsvehicleapproaching","title":"static var TripNotificationsVehicleApproaching: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/trips","title":"static var Trips: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/unfriendlypath","title":"static var UnfriendlyPath: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/unknown","title":"static var Unknown: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/unlock","title":"static var Unlock: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/update","title":"static var Update: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/updatingtrip","title":"static var UpdatingTrip: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicle","title":"static var Vehicle: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicletypebicycle","title":"static var VehicleTypeBicycle: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicletypecar","title":"static var VehicleTypeCar: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicletypeebike","title":"static var VehicleTypeEBike: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicletypekickscooter","title":"static var VehicleTypeKickScooter: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicletypemotoscooter","title":"static var VehicleTypeMotoScooter: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicletypemotorbike","title":"static var VehicleTypeMotorbike: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicletypesuv","title":"static var VehicleTypeSUV: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/vehicles","title":"static var Vehicles: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/verify","title":"static var Verify: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/verifypassword","title":"static var VerifyPassword: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/wewillkeepyouupdated","title":"static var WeWillKeepYouUpdated: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/what3wordsaddress","title":"static var What3wordsAddress: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/wheelchairaccessibilityunknown","title":"static var WheelchairAccessibilityUnknown: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/wheelchairaccessible","title":"static var WheelchairAccessible: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/wheelchairnotaccessible","title":"static var WheelchairNotAccessible: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/wouldyouliketoreportaproblem","title":"static var WouldYouLikeToReportAProblem: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/youmightnotmakethistransfer","title":"static var YouMightNotMakeThisTransfer: String"},{"type":"property","path":"\/documentation\/tripkit\/loc\/resendverificationemail","title":"static var resendVerificationEmail: String"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/loc\/add(location:)","title":"static func Add(location: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/ago(duration:)","title":"static func Ago(duration: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/alerts(_:)","title":"static func Alerts(Int) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/alongstreet(named:)","title":"static func AlongStreet(named: String?) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/arriveatlocation(_:at:)","title":"static func ArriveAtLocation(String?, at: String?) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/arrivenearlocation(_:)","title":"static func ArriveNearLocation(String?) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/arrives(attime:capitalize:)","title":"static func Arrives(atTime: String, capitalize: Bool) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/at(time:)","title":"static func At(time: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/at(what:time:)","title":"static func At(what: String, time: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/bookwith(service:)","title":"static func BookWith(service: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/call(service:)","title":"static func Call(service: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/confirmopen(appname:)","title":"static func ConfirmOpen(appName: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/dataprovided(by:)","title":"static func DataProvided(by: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/departs(attime:capitalize:)","title":"static func Departs(atTime: String, capitalize: Bool) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/durationwithouttraffic(_:)","title":"static func DurationWithoutTraffic(String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/earlyservice(minutes:service:)","title":"static func EarlyService(minutes: Int, service: String?) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/every(daystring:)","title":"static func Every(dayString: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/every(prefix:repetition:)","title":"static func Every(prefix: String?, repetition: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/from(date:)","title":"static func From(date: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/from(location:)","title":"static func From(location: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/get(appname:)","title":"static func Get(appName: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/getonservice(to:)","title":"static func GetOnService(To: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/in(duration:)","title":"static func In(duration: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/inthemeantimekeepexploring(appname:)","title":"static func InTheMeantimeKeepExploring(appName: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/lastupdated(date:)","title":"static func LastUpdated(date: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/lateservice(minutes:service:)","title":"static func LateService(minutes: Int, service: String?) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/leavefromlocation(_:at:)","title":"static func LeaveFromLocation(String?, at: String?) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/leavenearlocation(_:)","title":"static func LeaveNearLocation(String?) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/mapby(_:)","title":"static func MapBy(String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/more(count:)","title":"static func More(count: Int) -> String?"},{"type":"method","path":"\/documentation\/tripkit\/loc\/morelocationinfo(_:)","title":"static func MoreLocationInfo(String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/open(appname:)","title":"static func Open(appName: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/percentcyclefriendly(_:)","title":"static func PercentCycleFriendly(String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/percentwheelchairfriendly(_:)","title":"static func PercentWheelchairFriendly(String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/personshome(name:)","title":"static func PersonsHome(name: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/personsplace(name:)","title":"static func PersonsPlace(name: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/personswork(name:)","title":"static func PersonsWork(name: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/poweredby(_:)","title":"static func PoweredBy(String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/recurrences(_:)","title":"static func Recurrences(Int) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/routingfrom(_:toisnotyetsupported:)","title":"static func RoutingFrom(String, toIsNotYetSupported: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/searchingfor(_:)","title":"static func SearchingFor(String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/showing(_:oftransportmodes:)","title":"static func Showing(Int, ofTransportModes: Int) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/somethingat(time:)","title":"static func SomethingAt(time: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/somethingfor(duration:)","title":"static func SomethingFor(duration: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/stops(_:)","title":"static func Stops(Int) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/timetoleave(destination:time:)","title":"static func TimeToLeave(destination: String?, time: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/to(date:)","title":"static func To(date: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/to(location:)","title":"static func To(location: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/trip(index:)","title":"static func Trip(index: Int?) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/updatedago(duration:)","title":"static func UpdatedAgo(duration: String) -> String"},{"type":"method","path":"\/documentation\/tripkit\/loc\/fromtime(_:totime:)","title":"static func fromTime(String, toTime: String) -> String"}],"type":"class","path":"\/documentation\/tripkit\/loc","title":"Loc"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var tripKitContext: NSManagedObjectContext","path":"\/documentation\/tripkit\/objctripkit\/tripkitcontext","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: ObjcTripKit","path":"\/documentation\/tripkit\/objctripkit\/shared","type":"property"}],"type":"class","path":"\/documentation\/tripkit\/objctripkit","title":"ObjcTripKit"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var bicycleAccessibility: TKBicycleAccessibility","type":"property","path":"\/documentation\/tripkit\/service\/bicycleaccessibility"},{"title":"var code: String","type":"property","path":"\/documentation\/tripkit\/service\/code"},{"title":"var color: TKColor?","type":"property","path":"\/documentation\/tripkit\/service\/color"},{"title":"var continuation: Service?","type":"property","path":"\/documentation\/tripkit\/service\/continuation"},{"title":"var direction: String?","type":"property","path":"\/documentation\/tripkit\/service\/direction"},{"title":"var frequency: NSNumber?","type":"property","path":"\/documentation\/tripkit\/service\/frequency"},{"title":"var hasServiceData: Bool","type":"property","path":"\/documentation\/tripkit\/service\/hasservicedata"},{"title":"var isBicycleAccessible: Bool","type":"property","path":"\/documentation\/tripkit\/service\/isbicycleaccessible"},{"title":"var isCanceled: Bool","type":"property","path":"\/documentation\/tripkit\/service\/iscanceled"},{"title":"var isFrequencyBased: Bool","type":"property","path":"\/documentation\/tripkit\/service\/isfrequencybased"},{"title":"var isRealTime: Bool","type":"property","path":"\/documentation\/tripkit\/service\/isrealtime"},{"title":"var isRealTimeCapable: Bool","type":"property","path":"\/documentation\/tripkit\/service\/isrealtimecapable"},{"title":"var lineName: String?","type":"property","path":"\/documentation\/tripkit\/service\/linename"},{"title":"var modeImageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkit\/service\/modeimageistemplate"},{"title":"var modeInfo: TKModeInfo?","type":"property","path":"\/documentation\/tripkit\/service\/modeinfo"},{"title":"var modeTitle: String?","type":"property","path":"\/documentation\/tripkit\/service\/modetitle"},{"title":"var name: String?","type":"property","path":"\/documentation\/tripkit\/service\/name"},{"title":"var number: String?","type":"property","path":"\/documentation\/tripkit\/service\/number"},{"title":"var operatorID: String?","type":"property","path":"\/documentation\/tripkit\/service\/operatorid"},{"title":"var operatorName: String?","type":"property","path":"\/documentation\/tripkit\/service\/operatorname"},{"title":"var progenitor: Service?","type":"property","path":"\/documentation\/tripkit\/service\/progenitor"},{"title":"var region: TKRegion?","type":"property","path":"\/documentation\/tripkit\/service\/region"},{"title":"var shape: Shape?","type":"property","path":"\/documentation\/tripkit\/service\/shape"},{"title":"var shortIdentifier: String?","type":"property","path":"\/documentation\/tripkit\/service\/shortidentifier"},{"title":"var sortedVisits: [StopVisits]","type":"property","path":"\/documentation\/tripkit\/service\/sortedvisits"},{"title":"var title: String","type":"property","path":"\/documentation\/tripkit\/service\/title"},{"title":"var vehicle: Vehicle?","type":"property","path":"\/documentation\/tripkit\/service\/vehicle"},{"title":"var vehicleAlternatives: Set<Vehicle>?","type":"property","path":"\/documentation\/tripkit\/service\/vehiclealternatives"},{"title":"var visits: Set<StopVisits>?","type":"property","path":"\/documentation\/tripkit\/service\/visits"},{"title":"var wheelchairAccessibility: TKWheelchairAccessibility","type":"property","path":"\/documentation\/tripkit\/service\/wheelchairaccessibility"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func allAlerts() -> [Alert]","type":"method","path":"\/documentation\/tripkit\/service\/allalerts()"},{"title":"func findModeInfo() -> TKModeInfo?","type":"method","path":"\/documentation\/tripkit\/service\/findmodeinfo()"},{"title":"func modeImage(for: TKStyleModeIconType) -> TKImage?","type":"method","path":"\/documentation\/tripkit\/service\/modeimage(for:)"},{"title":"func modeImageURL(for: TKStyleModeIconType) -> URL?","type":"method","path":"\/documentation\/tripkit\/service\/modeimageurl(for:)"},{"title":"func shapes(embarkation: StopVisits?, disembarkation: StopVisits?) -> [TKDisplayableRoute]","type":"method","path":"\/documentation\/tripkit\/service\/shapes(embarkation:disembarkation:)"},{"title":"func visit(for: String) -> StopVisits?","type":"method","path":"\/documentation\/tripkit\/service\/visit(for:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func fetchOrInsert(code: String, in: NSManagedObjectContext) -> Service","type":"method","path":"\/documentation\/tripkit\/service\/fetchorinsert(code:in:)"},{"title":"class func fetchRequest() -> NSFetchRequest<Service>","type":"method","path":"\/documentation\/tripkit\/service\/fetchrequest()"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKRealTimeUpdatable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var wantsRealTimeUpdates: Bool","path":"\/documentation\/tripkit\/service\/wantsrealtimeupdates","type":"property"}],"path":"\/documentation\/tripkit\/service\/tkrealtimeupdatable-implementations"}],"type":"class","path":"\/documentation\/tripkit\/service","title":"Service"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/shape\/cyclingnetwork","title":"var cyclingNetwork: String?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/encodedwaypoints","title":"var encodedWaypoints: String?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/end","title":"var end: MKAnnotation?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/friendliness","title":"var friendliness: TKPathFriendliness","type":"property"},{"path":"\/documentation\/tripkit\/shape\/index","title":"var index: Int16","type":"property"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.property","title":"var instruction: Instruction?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/isdismount","title":"var isDismount: Bool","type":"property"},{"path":"\/documentation\/tripkit\/shape\/ishop","title":"var isHop: Bool","type":"property"},{"path":"\/documentation\/tripkit\/shape\/issafe","title":"var isSafe: Bool?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/metres","title":"var metres: NSNumber?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/roadtags","title":"var roadTags: [TKAPI.RoadTag]?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/segment","title":"var segment: TKSegment?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/services","title":"var services: Set<Service>?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/sortedcoordinates","title":"var sortedCoordinates: [TKNamedCoordinate]?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/start","title":"var start: MKAnnotation?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/tripkit\/shape\/travelled","title":"var travelled: Bool","type":"property"},{"path":"\/documentation\/tripkit\/shape\/visits","title":"var visits: Set<StopVisits>?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/shape\/didturnintofault()","title":"func didTurnIntoFault()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/shape\/fetchrequest()","title":"class func fetchRequest() -> NSFetchRequest<Shape>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/continuestraight","title":"case continueStraight","type":"case"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/headtowards","title":"case headTowards","type":"case"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnleft","title":"case turnLeft","type":"case"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnright","title":"case turnRight","type":"case"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnsharplyleft","title":"case turnSharplyLeft","type":"case"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnsharplyright","title":"case turnSharplyRight","type":"case"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnslightlyright","title":"case turnSlightlyRight","type":"case"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnslightyleft","title":"case turnSlightyLeft","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/init(rawvalue:)","title":"init?(rawValue: Int16)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/!=(_:_:)"}]},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/hash(into:)"}]}],"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum","title":"Shape.Instruction","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var routeColor: TKColor?","type":"property","path":"\/documentation\/tripkit\/shape\/routecolor"},{"title":"var routeDashPattern: [NSNumber]?","type":"property","path":"\/documentation\/tripkit\/shape\/routedashpattern"},{"title":"var routeIsTravelled: Bool","type":"property","path":"\/documentation\/tripkit\/shape\/routeistravelled"},{"title":"var routePath: [Any]","type":"property","path":"\/documentation\/tripkit\/shape\/routepath"},{"title":"var selectionIdentifier: String?","type":"property","path":"\/documentation\/tripkit\/shape\/selectionidentifier"}],"path":"\/documentation\/tripkit\/shape\/tkdisplayableroute-implementations","title":"TKDisplayableRoute Implementations","type":"symbol"}],"type":"class","path":"\/documentation\/tripkit\/shape","title":"Shape"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/stoplocation\/alerthashcodes","type":"property","title":"var alertHashCodes: Array<NSNumber>?"},{"path":"\/documentation\/tripkit\/stoplocation\/children","type":"property","title":"var children: Set<StopLocation>?"},{"path":"\/documentation\/tripkit\/stoplocation\/endvisits","type":"property","title":"var endVisits: Set<StopVisits>?"},{"path":"\/documentation\/tripkit\/stoplocation\/filter","type":"property","title":"var filter: String?"},{"path":"\/documentation\/tripkit\/stoplocation\/location","type":"property","title":"var location: TKNamedCoordinate?"},{"path":"\/documentation\/tripkit\/stoplocation\/modetitle","type":"property","title":"var modeTitle: String"},{"path":"\/documentation\/tripkit\/stoplocation\/name","type":"property","title":"var name: String?"},{"path":"\/documentation\/tripkit\/stoplocation\/parent","type":"property","title":"var parent: StopLocation?"},{"path":"\/documentation\/tripkit\/stoplocation\/region","type":"property","title":"var region: TKRegion?"},{"path":"\/documentation\/tripkit\/stoplocation\/regionname","type":"property","title":"var regionName: String?"},{"path":"\/documentation\/tripkit\/stoplocation\/shortname","type":"property","title":"var shortName: String?"},{"path":"\/documentation\/tripkit\/stoplocation\/sortscore","type":"property","title":"var sortScore: NSNumber?"},{"path":"\/documentation\/tripkit\/stoplocation\/stopcode","type":"property","title":"var stopCode: String"},{"path":"\/documentation\/tripkit\/stoplocation\/stopmodeinfo","type":"property","title":"var stopModeInfo: TKModeInfo?"},{"path":"\/documentation\/tripkit\/stoplocation\/timezone","type":"property","title":"var timeZone: TimeZone?"},{"path":"\/documentation\/tripkit\/stoplocation\/visits","type":"property","title":"var visits: Set<StopVisits>?"},{"path":"\/documentation\/tripkit\/stoplocation\/wheelchairaccessibility","type":"property","title":"var wheelchairAccessibility: TKWheelchairAccessibility"},{"path":"\/documentation\/tripkit\/stoplocation\/wheelchairaccessible","type":"property","title":"var wheelchairAccessible: NSNumber?"},{"path":"\/documentation\/tripkit\/stoplocation\/zoneid","type":"property","title":"var zoneID: String?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/stoplocation\/clearvisits()","type":"method","title":"func clearVisits()"},{"path":"\/documentation\/tripkit\/stoplocation\/stopstomatchto()","type":"method","title":"func stopsToMatchTo() -> [StopLocation]"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/stoplocation\/fetchorinsertstop(stopcode:modeinfo:at:in:)","type":"method","title":"static func fetchOrInsertStop(stopCode: String, modeInfo: TKModeInfo?, at: TKNamedCoordinate?, in: NSManagedObjectContext) -> StopLocation"},{"path":"\/documentation\/tripkit\/stoplocation\/fetchrequest()","type":"method","title":"class func fetchRequest() -> NSFetchRequest<StopLocation>"},{"path":"\/documentation\/tripkit\/stoplocation\/fetchstop(stopcode:inregion:requirecoordinate:in:)","type":"method","title":"static func fetchStop(stopCode: String, inRegion: String?, requireCoordinate: Bool, in: NSManagedObjectContext) -> StopLocation?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/stoplocation\/mkannotation-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/stoplocation\/coordinate","type":"property","title":"var coordinate: CLLocationCoordinate2D"},{"path":"\/documentation\/tripkit\/stoplocation\/subtitle","type":"property","title":"var subtitle: String?"},{"path":"\/documentation\/tripkit\/stoplocation\/title","type":"property","title":"var title: String?"}],"title":"MKAnnotation Implementations"},{"path":"\/documentation\/tripkit\/stoplocation\/mkannotation-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/stoplocation\/coordinate","type":"property","title":"var coordinate: CLLocationCoordinate2D"},{"path":"\/documentation\/tripkit\/stoplocation\/subtitle","type":"property","title":"var subtitle: String?"},{"path":"\/documentation\/tripkit\/stoplocation\/title","type":"property","title":"var title: String?"}],"title":"MKAnnotation Implementations"},{"path":"\/documentation\/tripkit\/stoplocation\/tkurlshareable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/stoplocation\/shareurl","type":"property","title":"var shareURL: URL?"}],"title":"TKURLShareable Implementations"},{"path":"\/documentation\/tripkit\/stoplocation\/uiactivityitemsource-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/stoplocation\/activityviewcontroller(_:itemforactivitytype:)","title":"func activityViewController(UIActivityViewController, itemForActivityType: UIActivity.ActivityType?) -> Any?","type":"method"},{"path":"\/documentation\/tripkit\/stoplocation\/activityviewcontrollerplaceholderitem(_:)","title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","type":"method"}],"title":"UIActivityItemSource Implementations"}],"type":"class","path":"\/documentation\/tripkit\/stoplocation","title":"StopLocation"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var bearing: NSNumber?","path":"\/documentation\/tripkit\/stopvisits\/bearing"},{"type":"property","title":"var departure: Date?","path":"\/documentation\/tripkit\/stopvisits\/departure"},{"type":"property","title":"var departurePlatform: String?","path":"\/documentation\/tripkit\/stopvisits\/departureplatform"},{"type":"property","title":"var frequency: NSNumber?","path":"\/documentation\/tripkit\/stopvisits\/frequency"},{"type":"property","title":"var index: Int16","path":"\/documentation\/tripkit\/stopvisits\/index"},{"type":"property","title":"var isActive: Bool","path":"\/documentation\/tripkit\/stopvisits\/isactive"},{"type":"property","title":"var originalTime: Date?","path":"\/documentation\/tripkit\/stopvisits\/originaltime"},{"type":"property","title":"var realTimeStatus: RealTime","path":"\/documentation\/tripkit\/stopvisits\/realtimestatus"},{"type":"property","title":"var regionDay: Date?","path":"\/documentation\/tripkit\/stopvisits\/regionday"},{"type":"property","title":"var searchString: String?","path":"\/documentation\/tripkit\/stopvisits\/searchstring"},{"type":"property","title":"var service: Service!","path":"\/documentation\/tripkit\/stopvisits\/service"},{"type":"property","title":"var shapes: Set<Shape>?","path":"\/documentation\/tripkit\/stopvisits\/shapes"},{"type":"property","title":"var smsString: String?","path":"\/documentation\/tripkit\/stopvisits\/smsstring"},{"type":"property","title":"var startPlatform: String?","path":"\/documentation\/tripkit\/stopvisits\/startplatform"},{"type":"property","title":"var stop: StopLocation!","path":"\/documentation\/tripkit\/stopvisits\/stop"},{"type":"property","title":"var timeForServerRequests: Date","path":"\/documentation\/tripkit\/stopvisits\/timeforserverrequests"},{"type":"property","title":"var timeZone: TimeZone","path":"\/documentation\/tripkit\/stopvisits\/timezone"},{"type":"property","title":"var timetableStartPlatform: String?","path":"\/documentation\/tripkit\/stopvisits\/timetablestartplatform"},{"type":"property","title":"var timing: TKServiceTiming","path":"\/documentation\/tripkit\/stopvisits\/timing"},{"type":"property","title":"var wheelchairAccessibility: TKWheelchairAccessibility","path":"\/documentation\/tripkit\/stopvisits\/wheelchairaccessibility"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func accessibilityDescription(includeRealTime: Bool) -> String","path":"\/documentation\/tripkit\/stopvisits\/accessibilitydescription(includerealtime:)"},{"type":"method","title":"func realTimeInformation(withOriginalTime: Bool) -> String","path":"\/documentation\/tripkit\/stopvisits\/realtimeinformation(withoriginaltime:)"},{"type":"method","title":"func triggerRealTimeKVO()","path":"\/documentation\/tripkit\/stopvisits\/triggerrealtimekvo()"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var defaultSortDescriptors: [NSSortDescriptor]","path":"\/documentation\/tripkit\/stopvisits\/defaultsortdescriptors"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func departuresPredicate(stops: [StopLocation], from: Date, filter: String) -> NSPredicate","path":"\/documentation\/tripkit\/stopvisits\/departurespredicate(stops:from:filter:)"},{"type":"method","title":"class func fetchRequest() -> NSFetchRequest<StopVisits>","path":"\/documentation\/tripkit\/stopvisits\/fetchrequest()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"StopVisits.RealTime","path":"\/documentation\/tripkit\/stopvisits\/realtime","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/stopvisits\/realtime\/canceled","type":"case","title":"case canceled"},{"path":"\/documentation\/tripkit\/stopvisits\/realtime\/early(minutes:before:)","type":"case","title":"case early(minutes: Int, before: Date)"},{"path":"\/documentation\/tripkit\/stopvisits\/realtime\/late(minutes:after:)","type":"case","title":"case late(minutes: Int, after: Date)"},{"path":"\/documentation\/tripkit\/stopvisits\/realtime\/notapplicable","type":"case","title":"case notApplicable"},{"path":"\/documentation\/tripkit\/stopvisits\/realtime\/notavailable","type":"case","title":"case notAvailable"},{"path":"\/documentation\/tripkit\/stopvisits\/realtime\/ontime","type":"case","title":"case onTime"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/stopvisits\/realtime\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/stopvisits\/realtime\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Comparable Implementations","path":"\/documentation\/tripkit\/stopvisits\/comparable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func ... (Self) -> PartialRangeThrough<Self>","path":"\/documentation\/tripkit\/stopvisits\/'...(_:)-1c0i8","type":"op"},{"title":"static func ... (Self) -> PartialRangeFrom<Self>","path":"\/documentation\/tripkit\/stopvisits\/'...(_:)-8gkvw","type":"op"},{"title":"static func ... (Self, Self) -> ClosedRange<Self>","path":"\/documentation\/tripkit\/stopvisits\/'...(_:_:)","type":"op"},{"title":"static func ..< (Self) -> PartialRangeUpTo<Self>","path":"\/documentation\/tripkit\/stopvisits\/'.._(_:)","type":"op"},{"title":"static func ..< (Self, Self) -> Range<Self>","path":"\/documentation\/tripkit\/stopvisits\/'.._(_:_:)","type":"op"},{"title":"static func < (StopVisits, StopVisits) -> Bool","path":"\/documentation\/tripkit\/stopvisits\/_(_:_:)","type":"op"},{"title":"static func > (Self, Self) -> Bool","path":"\/documentation\/tripkit\/stopvisits\/_(_:_:)-7kgr5","type":"op"},{"title":"static func >= (Self, Self) -> Bool","path":"\/documentation\/tripkit\/stopvisits\/_=(_:_:)-1o0ex","type":"op"},{"title":"static func <= (Self, Self) -> Bool","path":"\/documentation\/tripkit\/stopvisits\/_=(_:_:)-1xg3e","type":"op"}]},{"type":"symbol","title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/stopvisits\/mkannotation-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/stopvisits\/tk_valid(geocoder:)"}]},{"type":"symbol","title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/stopvisits\/mkannotation-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/stopvisits\/tk_valid(geocoder:)","type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation"}]},{"type":"symbol","title":"TKRealTimeUpdatable Implementations","path":"\/documentation\/tripkit\/stopvisits\/tkrealtimeupdatable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var wantsRealTimeUpdates: Bool","path":"\/documentation\/tripkit\/stopvisits\/wantsrealtimeupdates"}]},{"type":"symbol","title":"TKURLShareable Implementations","path":"\/documentation\/tripkit\/stopvisits\/tkurlshareable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var shareURL: URL?","path":"\/documentation\/tripkit\/stopvisits\/shareurl","type":"property"}]},{"type":"symbol","title":"UIActivityItemSource Implementations","path":"\/documentation\/tripkit\/stopvisits\/uiactivityitemsource-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func activityViewController(UIActivityViewController, itemForActivityType: UIActivity.ActivityType?) -> Any?","path":"\/documentation\/tripkit\/stopvisits\/activityviewcontroller(_:itemforactivitytype:)"},{"type":"method","title":"func activityViewController(UIActivityViewController, subjectForActivityType: UIActivity.ActivityType?) -> String","path":"\/documentation\/tripkit\/stopvisits\/activityviewcontroller(_:subjectforactivitytype:)"},{"type":"method","title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","path":"\/documentation\/tripkit\/stopvisits\/activityviewcontrollerplaceholderitem(_:)"}]}],"type":"class","path":"\/documentation\/tripkit\/stopvisits","title":"StopVisits"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tkapitocoredataconverter\/updatevehicles(for:primaryvehicle:alternativevehicles:)","type":"method","title":"static func updateVehicles(for: Service, primaryVehicle: [String : Any]?, alternativeVehicles: [[String : Any]]?)"},{"path":"\/documentation\/tripkit\/tkapitocoredataconverter\/vehiclesmodel(for:)","type":"method","title":"static func vehiclesModel(for: [TKVehicular]) -> [TKAPI.PrivateVehicle]"},{"path":"\/documentation\/tripkit\/tkapitocoredataconverter\/vehiclespayload(for:)","type":"method","title":"static func vehiclesPayload(for: [TKVehicular]) -> [[String : Any]]"}],"type":"class","path":"\/documentation\/tripkit\/tkapitocoredataconverter","title":"TKAPIToCoreDataConverter"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkaddressformatter\/singlelineaddress(for:)-5oq09","title":"static func singleLineAddress(for: CLPlacemark) -> String?"},{"type":"method","path":"\/documentation\/tripkit\/tkaddressformatter\/singlelineaddress(for:)-9x7q3","title":"static func singleLineAddress(for: CNPostalAddress) -> String"}],"type":"class","path":"\/documentation\/tripkit\/tkaddressformatter","title":"TKAddressFormatter"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/tripkit\/tkbikepodlocation\/init(coder:)"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkbikepodlocation\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bikePod: TKAPI.BikePodInfo","type":"property","path":"\/documentation\/tripkit\/tkbikepodlocation\/bikepod"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkbikepodlocation\/encode(to:)"},{"title":"func encode(with: NSCoder)","type":"method","path":"\/documentation\/tripkit\/tkbikepodlocation\/encode(with:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"class var supportsSecureCoding: Bool","type":"property","path":"\/documentation\/tripkit\/tkbikepodlocation\/supportssecurecoding"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var deepLink: URL?","path":"\/documentation\/tripkit\/tkbikepodlocation\/deeplink","type":"property"},{"title":"var downloadLink: URL?","path":"\/documentation\/tripkit\/tkbikepodlocation\/downloadlink","type":"property"}],"type":"symbol","path":"\/documentation\/tripkit\/tkbikepodlocation\/tkdeeplinkable-implementations","title":"TKDeepLinkable Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkbikepodlocation","title":"TKBikePodLocation"},{"title":"TKCarParkLocation","type":"class","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkit\/tkcarparklocation\/init(coder:)","type":"init"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkcarparklocation\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var carPark: TKAPI.CarParkInfo","path":"\/documentation\/tripkit\/tkcarparklocation\/carpark","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkit\/tkcarparklocation\/encode(to:)","type":"method"},{"title":"func encode(with: NSCoder)","path":"\/documentation\/tripkit\/tkcarparklocation\/encode(with:)","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkcarparklocation\/supportssecurecoding","title":"class var supportsSecureCoding: Bool"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkcarparklocation\/deeplink","type":"property","title":"var deepLink: URL?"},{"path":"\/documentation\/tripkit\/tkcarparklocation\/downloadlink","type":"property","title":"var downloadLink: URL?"}],"type":"symbol","path":"\/documentation\/tripkit\/tkcarparklocation\/tkdeeplinkable-implementations","title":"TKDeepLinkable Implementations"}],"path":"\/documentation\/tripkit\/tkcarparklocation"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/carpod","title":"var carPod: TKAPI.CarPodInfo","type":"property"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/supportsvehicleavailability","title":"var supportsVehicleAvailability: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/encode(with:)","title":"func encode(with: NSCoder)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/supportssecurecoding","title":"class var supportsSecureCoding: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var deepLink: URL?","path":"\/documentation\/tripkit\/tkcarpodlocation\/deeplink","type":"property"},{"title":"var downloadLink: URL?","path":"\/documentation\/tripkit\/tkcarpodlocation\/downloadlink","type":"property"}],"path":"\/documentation\/tripkit\/tkcarpodlocation\/tkdeeplinkable-implementations","title":"TKDeepLinkable Implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkcarpodlocation","title":"TKCarPodLocation","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/tripkit\/tkcarrentallocation\/init(coder:)"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkcarrentallocation\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let carRental: TKAPI.CarRentalInfo","type":"property","path":"\/documentation\/tripkit\/tkcarrentallocation\/carrental"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkcarrentallocation\/encode(to:)"},{"title":"func encode(with: NSCoder)","type":"method","path":"\/documentation\/tripkit\/tkcarrentallocation\/encode(with:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"class var supportsSecureCoding: Bool","type":"property","path":"\/documentation\/tripkit\/tkcarrentallocation\/supportssecurecoding"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKDeepLinkable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/deeplink","title":"var deepLink: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/downloadlink","title":"var downloadLink: URL?","type":"property"}],"path":"\/documentation\/tripkit\/tkcarrentallocation\/tkdeeplinkable-implementations"}],"path":"\/documentation\/tripkit\/tkcarrentallocation","title":"TKCarRentalLocation","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func read(String, directory: TKFileCacheDirectory, subdirectory: String?) -> Content?","type":"method","path":"\/documentation\/tripkit\/tkcodablecache\/read(_:directory:subdirectory:)"},{"title":"static func save(String, content: Codable, directory: TKFileCacheDirectory, subdirectory: String?)","type":"method","path":"\/documentation\/tripkit\/tkcodablecache\/save(_:content:directory:subdirectory:)"}],"path":"\/documentation\/tripkit\/tkcodablecache","title":"TKCodableCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(path: [MKAnnotation], color: TKColor?, dashPattern: [NSNumber]?, isTravelled: Bool, identifier: String?)","path":"\/documentation\/tripkit\/tkcoloredroute\/init(path:color:dashpattern:istravelled:identifier:)","type":"init"},{"title":"init(path: [MKAnnotation], from: Int, to: Int, color: TKColor?, dashPattern: [NSNumber]?, isTravelled: Bool)","path":"\/documentation\/tripkit\/tkcoloredroute\/init(path:from:to:color:dashpattern:istravelled:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var path: [MKAnnotation]","path":"\/documentation\/tripkit\/tkcoloredroute\/path","type":"property"},{"title":"let routeColor: TKColor?","path":"\/documentation\/tripkit\/tkcoloredroute\/routecolor","type":"property"},{"title":"let routeDashPattern: [NSNumber]?","path":"\/documentation\/tripkit\/tkcoloredroute\/routedashpattern","type":"property"},{"title":"let routeIsTravelled: Bool","path":"\/documentation\/tripkit\/tkcoloredroute\/routeistravelled","type":"property"},{"title":"let selectionIdentifier: String?","path":"\/documentation\/tripkit\/tkcoloredroute\/selectionidentifier","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append([MKAnnotation])","path":"\/documentation\/tripkit\/tkcoloredroute\/append(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKDisplayableRoute Implementations","path":"\/documentation\/tripkit\/tkcoloredroute\/tkdisplayableroute-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var routePath: [Any]","path":"\/documentation\/tripkit\/tkcoloredroute\/routepath","type":"property"}],"type":"symbol"}],"path":"\/documentation\/tripkit\/tkcoloredroute","title":"TKColoredRoute","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(level: TKLog.LogLevel, subsystem: String?)","path":"\/documentation\/tripkit\/tkconsolelogger\/init(level:subsystem:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let level: TKLog.LogLevel","path":"\/documentation\/tripkit\/tkconsolelogger\/level","type":"property"},{"title":"let subsystem: String","path":"\/documentation\/tripkit\/tkconsolelogger\/subsystem","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func output(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkit\/tkconsolelogger\/output(_:identifier:message:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKLogger Implementations","path":"\/documentation\/tripkit\/tkconsolelogger\/tklogger-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func log(TKLog.LogLevel, identifier: String, message: String)","type":"method","path":"\/documentation\/tripkit\/tkconsolelogger\/log(_:identifier:message:)"},{"title":"func log(identifier: String, request: TKLog.ServerRequest)","type":"method","path":"\/documentation\/tripkit\/tkconsolelogger\/log(identifier:request:)"},{"title":"func log(identifier: String, response: TKLog.ServerResponse)","type":"method","path":"\/documentation\/tripkit\/tkconsolelogger\/log(identifier:response:)"}],"type":"symbol"}],"path":"\/documentation\/tripkit\/tkconsolelogger","title":"TKConsoleLogger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(for: TKSegment)","path":"\/documentation\/tripkit\/tkdlstable\/init(for:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let endRegion: TKRegion","path":"\/documentation\/tripkit\/tkdlstable\/endregion","type":"property"},{"title":"let endStopCode: String","path":"\/documentation\/tripkit\/tkdlstable\/endstopcode","type":"property"},{"title":"var pairIdentifiers: Set<String>?","path":"\/documentation\/tripkit\/tkdlstable\/pairidentifiers","type":"property"},{"title":"let startRegion: TKRegion","path":"\/documentation\/tripkit\/tkdlstable\/startregion","type":"property"},{"title":"let startStopCode: String","path":"\/documentation\/tripkit\/tkdlstable\/startstopcode","type":"property"},{"title":"let tripKitContext: NSManagedObjectContext","path":"\/documentation\/tripkit\/tkdlstable\/tripkitcontext","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func addPairIdentifiers(Set<String>)","path":"\/documentation\/tripkit\/tkdlstable\/addpairidentifiers(_:)","type":"method"}],"path":"\/documentation\/tripkit\/tkdlstable","title":"TKDLSTable","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var details: TKAPI.ServerError?","path":"\/documentation\/tripkit\/tkerror\/details","type":"property"},{"title":"var isUserError: Bool","path":"\/documentation\/tripkit\/tkerror\/isusererror","type":"property"},{"title":"var title: String?","path":"\/documentation\/tripkit\/tkerror\/title","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func error(from: Data, domain: String) -> TKError?","path":"\/documentation\/tripkit\/tkerror\/error(from:domain:)","type":"method"},{"title":"class func error(from: Data?, statusCode: Int) -> TKError?","path":"\/documentation\/tripkit\/tkerror\/error(from:statuscode:)","type":"method"},{"title":"class func error(withCode: Int, userInfo: [String : Any]?) -> TKError","path":"\/documentation\/tripkit\/tkerror\/error(withcode:userinfo:)","type":"method"}],"path":"\/documentation\/tripkit\/tkerror","title":"TKError","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkit\/tkfacilitylocation\/init(coder:)","type":"init"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkfacilitylocation\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var facilityType: String","path":"\/documentation\/tripkit\/tkfacilitylocation\/facilitytype","type":"property"},{"title":"var primaryType: String?","path":"\/documentation\/tripkit\/tkfacilitylocation\/primarytype","type":"property"},{"title":"var secondaryType: String?","path":"\/documentation\/tripkit\/tkfacilitylocation\/secondarytype","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkit\/tkfacilitylocation\/encode(to:)","type":"method"},{"title":"func encode(with: NSCoder)","path":"\/documentation\/tripkit\/tkfacilitylocation\/encode(with:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"class var supportsSecureCoding: Bool","path":"\/documentation\/tripkit\/tkfacilitylocation\/supportssecurecoding","type":"property"}],"path":"\/documentation\/tripkit\/tkfacilitylocation","title":"TKFacilityLocation","type":"class"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tkfilecache\/read(_:directory:subdirectory:)","type":"method","title":"static func read(String, directory: TKFileCacheDirectory, subdirectory: String?) -> Data?"},{"path":"\/documentation\/tripkit\/tkfilecache\/remove(_:directory:subdirectory:)","type":"method","title":"static func remove(String, directory: TKFileCacheDirectory, subdirectory: String?)"},{"path":"\/documentation\/tripkit\/tkfilecache\/remove(directory:subdirectory:)","type":"method","title":"static func remove(directory: TKFileCacheDirectory, subdirectory: String)"},{"path":"\/documentation\/tripkit\/tkfilecache\/save(_:data:directory:subdirectory:)","type":"method","title":"static func save(String, data: Data, directory: TKFileCacheDirectory, subdirectory: String?)"}],"path":"\/documentation\/tripkit\/tkfilecache","title":"TKFileCache","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/init(coder:)","type":"init"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/init(from:)","type":"init"},{"title":"init(vehicle: TKAPI.SharedVehicleInfo, modeInfo: TKModeInfo, coordinate: CLLocationCoordinate2D)","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/init(vehicle:modeinfo:coordinate:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var vehicle: TKAPI.SharedVehicleInfo","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/vehicle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/encode(to:)","type":"method"},{"title":"func encode(with: NSCoder)","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/encode(with:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"class var supportsSecureCoding: Bool","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/supportssecurecoding","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKDeepLinkable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/deeplink","title":"var deepLink: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/downloadlink","title":"var downloadLink: URL?","type":"property"}],"path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/tkdeeplinkable-implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation","title":"TKFreeFloatingVehicleLocation","type":"class"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkgeocoderhelper\/preferredgeocoder","title":"static var preferredGeocoder: TKGeocoding"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkgeocoderhelper\/errorfornolocationfound(forinput:)","title":"static func errorForNoLocationFound(forInput: String) -> Error"},{"type":"method","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocode(_:using:near:)","title":"class func geocode(TKGeocodable, using: TKGeocoding, near: MKMapRect) async throws"},{"type":"method","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocode(_:using:near:completion:)","title":"class func geocode(TKGeocodable, using: TKGeocoding, near: MKMapRect, completion: (Result<Void, Error>) -> Void)"},{"type":"method","path":"\/documentation\/tripkit\/tkgeocoderhelper\/mergedandpruned(_:withmaximum:)","title":"class func mergedAndPruned([TKNamedCoordinate], withMaximum: Int) -> [TKNamedCoordinate]"},{"type":"method","path":"\/documentation\/tripkit\/tkgeocoderhelper\/pickbest(from:)","title":"class func pickBest(from: [MKAnnotation]) -> MKAnnotation?"},{"type":"method","path":"\/documentation\/tripkit\/tkgeocoderhelper\/pruned(_:withmaximum:)","title":"class func pruned([TKAutocompletionResult], withMaximum: Int) -> [TKAutocompletionResult]"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case missingAddress","type":"case","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/missingaddress"},{"title":"case outdatedResult","type":"case","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/outdatedresult"},{"title":"case serverFoundNoMatch(String)","type":"case","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/serverfoundnomatch(_:)"},{"title":"case unknownServerError(String)","type":"case","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/unknownservererror(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/localizeddescription","type":"property"}],"path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/error-implementations"}],"title":"TKGeocoderHelper.GeocodingError"}],"path":"\/documentation\/tripkit\/tkgeocoderhelper","title":"TKGeocoderHelper","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func image(for: TKInfoIconType, usage: TKInfoIconUsage) -> TKImage?","type":"method","path":"\/documentation\/tripkit\/tkinfoicon\/image(for:usage:)"},{"title":"static func imageName(for: TKInfoIconType, usage: TKInfoIconUsage) -> String?","type":"method","path":"\/documentation\/tripkit\/tkinfoicon\/imagename(for:usage:)"}],"path":"\/documentation\/tripkit\/tkinfoicon","title":"TKInfoIcon","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkinternationalregion\/init(from:)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func contains(CLLocationCoordinate2D) -> Bool","path":"\/documentation\/tripkit\/tkinternationalregion\/contains(_:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKInternationalRegion","path":"\/documentation\/tripkit\/tkinternationalregion\/shared","type":"property"}],"path":"\/documentation\/tripkit\/tkinternationalregion","title":"TKInternationalRegion","type":"class"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tkjsoncache\/read(_:directory:)","type":"method","title":"static func read(String, directory: TKFileCacheDirectory) -> [String : Any]?"},{"path":"\/documentation\/tripkit\/tkjsoncache\/read(_:directory:subdirectory:)","type":"method","title":"static func read(String, directory: TKFileCacheDirectory, subdirectory: String?) -> [String : Any]?"},{"path":"\/documentation\/tripkit\/tkjsoncache\/save(_:dictionary:directory:)","type":"method","title":"static func save(String, dictionary: [String : Any], directory: TKFileCacheDirectory)"},{"path":"\/documentation\/tripkit\/tkjsoncache\/save(_:dictionary:directory:subdirectory:)","type":"method","title":"static func save(String, dictionary: [String : Any], directory: TKFileCacheDirectory, subdirectory: String?)"}],"path":"\/documentation\/tripkit\/tkjsoncache","title":"TKJSONCache","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tklocalcost\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/accuracy","title":"let accuracy: TKLocalCostAccuracy"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/cost","title":"let cost: Double"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/currency","title":"let currency: String"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/maxcost","title":"let maxCost: Double?"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/mincost","title":"let minCost: Double?"}],"path":"\/documentation\/tripkit\/tklocalcost","title":"TKLocalCost","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var currentLocation: MKAnnotation","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/currentlocation"},{"title":"var lastKnownUserLocation: CLLocation?","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/lastknownuserlocation"},{"title":"var openSettingsHandler: (() -> Void)?","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/opensettingshandler"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annotationIsCurrentLocation(MKAnnotation, orCloseEnough: Bool) -> Bool","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/annotationiscurrentlocation(_:orcloseenough:)"},{"title":"func fetch(within: TimeInterval, completion: (Result<CLLocation, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/fetch(within:completion:)"},{"title":"func subscribe(id: AnyHashable, onUpdate: (CLLocation) -> Void)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/subscribe(id:onupdate:)"},{"title":"func unsubscribe(id: AnyHashable)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/unsubscribe(id:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKLocationManager","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/shared"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKLocationManager.LocalizationError","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case authorizationDenied","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/authorizationdenied"},{"type":"case","title":"case featureNotAvailable","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/featurenotavailable"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/error-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var errorDescription: String?","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/errordescription","type":"property"},{"title":"var failureReason: String?","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/failurereason","type":"property"},{"title":"var helpAnchor: String?","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/helpanchor","type":"property"},{"title":"var recoverySuggestion: String?","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/recoverysuggestion","type":"property"}],"title":"LocalizedError Implementations","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/localizederror-implementations"}],"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CLLocationManagerDelegate Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tklocationmanager\/locationmanager(_:didchangeauthorization:)","type":"method","title":"func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)"},{"path":"\/documentation\/tripkit\/tklocationmanager\/locationmanager(_:didupdatelocations:)","type":"method","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])"},{"path":"\/documentation\/tripkit\/tklocationmanager\/locationmanagerdidchangeauthorization(_:)","type":"method","title":"func locationManagerDidChangeAuthorization(CLLocationManager)"}],"path":"\/documentation\/tripkit\/tklocationmanager\/cllocationmanagerdelegate-implementations"},{"title":"TKPermissionManager Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var authorizationAlertText: String","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/authorizationalerttext"},{"title":"var authorizationRestrictionsApply: Bool","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/authorizationrestrictionsapply"},{"title":"var authorizationStatus: TKAuthorizationStatus","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/authorizationstatus"},{"title":"var featureIsAvailable: Bool","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/featureisavailable"},{"title":"var isAuthorized: Bool","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/isauthorized"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func askForPermission((Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/askforpermission(_:)"},{"title":"func showAuthorizationAlert(sender: Any?, in: UIViewController)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/showauthorizationalert(sender:in:)"},{"title":"func tryAuthorization(sender: Any?, in: UIViewController, completion: (Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/tryauthorization(sender:in:completion:)"}],"path":"\/documentation\/tripkit\/tklocationmanager\/tkpermissionmanager-implementations"}],"path":"\/documentation\/tripkit\/tklocationmanager","title":"TKLocationManager","type":"class"},{"children":[{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func == (TKLog.ServerRequest, TKLog.ServerRequest) -> Bool","type":"op","path":"\/documentation\/tripkit\/tklog\/serverrequest\/==(_:_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","type":"property","path":"\/documentation\/tripkit\/tklog\/serverrequest\/id"},{"title":"let request: URLRequest","type":"property","path":"\/documentation\/tripkit\/tklog\/serverrequest\/request"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tklog\/serverrequest\/hash(into:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tklog\/serverrequest\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/tripkit\/tklog\/serverrequest\/equatable-implementations"}],"type":"struct","title":"TKLog.ServerRequest","path":"\/documentation\/tripkit\/tklog\/serverrequest"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tklog\/serverresponse\/==(_:_:)","title":"static func == (TKLog.ServerResponse, TKLog.ServerResponse) -> Bool"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tklog\/serverresponse\/request","title":"let request: TKLog.ServerRequest"},{"type":"property","path":"\/documentation\/tripkit\/tklog\/serverresponse\/result","title":"let result: TKLog.ServerResult"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tklog\/serverresponse\/hash(into:)","title":"func hash(into: inout Hasher)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tklog\/serverresponse\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tklog\/serverresponse\/equatable-implementations","title":"Equatable Implementations"}],"type":"struct","title":"TKLog.ServerResponse","path":"\/documentation\/tripkit\/tklog\/serverresponse"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKLog.ServerResult","path":"\/documentation\/tripkit\/tklog\/serverresult"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var loggers: [any TKLogger]","path":"\/documentation\/tripkit\/tklog\/loggers"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"class func debug(String, text: @autoclosure () -> String)","path":"\/documentation\/tripkit\/tklog\/debug(_:text:)"},{"type":"method","title":"class func debug(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkit\/tklog\/debug(identifier:_:file:)"},{"type":"method","title":"class func error(String, text: String)","path":"\/documentation\/tripkit\/tklog\/error(_:text:)"},{"title":"class func error(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkit\/tklog\/error(identifier:_:file:)"},{"title":"class func format(response: URLResponse, data: Data?, for: TKLog.ServerRequest, detailed: Bool) -> String","type":"method","path":"\/documentation\/tripkit\/tklog\/format(response:data:for:detailed:)"},{"title":"class func formatForVCCode(request: TKLog.ServerRequest) -> String","type":"method","path":"\/documentation\/tripkit\/tklog\/formatforvccode(request:)"},{"title":"class func info(String, text: @autoclosure () -> String)","type":"method","path":"\/documentation\/tripkit\/tklog\/info(_:text:)"},{"title":"class func info(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkit\/tklog\/info(identifier:_:file:)"},{"title":"class func log(String, request: URLRequest, uuid: UUID)","type":"method","path":"\/documentation\/tripkit\/tklog\/log(_:request:uuid:)"},{"title":"class func log(String, response: URLResponse?, data: Data?, orError: (any Error)?, for: URLRequest, uuid: UUID)","type":"method","path":"\/documentation\/tripkit\/tklog\/log(_:response:data:orerror:for:uuid:)"},{"title":"class func verbose(String, text: @autoclosure () -> String)","type":"method","path":"\/documentation\/tripkit\/tklog\/verbose(_:text:)"},{"title":"class func verbose(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkit\/tklog\/verbose(identifier:_:file:)"},{"title":"class func warn(String, text: String)","type":"method","path":"\/documentation\/tripkit\/tklog\/warn(_:text:)"},{"title":"class func warn(identifier: String?, @autoclosure () -> String, file: StaticString)","type":"method","path":"\/documentation\/tripkit\/tklog\/warn(identifier:_:file:)"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/debug","title":"case debug"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/error","title":"case error"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/info","title":"case info"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/verbose","title":"case verbose"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/warning","title":"case warning"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tklog\/loglevel\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tklog\/loglevel\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tklog\/loglevel\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tklog\/loglevel\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tklog\/loglevel\/hash(into:)"}],"path":"\/documentation\/tripkit\/tklog\/loglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"title":"TKLog.LogLevel","type":"enum","path":"\/documentation\/tripkit\/tklog\/loglevel"}],"path":"\/documentation\/tripkit\/tklog","title":"TKLog","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkmaptiles\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkmaptiles\/name","title":"let name: String"},{"type":"property","path":"\/documentation\/tripkit\/tkmaptiles\/sources","title":"let sources: [TKAPI.DataAttribution]"},{"type":"property","path":"\/documentation\/tripkit\/tkmaptiles\/urltemplates","title":"let urlTemplates: [String]"}],"path":"\/documentation\/tripkit\/tkmaptiles","title":"TKMapTiles","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkminiinstruction\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/tripkit\/tkminiinstruction\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkminiinstruction\/detail","type":"property","title":"let detail: String?"},{"path":"\/documentation\/tripkit\/tkminiinstruction\/instruction","type":"property","title":"let instruction: String"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkminiinstruction\/encode(with:)","type":"method","title":"func encode(with: NSCoder)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkminiinstruction\/supportssecurecoding","type":"property","title":"static var supportsSecureCoding: Bool"}],"path":"\/documentation\/tripkit\/tkminiinstruction","title":"TKMiniInstruction","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkit\/tkmodecoordinate\/init(coder:)","type":"init"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkmodecoordinate\/init(from:)","type":"init"},{"title":"init(modeInfo: TKModeInfo, coordinate: CLLocationCoordinate2D)","path":"\/documentation\/tripkit\/tkmodecoordinate\/init(modeinfo:coordinate:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var stopModeInfo: TKModeInfo","path":"\/documentation\/tripkit\/tkmodecoordinate\/stopmodeinfo","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"class var supportsSecureCoding: Bool","path":"\/documentation\/tripkit\/tkmodecoordinate\/supportssecurecoding","type":"property"}],"path":"\/documentation\/tripkit\/tkmodecoordinate","title":"TKModeCoordinate","type":"class"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func modesContain(Set<String>, Set<String>) -> Bool","path":"\/documentation\/tripkit\/tkmodehelper\/modescontain(_:_:)"}],"path":"\/documentation\/tripkit\/tkmodehelper","title":"TKModeHelper","type":"class"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func image(for: TKModeInfo) -> TKImage?","path":"\/documentation\/tripkit\/tkmodeimagefactory\/image(for:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKModeImageFactory","path":"\/documentation\/tripkit\/tkmodeimagefactory\/shared","type":"property"}],"path":"\/documentation\/tripkit\/tkmodeimagefactory","title":"TKModeImageFactory","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/alt","title":"let alt: String","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/color","title":"var color: TKColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/descriptor","title":"let descriptor: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/glyphcolor","title":"var glyphColor: TKColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/hash","title":"var hash: Int","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/identifier","title":"let identifier: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/image","title":"var image: TKImage?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/imageurl","title":"var imageURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/localimagename","title":"let localImageName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/remoteimageisbranding","title":"var remoteImageIsBranding: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/remoteimageistemplate","title":"var remoteImageIsTemplate: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/remoteimagename","title":"let remoteImageName: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/encode(with:)","title":"func encode(with: NSCoder)","type":"method"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/image(type:)","title":"func image(type: TKStyleModeIconType) -> TKImage?","type":"method"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/imageurl(type:)","title":"func imageURL(type: TKStyleModeIconType) -> URL?","type":"method"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/isequal(_:)","title":"func isEqual(Any?) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/supportssecurecoding","title":"static var supportsSecureCoding: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/unknown","title":"static var unknown: TKModeInfo","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/modeinfo(for:)","title":"class func modeInfo(for: [String : Any]?) -> TKModeInfo?","type":"method"}],"path":"\/documentation\/tripkit\/tkmodeinfo","title":"TKModeInfo","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(TKAPI.Location)","path":"\/documentation\/tripkit\/tknamedcoordinate\/init(_:)-44ct5"},{"type":"init","title":"init?(EKEvent)","path":"\/documentation\/tripkit\/tknamedcoordinate\/init(_:)-djaa"},{"type":"init","title":"init?(coder: NSCoder)","path":"\/documentation\/tripkit\/tknamedcoordinate\/init(coder:)"},{"type":"init","title":"init(coordinate: CLLocationCoordinate2D)","path":"\/documentation\/tripkit\/tknamedcoordinate\/init(coordinate:)"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tknamedcoordinate\/init(from:)"},{"type":"init","title":"init(latitude: CLLocationDegrees, longitude: CLLocationDegrees, name: String?, address: String?)","path":"\/documentation\/tripkit\/tknamedcoordinate\/init(latitude:longitude:name:address:)"},{"type":"init","title":"init(name: String?, address: String?)","path":"\/documentation\/tripkit\/tknamedcoordinate\/init(name:address:)"},{"type":"init","title":"init(placemark: CLPlacemark)","path":"\/documentation\/tripkit\/tknamedcoordinate\/init(placemark:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var address: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/address"},{"type":"property","title":"var attributionIsVerified: NSNumber?","path":"\/documentation\/tripkit\/tknamedcoordinate\/attributionisverified"},{"type":"property","title":"var clusterIdentifier: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/clusteridentifier"},{"type":"property","title":"var coordinate: CLLocationCoordinate2D","path":"\/documentation\/tripkit\/tknamedcoordinate\/coordinate"},{"type":"property","title":"var data: [String : Any]","path":"\/documentation\/tripkit\/tknamedcoordinate\/data"},{"type":"property","title":"var dataSources: [TKAPI.DataAttribution]","path":"\/documentation\/tripkit\/tknamedcoordinate\/datasources"},{"type":"property","title":"var eventEndTime: Date?","path":"\/documentation\/tripkit\/tknamedcoordinate\/eventendtime"},{"type":"property","title":"var eventStartTime: Date?","path":"\/documentation\/tripkit\/tknamedcoordinate\/eventstarttime"},{"type":"property","title":"var isDraggable: Bool","path":"\/documentation\/tripkit\/tknamedcoordinate\/isdraggable"},{"type":"property","title":"var isDropped: Bool","path":"\/documentation\/tripkit\/tknamedcoordinate\/isdropped"},{"type":"property","title":"var isSuburb: Bool","path":"\/documentation\/tripkit\/tknamedcoordinate\/issuburb"},{"type":"property","title":"var klass: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/klass"},{"type":"property","title":"var locationID: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/locationid"},{"type":"property","title":"var modeIdentifiers: [String]?","path":"\/documentation\/tripkit\/tknamedcoordinate\/modeidentifiers"},{"type":"property","title":"var name: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/name"},{"type":"property","title":"var phone: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/phone"},{"type":"property","title":"var placemark: CLPlacemark?","path":"\/documentation\/tripkit\/tknamedcoordinate\/placemark"},{"type":"property","title":"var priority: Float?","path":"\/documentation\/tripkit\/tknamedcoordinate\/priority"},{"type":"property","title":"var regions: Set<TKRegion>","path":"\/documentation\/tripkit\/tknamedcoordinate\/regions"},{"type":"property","title":"var timeZone: TimeZone?","path":"\/documentation\/tripkit\/tknamedcoordinate\/timezone"},{"type":"property","title":"var timeZoneID: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/timezoneid"},{"type":"property","title":"var url: URL?","path":"\/documentation\/tripkit\/tknamedcoordinate\/url"},{"type":"property","title":"var what3words: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/what3words"},{"type":"property","title":"var what3wordsInfoURL: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/what3wordsinfourl"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func assignPlacemark(CLPlacemark, includeName: Bool)","path":"\/documentation\/tripkit\/tknamedcoordinate\/assignplacemark(_:includename:)"},{"type":"method","title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkit\/tknamedcoordinate\/encode(to:)"},{"type":"method","title":"func encode(with: NSCoder)","path":"\/documentation\/tripkit\/tknamedcoordinate\/encode(with:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var enableReverseGeocodingAddress: Bool","path":"\/documentation\/tripkit\/tknamedcoordinate\/enablereversegeocodingaddress"},{"type":"property","title":"class var supportsSecureCoding: Bool","path":"\/documentation\/tripkit\/tknamedcoordinate\/supportssecurecoding"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func namedCoordinate(for: MKAnnotation) -> TKNamedCoordinate","path":"\/documentation\/tripkit\/tknamedcoordinate\/namedcoordinate(for:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/tknamedcoordinate\/tk_valid(geocoder:)","type":"method"}],"title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/tknamedcoordinate\/mkannotation-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/tknamedcoordinate\/tk_valid(geocoder:)"}],"title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/tknamedcoordinate\/mkannotation-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var addressForGeocoding: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/addressforgeocoding","type":"property"},{"title":"var needsForwardGeocoding: Bool","path":"\/documentation\/tripkit\/tknamedcoordinate\/needsforwardgeocoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func assign(CLLocationCoordinate2D, forAddress: String)","path":"\/documentation\/tripkit\/tknamedcoordinate\/assign(_:foraddress:)","type":"method"}],"title":"TKGeocodable Implementations","path":"\/documentation\/tripkit\/tknamedcoordinate\/tkgeocodable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var sortScore: Int","path":"\/documentation\/tripkit\/tknamedcoordinate\/sortscore","type":"property"}],"title":"TKSortableAnnotation Implementations","path":"\/documentation\/tripkit\/tknamedcoordinate\/tksortableannotation-implementations"}],"path":"\/documentation\/tripkit\/tknamedcoordinate","title":"TKNamedCoordinate","type":"class"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var allowedTopLevelClasses: [AnyClass]","path":"\/documentation\/tripkit\/tknamedcoordinatevaluetransformer\/allowedtoplevelclasses","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func register()","path":"\/documentation\/tripkit\/tknamedcoordinatevaluetransformer\/register()","type":"method"}],"path":"\/documentation\/tripkit\/tknamedcoordinatevaluetransformer","title":"TKNamedCoordinateValueTransformer","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/init(from:)","type":"init","title":"init(from: Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/parking","type":"property","title":"var parking: TKAPI.OnStreetParkingInfo"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"},{"path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/encode(with:)","type":"method","title":"func encode(with: NSCoder)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/supportssecurecoding","type":"property","title":"class var supportsSecureCoding: Bool"}],"path":"\/documentation\/tripkit\/tkonstreetparkinglocation","title":"TKOnStreetParkingLocation","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/canask","type":"property","title":"var canAsk: Bool"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/currentlocation","type":"property","title":"var currentLocation: CLLocation?"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/hasaccess","type":"property","title":"var hasAccess: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/ask(forbackground:)","type":"method","title":"func ask(forBackground: Bool) async -> Bool"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/ask(forbackground:_:)","type":"method","title":"func ask(forBackground: Bool, (Bool) -> Void)"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/fetchcurrentlocation()","type":"method","title":"func fetchCurrentLocation() async throws -> CLLocation"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case accessNotProvided","type":"case","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/accessnotprovided"},{"title":"case locationInaccurate(CLLocation)","type":"case","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/locationinaccurate(_:)"},{"title":"case noLocationFetchedInTime","type":"case","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/nolocationfetchedintime"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/localizeddescription","type":"property"}],"type":"symbol","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/error-implementations"}],"title":"TKOneOffLocationManager.LocationFetchError"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/cllocationmanagerdelegate-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationmanager(_:didfailwitherror:)","title":"func locationManager(CLLocationManager, didFailWithError: Error)","type":"method"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationmanager(_:didupdatelocations:)","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method"},{"path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationmanagerdidchangeauthorization(_:)","title":"func locationManagerDidChangeAuthorization(CLLocationManager)","type":"method"}],"title":"CLLocationManagerDelegate Implementations"}],"path":"\/documentation\/tripkit\/tkoneofflocationmanager","title":"TKOneOffLocationManager","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkregioncity\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkit\/tkregioncity\/init(title:coordinate:)","type":"init","title":"init(title: String, coordinate: CLLocationCoordinate2D)"},{"path":"\/documentation\/tripkit\/tkregioncity\/init(title:latitude:longitude:)","type":"init","title":"init(title: String, latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkregioncity\/centerbiasedmaprect","type":"property","title":"var centerBiasedMapRect: MKMapRect"},{"path":"\/documentation\/tripkit\/tkregioncity\/latitude","type":"property","title":"let latitude: TKAPI.Degrees"},{"path":"\/documentation\/tripkit\/tkregioncity\/longitude","type":"property","title":"let longitude: TKAPI.Degrees"},{"path":"\/documentation\/tripkit\/tkregioncity\/name","type":"property","title":"let name: String?"},{"path":"\/documentation\/tripkit\/tkregioncity\/orderinregion","type":"property","title":"var orderInRegion: Int?"},{"path":"\/documentation\/tripkit\/tkregioncity\/region","type":"property","title":"var region: TKRegion?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkregioncity\/mkannotation-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/tkregioncity\/tk_valid(geocoder:)"}],"title":"MKAnnotation Implementations"},{"path":"\/documentation\/tripkit\/tkregioncity\/mkannotation-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkregioncity\/tk_valid(geocoder:)","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation"}],"title":"MKAnnotation Implementations"}],"path":"\/documentation\/tripkit\/tkregioncity","title":"TKRegionCity","type":"class"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func reportPlannedTrip(Trip, userInfo: [String : Any], includeUserID: Bool, isCurrent: (() -> Bool)?, completion: ((Bool) -> Void)?)","type":"method","path":"\/documentation\/tripkit\/tkreporter\/reportplannedtrip(_:userinfo:includeuserid:iscurrent:completion:)"},{"title":"static func reportProgress(for: Trip, locations: [CLLocation])","type":"method","path":"\/documentation\/tripkit\/tkreporter\/reportprogress(for:locations:)"}],"path":"\/documentation\/tripkit\/tkreporter","title":"TKReporter","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(route: TKDisplayableRoute)","path":"\/documentation\/tripkit\/tkroutepolyline\/init(route:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var route: TKDisplayableRoute!","path":"\/documentation\/tripkit\/tkroutepolyline\/route"},{"type":"property","title":"var selectionIdentifier: String?","path":"\/documentation\/tripkit\/tkroutepolyline\/selectionidentifier"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func geodesicPolyline(annotations: [MKAnnotation]) -> MKGeodesicPolyline?","path":"\/documentation\/tripkit\/tkroutepolyline\/geodesicpolyline(annotations:)"}],"path":"\/documentation\/tripkit\/tkroutepolyline","title":"TKRoutePolyline","type":"class"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkroutingparser\/add(_:into:completion:)","title":"static func add(TKAPI.RoutingResponse, into: NSManagedObjectContext, completion: (Result<TripRequest, Error>) -> Void)"},{"type":"method","path":"\/documentation\/tripkit\/tkroutingparser\/add(groups:templates:alerts:into:completion:)","title":"static func add<Key>(groups: [Key : [TKAPI.TripGroup]], templates: [TKAPI.SegmentTemplate], alerts: [TKAPI.Alert], into: NSManagedObjectContext, completion: (Result<[Key : [Trip]], Error>) -> Void)"},{"type":"method","path":"\/documentation\/tripkit\/tkroutingparser\/matchingsegment(in:order:first:)","title":"static func matchingSegment(in: Trip, order: TKSegmentOrdering, first: Bool) -> TKSegment"},{"type":"method","path":"\/documentation\/tripkit\/tkroutingparser\/populate(_:start:end:leaveafter:arriveby:)","title":"static func populate(TripRequest, start: MKAnnotation?, end: MKAnnotation?, leaveAfter: Date?, arriveBy: Date?) -> Bool"}],"path":"\/documentation\/tripkit\/tkroutingparser","title":"TKRoutingParser","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(baseURL: URL?, apiKey: String?)","path":"\/documentation\/tripkit\/tkroutingserver\/init(baseurl:apikey:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func baseURLs(for: TKRegion?) -> [URL]","path":"\/documentation\/tripkit\/tkroutingserver\/baseurls(for:)"}],"path":"\/documentation\/tripkit\/tkroutingserver","title":"TKRoutingServer","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksegment\/init(order:location:trip:)","title":"init(order: TKSegmentOrdering, location: MKAnnotation, trip: Trip)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksegment\/activeindexquickbooking","title":"var activeIndexQuickBooking: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/alerts","title":"var alerts: [Alert]","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/alertswithaction","title":"var alertsWithAction: [Alert]","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/alertswithcontent","title":"var alertsWithContent: [Alert]","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/alertswithlocation","title":"var alertsWithLocation: [Alert]","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/arrivaltime","title":"var arrivalTime: Date","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bearing","title":"var bearing: NSNumber?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bicycleaccessibility","title":"var bicycleAccessibility: TKBicycleAccessibility?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bookingaccessibilitylabel","title":"var bookingAccessibilityLabel: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bookingconfirmation","title":"var bookingConfirmation: TKBooking.Confirmation?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bookingexternalactions","title":"var bookingExternalActions: [String]?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bookinginternalurl","title":"var bookingInternalURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bookingquickinternalurl","title":"var bookingQuickInternalURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bookingtitle","title":"var bookingTitle: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/bookingvirtualurl","title":"var bookingVirtualURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/canshowpathfriendliness","title":"var canShowPathFriendliness: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/color","title":"var color: TKColor","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/departuretime","title":"var departureTime: Date","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/disembarkation","title":"var disembarkation: StopVisits?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/distancebyroadtags","title":"var distanceByRoadTags: [TKAPI.RoadTag : Double]?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/distanceinmetres","title":"var distanceInMetres: NSNumber?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/distanceinmetresdismount","title":"var distanceInMetresDismount: NSNumber?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/distanceinmetresfriendly","title":"var distanceInMetresFriendly: NSNumber?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/distanceinmetresunfriendly","title":"var distanceInMetresUnfriendly: NSNumber?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/durationwithouttraffic","title":"var durationWithoutTraffic: TimeInterval","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/embarkation","title":"var embarkation: StopVisits?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/end","title":"let end: MKAnnotation!","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/endregion","title":"var endRegion: TKRegion?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/frequency","title":"var frequency: NSNumber?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/hascarparks","title":"var hasCarParks: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/index","title":"var index: Int","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/isaffectedbytraffic","title":"var isAffectedByTraffic: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/iscanceled","title":"var isCanceled: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/iscontinuation","title":"var isContinuation: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/iscycling","title":"var isCycling: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/isdriving","title":"var isDriving: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/isflight","title":"var isFlight: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/isimpossible","title":"var isImpossible: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/isplane","title":"var isPlane: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/ispublictransport","title":"var isPublicTransport: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/isselfnavigating","title":"var isSelfNavigating: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/issharedvehicle","title":"var isSharedVehicle: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/isstationary","title":"var isStationary: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/iswalking","title":"var isWalking: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/iswheelchair","title":"var isWheelchair: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/maptiles","title":"var mapTiles: TKMapTiles?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/modeidentifier","title":"var modeIdentifier: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/modeinfo","title":"var modeInfo: TKModeInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/next","title":"var next: TKSegment?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/notes","title":"var notes: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/noteswithoutplatforms","title":"var notesWithoutPlatforms: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/notifications","title":"var notifications: [TKAPI.TripNotification]","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/operatorinfo","title":"var operatorInfo: TKAPI.CompanyInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/order","title":"let order: TKSegmentOrdering","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/previous","title":"var previous: TKSegment?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/privatevehicletype","title":"var privateVehicleType: TKVehicleType","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/realtimealternativevehicles","title":"var realTimeAlternativeVehicles: [Vehicle]","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/realtimevehicle","title":"var realTimeVehicle: Vehicle?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/reroutingalert","title":"var reroutingAlert: Alert?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledendplatform","title":"var scheduledEndPlatform: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledendstopcode","title":"var scheduledEndStopCode: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledservicecode","title":"var scheduledServiceCode: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledservicenumber","title":"var scheduledServiceNumber: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledservicestops","title":"var scheduledServiceStops: Int","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledstartplatform","title":"var scheduledStartPlatform: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledstartstopcode","title":"var scheduledStartStopCode: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledtimetableendtime","title":"var scheduledTimetableEndTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/scheduledtimetablestarttime","title":"var scheduledTimetableStartTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/service","title":"var service: Service?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/shapes","title":"var shapes: [Shape]","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/sharedvehicle","title":"var sharedVehicle: TKAPI.SharedVehicleInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/singlelineinstruction","title":"var singleLineInstruction: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/singlelineinstructionwithouttime","title":"var singleLineInstructionWithoutTime: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/start","title":"let start: MKAnnotation!","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/startregion","title":"var startRegion: TKRegion?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.property","title":"var stationaryType: StationaryType?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/storedquickbookings","title":"var storedQuickBookings: [TKQuickBooking]?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/templatehashcode","title":"var templateHashCode: Int","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/ticket","title":"var ticket: TKAPI.Ticket?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/ticketwebsiteurlstring","title":"var ticketWebsiteURLString: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/timezone","title":"var timeZone: TimeZone","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/timesarerealtime","title":"var timesAreRealTime: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/title","title":"var title: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/titlewithouttime","title":"var titleWithoutTime: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/trip","title":"var trip: Trip!","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentaccessibilitylabel","title":"var tripSegmentAccessibilityLabel: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentbicycleaccessibility","title":"var tripSegmentBicycleAccessibility: TKBicycleAccessibility?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentdetail","title":"var tripSegmentDetail: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentfixeddeparturetime","title":"var tripSegmentFixedDepartureTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentinstruction","title":"var tripSegmentInstruction: String","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodecolor","title":"var tripSegmentModeColor: TKColor?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeimage","title":"var tripSegmentModeImage: TKImage?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeimageisbranding","title":"var tripSegmentModeImageIsBranding: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeimageistemplate","title":"var tripSegmentModeImageIsTemplate: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeimageurl","title":"var tripSegmentModeImageURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeinfoicontype","title":"var tripSegmentModeInfoIconType: TKInfoIconType","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodesubtitle","title":"var tripSegmentModeSubtitle: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodetitle","title":"var tripSegmentModeTitle: String?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentsubtitleicontype","title":"var tripSegmentSubtitleIconType: TKInfoIconType","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmenttimezone","title":"var tripSegmentTimeZone: TimeZone?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmenttimesarerealtime","title":"var tripSegmentTimesAreRealTime: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/tripsegmentwheelchairaccessibility","title":"var tripSegmentWheelchairAccessibility: TKWheelchairAccessibility","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/turnbyturnmode","title":"var turnByTurnMode: TKTurnByTurnMode?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/type","title":"var type: TKSegmentType?","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/usesvehicle","title":"var usesVehicle: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksegment\/wheelchairaccessibility","title":"var wheelchairAccessibility: TKWheelchairAccessibility?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksegment\/assign(_:)","title":"func assign(TKVehicular?)","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/duration(includingcontinuation:)","title":"func duration(includingContinuation: Bool) -> TimeInterval","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/finalsegmentincludingcontinuation()","title":"func finalSegmentIncludingContinuation() -> TKSegment","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/hasvisibility(_:)","title":"func hasVisibility(TKTripSegmentVisibility) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/matches(_:)","title":"func matches(StopVisits) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/matchesquery()","title":"func matchesQuery() -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/originalsegmentincludingcontinuation()","title":"func originalSegmentIncludingContinuation() -> TKSegment","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/passesnear(_:maximummeters:)","title":"func passesNear(CLLocationCoordinate2D, maximumMeters: CLLocationDistance) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/shouldshow(_:)","title":"func shouldShow(StopVisits) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/startsandends(inencodedpolygon:)","title":"func startsAndEnds(inEncodedPolygon: String) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/storequickbookings(_:)","title":"func storeQuickBookings([TKQuickBooking])","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/triggerrealtimekvo()","title":"func triggerRealTimeKVO()","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/uses(_:)","title":"func uses(StopVisits) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/usesvisit(where:)","title":"func usesVisit(where: (StopVisits) -> Bool) -> Bool?","type":"method"},{"path":"\/documentation\/tripkit\/tksegment\/validate()","title":"func validate() -> Bool","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum","title":"TKSegment.StationaryType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case airportCheckIn","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/airportcheckin"},{"type":"case","title":"case airportCheckOut","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/airportcheckout"},{"type":"case","title":"case airportTransfer","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/airporttransfer"},{"type":"case","title":"case parkingOffStreet","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/parkingoffstreet"},{"type":"case","title":"case parkingOnStreet","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/parkingonstreet"},{"type":"case","title":"case transfer","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/transfer"},{"type":"case","title":"case vehicleCollect","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/vehiclecollect"},{"type":"case","title":"case vehicleReturn","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/vehiclereturn"},{"type":"case","title":"case wait","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/wait"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksegment\/mkannotation-implementations","title":"MKAnnotation Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","type":"method","path":"\/documentation\/tripkit\/tksegment\/tk_valid(geocoder:)"}]},{"path":"\/documentation\/tripkit\/tksegment\/mkannotation-implementations","title":"MKAnnotation Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksegment\/tk_valid(geocoder:)","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","type":"method"}]},{"path":"\/documentation\/tripkit\/tksegment\/tkurlshareable-implementations","title":"TKURLShareable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var shareURL: URL?","type":"property","path":"\/documentation\/tripkit\/tksegment\/shareurl"}]},{"path":"\/documentation\/tripkit\/tksegment\/uiactivityitemsource-implementations","title":"UIActivityItemSource Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func activityViewController(UIActivityViewController, itemForActivityType: UIActivity.ActivityType?) -> Any?","type":"method","path":"\/documentation\/tripkit\/tksegment\/activityviewcontroller(_:itemforactivitytype:)"},{"title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","type":"method","path":"\/documentation\/tripkit\/tksegment\/activityviewcontrollerplaceholderitem(_:)"}]}],"path":"\/documentation\/tripkit\/tksegment","title":"TKSegment","type":"class"},{"path":"\/documentation\/tripkit\/tkservererror","title":"TKServerError","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"TKShareHelper.ServiceDetails","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tksharehelper\/servicedetails\/init(region:stopcode:serviceid:)","type":"init","title":"init(region: String, stopCode: String, serviceID: String)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksharehelper\/servicedetails\/region","type":"property","title":"let region: String"},{"path":"\/documentation\/tripkit\/tksharehelper\/servicedetails\/serviceid","type":"property","title":"let serviceID: String"},{"path":"\/documentation\/tripkit\/tksharehelper\/servicedetails\/stopcode","type":"property","title":"let stopCode: String"}],"path":"\/documentation\/tripkit\/tksharehelper\/servicedetails","type":"struct"},{"title":"TKShareHelper.StopDetails","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(region: String, code: String, filter: String?)","path":"\/documentation\/tripkit\/tksharehelper\/stopdetails\/init(region:code:filter:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: String","path":"\/documentation\/tripkit\/tksharehelper\/stopdetails\/code","type":"property"},{"title":"let filter: String?","path":"\/documentation\/tripkit\/tksharehelper\/stopdetails\/filter","type":"property"},{"title":"let region: String","path":"\/documentation\/tripkit\/tksharehelper\/stopdetails\/region","type":"property"}],"path":"\/documentation\/tripkit\/tksharehelper\/stopdetails","type":"struct"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var baseURL: String?","path":"\/documentation\/tripkit\/tksharehelper\/baseurl","type":"property"},{"title":"static var enableSharingOfURLs: Bool","path":"\/documentation\/tripkit\/tksharehelper\/enablesharingofurls","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func createMeetURL(coordinate: CLLocationCoordinate2D, at: Date) -> URL?","path":"\/documentation\/tripkit\/tksharehelper\/createmeeturl(coordinate:at:)","type":"method"},{"title":"static func createQueryURL(start: CLLocationCoordinate2D, end: CLLocationCoordinate2D, timeType: TKTimeType, time: Date?) -> URL?","path":"\/documentation\/tripkit\/tksharehelper\/createqueryurl(start:end:timetype:time:)","type":"method"},{"title":"static func createServiceURL(serviceID: String, atStopCode: String, inRegionNamed: String) -> URL?","path":"\/documentation\/tripkit\/tksharehelper\/createserviceurl(serviceid:atstopcode:inregionnamed:)","type":"method"},{"title":"static func createServiceURL(serviceID: String, stopCode: String, regionCode: String) -> URL?","path":"\/documentation\/tripkit\/tksharehelper\/createserviceurl(serviceid:stopcode:regioncode:)","type":"method"},{"title":"static func createStopURL(stopCode: String, inRegionNamed: String, filter: String?) -> URL?","path":"\/documentation\/tripkit\/tksharehelper\/createstopurl(stopcode:inregionnamed:filter:)","type":"method"},{"title":"static func createStopURL(stopCode: String, regionCode: String, filter: String?) -> URL?","path":"\/documentation\/tripkit\/tksharehelper\/createstopurl(stopcode:regioncode:filter:)","type":"method"},{"title":"static func isMeetURL(URL) -> Bool","path":"\/documentation\/tripkit\/tksharehelper\/ismeeturl(_:)","type":"method"},{"title":"static func isQueryURL(URL) -> Bool","path":"\/documentation\/tripkit\/tksharehelper\/isqueryurl(_:)","type":"method"},{"title":"static func isServiceURL(URL) -> Bool","path":"\/documentation\/tripkit\/tksharehelper\/isserviceurl(_:)","type":"method"},{"title":"static func isStopURL(URL) -> Bool","path":"\/documentation\/tripkit\/tksharehelper\/isstopurl(_:)","type":"method"},{"title":"static func meetingDetails(for: URL, using: TKGeocoding) async throws -> TKRoutingQuery<Never>","path":"\/documentation\/tripkit\/tksharehelper\/meetingdetails(for:using:)","type":"method"},{"title":"static func queryDetails(for: URL, using: TKGeocoding) async throws -> TKRoutingQuery<Never>","path":"\/documentation\/tripkit\/tksharehelper\/querydetails(for:using:)","type":"method"},{"title":"static func serviceDetails(for: URL) throws -> ServiceDetails","path":"\/documentation\/tripkit\/tksharehelper\/servicedetails(for:)","type":"method"},{"title":"static func stopDetails(for: URL) throws -> StopDetails","path":"\/documentation\/tripkit\/tksharehelper\/stopdetails(for:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKShareHelper.ExtractionError","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidURL","type":"case","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/invalidurl"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/equatable-implementations"},{"title":"Error Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/error-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror","type":"enum"}],"path":"\/documentation\/tripkit\/tksharehelper","title":"TKShareHelper","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var item: Any","path":"\/documentation\/tripkit\/tkshareurlprovider\/item"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","path":"\/documentation\/tripkit\/tkshareurlprovider\/activityviewcontrollerplaceholderitem(_:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"class func getShareURL(for: TKURLShareable, allowLongURL: Bool) async throws -> URL","path":"\/documentation\/tripkit\/tkshareurlprovider\/getshareurl(for:allowlongurl:)"},{"type":"method","title":"class func getShareURL(for: TKURLShareable, allowLongURL: Bool, allowBlocking: Bool) -> URL?","path":"\/documentation\/tripkit\/tkshareurlprovider\/getshareurl(for:allowlongurl:allowblocking:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKShareURLProvider.ShareError","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/missingsaveurl","type":"case","title":"case missingSaveURL"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/localizeddescription"}],"title":"Error Implementations"}],"path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror"}],"path":"\/documentation\/tripkit\/tkshareurlprovider","title":"TKShareURLProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/init(_:)","title":"init(TKAPI.Stop)","type":"init"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/operators","title":"var operators: [TKAPI.Operator]?","type":"property"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/routes","title":"var routes: [TKAPI.Route]?","type":"property"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/services","title":"var services: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/stopcode","title":"var stopCode: String","type":"property"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/subtitle","title":"var subtitle: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/wheelchairaccessibility","title":"var wheelchairAccessibility: TKWheelchairAccessibility","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstopcoordinate\/supportssecurecoding","title":"class var supportsSecureCoding: Bool","type":"property"}],"path":"\/documentation\/tripkit\/tkstopcoordinate","title":"TKStopCoordinate","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var tripKitContext: NSManagedObjectContext","type":"property","path":"\/documentation\/tripkit\/tkstore\/tripkitcontext"},{"title":"var viewContext: NSManagedObjectContext","type":"property","path":"\/documentation\/tripkit\/tkstore\/viewcontext"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func reset()","type":"method","path":"\/documentation\/tripkit\/tkstore\/reset()"}],"path":"\/documentation\/tripkit\/tkstore","title":"TKStore","type":"class"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var globalAccentColor: TKColor","path":"\/documentation\/tripkit\/tkstylemanager\/globalaccentcolor"},{"type":"property","title":"static var globalBarTintColor: TKColor","path":"\/documentation\/tripkit\/tkstylemanager\/globalbartintcolor"},{"type":"property","title":"static var globalSecondaryBarTintColor: TKColor","path":"\/documentation\/tripkit\/tkstylemanager\/globalsecondarybartintcolor"},{"type":"property","title":"static var globalTintColor: TKColor","path":"\/documentation\/tripkit\/tkstylemanager\/globaltintcolor"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func activityImage(String) -> TKImage","path":"\/documentation\/tripkit\/tkstylemanager\/activityimage(_:)"},{"type":"method","title":"static func addDefaultOutline(to: UIView)","path":"\/documentation\/tripkit\/tkstylemanager\/adddefaultoutline(to:)"},{"type":"method","title":"static func addDefaultShadow(to: UIView)","path":"\/documentation\/tripkit\/tkstylemanager\/adddefaultshadow(to:)"},{"type":"method","title":"static func boldCustomFont(forTextStyle: UIFont.TextStyle) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/boldcustomfont(fortextstyle:)"},{"type":"method","title":"static func boldSystemFont(size: Double) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/boldsystemfont(size:)"},{"type":"method","title":"static func customFont(forTextStyle: UIFont.TextStyle) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/customfont(fortextstyle:)"},{"type":"method","title":"static func dateString(Date, for: TimeZone?) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/datestring(_:for:)"},{"type":"method","title":"static func exerciseString(calories: Double) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/exercisestring(calories:)"},{"type":"method","title":"static func font(size: Double, weight: FontWeight) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/font(size:weight:)"},{"type":"method","title":"static func font(textStyle: TKFont.TextStyle, weight: FontWeight) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/font(textstyle:weight:)"},{"type":"method","title":"static func format(Date, for: TimeZone?, forceFormat: String?, forceStyle: DateFormatter.Style) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/format(_:for:forceformat:forcestyle:)"},{"type":"method","title":"static func format(Date, for: TimeZone?, showDate: Bool, showTime: Bool) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/format(_:for:showdate:showtime:)"},{"type":"method","title":"static func image(forModeImageName: String?, of: TKStyleModeIconType) -> TKImage?","path":"\/documentation\/tripkit\/tkstylemanager\/image(formodeimagename:of:)"},{"type":"method","title":"static func image(named: String) -> TKImage","path":"\/documentation\/tripkit\/tkstylemanager\/image(named:)"},{"type":"method","title":"static func image(systemName: String) -> TKImage?","path":"\/documentation\/tripkit\/tkstylemanager\/image(systemname:)"},{"type":"method","title":"static func mediumCustomFont(forTextStyle: UIFont.TextStyle) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/mediumcustomfont(fortextstyle:)"},{"type":"method","title":"static func mediumSystemFont(size: Double) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/mediumsystemfont(size:)"},{"type":"method","title":"static func optionalImage(named: String) -> TKImage?","path":"\/documentation\/tripkit\/tkstylemanager\/optionalimage(named:)"},{"type":"method","title":"static func semiboldCustomFont(forTextStyle: UIFont.TextStyle) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/semiboldcustomfont(fortextstyle:)"},{"type":"method","title":"static func semiboldSystemFont(size: Double) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/semiboldsystemfont(size:)"},{"type":"method","title":"static func string(for: Date, for: TimeZone?, showDate: Bool, showTime: Bool) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/string(for:for:showdate:showtime:)"},{"type":"method","title":"static func style(UISearchBar, includingBackground: Bool)","path":"\/documentation\/tripkit\/tkstylemanager\/style(_:includingbackground:)"},{"type":"method","title":"static func style(UISearchBar, includingBackground: Bool, styler: (UITextField) -> Void)","path":"\/documentation\/tripkit\/tkstylemanager\/style(_:includingbackground:styler:)"},{"type":"method","title":"static func systemFont(size: Double) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/systemfont(size:)"},{"type":"method","title":"static func timeString(Date, for: TimeZone?, relativeTo: TimeZone?) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/timestring(_:for:relativeto:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/bold","type":"case","title":"case bold"},{"path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/medium","type":"case","title":"case medium"},{"path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/regular","type":"case","title":"case regular"},{"path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/semibold","type":"case","title":"case semibold"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}],"title":"TKStyleManager.FontWeight","path":"\/documentation\/tripkit\/tkstylemanager\/fontweight"}],"path":"\/documentation\/tripkit\/tkstylemanager","title":"TKStyleManager","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isUserError: Bool","path":"\/documentation\/tripkit\/tkusererror\/isusererror"}],"path":"\/documentation\/tripkit\/tkusererror","title":"TKUserError","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var accessibilityLabel: String?","path":"\/documentation\/tripkit\/trip\/accessibilitylabel","type":"property"},{"title":"var allPublicTransport: [TKSegment]","path":"\/documentation\/tripkit\/trip\/allpublictransport","type":"property"},{"title":"var arrivalTime: Date!","path":"\/documentation\/tripkit\/trip\/arrivaltime","type":"property"},{"title":"var arrivalTimeZone: TimeZone?","path":"\/documentation\/tripkit\/trip\/arrivaltimezone","type":"property"},{"title":"var availabilityInfo: String?","path":"\/documentation\/tripkit\/trip\/availabilityinfo","type":"property"},{"title":"var budgetPoints: NSNumber?","path":"\/documentation\/tripkit\/trip\/budgetpoints","type":"property"},{"title":"var bundleId: String?","path":"\/documentation\/tripkit\/trip\/bundleid","type":"property"},{"title":"var costValues: [TKTripCostType : String]","path":"\/documentation\/tripkit\/trip\/costvalues","type":"property"},{"title":"var currencyCode: String?","path":"\/documentation\/tripkit\/trip\/currencycode","type":"property"},{"title":"var debugString: String","path":"\/documentation\/tripkit\/trip\/debugstring","type":"property"},{"title":"var departureTime: Date!","path":"\/documentation\/tripkit\/trip\/departuretime","type":"property"},{"title":"var departureTimeIsFixed: Bool","path":"\/documentation\/tripkit\/trip\/departuretimeisfixed","type":"property"},{"title":"var departureTimeZone: TimeZone","path":"\/documentation\/tripkit\/trip\/departuretimezone","type":"property"},{"title":"var hasReminder: Bool","path":"\/documentation\/tripkit\/trip\/hasreminder","type":"property"},{"title":"var hideExactTimes: Bool","path":"\/documentation\/tripkit\/trip\/hideexacttimes","type":"property"},{"title":"var isArriveBefore: Bool","path":"\/documentation\/tripkit\/trip\/isarrivebefore","type":"property"},{"title":"var isCanceled: Bool","path":"\/documentation\/tripkit\/trip\/iscanceled","type":"property"},{"title":"var isImpossible: Bool","path":"\/documentation\/tripkit\/trip\/isimpossible","type":"property"},{"title":"var logURLString: String?","path":"\/documentation\/tripkit\/trip\/logurlstring","type":"property"},{"title":"var mainSegment: TKSegment","path":"\/documentation\/tripkit\/trip\/mainsegment","type":"property"},{"title":"var minutes: Int16","path":"\/documentation\/tripkit\/trip\/minutes","type":"property"},{"title":"var missedBookingWindow: Bool","path":"\/documentation\/tripkit\/trip\/missedbookingwindow","type":"property"},{"title":"var plannedURLString: String?","path":"\/documentation\/tripkit\/trip\/plannedurlstring","type":"property"},{"title":"var primaryAlert: Alert?","path":"\/documentation\/tripkit\/trip\/primaryalert","type":"property"},{"title":"var progressURLString: String?","path":"\/documentation\/tripkit\/trip\/progressurlstring","type":"property"},{"title":"var request: TripRequest!","path":"\/documentation\/tripkit\/trip\/request","type":"property"},{"title":"var segments: [TKSegment]","path":"\/documentation\/tripkit\/trip\/segments","type":"property"},{"title":"var showNoVehicleUUIDAsLift: Bool","path":"\/documentation\/tripkit\/trip\/shownovehicleuuidaslift","type":"property"},{"title":"var subscribeURL: URL?","path":"\/documentation\/tripkit\/trip\/subscribeurl","type":"property"},{"title":"var temporaryURLString: String?","path":"\/documentation\/tripkit\/trip\/temporaryurlstring","type":"property"},{"title":"var timesAreRealTime: Bool","path":"\/documentation\/tripkit\/trip\/timesarerealtime","type":"property"},{"title":"var totalCalories: Float","path":"\/documentation\/tripkit\/trip\/totalcalories","type":"property"},{"title":"var totalCarbon: Float","path":"\/documentation\/tripkit\/trip\/totalcarbon","type":"property"},{"title":"var totalHassle: Float","path":"\/documentation\/tripkit\/trip\/totalhassle","type":"property"},{"title":"var totalPrice: NSNumber?","path":"\/documentation\/tripkit\/trip\/totalprice","type":"property"},{"title":"var totalPriceUSD: NSNumber?","path":"\/documentation\/tripkit\/trip\/totalpriceusd","type":"property"},{"title":"var totalScore: Float","path":"\/documentation\/tripkit\/trip\/totalscore","type":"property"},{"title":"var totalWalking: Float","path":"\/documentation\/tripkit\/trip\/totalwalking","type":"property"},{"title":"var tripGroup: TripGroup","path":"\/documentation\/tripkit\/trip\/tripgroup","type":"property"},{"title":"var tripId: String?","path":"\/documentation\/tripkit\/trip\/tripid","type":"property"},{"title":"var tripURL: URL","path":"\/documentation\/tripkit\/trip\/tripurl","type":"property"},{"title":"var unsubscribeURL: URL?","path":"\/documentation\/tripkit\/trip\/unsubscribeurl","type":"property"},{"title":"var updateURLString: String?","path":"\/documentation\/tripkit\/trip\/updateurlstring","type":"property"},{"title":"var usedModeIdentifiers: Set<String>","path":"\/documentation\/tripkit\/trip\/usedmodeidentifiers","type":"property"},{"title":"var usedPrivateVehicleType: TKVehicleType","path":"\/documentation\/tripkit\/trip\/usedprivatevehicletype","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func assign(TKVehicular?)","path":"\/documentation\/tripkit\/trip\/assign(_:)","type":"method"},{"title":"func calculateOffset() -> TimeInterval","path":"\/documentation\/tripkit\/trip\/calculateoffset()","type":"method"},{"title":"func constructPlainText() -> String","path":"\/documentation\/tripkit\/trip\/constructplaintext()","type":"method"},{"title":"func didTurnIntoFault()","path":"\/documentation\/tripkit\/trip\/didturnintofault()","type":"method"},{"title":"func isMixedModal(ignoreWalking: Bool) -> Bool","path":"\/documentation\/tripkit\/trip\/ismixedmodal(ignorewalking:)","type":"method"},{"title":"func notifications(includeTimeToLeaveNotification: Bool) -> Set<TKAPI.TripNotification>","path":"\/documentation\/tripkit\/trip\/notifications(includetimetoleavenotification:)","type":"method"},{"title":"func segments(with: TKTripSegmentVisibility) -> [TKSegment]","path":"\/documentation\/tripkit\/trip\/segments(with:)","type":"method"},{"title":"func setAsPreferredTrip()","path":"\/documentation\/tripkit\/trip\/setaspreferredtrip()","type":"method"},{"title":"func shouldShow(StopVisits) -> Bool","path":"\/documentation\/tripkit\/trip\/shouldshow(_:)","type":"method"},{"title":"func uses(StopVisits) -> Bool","path":"\/documentation\/tripkit\/trip\/uses(_:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func fetchRequest() -> NSFetchRequest<Trip>","path":"\/documentation\/tripkit\/trip\/fetchrequest()","type":"method"},{"title":"static func find(tripURL: URL, in: NSManagedObjectContext) -> Trip?","path":"\/documentation\/tripkit\/trip\/find(tripurl:in:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Comparable Implementations","path":"\/documentation\/tripkit\/trip\/comparable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/trip\/'...(_:)-5bx3y","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/tripkit\/trip\/'...(_:)-7qp5y","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/tripkit\/trip\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/tripkit\/trip\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/tripkit\/trip\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/tripkit\/trip\/_(_:_:)","title":"static func < (Trip, Trip) -> Bool","type":"op"},{"path":"\/documentation\/tripkit\/trip\/_(_:_:)-9ehmz","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/tripkit\/trip\/_=(_:_:)-4jsm1","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/tripkit\/trip\/_=(_:_:)-5kf4h","title":"static func >= (Self, Self) -> Bool","type":"op"}],"type":"symbol"},{"title":"TKRealTimeUpdatable Implementations","path":"\/documentation\/tripkit\/trip\/tkrealtimeupdatable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/trip\/wantsrealtimeupdates","title":"var wantsRealTimeUpdates: Bool"}],"type":"symbol"},{"title":"TKURLSavable Implementations","path":"\/documentation\/tripkit\/trip\/tkurlsavable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var saveURL: URL?","path":"\/documentation\/tripkit\/trip\/saveurl"}],"type":"symbol"},{"title":"TKURLShareable Implementations","path":"\/documentation\/tripkit\/trip\/tkurlshareable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var shareURL: URL?","path":"\/documentation\/tripkit\/trip\/shareurl"}],"type":"symbol"},{"title":"UIActivityItemSource Implementations","path":"\/documentation\/tripkit\/trip\/uiactivityitemsource-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func activityViewController(UIActivityViewController, itemForActivityType: UIActivity.ActivityType?) -> Any?","type":"method","path":"\/documentation\/tripkit\/trip\/activityviewcontroller(_:itemforactivitytype:)"},{"title":"func activityViewController(UIActivityViewController, subjectForActivityType: UIActivity.ActivityType?) -> String","type":"method","path":"\/documentation\/tripkit\/trip\/activityviewcontroller(_:subjectforactivitytype:)"},{"title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","type":"method","path":"\/documentation\/tripkit\/trip\/activityviewcontrollerplaceholderitem(_:)"}],"type":"symbol"}],"path":"\/documentation\/tripkit\/trip","title":"Trip","type":"class"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tripgroup\/accessibilitylabel","type":"property","title":"var accessibilityLabel: String?"},{"path":"\/documentation\/tripkit\/tripgroup\/classification","type":"property","title":"var classification: String?"},{"path":"\/documentation\/tripkit\/tripgroup\/debugstring","type":"property","title":"var debugString: String"},{"path":"\/documentation\/tripkit\/tripgroup\/frequency","type":"property","title":"var frequency: NSNumber?"},{"path":"\/documentation\/tripkit\/tripgroup\/request","type":"property","title":"var request: TripRequest!"},{"path":"\/documentation\/tripkit\/tripgroup\/sources","type":"property","title":"var sources: [TKAPI.DataAttribution]"},{"path":"\/documentation\/tripkit\/tripgroup\/trips","type":"property","title":"var trips: Set<Trip>!"},{"path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.property","type":"property","title":"var visibility: Visibility"},{"path":"\/documentation\/tripkit\/tripgroup\/visibletrip","type":"property","title":"var visibleTrip: Trip?"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tripgroup\/fetchrequest()","type":"method","title":"class func fetchRequest() -> NSFetchRequest<TripGroup>"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum","type":"enum","title":"TripGroup.Visibility","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case full","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/full","type":"case"},{"title":"case hidden","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/hidden","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int16)","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol"}]}],"path":"\/documentation\/tripkit\/tripgroup","title":"TripGroup","type":"class"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var applicableModeIdentifiers: [String]","path":"\/documentation\/tripkit\/triprequest\/applicablemodeidentifiers","type":"property"},{"title":"var arrivalTime: Date?","path":"\/documentation\/tripkit\/triprequest\/arrivaltime","type":"property"},{"title":"var arrivalTimeZone: TimeZone?","path":"\/documentation\/tripkit\/triprequest\/arrivaltimezone","type":"property"},{"title":"var debugString: String","path":"\/documentation\/tripkit\/triprequest\/debugstring","type":"property"},{"title":"var departureTime: Date?","path":"\/documentation\/tripkit\/triprequest\/departuretime","type":"property"},{"title":"var departureTimeZone: TimeZone?","path":"\/documentation\/tripkit\/triprequest\/departuretimezone","type":"property"},{"title":"var endRegion: TKRegion?","path":"\/documentation\/tripkit\/triprequest\/endregion","type":"property"},{"title":"var excludedStops: [String]?","path":"\/documentation\/tripkit\/triprequest\/excludedstops","type":"property"},{"title":"var expandForFavorite: Bool","path":"\/documentation\/tripkit\/triprequest\/expandforfavorite","type":"property"},{"title":"var fromLocation: TKNamedCoordinate!","path":"\/documentation\/tripkit\/triprequest\/fromlocation","type":"property"},{"title":"var hasTrips: Bool","path":"\/documentation\/tripkit\/triprequest\/hastrips","type":"property"},{"title":"var preferredGroup: TripGroup?","path":"\/documentation\/tripkit\/triprequest\/preferredgroup","type":"property"},{"title":"var purpose: String?","path":"\/documentation\/tripkit\/triprequest\/purpose","type":"property"},{"title":"var spanningRegion: TKRegion","path":"\/documentation\/tripkit\/triprequest\/spanningregion","type":"property"},{"title":"var startRegion: TKRegion?","path":"\/documentation\/tripkit\/triprequest\/startregion","type":"property"},{"title":"var time: Date?","path":"\/documentation\/tripkit\/triprequest\/time","type":"property"},{"title":"var timeCreated: Date?","path":"\/documentation\/tripkit\/triprequest\/timecreated","type":"property"},{"title":"var toLocation: TKNamedCoordinate!","path":"\/documentation\/tripkit\/triprequest\/tolocation","type":"property"},{"title":"var tripGroups: Set<TripGroup>","path":"\/documentation\/tripkit\/triprequest\/tripgroups","type":"property"},{"title":"var trips: Set<Trip>","path":"\/documentation\/tripkit\/triprequest\/trips","type":"property"},{"title":"var type: TKTimeType","path":"\/documentation\/tripkit\/triprequest\/type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didTurnIntoFault()","path":"\/documentation\/tripkit\/triprequest\/didturnintofault()","type":"method"},{"title":"func setTime(Date?, for: TKTimeType)","path":"\/documentation\/tripkit\/triprequest\/settime(_:for:)","type":"method"},{"title":"func sortDescriptors(withPrimary: TKTripCostType) -> [NSSortDescriptor]","path":"\/documentation\/tripkit\/triprequest\/sortdescriptors(withprimary:)","type":"method"},{"title":"func sortedVisibleTrips() -> [Trip]","path":"\/documentation\/tripkit\/triprequest\/sortedvisibletrips()","type":"method"},{"title":"func tripTimeSortDescriptors() -> [NSSortDescriptor]","path":"\/documentation\/tripkit\/triprequest\/triptimesortdescriptors()","type":"method"},{"title":"func updateTripGroupClassifications(using: TKTripClassifier)","path":"\/documentation\/tripkit\/triprequest\/updatetripgroupclassifications(using:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func fetchRequest() -> NSFetchRequest<TripRequest>","path":"\/documentation\/tripkit\/triprequest\/fetchrequest()","type":"method"},{"title":"static func insert(from: MKAnnotation, to: MKAnnotation, for: Date?, timeType: TKTimeType, into: NSManagedObjectContext) -> TripRequest","path":"\/documentation\/tripkit\/triprequest\/insert(from:to:for:timetype:into:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKRouterRequestable Implementations","path":"\/documentation\/tripkit\/triprequest\/tkrouterrequestable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/triprequest\/additional","title":"var additional: Set<URLQueryItem>","type":"property"},{"path":"\/documentation\/tripkit\/triprequest\/at","title":"var at: TKRoutingQueryTime","type":"property"},{"path":"\/documentation\/tripkit\/triprequest\/context","title":"var context: NSManagedObjectContext?","type":"property"},{"path":"\/documentation\/tripkit\/triprequest\/from","title":"var from: TKAPI.Location","type":"property"},{"path":"\/documentation\/tripkit\/triprequest\/modes","title":"var modes: Set<String>","type":"property"},{"path":"\/documentation\/tripkit\/triprequest\/to","title":"var to: TKAPI.Location","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/triprequest\/totriprequest()","title":"func toTripRequest() -> TripRequest","type":"method"}]},{"title":"TKURLShareable Implementations","path":"\/documentation\/tripkit\/triprequest\/tkurlshareable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/triprequest\/shareurl","type":"property","title":"var shareURL: URL?"}]}],"path":"\/documentation\/tripkit\/triprequest","title":"TripRequest","type":"class"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: TKAPI.Vehicle, into: NSManagedObjectContext)","path":"\/documentation\/tripkit\/vehicle\/init(from:into:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var ageFactor: Double","path":"\/documentation\/tripkit\/vehicle\/agefactor"},{"type":"property","title":"var averageOccupancy: (TKAPI.VehicleOccupancy, title: String)?","path":"\/documentation\/tripkit\/vehicle\/averageoccupancy"},{"type":"property","title":"var bearing: NSNumber?","path":"\/documentation\/tripkit\/vehicle\/bearing"},{"type":"property","title":"var components: [[TKAPI.VehicleComponents]]?","path":"\/documentation\/tripkit\/vehicle\/components"},{"type":"property","title":"var componentsData: Data?","path":"\/documentation\/tripkit\/vehicle\/componentsdata"},{"type":"property","title":"var icon: String?","path":"\/documentation\/tripkit\/vehicle\/icon"},{"type":"property","title":"var identifier: String?","path":"\/documentation\/tripkit\/vehicle\/identifier"},{"type":"property","title":"var label: String?","path":"\/documentation\/tripkit\/vehicle\/label"},{"type":"property","title":"var lastUpdate: Date?","path":"\/documentation\/tripkit\/vehicle\/lastupdate"},{"type":"property","title":"var latitude: Double","path":"\/documentation\/tripkit\/vehicle\/latitude"},{"type":"property","title":"var longitude: Double","path":"\/documentation\/tripkit\/vehicle\/longitude"},{"type":"property","title":"var service: Service?","path":"\/documentation\/tripkit\/vehicle\/service"},{"type":"property","title":"var serviceAlternatives: Set<Service>?","path":"\/documentation\/tripkit\/vehicle\/servicealternatives"},{"type":"property","title":"var serviceColor: TKColor?","path":"\/documentation\/tripkit\/vehicle\/servicecolor"},{"type":"property","title":"var serviceNumber: String?","path":"\/documentation\/tripkit\/vehicle\/servicenumber"},{"type":"property","title":"var subtitle: String?","path":"\/documentation\/tripkit\/vehicle\/subtitle"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func setCoordinate(CLLocationCoordinate2D)","path":"\/documentation\/tripkit\/vehicle\/setcoordinate(_:)"},{"type":"method","title":"func triggerRealTimeKVO()","path":"\/documentation\/tripkit\/vehicle\/triggerrealtimekvo()"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func components(from: Data) -> [[TKAPI.VehicleComponents]]?","path":"\/documentation\/tripkit\/vehicle\/components(from:)"},{"type":"method","title":"class func fetchRequest() -> NSFetchRequest<Vehicle>","path":"\/documentation\/tripkit\/vehicle\/fetchrequest()"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/vehicle\/tk_valid(geocoder:)","type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation"}],"title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/vehicle\/mkannotation-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/vehicle\/tk_valid(geocoder:)","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation"}],"title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/vehicle\/mkannotation-implementations"}],"path":"\/documentation\/tripkit\/vehicle","title":"Vehicle","type":"class"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/tripkit\/boolcodablestrategy","title":"BoolCodableStrategy","type":"protocol"},{"children":[{"type":"groupMarker","title":"Associated Types"},{"type":"associatedtype","path":"\/documentation\/tripkit\/defaultcodablestrategy\/defaultvalue-swift.associatedtype","title":"DefaultValue"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/defaultcodablestrategy\/defaultvalue-swift.type.property","title":"static var defaultValue: Self.DefaultValue"}],"path":"\/documentation\/tripkit\/defaultcodablestrategy","title":"DefaultCodableStrategy","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","type":"property","children":[{"type":"groupMarker","title":"TKAutocompleting Implementations","children":[{"type":"property","path":"\/documentation\/tripkit\/tkautocompleting\/allowlocationinfobutton-5y8gj","title":"var allowLocationInfoButton: Bool"}]}],"path":"\/documentation\/tripkit\/tkautocompleting\/allowlocationinfobutton"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","type":"method","children":[{"type":"groupMarker","children":[{"path":"\/documentation\/tripkit\/tkautocompleting\/additionalactiontitle()-4xrqs","title":"func additionalActionTitle() -> String?","type":"method"}],"title":"TKAutocompleting Implementations"}],"path":"\/documentation\/tripkit\/tkautocompleting\/additionalactiontitle()"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkautocompleting\/annotation(for:completion:)"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkautocompleting\/autocomplete(_:near:completion:)"},{"title":"func cancelAutocompletion()","type":"method","children":[{"children":[{"title":"func cancelAutocompletion()","type":"method","path":"\/documentation\/tripkit\/tkautocompleting\/cancelautocompletion()-7qgtk"}],"title":"TKAutocompleting Implementations","type":"groupMarker"}],"path":"\/documentation\/tripkit\/tkautocompleting\/cancelautocompletion()"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","type":"method","children":[{"children":[{"path":"\/documentation\/tripkit\/tkautocompleting\/triggeradditional(presenter:completion:)-6z7xe","title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","type":"method"}],"title":"TKAutocompleting Implementations","type":"groupMarker"}],"path":"\/documentation\/tripkit\/tkautocompleting\/triggeradditional(presenter:completion:)"}],"path":"\/documentation\/tripkit\/tkautocompleting","title":"TKAutocompleting","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var deepLink: URL?","path":"\/documentation\/tripkit\/tkdeeplinkable\/deeplink","children":[{"title":"TKDeepLinkable Implementations","children":[{"title":"var deepLink: URL?","path":"\/documentation\/tripkit\/tkdeeplinkable\/deeplink-86xvv","type":"property"}],"type":"groupMarker"}]},{"type":"property","title":"var downloadLink: URL?","path":"\/documentation\/tripkit\/tkdeeplinkable\/downloadlink","children":[{"title":"TKDeepLinkable Implementations","children":[{"title":"var downloadLink: URL?","type":"property","path":"\/documentation\/tripkit\/tkdeeplinkable\/downloadlink-6b5ku"}],"type":"groupMarker"}]}],"path":"\/documentation\/tripkit\/tkdeeplinkable","title":"TKDeepLinkable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var routeColor: TKColor?","type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/routecolor","children":[{"children":[{"type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/routecolor-36dut","title":"var routeColor: TKColor?"}],"title":"TKDisplayableRoute Implementations","type":"groupMarker"}]},{"title":"var routeDashPattern: [NSNumber]?","type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/routedashpattern","children":[{"type":"groupMarker","children":[{"path":"\/documentation\/tripkit\/tkdisplayableroute\/routedashpattern-o4qy","type":"property","title":"var routeDashPattern: [NSNumber]?"}],"title":"TKDisplayableRoute Implementations"}]},{"title":"var routeIsTravelled: Bool","type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/routeistravelled","children":[{"title":"TKDisplayableRoute Implementations","children":[{"title":"var routeIsTravelled: Bool","type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/routeistravelled-8u36c"}],"type":"groupMarker"}]},{"title":"var routePath: [Any]","type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/routepath"},{"title":"var selectionIdentifier: String?","type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/selectionidentifier"}],"path":"\/documentation\/tripkit\/tkdisplayableroute","title":"TKDisplayableRoute","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkgeocodable\/addressforgeocoding","title":"var addressForGeocoding: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkgeocodable\/needsforwardgeocoding","title":"var needsForwardGeocoding: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkgeocodable\/assign(_:foraddress:)","title":"func assign(CLLocationCoordinate2D, forAddress: String)","type":"method"}],"path":"\/documentation\/tripkit\/tkgeocodable","title":"TKGeocodable","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tkgeocoding\/geocode(_:near:)-3lsvd"},{"type":"method","title":"func geocode(TKGeocodable, near: MKMapRect) async throws","path":"\/documentation\/tripkit\/tkgeocoding\/geocode(_:near:)-9nyq3"},{"type":"method","title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","children":[{"title":"TKGeocoding Implementations","type":"groupMarker","children":[{"type":"method","title":"func geocode(TKGeocodable, near: MKMapRect, completion: (Result<Void, Error>) -> Void)","path":"\/documentation\/tripkit\/tkgeocoding\/geocode(_:near:completion:)-pg4i"}]}],"path":"\/documentation\/tripkit\/tkgeocoding\/geocode(_:near:completion:)"}],"path":"\/documentation\/tripkit\/tkgeocoding","title":"TKGeocoding","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tklogger\/level","title":"var level: TKLog.LogLevel","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tklogger\/log(_:identifier:message:)","title":"func log(TKLog.LogLevel, identifier: String, message: String)","type":"method"},{"children":[{"type":"groupMarker","title":"TKLogger Implementations","children":[{"type":"method","path":"\/documentation\/tripkit\/tklogger\/log(identifier:request:)-4twvi","title":"func log(identifier: String, request: TKLog.ServerRequest)"}]}],"path":"\/documentation\/tripkit\/tklogger\/log(identifier:request:)","title":"func log(identifier: String, request: TKLog.ServerRequest)","type":"method"},{"children":[{"title":"TKLogger Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkit\/tklogger\/log(identifier:response:)-6xrpe","type":"method","title":"func log(identifier: String, response: TKLog.ServerResponse)"}]}],"path":"\/documentation\/tripkit\/tklogger\/log(identifier:response:)","title":"func log(identifier: String, response: TKLog.ServerResponse)","type":"method"},{"path":"\/documentation\/tripkit\/tklogger\/output(_:identifier:message:)","title":"func output(TKLog.LogLevel, identifier: String, message: String)","type":"method"}],"path":"\/documentation\/tripkit\/tklogger","title":"TKLogger","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var authorizationAlertText: String","path":"\/documentation\/tripkit\/tkpermissionmanager\/authorizationalerttext","type":"property"},{"children":[{"children":[{"path":"\/documentation\/tripkit\/tkpermissionmanager\/authorizationrestrictionsapply-1ca25","type":"property","title":"var authorizationRestrictionsApply: Bool"}],"title":"TKPermissionManager Implementations","type":"groupMarker"}],"title":"var authorizationRestrictionsApply: Bool","path":"\/documentation\/tripkit\/tkpermissionmanager\/authorizationrestrictionsapply","type":"property"},{"title":"var authorizationStatus: TKAuthorizationStatus","path":"\/documentation\/tripkit\/tkpermissionmanager\/authorizationstatus","type":"property"},{"children":[{"children":[{"title":"var featureIsAvailable: Bool","type":"property","path":"\/documentation\/tripkit\/tkpermissionmanager\/featureisavailable-91ycn"}],"title":"TKPermissionManager Implementations","type":"groupMarker"}],"title":"var featureIsAvailable: Bool","path":"\/documentation\/tripkit\/tkpermissionmanager\/featureisavailable","type":"property"},{"title":"var isAuthorized: Bool","path":"\/documentation\/tripkit\/tkpermissionmanager\/isauthorized","type":"property"},{"title":"var openSettingsHandler: (() -> Void)?","path":"\/documentation\/tripkit\/tkpermissionmanager\/opensettingshandler","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func askForPermission((Bool) -> Void)","path":"\/documentation\/tripkit\/tkpermissionmanager\/askforpermission(_:)","type":"method"},{"title":"func showAuthorizationAlert(sender: Any?, in: UIViewController)","path":"\/documentation\/tripkit\/tkpermissionmanager\/showauthorizationalert(sender:in:)","type":"method"},{"title":"func tryAuthorization(sender: Any?, in: UIViewController, completion: (Bool) -> Void)","path":"\/documentation\/tripkit\/tkpermissionmanager\/tryauthorization(sender:in:completion:)","type":"method"}],"path":"\/documentation\/tripkit\/tkpermissionmanager","title":"TKPermissionManager","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkrealtimeupdatable\/wantsrealtimeupdates","title":"var wantsRealTimeUpdates: Bool","type":"property"}],"path":"\/documentation\/tripkit\/tkrealtimeupdatable","title":"TKRealTimeUpdatable","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkrouterrequestable\/additional","type":"property","title":"var additional: Set<URLQueryItem>"},{"path":"\/documentation\/tripkit\/tkrouterrequestable\/at","type":"property","title":"var at: TKRoutingQueryTime"},{"path":"\/documentation\/tripkit\/tkrouterrequestable\/context","type":"property","title":"var context: NSManagedObjectContext?"},{"path":"\/documentation\/tripkit\/tkrouterrequestable\/from","type":"property","title":"var from: TKAPI.Location"},{"path":"\/documentation\/tripkit\/tkrouterrequestable\/modes","type":"property","title":"var modes: Set<String>"},{"path":"\/documentation\/tripkit\/tkrouterrequestable\/to","type":"property","title":"var to: TKAPI.Location"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkrouterrequestable\/totriprequest()","type":"method","title":"func toTripRequest() -> TripRequest"}],"path":"\/documentation\/tripkit\/tkrouterrequestable","title":"TKRouterRequestable","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksortableannotation\/sortscore","type":"property","title":"var sortScore: Int"}],"path":"\/documentation\/tripkit\/tksortableannotation","title":"TKSortableAnnotation","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var saveURL: URL?","path":"\/documentation\/tripkit\/tkurlsavable\/saveurl","type":"property"},{"title":"var shareURL: URL?","path":"\/documentation\/tripkit\/tkurlsavable\/shareurl","type":"property"}],"path":"\/documentation\/tripkit\/tkurlsavable","title":"TKURLSavable","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkurlshareable\/shareurl","title":"var shareURL: URL?","type":"property"}],"path":"\/documentation\/tripkit\/tkurlshareable","title":"TKURLShareable","type":"protocol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkvehicular\/garage","type":"property","title":"var garage: MKAnnotation?"},{"path":"\/documentation\/tripkit\/tkvehicular\/icon","type":"property","title":"var icon: TKImage?"},{"path":"\/documentation\/tripkit\/tkvehicular\/iscarpooling","type":"property","title":"var isCarPooling: Bool"},{"path":"\/documentation\/tripkit\/tkvehicular\/name","type":"property","title":"var name: String?"},{"path":"\/documentation\/tripkit\/tkvehicular\/title","type":"property","title":"var title: String"},{"path":"\/documentation\/tripkit\/tkvehicular\/vehicleid","type":"property","title":"var vehicleID: UUID?"},{"path":"\/documentation\/tripkit\/tkvehicular\/vehicletype","type":"property","title":"var vehicleType: TKVehicleType"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkvehicular\/tomodel()","type":"method","title":"func toModel() -> TKAPI.PrivateVehicle"}],"path":"\/documentation\/tripkit\/tkvehicular","title":"TKVehicular","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/defaultcodable\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: Default.DefaultValue)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/defaultcodable\/wrappedvalue","type":"property","title":"var wrappedValue: Default.DefaultValue"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/defaultcodable\/decodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/defaultcodable\/init(from:)","type":"init","title":"init(from: any Decoder) throws"}],"title":"Decodable Implementations"},{"path":"\/documentation\/tripkit\/defaultcodable\/encodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/defaultcodable\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"}],"title":"Encodable Implementations"},{"path":"\/documentation\/tripkit\/defaultcodable\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/defaultcodable\/!=(_:_:)"}],"title":"Equatable Implementations"}],"path":"\/documentation\/tripkit\/defaultcodable","title":"DefaultCodable","type":"struct"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/defaultemptyarraystrategy\/defaultvalue","type":"property","title":"static var defaultValue: [T]"}],"path":"\/documentation\/tripkit\/defaultemptyarraystrategy","title":"DefaultEmptyArrayStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: Bool","path":"\/documentation\/tripkit\/defaultfalsestrategy\/defaultvalue","type":"property"}],"path":"\/documentation\/tripkit\/defaultfalsestrategy","title":"DefaultFalseStrategy","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: LossyArray<T>","type":"property","path":"\/documentation\/tripkit\/defaultlossyarray\/defaultvalue"}],"path":"\/documentation\/tripkit\/defaultlossyarray","title":"DefaultLossyArray","type":"struct"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var defaultValue: Bool","path":"\/documentation\/tripkit\/defaulttruestrategy\/defaultvalue"}],"path":"\/documentation\/tripkit\/defaulttruestrategy","title":"DefaultTrueStrategy","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/iso8601\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: Date)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/iso8601\/wrappedvalue","type":"property","title":"var wrappedValue: Date"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/iso8601\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/iso8601\/init(from:)"}],"type":"symbol","title":"Decodable Implementations"},{"path":"\/documentation\/tripkit\/iso8601\/encodable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/iso8601\/encode(to:)"}],"type":"symbol","title":"Encodable Implementations"},{"path":"\/documentation\/tripkit\/iso8601\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/iso8601\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}],"path":"\/documentation\/tripkit\/iso8601","title":"ISO8601","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/init(wrappedvalue:)","title":"init(wrappedValue: Date)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/wrappedvalue","title":"var wrappedValue: Date","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/init(from:)"}],"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/encode(to:)"}],"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/iso8601orsecondssince1970","title":"ISO8601OrSecondsSince1970","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: [T])","path":"\/documentation\/tripkit\/lossyarray\/init(wrappedvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: [T]","path":"\/documentation\/tripkit\/lossyarray\/wrappedvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkit\/lossyarray\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/lossyarray\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}]},{"title":"Encodable Implementations","path":"\/documentation\/tripkit\/lossyarray\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/lossyarray\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}]},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/lossyarray\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/lossyarray\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/tripkit\/lossyarray","title":"LossyArray","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: Date?)","path":"\/documentation\/tripkit\/optionaliso8601\/init(wrappedvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: Date?","path":"\/documentation\/tripkit\/optionaliso8601\/wrappedvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkit\/optionaliso8601\/decodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/optionaliso8601\/init(from:)"}]},{"title":"Encodable Implementations","path":"\/documentation\/tripkit\/optionaliso8601\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/optionaliso8601\/encode(to:)","type":"method"}]},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/optionaliso8601\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/optionaliso8601\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/tripkit\/optionaliso8601","title":"OptionalISO8601","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: Date?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/wrappedvalue","type":"property","title":"var wrappedValue: Date?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/init(from:)","type":"init"}],"title":"Decodable Implementations"},{"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/encode(to:)","type":"method"}],"title":"Encodable Implementations"},{"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}],"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970","title":"OptionalISO8601OrSecondsSince1970","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(latitude: Double, longitude: Double)","path":"\/documentation\/tripkit\/point\/init(latitude:longitude:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func decodePolyline(String) -> [Point]","path":"\/documentation\/tripkit\/point\/decodepolyline(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/point\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/point\/equatable-implementations"}],"path":"\/documentation\/tripkit\/point","title":"Point","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/polygon\/init(points:)","title":"init(points: [Point])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/polygon\/contains(_:online:)","title":"func contains(Point, onLine: Bool) -> Bool","type":"method"}],"path":"\/documentation\/tripkit\/polygon","title":"Polygon","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.Alert","path":"\/documentation\/tripkit\/tkapi\/alert","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.Alert.Action","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/type","title":"let type: TKAPI.Alert.Action.ActionType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/actiontype","title":"TKAPI.Alert.Action.ActionType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/actiontype\/reroute(_:)","type":"case","title":"case reroute([String])"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/actiontype\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/actiontype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/init(from:)","type":"init"}]},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}]},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/alert\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let action: TKAPI.Alert.Action?","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.property","type":"property"},{"title":"let fromDate: Date?","path":"\/documentation\/tripkit\/tkapi\/alert\/fromdate","type":"property"},{"title":"let hashCode: Int","path":"\/documentation\/tripkit\/tkapi\/alert\/hashcode","type":"property"},{"title":"let lastUpdated: Date?","path":"\/documentation\/tripkit\/tkapi\/alert\/lastupdated","type":"property"},{"title":"let location: TKAPI.Location?","path":"\/documentation\/tripkit\/tkapi\/alert\/location","type":"property"},{"title":"let remoteIcon: URL?","path":"\/documentation\/tripkit\/tkapi\/alert\/remoteicon","type":"property"},{"title":"let serviceTripID: String?","path":"\/documentation\/tripkit\/tkapi\/alert\/servicetripid","type":"property"},{"title":"let severity: TKAPI.Alert.Severity","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.property","type":"property"},{"title":"let text: String?","path":"\/documentation\/tripkit\/tkapi\/alert\/text","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkit\/tkapi\/alert\/title","type":"property"},{"title":"let toDate: Date?","path":"\/documentation\/tripkit\/tkapi\/alert\/todate","type":"property"},{"title":"let url: URL?","path":"\/documentation\/tripkit\/tkapi\/alert\/url","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.Alert.Severity","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alert","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/alert","type":"case"},{"title":"case info","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/info","type":"case"},{"title":"case warning","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/hash(into:)","type":"method"}]}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/alert\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/alert\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}]},{"title":"TKAPI.AlertMapping","path":"\/documentation\/tripkit\/tkapi\/alertmapping","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alert: TKAPI.Alert","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/alert","type":"property"},{"title":"let modeInfo: TKModeInfo?","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/modeinfo","type":"property"},{"title":"let operators: [String]?","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/operators","type":"property"},{"title":"let routes: [TKAPI.AlertRouteMapping]?","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/routes","type":"property"},{"title":"let serviceTripIDs: [String]?","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/servicetripids","type":"property"},{"title":"let stopCodes: [String]?","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/stopcodes","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.AlertRouteMapping","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor?","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/color","type":"property"},{"title":"let id: String","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/id","type":"property"},{"title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/modeinfo","type":"property"},{"title":"let name: String?","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/name","type":"property"},{"title":"let number: String?","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/number","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.AppInfo","path":"\/documentation\/tripkit\/tkapi\/appinfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/appinfo\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let deepLink: URL?","path":"\/documentation\/tripkit\/tkapi\/appinfo\/deeplink"},{"type":"property","title":"let downloadURL: URL?","path":"\/documentation\/tripkit\/tkapi\/appinfo\/downloadurl"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkit\/tkapi\/appinfo\/name"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/deeplink","type":"case","title":"case deepLink"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/downloadurl","type":"case","title":"case downloadURL"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/name","type":"case","title":"case name"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/init(intvalue:)","type":"init","title":"init?(intValue: Int)"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/init(stringvalue:)","type":"init","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/codingkey-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/debugdescription","type":"property","title":"var debugDescription: String"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/description","type":"property","title":"var description: String"}],"type":"symbol","title":"CodingKey Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations"}],"title":"TKAPI.AppInfo.CodingKeys","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/appinfo\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/appinfo\/equatable-implementations"}]},{"title":"TKAPI.BikePodInfo","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let availableBikes: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/availablebikes"},{"title":"var availableSpaces: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/availablespaces"},{"title":"let deepLink: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/deeplink"},{"title":"var hasRealTime: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/hasrealtime"},{"title":"let identifier: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/identifier"},{"title":"let inService: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/inservice"},{"title":"let lastUpdate: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/lastupdate"},{"title":"let operatorInfo: TKAPI.CompanyInfo","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/operatorinfo"},{"title":"let source: TKAPI.DataAttribution?","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/source"},{"title":"let totalSpaces: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/totalspaces"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/equatable-implementations"}]},{"title":"TKAPI.BookingAvailability","path":"\/documentation\/tripkit\/tkapi\/bookingavailability","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.BookingAvailability.Interval","type":"struct","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/end","title":"var end: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/start","title":"var start: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/status","title":"let status: Status","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/!=(_:_:)","type":"op"}]}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let intervals: [Interval]","type":"property","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/intervals"},{"title":"var lastUpdated: Date","type":"property","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/lastupdated"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func getAvailability(at: Date) -> TKAPI.BookingAvailability.Interval?","type":"method","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/getavailability(at:)"},{"title":"func getStatus(start: Date, end: Date) -> TKAPI.BookingAvailability.Status","type":"method","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/getstatus(start:end:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.BookingAvailability.Status","type":"enum","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case available","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/available"},{"type":"case","title":"case notAvailable","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/notavailable"},{"type":"case","title":"case unknown","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/unknown"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/!=(_:_:)","type":"op"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/hash(into:)","type":"method"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/!=(_:_:)"}]}]},{"title":"TKAPI.CarAvailability","path":"\/documentation\/tripkit\/tkapi\/caravailability","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/caravailability\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let appInfo: AppInfo?","type":"property","path":"\/documentation\/tripkit\/tkapi\/caravailability\/appinfo"},{"title":"let availability: BookingAvailability?","type":"property","path":"\/documentation\/tripkit\/tkapi\/caravailability\/availability"},{"title":"let bookInApp: Bool?","type":"property","path":"\/documentation\/tripkit\/tkapi\/caravailability\/bookinapp"},{"title":"let bookingURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/caravailability\/bookingurl"},{"title":"let car: SharedVehicleInfo","type":"property","path":"\/documentation\/tripkit\/tkapi\/caravailability\/car"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/caravailability\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/caravailability\/!=(_:_:)"}]}]},{"title":"TKAPI.CarParkInfo","path":"\/documentation\/tripkit\/tkapi\/carparkinfo","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.CarParkInfo.Entrance","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/address","title":"let address: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/lat","title":"let lat: Degrees","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/lng","title":"let lng: Degrees","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/type","title":"let type: EntranceType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let availableSpaces: Int?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/availablespaces","type":"property"},{"title":"let deepLink: URL?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/deeplink","type":"property"},{"title":"let encodedParkingArea: String?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/encodedparkingarea","type":"property"},{"title":"let entrances: [Entrance]?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrances","type":"property"},{"title":"var hasRealTime: Bool","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/hasrealtime","type":"property"},{"title":"let identifier: String","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/identifier","type":"property"},{"title":"let info: String?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/info","type":"property"},{"title":"let lastUpdate: Date?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/lastupdate","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/name","type":"property"},{"title":"let openingHours: TKAPI.OpeningHours?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/openinghours","type":"property"},{"title":"let operatorInfo: TKAPI.CompanyInfo?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/operatorinfo","type":"property"},{"title":"let pricingTables: [TKAPI.PricingTable]?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/pricingtables","type":"property"},{"title":"let source: TKAPI.DataAttribution?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/source","type":"property"},{"title":"let totalSpaces: Int?","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/totalspaces","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.CarParkInfo.EntranceType","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case disabledPedestrian","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/disabledpedestrian"},{"type":"case","title":"case entranceAndExit","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/entranceandexit"},{"type":"case","title":"case entranceOnly","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/entranceonly"},{"type":"case","title":"case exitOnly","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/exitonly"},{"type":"case","title":"case pedestrian","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/pedestrian"},{"type":"case","title":"case permit","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/permit"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/equatable-implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/rawrepresentable-implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}]},{"title":"TKAPI.CarPodInfo","path":"\/documentation\/tripkit\/tkapi\/carpodinfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let availabilities: [TKAPI.CarAvailability]?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availabilities"},{"type":"property","title":"let availabilityMode: TKAPI.AvailabilityMode?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availabilitymode"},{"type":"property","title":"let availableChargingSpaces: Int?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availablechargingspaces"},{"type":"property","title":"var availableSpaces: Int?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availablespaces"},{"type":"property","title":"let availableVehicles: Int?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availablevehicles"},{"type":"property","title":"let deepLink: URL?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/deeplink"},{"type":"property","title":"var hasRealTime: Bool","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/hasrealtime"},{"type":"property","title":"let identifier: String","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/identifier"},{"type":"property","title":"let inService: Bool?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/inservice"},{"type":"property","title":"let lastUpdate: Date?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/lastupdate"},{"type":"property","title":"let operatorInfo: TKAPI.CompanyInfo","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/operatorinfo"},{"type":"property","title":"let totalSpaces: Int?","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/totalspaces"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/equatable-implementations"}]},{"title":"TKAPI.CarRentalInfo","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/company","title":"let company: TKAPI.CompanyInfo","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/hasrealtime","title":"var hasRealTime: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/openinghours","title":"let openingHours: TKAPI.OpeningHours?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/source","title":"let source: TKAPI.DataAttribution?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"}]},{"title":"TKAPI.CompanyInfo","path":"\/documentation\/tripkit\/tkapi\/companyinfo","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/init(from:)"},{"title":"init(name: String, website: URL?, phone: String?, remoteIcon: String?, remoteDarkIcon: String?, color: TKAPI.RGBColor?, appInfo: TKAPI.AppInfo?)","type":"init","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/init(name:website:phone:remoteicon:remotedarkicon:color:appinfo:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let appInfo: TKAPI.AppInfo?","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/appinfo"},{"title":"let color: TKAPI.RGBColor?","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/color"},{"title":"let name: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/name"},{"title":"let phone: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/phone"},{"title":"let remoteDarkIcon: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/remotedarkicon"},{"title":"var remoteDarkIconURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/remotedarkiconurl"},{"title":"let remoteIcon: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/remoteicon"},{"title":"var remoteIconURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/remoteiconurl"},{"title":"let website: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/website"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/companyinfo\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"title":"TKAPI.DataAttribution","path":"\/documentation\/tripkit\/tkapi\/dataattribution","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/init(provider:disclaimer:)","type":"init","title":"init(provider: TKAPI.CompanyInfo, disclaimer: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/disclaimer","type":"property","title":"let disclaimer: String?"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/provider","type":"property","title":"let provider: TKAPI.CompanyInfo"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/dataattribution\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"title":"TKAPI.Departure","path":"\/documentation\/tripkit\/tkapi\/departure","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/alerthashcodes","title":"var alertHashCodes: [Int]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/alternativevehicles","title":"var alternativeVehicles: [TKAPI.Vehicle]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/bicycleaccessible","title":"let bicycleAccessible: Bool?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/color","title":"let color: TKAPI.RGBColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/direction","title":"let direction: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/endplatform","title":"let endPlatform: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/endstopcode","title":"let endStopCode: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/endtime","title":"var endTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/frequency","title":"let frequency: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/modeinfo","title":"let modeInfo: TKModeInfo","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/number","title":"let number: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/operatorid","title":"let operatorID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/operatorname","title":"let operatorName: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/primaryvehicle","title":"let primaryVehicle: TKAPI.Vehicle?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/realtimearrival","title":"var realTimeArrival: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/realtimedeparture","title":"var realTimeDeparture: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/realtimestatus","title":"let realTimeStatus: TKAPI.RealTimeStatus?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/routeid","title":"let routeID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/searchstring","title":"let searchString: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/servicetripid","title":"let serviceTripID: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/startplatform","title":"let startPlatform: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/starttime","title":"var startTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/timetableendplatform","title":"let timetableEndPlatform: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/timetablestartplatform","title":"let timetableStartPlatform: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/wheelchairaccessible","title":"let wheelchairAccessible: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/departure\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/departure\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"title":"TKAPI.Departures","path":"\/documentation\/tripkit\/tkapi\/departures","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations","title":"TKAPI.Departures.Embarkations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/services","type":"property","title":"let services: [TKAPI.Departure]"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/stopcode","type":"property","title":"let stopCode: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/alerts","title":"let alerts: [TKAPI.Alert]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/embarkationstops","title":"let embarkationStops: [TKAPI.Departures.Embarkations]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/parentstops","title":"let parentStops: [TKAPI.Stop]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/stops","title":"let stops: [TKAPI.Stop]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/departures\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"TKAPI.DirectionStop","path":"\/documentation\/tripkit\/tkapi\/directionstop","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/directionstop\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let isCommon: Bool","path":"\/documentation\/tripkit\/tkapi\/directionstop\/iscommon","type":"property"},{"title":"let latitude: Double","path":"\/documentation\/tripkit\/tkapi\/directionstop\/latitude","type":"property"},{"title":"let longitude: Double","path":"\/documentation\/tripkit\/tkapi\/directionstop\/longitude","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkit\/tkapi\/directionstop\/name","type":"property"},{"title":"let stopCode: String","path":"\/documentation\/tripkit\/tkapi\/directionstop\/stopcode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/directionstop\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/directionstop\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.Email","path":"\/documentation\/tripkit\/tkapi\/email","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(address: String, validated: Bool, primary: Bool)","path":"\/documentation\/tripkit\/tkapi\/email\/init(address:validated:primary:)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/email\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let address: String","path":"\/documentation\/tripkit\/tkapi\/email\/address","type":"property"},{"title":"let primary: Bool","path":"\/documentation\/tripkit\/tkapi\/email\/primary","type":"property"},{"title":"let verified: Bool","path":"\/documentation\/tripkit\/tkapi\/email\/verified","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/email\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/email\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.EventsResponse","path":"\/documentation\/tripkit\/tkapi\/eventsresponse","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.EventsResponse.Event","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let description: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/description"},{"title":"let displayImage: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/displayimage"},{"title":"let endTime: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/endtime"},{"title":"let icon: TKAPI.EventsResponse.Icon?","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/icon"},{"title":"let id: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/id"},{"title":"let location: TKAPI.EventsResponse.Location","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/location"},{"title":"let startTime: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/starttime"},{"title":"let title: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/title"},{"title":"let url: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/url"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}],"type":"struct"},{"title":"TKAPI.EventsResponse.Icon","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let remoteIcon: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/remoteicon"},{"title":"let remoteIconIsTemplate: Bool?","type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/remoteiconistemplate"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/equatable-implementations"}],"type":"struct"},{"title":"TKAPI.EventsResponse.Location","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let lat: Double","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/lat","type":"property"},{"title":"let lng: Double","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/lng","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/equatable-implementations","type":"symbol"}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let events: [TKAPI.EventsResponse.Event]","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/events","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let empty: TKAPI.EventsResponse","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/empty","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}]},{"title":"TKAPI.GenericModeDetails","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var lockedModes: [TKAPI.SpecificModeDetails]","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/lockedmodes","type":"property"},{"title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/modeinfo","type":"property"},{"title":"var specificModes: [TKAPI.SpecificModeDetails]","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/specificmodes","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.LatestResponse","path":"\/documentation\/tripkit\/tkapi\/latestresponse","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/latestresponse\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let services: [TKAPI.LatestService]","type":"property","path":"\/documentation\/tripkit\/tkapi\/latestresponse\/services"}]},{"title":"TKAPI.LatestService","path":"\/documentation\/tripkit\/tkapi\/latestservice","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/latestservice\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alerts: [TKAPI.Alert]","type":"property","path":"\/documentation\/tripkit\/tkapi\/latestservice\/alerts"},{"title":"var alternativeVehicles: [TKAPI.Vehicle]","type":"property","path":"\/documentation\/tripkit\/tkapi\/latestservice\/alternativevehicles"},{"title":"let code: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/latestservice\/code"},{"title":"var endTime: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/latestservice\/endtime"},{"title":"let primaryVehicle: TKAPI.Vehicle?","type":"property","path":"\/documentation\/tripkit\/tkapi\/latestservice\/primaryvehicle"},{"title":"var startTime: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/latestservice\/starttime"},{"title":"var stops: [TKAPI.LatestStop]","type":"property","path":"\/documentation\/tripkit\/tkapi\/latestservice\/stops"}]},{"title":"TKAPI.LatestStop","path":"\/documentation\/tripkit\/tkapi\/lateststop","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/lateststop\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var arrival: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/lateststop\/arrival"},{"title":"var departure: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/lateststop\/departure"},{"title":"let stopCode: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/lateststop\/stopcode"}]},{"title":"TKAPI.Location","path":"\/documentation\/tripkit\/tkapi\/location","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/location\/init(annotation:)","type":"init","title":"init(annotation: MKAnnotation)"},{"path":"\/documentation\/tripkit\/tkapi\/location\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/location\/init(latitude:longitude:bearing:name:address:)","type":"init","title":"init(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees, bearing: TKAPI.Direction?, name: String?, address: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/location\/address","type":"property","title":"var address: String?"},{"path":"\/documentation\/tripkit\/tkapi\/location\/bearing","type":"property","title":"var bearing: TKAPI.Direction?"},{"path":"\/documentation\/tripkit\/tkapi\/location\/isvalid","type":"property","title":"var isValid: Bool"},{"path":"\/documentation\/tripkit\/tkapi\/location\/latitude","type":"property","title":"let latitude: TKAPI.Degrees"},{"path":"\/documentation\/tripkit\/tkapi\/location\/longitude","type":"property","title":"let longitude: TKAPI.Degrees"},{"path":"\/documentation\/tripkit\/tkapi\/location\/name","type":"property","title":"var name: String?"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/address","title":"case address"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/bearing","title":"case bearing"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/latitude","title":"case latitude"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/longitude","title":"case longitude"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/name","title":"case name"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/codingkey-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/debugdescription","type":"property","title":"var debugDescription: String"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/description","type":"property","title":"var description: String"}],"title":"CodingKey Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/!=(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys","type":"enum","title":"TKAPI.Location.CodingKeys"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/location\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}]},{"title":"TKAPI.LocationInfo","path":"\/documentation\/tripkit\/tkapi\/locationinfo","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.LocationInfo.Details","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let w3w: String?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/w3w","type":"property"},{"title":"let w3wInfoURL: URL?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/w3winfourl","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/equatable-implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alerts: [Alert]?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/alerts","type":"property"},{"title":"let bikePod: TKAPI.BikePodInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/bikepod","type":"property"},{"title":"let carPark: TKAPI.CarParkInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/carpark","type":"property"},{"title":"let carPod: TKAPI.CarPodInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/carpod","type":"property"},{"title":"let carRental: TKAPI.CarRentalInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/carrental","type":"property"},{"title":"let details: Details?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.property","type":"property"},{"title":"let freeFloating: TKAPI.SharedVehicleInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/freefloating","type":"property"},{"title":"var hasRealTime: Bool","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/hasrealtime","type":"property"},{"title":"let onStreetParking: TKAPI.OnStreetParkingInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/onstreetparking","type":"property"},{"title":"let stop: TKStopCoordinate?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/stop","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/locationinfo\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.LocationsResponse","path":"\/documentation\/tripkit\/tkapi\/locationsresponse","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/all","title":"var all: [TKNamedCoordinate]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/bikepods","title":"var bikePods: [TKBikePodLocation]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/carparks","title":"var carParks: [TKCarParkLocation]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/carpods","title":"var carPods: [TKCarPodLocation]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/carrentals","title":"var carRentals: [TKCarRentalLocation]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/facilities","title":"var facilities: [TKFacilityLocation]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/freefloating","title":"var freeFloating: [TKFreeFloatingVehicleLocation]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/hashcode","title":"let hashCode: Int"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/key","title":"let key: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/onstreetparking","title":"var onStreetParking: [TKOnStreetParkingLocation]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/stops","title":"var stops: [TKStopCoordinate]"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}],"title":"TKAPI.LocationsResponse.Group"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/groups","type":"property","title":"let groups: [Group]"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/empty","type":"property","title":"static let empty: LocationsResponse"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}]},{"title":"TKAPI.ModeDetails","path":"\/documentation\/tripkit\/tkapi\/modedetails","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/icon","type":"property","title":"let icon: String?"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/implies","type":"property","title":"let implies: [String]?"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/isbranding","type":"property","title":"let isBranding: Bool?"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/istemplate","type":"property","title":"let isTemplate: Bool?"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/required","type":"property","title":"let required: Bool?"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/rgbcolor","type":"property","title":"let rgbColor: TKAPI.RGBColor"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/subtitle","type":"property","title":"let subtitle: String?"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/title","type":"property","title":"let title: String"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/vehicleicon","type":"property","title":"let vehicleIcon: String?"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/websiteurl","type":"property","title":"let websiteURL: URL?"}]},{"title":"TKAPI.OnStreetParkingInfo","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction","title":"TKAPI.OnStreetParkingInfo.Restriction","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let color: String","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/color","type":"property"},{"title":"let daysAndTimes: OpeningHours","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/daysandtimes","type":"property"},{"title":"let maximumParkingMinutes: Int","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/maximumparkingminutes","type":"property"},{"title":"let parkingSymbol: String","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/parkingsymbol","type":"property"},{"title":"let type: String","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/actualrate","title":"let actualRate: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.property","title":"let availableContent: [AvailableContent]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablespaces","title":"let availableSpaces: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/encodedpolygon","title":"let encodedPolygon: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/encodedpolyline","title":"let encodedPolyline: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/hasrealtime","title":"var hasRealTime: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/lastupdate","title":"let lastUpdate: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/occupiedspaces","title":"let occupiedSpaces: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/parkingvacancy","title":"let parkingVacancy: Vacancy?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttypes","title":"let paymentTypes: [PaymentType]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restrictions","title":"let restrictions: [Restriction]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/source","title":"let source: TKAPI.DataAttribution?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/totalspaces","title":"let totalSpaces: Int?","type":"property"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum","title":"TKAPI.OnStreetParkingInfo.AvailableContent","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/actualrate","type":"case","title":"case actualRate"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/availablespaces","type":"case","title":"case availableSpaces"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/paymenttypes","type":"case","title":"case paymentTypes"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/restrictions","type":"case","title":"case restrictions"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/totalspaces","type":"case","title":"case totalSpaces"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/unknown","type":"case","title":"case unknown"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/init(from:)","type":"init","title":"init(from: Decoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/init(from:)-2waf8"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/hash(into:)"}],"title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype","title":"TKAPI.OnStreetParkingInfo.PaymentType","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/app","title":"case app","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/coins","title":"case coins","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/creditcard","title":"case creditCard","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/meter","title":"case meter","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/phone","title":"case phone","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy","title":"TKAPI.OnStreetParkingInfo.Vacancy","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/full","title":"case full","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/limited","title":"case limited","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/plenty","title":"case plenty","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/!=(_:_:)","type":"op"}],"type":"symbol"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/hash(into:)"}],"type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"TKAPI.OpeningHours","path":"\/documentation\/tripkit\/tkapi\/openinghours","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"TKAPI.OpeningHours.Day","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time","title":"TKAPI.OpeningHours.Day.Time","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/closes","title":"let closes: TimeInterval","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/opens","title":"let opens: TimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}]},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/init(day:times:)","title":"init(day: TKAPI.OpeningHours.Day.DayOfWeek, times: [TKAPI.OpeningHours.Day.Time])","type":"init"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/day","title":"let day: TKAPI.OpeningHours.Day.DayOfWeek","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/times","title":"let times: [TKAPI.OpeningHours.Day.Time]","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/contains(_:in:)","title":"func contains(Date, in: TimeZone) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/isopen(at:in:)","title":"func isOpen(at: Date, in: TimeZone) -> Bool","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/friday","title":"case friday"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/monday","title":"case monday"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/publicholiday","title":"case publicHoliday"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/saturday","title":"case saturday"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/sunday","title":"case sunday"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/thursday","title":"case thursday"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/tuesday","title":"case tuesday"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/wednesday","title":"case wednesday"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/weekday","title":"var weekday: Int?"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/weekdays","title":"static let weekdays: [TKAPI.OpeningHours.Day.DayOfWeek]"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"type":"enum","title":"TKAPI.OpeningHours.Day.DayOfWeek","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"}],"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/openinghours\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let days: [TKAPI.OpeningHours.Day]","path":"\/documentation\/tripkit\/tkapi\/openinghours\/days"},{"type":"property","title":"let timeZone: TimeZone","path":"\/documentation\/tripkit\/tkapi\/openinghours\/timezone"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/openinghours\/encode(to:)"},{"type":"method","title":"func isOpen(at: Date) -> Bool","path":"\/documentation\/tripkit\/tkapi\/openinghours\/isopen(at:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/openinghours\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/openinghours\/equatable-implementations"}]},{"title":"TKAPI.Operator","path":"\/documentation\/tripkit\/tkapi\/operator","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/operator\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/operator\/id","title":"let id: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/operator\/name","title":"let name: String?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/operator\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/operator\/equatable-implementations","title":"Equatable Implementations"}]},{"title":"TKAPI.Paratransit","path":"\/documentation\/tripkit\/tkapi\/paratransit","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/paratransit\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/paratransit\/name","title":"let name: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/paratransit\/number","title":"let number: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/paratransit\/url","title":"let url: URL"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/paratransit\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/paratransit\/equatable-implementations","title":"Equatable Implementations"}]},{"title":"TKAPI.Phone","path":"\/documentation\/tripkit\/tkapi\/phone","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/phone\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/tripkit\/tkapi\/phone\/init(number:countrycode:validated:type:id:)","title":"init(number: String, countryCode: String?, validated: Bool, type: String?, id: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/phone\/countrycode","title":"let countryCode: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/phone\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/phone\/number","title":"let number: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/phone\/type","title":"let type: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/phone\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/phone\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.PricingTable","path":"\/documentation\/tripkit\/tkapi\/pricingtable","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.PricingTable.Entry","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let label: String?","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/label","type":"property"},{"title":"let maxDurationInMinutes: Int?","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/maxdurationinminutes","type":"property"},{"title":"let price: Float","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/price","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/equatable-implementations","type":"symbol"}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let currency: String","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/currency","type":"property"},{"title":"let entries: [TKAPI.PricingTable.Entry]","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entries","type":"property"},{"title":"let subtitle: String?","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/subtitle","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"TKAPI.PrivateVehicle","path":"\/documentation\/tripkit\/tkapi\/privatevehicle","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/init(type:uuid:name:garage:)","type":"init","title":"init(type: TKAPI.PrivateVehicleType, UUID: String?, name: String?, garage: TKAPI.Location?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/uuid","type":"property","title":"let UUID: String?"},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/garage","type":"property","title":"let garage: TKAPI.Location?"},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/name","type":"property","title":"let name: String?"},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/type","type":"property","title":"let type: TKAPI.PrivateVehicleType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.Query","path":"\/documentation\/tripkit\/tkapi\/query","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/query\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var arrive: Date?","path":"\/documentation\/tripkit\/tkapi\/query\/arrive"},{"type":"property","title":"var depart: Date?","path":"\/documentation\/tripkit\/tkapi\/query\/depart"},{"type":"property","title":"let from: TKAPI.Location","path":"\/documentation\/tripkit\/tkapi\/query\/from"},{"type":"property","title":"let to: TKAPI.Location","path":"\/documentation\/tripkit\/tkapi\/query\/to"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/query\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/query\/equatable-implementations"}]},{"title":"TKAPI.RGBColor","path":"\/documentation\/tripkit\/tkapi\/rgbcolor","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/init(for:)","title":"init?(for: TKColor?)"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/color","title":"var color: TKColor"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/!=(_:_:)"}]}]},{"title":"TKAPI.RegionInfo","path":"\/documentation\/tripkit\/tkapi\/regioninfo","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let modes: [String : TKAPI.GenericModeDetails]","type":"property","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/modes"},{"title":"let paratransit: TKAPI.Paratransit?","type":"property","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/paratransit"},{"title":"let streetBicyclePaths: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/streetbicyclepaths"},{"title":"let streetWheelchairAccessibility: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/streetwheelchairaccessibility"},{"title":"let transitBicycleAccessibility: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/transitbicycleaccessibility"},{"title":"let transitConcessionPricing: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/transitconcessionpricing"},{"title":"let transitModes: [TKModeInfo]","type":"property","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/transitmodes"},{"title":"let transitWheelchairAccessibility: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/transitwheelchairaccessibility"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func specificModeDetails(for: String) -> TKAPI.SpecificModeDetails?","type":"method","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/specificmodedetails(for:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/regioninfo\/equatable-implementations"}]},{"title":"TKAPI.RegionsResponse","path":"\/documentation\/tripkit\/tkapi\/regionsresponse","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/regionsresponse\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/regionsresponse\/hashcode","type":"property","title":"let hashCode: Int"},{"path":"\/documentation\/tripkit\/tkapi\/regionsresponse\/modes","type":"property","title":"let modes: [String : TKAPI.ModeDetails]?"},{"path":"\/documentation\/tripkit\/tkapi\/regionsresponse\/regions","type":"property","title":"let regions: [TKRegion]?"}]},{"title":"TKAPI.Route","path":"\/documentation\/tripkit\/tkapi\/route","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/route\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor?","path":"\/documentation\/tripkit\/tkapi\/route\/color","type":"property"},{"title":"var directions: [TKAPI.RouteDirection]","path":"\/documentation\/tripkit\/tkapi\/route\/directions","type":"property"},{"title":"let id: String","path":"\/documentation\/tripkit\/tkapi\/route\/id","type":"property"},{"title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkit\/tkapi\/route\/modeinfo","type":"property"},{"title":"var name: String?","path":"\/documentation\/tripkit\/tkapi\/route\/name","type":"property"},{"title":"var number: String?","path":"\/documentation\/tripkit\/tkapi\/route\/number","type":"property"},{"title":"let operatorID: String","path":"\/documentation\/tripkit\/tkapi\/route\/operatorid","type":"property"},{"title":"let operatorName: String?","path":"\/documentation\/tripkit\/tkapi\/route\/operatorname","type":"property"},{"title":"let regionCode: String","path":"\/documentation\/tripkit\/tkapi\/route\/regioncode","type":"property"},{"title":"var routeColor: TKColor?","path":"\/documentation\/tripkit\/tkapi\/route\/routecolor","type":"property"},{"title":"let routeDescription: String?","path":"\/documentation\/tripkit\/tkapi\/route\/routedescription","type":"property"},{"title":"let routeName: String?","path":"\/documentation\/tripkit\/tkapi\/route\/routename","type":"property"},{"title":"let shortName: String?","path":"\/documentation\/tripkit\/tkapi\/route\/shortname","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/route\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/route\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"TKAPI.RouteDirection","path":"\/documentation\/tripkit\/tkapi\/routedirection","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/routedirection\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routedirection\/encodedshape","title":"let encodedShape: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routedirection\/id","title":"let id: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routedirection\/name","title":"let name: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routedirection\/shapeisdetailed","title":"let shapeIsDetailed: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routedirection\/stops","title":"let stops: [TKAPI.DirectionStop]"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/routedirection\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/routedirection\/equatable-implementations","title":"Equatable Implementations"}]},{"title":"TKAPI.RoutingResponse","path":"\/documentation\/tripkit\/tkapi\/routingresponse","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/alerts","title":"var alerts: [TKAPI.Alert]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/error","title":"let error: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/groups","title":"let groups: [TKAPI.TripGroup]?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/query","title":"let query: TKAPI.Query?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/segmenttemplates","title":"var segmentTemplates: [TKAPI.SegmentTemplate]?"}]},{"title":"TKAPI.SegmentReference","path":"\/documentation\/tripkit\/tkapi\/segmentreference","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/alerthashcodes","title":"var alertHashCodes: [Int]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/bicycleaccessible","title":"var bicycleAccessible: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/booking","title":"var booking: TKBookingData?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/bookinghashcode","title":"var bookingHashCode: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/direction","title":"var direction: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/endplatform","title":"var endPlatform: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/endtime","title":"var endTime: Date","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/frequency","title":"var frequency: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/linename","title":"var lineName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/number","title":"var number: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/realtimestatus","title":"var realTimeStatus: TKAPI.RealTimeStatus?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/realtimevehicle","title":"var realTimeVehicle: TKAPI.Vehicle?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/realtimevehiclealternatives","title":"var realTimeVehicleAlternatives: [TKAPI.Vehicle]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/segmenttemplatehashcode","title":"let segmentTemplateHashCode: Int","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/servicecolor","title":"var serviceColor: TKAPI.RGBColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/servicestops","title":"var serviceStops: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/servicetripid","title":"var serviceTripID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/sharedvehicle","title":"var sharedVehicle: TKAPI.SharedVehicleInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/startplatform","title":"var startPlatform: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/starttime","title":"var startTime: Date","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/ticket","title":"var ticket: TKAPI.Ticket?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/ticketwebsite","title":"var ticketWebsite: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/timesarerealtime","title":"var timesAreRealTime: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/timetableendtime","title":"var timetableEndTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/timetablestarttime","title":"var timetableStartTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/vehicleuuid","title":"var vehicleUUID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/wheelchairaccessible","title":"var wheelchairAccessible: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"title":"TKAPI.SegmentShape","path":"\/documentation\/tripkit\/tkapi\/segmentshape","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/bicycleaccessible","title":"var bicycleAccessible: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/cyclingnetwork","title":"var cyclingNetwork: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/direction","title":"var direction: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/dismount","title":"var dismount: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/encodedwaypoints","title":"let encodedWaypoints: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/frequency","title":"var frequency: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/hop","title":"var hop: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/instruction","title":"var instruction: TKAPI.ShapeInstruction?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/linename","title":"var lineName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/metres","title":"var metres: TKAPI.Distance?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/modeinfo","title":"var modeInfo: TKModeInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/number","title":"var number: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/operatorid","title":"var operatorID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/operatorname","title":"var operatorName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/roadtags","title":"var roadTags: [TKAPI.RoadTag]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/routeid","title":"var routeID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/safe","title":"var safe: Bool?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/servicecolor","title":"var serviceColor: TKAPI.RGBColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/servicetripid","title":"var serviceTripID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/stops","title":"var stops: [TKAPI.ShapeStop]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/travelled","title":"var travelled: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/wheelchairaccessible","title":"var wheelchairAccessible: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}]},{"title":"TKAPI.SegmentTemplate","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/action","title":"let action: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/bearing","title":"var bearing: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/durationwithouttraffic","title":"var durationWithoutTraffic: TimeInterval?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/endstopcode","title":"var endStopCode: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/from","title":"var from: TKAPI.Location?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/hascarparks","title":"var hasCarParks: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/hashcode","title":"let hashCode: Int","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/hideexacttimes","title":"var hideExactTimes: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/iscontinuation","title":"var isContinuation: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/localcost","title":"var localCost: TKLocalCost?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/location","title":"var location: TKAPI.Location?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/maptiles","title":"var mapTiles: TKMapTiles?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/metres","title":"var metres: TKAPI.Distance?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/metresdismount","title":"var metresDismount: TKAPI.Distance?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/metressafe","title":"var metresSafe: TKAPI.Distance?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/metresunsafe","title":"var metresUnsafe: TKAPI.Distance?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/mini","title":"var mini: TKMiniInstruction?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/modeidentifier","title":"let modeIdentifier: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/modeinfo","title":"let modeInfo: TKModeInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/notes","title":"var notes: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/notifications","title":"var notifications: [TKAPI.TripNotification]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/operatorid","title":"var operatorID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/operatorinfo","title":"let operatorInfo: TKAPI.CompanyInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/operatorname","title":"var operatorName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/shapes","title":"var shapes: [TKAPI.SegmentShape]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/stopcode","title":"var stopCode: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/streets","title":"var streets: [TKAPI.SegmentShape]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/to","title":"var to: TKAPI.Location?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/turnbyturn","title":"var turnByTurn: TKTurnByTurnMode?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/type","title":"let type: TKAPI.SegmentType","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/visibility","title":"let visibility: TKAPI.SegmentVisibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"title":"TKAPI.ServerError","path":"\/documentation\/tripkit\/tkapi\/servererror","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/servererror\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let errorCode: Int?","path":"\/documentation\/tripkit\/tkapi\/servererror\/errorcode"},{"type":"property","title":"let errorMessage: String?","path":"\/documentation\/tripkit\/tkapi\/servererror\/errormessage"},{"type":"property","title":"let isUserError: Bool","path":"\/documentation\/tripkit\/tkapi\/servererror\/isusererror"},{"type":"property","title":"let option: TKAPI.ServerError.Option?","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.property"},{"type":"property","title":"let recovery: String?","path":"\/documentation\/tripkit\/tkapi\/servererror\/recovery"},{"type":"property","title":"let title: String?","path":"\/documentation\/tripkit\/tkapi\/servererror\/title"},{"type":"property","title":"let url: URL?","path":"\/documentation\/tripkit\/tkapi\/servererror\/url"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKAPI.ServerError.Option","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case abort","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/abort","type":"case"},{"title":"case back","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/back","type":"case"},{"title":"case retry","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/retry","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum"}]},{"title":"TKAPI.ServiceResponse","path":"\/documentation\/tripkit\/tkapi\/serviceresponse","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/alerts","title":"var alerts: [TKAPI.Alert]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/alternativevehicles","title":"var alternativeVehicles: [TKAPI.Vehicle]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/error","title":"let error: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/modeinfo","title":"let modeInfo: TKModeInfo?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/primaryvehicle","title":"let primaryVehicle: TKAPI.Vehicle?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/realtimestatus","title":"let realTimeStatus: TKAPI.RealTimeStatus?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/shapes","title":"let shapes: [TKAPI.SegmentShape]?"}]},{"title":"TKAPI.ShapeStop","path":"\/documentation\/tripkit\/tkapi\/shapestop","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/shapestop\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/arrival","title":"var arrival: Date?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/bearing","title":"var bearing: Int?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/code","title":"let code: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/departure","title":"var departure: Date?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/lat","title":"let lat: TKAPI.Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/lng","title":"let lng: TKAPI.Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/name","title":"let name: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/relativearrival","title":"var relativeArrival: TimeInterval?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/relativedeparture","title":"var relativeDeparture: TimeInterval?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/shortname","title":"let shortName: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/wheelchairaccessible","title":"let wheelchairAccessible: Bool?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/shapestop\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/shapestop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"title":"TKAPI.SharedVehicleInfo","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/batteryimage","title":"var batteryImage: TKImage?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/batterylevel","title":"let batteryLevel: Int?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/batterytext","title":"var batteryText: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/currentrange","title":"let currentRange: TKAPI.Distance?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/deeplink","title":"let deepLink: URL?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/details","title":"let details: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/hasrealtime","title":"var hasRealTime: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/identifier","title":"let identifier: String"},{"type":"property","title":"let imageURL: URL?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/imageurl"},{"type":"property","title":"var isAvailable: Bool","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/isavailable"},{"type":"property","title":"let isDisabled: Bool","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/isdisabled"},{"type":"property","title":"let isReserved: Bool?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/isreserved"},{"type":"property","title":"let lastReported: Date?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/lastreported"},{"type":"property","title":"let licensePlate: String?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/licenseplate"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/name"},{"type":"property","title":"let operatorInfo: TKAPI.CompanyInfo","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/operatorinfo"},{"type":"property","title":"let source: TKAPI.DataAttribution?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/source"},{"type":"property","title":"let vehicleType: TKAPI.VehicleTypeInfo","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/vehicletype"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.SpecificModeDetails","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var identifier: String","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/identifier","type":"property"},{"title":"var integrations: [TKAPI.Integrations]","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/integrations","type":"property"},{"title":"let minimumLocalCostForMembership: Decimal?","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/minimumlocalcostformembership","type":"property"},{"title":"var modeImageNames: [String]","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/modeimagenames","type":"property"},{"title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/modeinfo","type":"property"},{"title":"var operators: [String]","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/operators","type":"property"},{"title":"let title: String?","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/title","type":"property"},{"title":"let url: URL?","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/url","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.Stop","path":"\/documentation\/tripkit\/tkapi\/stop","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/address","type":"property","title":"let address: String?"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/alerthashcodes","type":"property","title":"var alertHashCodes: [Int]"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/availableroutes","type":"property","title":"let availableRoutes: Int?"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/children","type":"property","title":"var children: [TKAPI.Stop]"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/code","type":"property","title":"let code: String"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/lat","type":"property","title":"let lat: TKAPI.Degrees"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/lng","type":"property","title":"let lng: TKAPI.Degrees"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/modeinfo","type":"property","title":"let modeInfo: TKModeInfo"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/operators","type":"property","title":"let operators: [TKAPI.Operator]?"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/popularity","type":"property","title":"let popularity: Int?"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/routes","type":"property","title":"let routes: [TKAPI.Route]?"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/services","type":"property","title":"let services: String?"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/shortname","type":"property","title":"let shortName: String?"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/timezonename","type":"property","title":"let timeZoneName: String"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/wheelchairaccessible","type":"property","title":"let wheelchairAccessible: Bool?"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/zoneid","type":"property","title":"let zoneID: String?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/stop\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/stop\/!=(_:_:)"}]}]},{"title":"TKAPI.Ticket","path":"\/documentation\/tripkit\/tkapi\/ticket","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/ticket\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let cost: Decimal?","path":"\/documentation\/tripkit\/tkapi\/ticket\/cost","type":"property"},{"title":"let fareID: String?","path":"\/documentation\/tripkit\/tkapi\/ticket\/fareid","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkit\/tkapi\/ticket\/name","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/ticket\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/ticket\/!=(_:_:)"}]}]},{"title":"TKAPI.Trip","path":"\/documentation\/tripkit\/tkapi\/trip","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/trip\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var arrive: Date","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/arrive"},{"title":"var availability: TKAPI.TripAvailability?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/availability"},{"title":"var availabilityInfo: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/availabilityinfo"},{"title":"var budgetPoints: Double?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/budgetpoints"},{"title":"var bundleId: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/bundleid"},{"title":"let caloriesCost: Double","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/caloriescost"},{"title":"let carbonCost: Double","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/carboncost"},{"title":"var currency: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/currency"},{"title":"var depart: Date","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/depart"},{"title":"let hassleCost: Double","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/hasslecost"},{"title":"var hideExactTimes: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/hideexacttimes"},{"title":"var id: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/id"},{"title":"var logURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/logurl"},{"title":"let mainSegmentHashCode: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/mainsegmenthashcode"},{"title":"var moneyCost: Double?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/moneycost"},{"title":"var moneyCostUSD: Double?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/moneycostusd"},{"title":"var plannedURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/plannedurl"},{"title":"var progressURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/progressurl"},{"title":"var saveURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/saveurl"},{"title":"let segments: [TKAPI.SegmentReference]","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/segments"},{"title":"var shareURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/shareurl"},{"title":"var subscribeURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/subscribeurl"},{"title":"var temporaryURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/temporaryurl"},{"title":"var unsubscribeURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/unsubscribeurl"},{"title":"var updateURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/updateurl"},{"title":"let weightedScore: Double","type":"property","path":"\/documentation\/tripkit\/tkapi\/trip\/weightedscore"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/trip\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/trip\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"TKAPI.TripGroup","path":"\/documentation\/tripkit\/tkapi\/tripgroup","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var frequency: Int?","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/frequency","type":"property"},{"title":"var sources: [TKAPI.DataAttribution]","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/sources","type":"property"},{"title":"var trips: [TKAPI.Trip]","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/trips","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/equatable-implementations","type":"symbol"}]},{"title":"TKAPI.TripNotification","path":"\/documentation\/tripkit\/tkapi\/tripnotification","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.TripNotification.Coordinate","type":"struct","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let latitude: TKAPI.Degrees","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/latitude"},{"type":"property","title":"let longitude: TKAPI.Degrees","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/longitude"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/latitude","type":"case","title":"case latitude"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/longitude","type":"case","title":"case longitude"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(intvalue:)","type":"init","title":"init?(intValue: Int)"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(stringvalue:)","type":"init","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/codingkey-implementations","type":"symbol","title":"CodingKey Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/description","title":"var description: String","type":"property"}]},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/!=(_:_:)"}]},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/hash(into:)"}]}],"title":"TKAPI.TripNotification.Coordinate.CodingKeys","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/equatable-implementations"}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(id: String, kind: TKAPI.TripNotification.Kind, messageKind: TKAPI.TripNotification.MessageKind, messageTitle: String, messageBody: String)","type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/init(id:kind:messagekind:messagetitle:messagebody:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/id"},{"title":"let kind: TKAPI.TripNotification.Kind","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.property"},{"title":"var messageBody: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagebody"},{"title":"let messageKind: TKAPI.TripNotification.MessageKind","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.property"},{"title":"var messageTitle: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagetitle"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.TripNotification.CodingKeys","type":"enum","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/center","title":"case center"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/id","title":"case id"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/kind","title":"case kind"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/messagebody","title":"case messageBody"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/messagekind","title":"case messageKind"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/messagetitle","title":"case messageTitle"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/radius","title":"case radius"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/time","title":"case time"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/trigger","title":"case trigger"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/description","type":"property"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/hash(into:)"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"title":"TKAPI.TripNotification.Kind","type":"enum","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func == (TKAPI.TripNotification.Kind, TKAPI.TripNotification.Kind) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/==(_:_:)"},{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case circle(center: TKAPI.TripNotification.Coordinate, radius: TKAPI.Distance, trigger: TKAPI.TripNotification.Trigger)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/circle(center:radius:trigger:)"},{"type":"case","title":"case pushNotification","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/pushnotification"},{"type":"case","title":"case time(Date)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/time(_:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/hash(into:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/equatable-implementations"}]},{"title":"TKAPI.TripNotification.MessageKind","type":"enum","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/arrivingatyourstop","title":"case arrivingAtYourStop","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/nextstopisyours","title":"case nextStopIsYours","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/tripend","title":"case tripEnd","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/tripstart","title":"case tripStart","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/vehicleisapproaching","title":"case vehicleIsApproaching","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/hash(into:)"}],"type":"symbol"}]},{"title":"TKAPI.TripNotification.Trigger","type":"enum","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case onEnter","type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/onenter"},{"title":"case onExit","type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/onexit"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/rawrepresentable-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/init(from:)","type":"init"}]},{"title":"Encodable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/encodable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/encode(to:)","type":"method"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/!=(_:_:)","type":"op"}]}]},{"title":"TKAPI.User","path":"\/documentation\/tripkit\/tkapi\/user","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/user\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/user\/address1","title":"let address1: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/user\/address2","title":"let address2: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/user\/appdata","title":"var appData: [String : Any]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/user\/emails","title":"var emails: [TKAPI.Email]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/user\/familyname","title":"let familyName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/user\/givenname","title":"let givenName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/user\/highresprofilepictureurl","title":"let highResProfilePictureURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/user\/lowresprofilepictureurl","title":"let lowResProfilePictureURL: URL?","type":"property"},{"title":"let name: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/user\/name"},{"title":"let phone: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/user\/phone"},{"title":"let phones: [TKAPI.Phone]?","type":"property","path":"\/documentation\/tripkit\/tkapi\/user\/phones"},{"title":"let postCode: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/user\/postcode"},{"title":"var userId: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/user\/userid"},{"title":"let userType: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/user\/usertype"}]},{"title":"TKAPI.Vehicle","path":"\/documentation\/tripkit\/tkapi\/vehicle","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/components","title":"let components: [[TKAPI.VehicleComponents]]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/icon","title":"let icon: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/label","title":"let label: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/lastupdate","title":"let lastUpdate: TimeInterval?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/location","title":"let location: TKAPI.Location","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/vehicle\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"TKAPI.VehicleComponents","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/airconditioned","type":"property","title":"let airConditioned: Bool?"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/model","type":"property","title":"let model: String?"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/occupancy","type":"property","title":"let occupancy: TKAPI.VehicleOccupancy?"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/occupancytext","type":"property","title":"let occupancyText: String?"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/wheelchairaccessible","type":"property","title":"let wheelchairAccessible: Bool?"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/wheelchairseats","type":"property","title":"let wheelchairSeats: Int?"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/wifi","type":"property","title":"let wifi: Bool?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"title":"TKAPI.VehicleTypeInfo","path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/formfactor","type":"property","title":"let formFactor: TKAPI.VehicleFormFactor"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/image","type":"property","title":"var image: TKImage?"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/localized","type":"property","title":"var localized: String"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/maxrangemeters","type":"property","title":"let maxRangeMeters: Int?"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/name","type":"property","title":"let name: String?"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/propulsiontype","type":"property","title":"let propulsionType: TKAPI.VehiclePropulsionType?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKAPI.Degrees","path":"\/documentation\/tripkit\/tkapi\/degrees","type":"typealias"},{"title":"TKAPI.Direction","path":"\/documentation\/tripkit\/tkapi\/direction","type":"typealias"},{"title":"TKAPI.Distance","path":"\/documentation\/tripkit\/tkapi\/distance","type":"typealias"},{"title":"TKAPI.Speed","path":"\/documentation\/tripkit\/tkapi\/speed","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.AvailabilityMode","path":"\/documentation\/tripkit\/tkapi\/availabilitymode","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/current","title":"case current","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/future","title":"case future","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"title":"TKAPI.Integrations","path":"\/documentation\/tripkit\/tkapi\/integrations","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/bookings","title":"case bookings","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/payments","title":"case payments","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/realtime","title":"case realTime","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/routing","title":"case routing","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/integrations\/!=(_:_:)"}]},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/integrations\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/integrations\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/integrations\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/integrations\/hash(into:)","type":"method"}]}]},{"title":"TKAPI.PrivateVehicleType","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/suv","title":"case SUV"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/bicycle","title":"case bicycle"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/car","title":"case car"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/motorbike","title":"case motorbike"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}]},{"title":"TKAPI.RealTimeStatus","path":"\/documentation\/tripkit\/tkapi\/realtimestatus","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/canceled","title":"case canceled"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/capable","title":"case capable"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/incapable","title":"case incapable"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/isrealtime","title":"case isRealTime"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/!=(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/hash(into:)"}],"title":"RawRepresentable Implementations"}]},{"title":"TKAPI.RoadSafety","path":"\/documentation\/tripkit\/tkapi\/roadsafety","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/designated","title":"case designated"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/hostile","title":"case hostile"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/neutral","title":"case neutral"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/safe","title":"case safe"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/unknown","title":"case unknown"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/color","title":"var color: UIColor"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'...(_:)-5r4wj","title":"static func ... (Self) -> PartialRangeFrom<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'...(_:)-7rqdb","title":"static func ... (Self) -> PartialRangeThrough<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/_(_:_:)","title":"static func > (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/_=(_:_:)-6dmo9","title":"static func >= (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/_=(_:_:)-8l8lg","title":"static func <= (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/roadsafety\/comparable-implementations","title":"Comparable Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/roadsafety\/equatable-implementations","title":"Equatable Implementations"}]},{"title":"TKAPI.RoadTag","path":"\/documentation\/tripkit\/tkapi\/roadtag","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/cctvcamera","title":"case CCTVCamera"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/bicycleboulevard","title":"case bicycleBoulevard"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/bicycledesignated","title":"case bicycleDesignated"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/cyclelane","title":"case cycleLane"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/cyclenetwork","title":"case cycleNetwork"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/cycletrack","title":"case cycleTrack"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/litroute","title":"case litRoute"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/mainroad","title":"case mainRoad"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/other","title":"case other"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/roadtag\/sharedroad","title":"case sharedRoad"},{"title":"case sideRoad","path":"\/documentation\/tripkit\/tkapi\/roadtag\/sideroad","type":"case"},{"title":"case sideWalk","path":"\/documentation\/tripkit\/tkapi\/roadtag\/sidewalk","type":"case"},{"title":"case streetLight","path":"\/documentation\/tripkit\/tkapi\/roadtag\/streetlight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/roadtag\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var localized: String","path":"\/documentation\/tripkit\/tkapi\/roadtag\/localized","type":"property"},{"title":"var safety: TKAPI.RoadSafety","path":"\/documentation\/tripkit\/tkapi\/roadtag\/safety","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/roadtag\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/roadtag\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/roadtag\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/roadtag\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/roadtag\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/roadtag\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/roadtag\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"title":"TKAPI.SegmentType","path":"\/documentation\/tripkit\/tkapi\/segmenttype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case scheduled","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/scheduled","type":"case"},{"title":"case stationary","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/stationary","type":"case"},{"title":"case unscheduled","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/unscheduled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/segmenttype\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkit\/tkapi\/segmenttype\/rawrepresentable-implementations","type":"symbol"}]},{"title":"TKAPI.SegmentVisibility","path":"\/documentation\/tripkit\/tkapi\/segmentvisibility","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/hidden","type":"case","title":"case hidden"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/indetails","type":"case","title":"case inDetails"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/insummary","type":"case","title":"case inSummary"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/onmap","type":"case","title":"case onMap"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/!=(_:_:)"}],"title":"Equatable Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations"}]},{"title":"TKAPI.ShapeInstruction","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case continueStraight","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/continuestraight"},{"type":"case","title":"case headTowards","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/headtowards"},{"type":"case","title":"case turnLeft","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnleft"},{"type":"case","title":"case turnRight","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnright"},{"type":"case","title":"case turnSharplyLeft","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnsharplyleft"},{"type":"case","title":"case turnSharplyRight","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnsharplyright"},{"type":"case","title":"case turnSlightlyRight","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnslightlyright"},{"type":"case","title":"case turnSlightyLeft","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnslightyleft"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/equatable-implementations"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/rawrepresentable-implementations"}]},{"title":"TKAPI.TripAvailability","path":"\/documentation\/tripkit\/tkapi\/tripavailability","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/canceled","type":"case","title":"case canceled"},{"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/missedprebookingwindow","type":"case","title":"case missedPrebookingWindow"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkit\/tkapi\/tripavailability\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"title":"TKAPI.VehicleFormFactor","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/bicycle","title":"case bicycle","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/car","title":"case car","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/moped","title":"case moped","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/other","title":"case other","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/scooter","title":"case scooter","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"title":"TKAPI.VehicleOccupancy","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case crushedStandingRoomOnly","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/crushedstandingroomonly","type":"case"},{"title":"case empty","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/empty","type":"case"},{"title":"case fewSeatsAvailable","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/fewseatsavailable","type":"case"},{"title":"case full","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/full","type":"case"},{"title":"case manySeatsAvailable","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/manyseatsavailable","type":"case"},{"title":"case notAcceptingPassengers","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/notacceptingpassengers","type":"case"},{"title":"case standingRoomOnly","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/standingroomonly","type":"case"},{"title":"case unknown","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init(intValue: Int)","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/init(intvalue:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor?","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/color","type":"property"},{"title":"var intValue: Int","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/intvalue","type":"property"},{"title":"var localizedTitle: String","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/localizedtitle","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func average(in: [[TKAPI.VehicleComponents]]?) -> (TKAPI.VehicleOccupancy, title: String)?","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/average(in:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/rawrepresentable-implementations","type":"symbol"}]},{"title":"TKAPI.VehiclePropulsionType","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case combustion","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/combustion","type":"case"},{"title":"case electric","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/electric","type":"case"},{"title":"case electricAssist","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/electricassist","type":"case"},{"title":"case human","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/human","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/equatable-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/rawrepresentable-implementations","type":"symbol"}]}],"path":"\/documentation\/tripkit\/tkapi","title":"TKAPI","type":"struct"},{"children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"TKAPIConfig.Weights","path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/carbon","type":"property","title":"var carbon: Double"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/exercise","type":"property","title":"var exercise: Double"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/hassle","type":"property","title":"var hassle: Double"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/money","type":"property","title":"var money: Double"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/time","type":"property","title":"var time: Double"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/subscript(_:)","type":"subscript","title":"subscript(TKSettings.Weight) -> Double"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var avoidModes: [String]","path":"\/documentation\/tripkit\/tkapiconfig\/avoidmodes"},{"type":"property","title":"var bookingSandbox: Bool","path":"\/documentation\/tripkit\/tkapiconfig\/bookingsandbox"},{"type":"property","title":"var concession: Bool","path":"\/documentation\/tripkit\/tkapiconfig\/concession"},{"type":"property","title":"var cyclingSpeed: TKAPIConfig.Speed","path":"\/documentation\/tripkit\/tkapiconfig\/cyclingspeed"},{"type":"property","title":"var distanceUnit: TKAPIConfig.DistanceUnit","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.property"},{"type":"property","title":"var emissions: [String : Double]","path":"\/documentation\/tripkit\/tkapiconfig\/emissions"},{"type":"property","title":"var maximumWalkingMinutes: Double?","path":"\/documentation\/tripkit\/tkapiconfig\/maximumwalkingminutes"},{"type":"property","title":"var minimumTransferMinutes: Double?","path":"\/documentation\/tripkit\/tkapiconfig\/minimumtransferminutes"},{"type":"property","title":"var paras: [String : Any]","path":"\/documentation\/tripkit\/tkapiconfig\/paras"},{"type":"property","title":"var twoWayHireCostIncludesReturn: Bool","path":"\/documentation\/tripkit\/tkapiconfig\/twowayhirecostincludesreturn"},{"type":"property","title":"let version: Int","path":"\/documentation\/tripkit\/tkapiconfig\/version"},{"type":"property","title":"var walkingSpeed: TKAPIConfig.Speed","path":"\/documentation\/tripkit\/tkapiconfig\/walkingspeed"},{"type":"property","title":"var weights: TKAPIConfig.Weights","path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.property"},{"type":"property","title":"var wheelchair: Bool","path":"\/documentation\/tripkit\/tkapiconfig\/wheelchair"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let parserJsonVersion: Int","path":"\/documentation\/tripkit\/tkapiconfig\/parserjsonversion"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func defaultValues() -> TKAPIConfig","path":"\/documentation\/tripkit\/tkapiconfig\/defaultvalues()"},{"type":"method","title":"static func userSettings() -> TKAPIConfig","path":"\/documentation\/tripkit\/tkapiconfig\/usersettings()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKAPIConfig.DistanceUnit","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case auto","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/auto","type":"case"},{"title":"case imperial","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/imperial","type":"case"},{"title":"case metric","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/metric","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"type":"enum","title":"TKAPIConfig.Speed","path":"\/documentation\/tripkit\/tkapiconfig\/speed","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/custom(_:)","title":"case custom(TKAPI.Speed)","type":"case"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/fast","title":"case fast","type":"case"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/impaired","title":"case impaired","type":"case"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/medium","title":"case medium","type":"case"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/slow","title":"case slow","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/init(apivalue:)","title":"init?(apiValue: Any?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/apivalue","title":"var apiValue: Any","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapiconfig\/speed\/init(from:)"}],"title":"Decodable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/encodable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkapiconfig\/speed\/encode(to:)"}],"title":"Encodable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapiconfig\/speed\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Decodable Implementations","path":"\/documentation\/tripkit\/tkapiconfig\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapiconfig\/init(from:)","type":"init"}]},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapiconfig\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapiconfig\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/tripkit\/tkapiconfig","title":"TKAPIConfig","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(integerLiteral: IntegerLiteralType)","type":"init","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct\/init(integerliteral:)"},{"title":"init(score: Int, ranges: [NSRange])","type":"init","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct\/init(score:ranges:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var ranges: [NSRange]","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct\/ranges"},{"title":"let score: Int","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct\/score"}],"title":"TKAutocompletionResult.Score","type":"struct"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(score: Int, titleHighlight: [NSRange], subtitleHighlight: [NSRange])","type":"init","path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights\/init(score:titlehighlight:subtitlehighlight:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let score: Int","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights\/score"},{"title":"var subtitleHighlight: [NSRange]","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights\/subtitlehighlight"},{"title":"var titleHighlight: [NSRange]","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights\/titlehighlight"}],"title":"TKAutocompletionResult.ScoreHighlights","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/init(object:title:titlehighlightranges:subtitle:subtitlehighlightranges:image:accessorybuttonimage:accessoryaccessibilitylabel:score:isinsupportedregion:)","title":"init(object: AnyHashable, title: String, titleHighlightRanges: [NSRange], subtitle: String?, subtitleHighlightRanges: [NSRange], image: TKImage, accessoryButtonImage: TKImage?, accessoryAccessibilityLabel: String?, score: Int, isInSupportedRegion: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/accessoryaccessibilitylabel","title":"var accessoryAccessibilityLabel: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/accessorybuttonimage","title":"var accessoryButtonImage: TKImage?","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/image","title":"let image: TKImage","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/isinsupportedregion","title":"var isInSupportedRegion: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/object","title":"let object: AnyHashable","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/provider","title":"var provider: AnyObject?","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.property","title":"var score: Int","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/subtitle","title":"var subtitle: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/subtitlehighlightranges","title":"var subtitleHighlightRanges: [NSRange]","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/titlehighlightranges","title":"var titleHighlightRanges: [NSRange]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/distancescore(from:to:longdistance:)","title":"static func distanceScore(from: CLLocationCoordinate2D, to: MKCoordinateRegion, longDistance: Bool) -> Int","type":"method"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/image(for:)","title":"static func image(for: Icon) -> TKImage","type":"method"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/namescore(searchterm:candidate:)","title":"static func nameScore(searchTerm: String, candidate: String) -> Score","type":"method"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/rangedscore(for:min:max:)","title":"static func rangedScore(for: Int, min: Int, max: Int) -> Int","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case calendar","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/calendar"},{"type":"case","title":"case city","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/city"},{"type":"case","title":"case contact","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/contact"},{"type":"case","title":"case currentLocation","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/currentlocation"},{"type":"case","title":"case favorite","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/favorite"},{"type":"case","title":"case history","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/history"},{"type":"case","title":"case pin","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/pin"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/rawrepresentable-implementations"}],"title":"TKAutocompletionResult.Icon","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/comparable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func ... (Self) -> PartialRangeThrough<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'...(_:)-6lku6"},{"type":"op","title":"static func ... (Self) -> PartialRangeFrom<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'...(_:)-6r838"},{"type":"op","title":"static func ... (Self, Self) -> ClosedRange<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'...(_:_:)"},{"type":"op","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'.._(_:)"},{"type":"op","title":"static func ..< (Self, Self) -> Range<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'.._(_:_:)"},{"type":"op","title":"static func < (TKAutocompletionResult, TKAutocompletionResult) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/_(_:_:)"},{"type":"op","title":"static func > (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/_(_:_:)-95vy1"},{"type":"op","title":"static func <= (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/_=(_:_:)-9pkzl"},{"type":"op","title":"static func >= (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/_=(_:_:)-q0qf"}],"title":"Comparable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/!=(_:_:)","type":"op"},{"title":"static func == (TKAutocompletionResult, TKAutocompletionResult) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/==(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/hashable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkautocompletionresult\/hash(into:)","type":"method"}],"title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkautocompletionresult","title":"TKAutocompletionResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbookingdata\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let accessibilityLabel: String?","path":"\/documentation\/tripkit\/tkbookingdata\/accessibilitylabel","type":"property"},{"title":"var confirmation: TKBooking.Confirmation?","path":"\/documentation\/tripkit\/tkbookingdata\/confirmation","type":"property"},{"title":"let externalActions: [String]?","path":"\/documentation\/tripkit\/tkbookingdata\/externalactions","type":"property"},{"title":"let quickBookingsUrl: URL?","path":"\/documentation\/tripkit\/tkbookingdata\/quickbookingsurl","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkit\/tkbookingdata\/title","type":"property"},{"title":"let url: URL?","path":"\/documentation\/tripkit\/tkbookingdata\/url","type":"property"},{"title":"let virtualBookingUrl: URL?","path":"\/documentation\/tripkit\/tkbookingdata\/virtualbookingurl","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbookingdata\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbookingdata\/equatable-implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkbookingdata","title":"TKBookingData","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"TKQuickBooking.AvailableOption","type":"struct","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/bookingresponsekind","title":"var bookingResponseKind: BookingResponseKind"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/bookingtitle","title":"let bookingTitle: String"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/bookingurl","title":"let bookingURL: URL"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/faregroups","title":"var fareGroups: [TKBooking.FareGroup]"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/fares","title":"var fares: [TKBooking.Fare]"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/singlefareonly","title":"var singleFareOnly: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/title","title":"let title: String"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/warningmessage","title":"let warningMessage: String?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/!=(_:_:)"}]}]},{"title":"TKQuickBooking.UnavailableOption","type":"struct","path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/bookingtitle","type":"property","title":"let bookingTitle: String"},{"path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/title","type":"property","title":"let title: String"},{"path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/warningmessage","type":"property","title":"let warningMessage: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkquickbooking\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bookingResponseKind: BookingResponseKind","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.property"},{"title":"let bookingTitle: String","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/bookingtitle"},{"title":"let bookingURL: URL","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/bookingurl"},{"title":"let eta: TimeInterval?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/eta"},{"title":"var fares: [TKBooking.Fare]","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/fares"},{"title":"let imageURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/imageurl"},{"title":"var input: [TKBooking.BookingInput]","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/input"},{"title":"var price: TKQuickBookingPrice?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/price"},{"title":"let priceString: String?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/pricestring"},{"title":"var rider: TKBooking.Rider?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/rider"},{"title":"var riders: [TKBooking.Rider]","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/riders"},{"title":"let secondaryBookingTitle: String?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/secondarybookingtitle"},{"title":"let secondaryBookingURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/secondarybookingurl"},{"title":"let subtitle: String?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/subtitle"},{"title":"let surgeImageURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/surgeimageurl"},{"title":"let surgeString: String?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/surgestring"},{"title":"let title: String","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/title"},{"title":"let tripUpdateURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/tripupdateurl"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKQuickBooking.BookingResponseKind","type":"enum","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bookingOptions","type":"case","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/bookingoptions"},{"title":"case confirmation","type":"case","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/confirmation"},{"title":"case external","type":"case","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/external"},{"title":"case paymentOptions","type":"case","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/paymentoptions"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/init(rawvalue:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: TKQuickBooking.BookingResponseKind","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/defaultvalue"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/rawrepresentable-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkquickbooking\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkquickbooking\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}],"path":"\/documentation\/tripkit\/tkquickbooking","title":"TKQuickBooking","type":"struct"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkquickbookingprice\/usdcost","type":"property","title":"let USDCost: Float"},{"path":"\/documentation\/tripkit\/tkquickbookingprice\/localcost","type":"property","title":"let localCost: Float"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkquickbookingprice\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkquickbookingprice\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations"}],"path":"\/documentation\/tripkit\/tkquickbookingprice","title":"TKQuickBookingPrice","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkroutingquery\/init(from:to:at:modes:additional:)","title":"init(from: TKAPI.Location, to: TKAPI.Location, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>)"},{"type":"init","path":"\/documentation\/tripkit\/tkroutingquery\/init(from:to:at:modes:additional:context:)-4oxz7","title":"init(from: TKAPI.Location, to: TKAPI.Location, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>, context: Context?)"},{"type":"init","path":"\/documentation\/tripkit\/tkroutingquery\/init(from:to:at:modes:additional:context:)-8xgy9","title":"init(from: MKAnnotation, to: MKAnnotation, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>, context: Context?)"},{"type":"init","path":"\/documentation\/tripkit\/tkroutingquery\/init(url:)","title":"init?(url: URL)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkroutingquery\/additional","title":"var additional: Set<URLQueryItem>"},{"type":"property","path":"\/documentation\/tripkit\/tkroutingquery\/at","title":"var at: TKRoutingQueryTime"},{"type":"property","path":"\/documentation\/tripkit\/tkroutingquery\/context","title":"var context: Context?"},{"type":"property","path":"\/documentation\/tripkit\/tkroutingquery\/from","title":"var from: TKAPI.Location"},{"type":"property","path":"\/documentation\/tripkit\/tkroutingquery\/modes","title":"var modes: Set<String>"},{"type":"property","path":"\/documentation\/tripkit\/tkroutingquery\/to","title":"var to: TKAPI.Location"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkroutingquery\/totriprequest(in:)","title":"func toTripRequest(in: NSManagedObjectContext) -> TripRequest"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkroutingquery\/parsedate(_:)","title":"static func parseDate(Any?) -> Date?"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func toTripRequest() -> TripRequest","path":"\/documentation\/tripkit\/tkroutingquery\/totriprequest()","type":"method"}],"type":"symbol","path":"\/documentation\/tripkit\/tkroutingquery\/tkrouterrequestable-implementations","title":"TKRouterRequestable Implementations"}],"path":"\/documentation\/tripkit\/tkroutingquery","title":"TKRoutingQuery","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(title: String?, type: TKTimetable.TimetableType, region: TKRegion)","path":"\/documentation\/tripkit\/tktimetable\/init(title:type:region:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let region: TKRegion","path":"\/documentation\/tripkit\/tktimetable\/region","type":"property"},{"title":"let title: String?","path":"\/documentation\/tripkit\/tktimetable\/title","type":"property"},{"title":"let type: TimetableType","path":"\/documentation\/tripkit\/tktimetable\/type","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKTimetable.TimetableType","path":"\/documentation\/tripkit\/tktimetable\/timetabletype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case departures(stopCode: String, stop: MKAnnotation?)","path":"\/documentation\/tripkit\/tktimetable\/timetabletype\/departures(stopcode:stop:)"},{"type":"case","title":"case multipleDepartures(stopCodes: [String])","path":"\/documentation\/tripkit\/tktimetable\/timetabletype\/multipledepartures(stopcodes:)"},{"type":"case","title":"case stopToStop(startStopCode: String, endStopCode: String, endRegion: TKRegion)","path":"\/documentation\/tripkit\/tktimetable\/timetabletype\/stoptostop(startstopcode:endstopcode:endregion:)"}],"type":"enum"}],"path":"\/documentation\/tripkit\/tktimetable","title":"TKTimetable","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: T?","type":"property","path":"\/documentation\/tripkit\/unknownnilstrategy\/defaultvalue"}],"path":"\/documentation\/tripkit\/unknownnilstrategy","title":"UnknownNilStrategy","type":"struct"},{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/==(_:_:)","title":"func == (Point, Point) -> Bool","type":"op"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/defaultemptyarray","title":"DefaultEmptyArray","type":"typealias"},{"path":"\/documentation\/tripkit\/defaultfalse","title":"DefaultFalse","type":"typealias"},{"path":"\/documentation\/tripkit\/defaulttrue","title":"DefaultTrue","type":"typealias"},{"path":"\/documentation\/tripkit\/emptylossyarray","title":"EmptyLossyArray","type":"typealias"},{"path":"\/documentation\/tripkit\/tkcolor","title":"TKColor","type":"typealias"},{"path":"\/documentation\/tripkit\/tkfont","title":"TKFont","type":"typealias"},{"path":"\/documentation\/tripkit\/tkimage","title":"TKImage","type":"typealias"},{"path":"\/documentation\/tripkit\/tksegmentpattern","title":"TKSegmentPattern","type":"typealias"},{"path":"\/documentation\/tripkit\/unknownnil","title":"UnknownNil","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alert","type":"case","path":"\/documentation\/tripkit\/tkalertseverity\/alert"},{"title":"case info","type":"case","path":"\/documentation\/tripkit\/tkalertseverity\/info"},{"title":"case warning","type":"case","path":"\/documentation\/tripkit\/tkalertseverity\/warning"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/tripkit\/tkalertseverity\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkalertseverity\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkalertseverity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkalertseverity\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkalertseverity\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkalertseverity\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/tripkit\/tkalertseverity","title":"TKAlertSeverity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/authorized","title":"case authorized","type":"case"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/denied","title":"case denied","type":"case"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/notdetermined","title":"case notDetermined","type":"case"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/restricted","title":"case restricted","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkauthorizationstatus\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkauthorizationstatus","title":"TKAuthorizationStatus","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionselection\/annotation(_:)","title":"case annotation(MKAnnotation)","type":"case"},{"path":"\/documentation\/tripkit\/tkautocompletionselection\/result(_:)","title":"case result(TKAutocompletionResult)","type":"case"}],"path":"\/documentation\/tripkit\/tkautocompletionselection","title":"TKAutocompletionSelection","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case accessible","type":"case","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/accessible"},{"title":"case unknown","type":"case","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/unknown"},{"title":"Initializers","type":"groupMarker"},{"title":"init(bool: Bool?)","type":"init","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/init(bool:)"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/init(rawvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var title: String?","type":"property","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/title"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkit\/tkbicycleaccessibility","title":"TKBicycleAccessibility","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"TKBooking.Action","path":"\/documentation\/tripkit\/tkbooking\/action","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let field: String","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/field","type":"property"},{"title":"var value: String?","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/!=(_:_:)","type":"op"}]}],"type":"struct","title":"TKBooking.Action.ActionInput","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/action\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let confirmation: TKBooking.ActionConfirmation?","path":"\/documentation\/tripkit\/tkbooking\/action\/confirmation"},{"type":"property","title":"let confirmationMessage: String?","path":"\/documentation\/tripkit\/tkbooking\/action\/confirmationmessage"},{"type":"property","title":"let externalAction: String?","path":"\/documentation\/tripkit\/tkbooking\/action\/externalaction"},{"type":"property","title":"var input: [TKBooking.Action.ActionInput]?","path":"\/documentation\/tripkit\/tkbooking\/action\/input"},{"type":"property","title":"let internalURL: URL?","path":"\/documentation\/tripkit\/tkbooking\/action\/internalurl"},{"type":"property","title":"let isDestructive: Bool","path":"\/documentation\/tripkit\/tkbooking\/action\/isdestructive"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkit\/tkbooking\/action\/title"},{"type":"property","title":"let type: TKBooking.Action.ActionType?","path":"\/documentation\/tripkit\/tkbooking\/action\/type"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/activatetickets","title":"case activateTickets","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/cancel","title":"case cancel","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/lock","title":"case lock","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/plannext","title":"case planNext","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/showtickets","title":"case showTickets","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/showtrip","title":"case showTrip","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/unknown","title":"case unknown","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/unlock","title":"case unlock","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/!=(_:_:)"}],"type":"symbol"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/init(from:)-14sjg","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"type":"enum","title":"TKBooking.Action.ActionType","path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/action\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/action\/equatable-implementations"}]},{"title":"TKBooking.ActionConfirmation","path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/abortactiontitle","type":"property","title":"let abortActionTitle: String"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/confirmactiontitle","type":"property","title":"let confirmActionTitle: String"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/message","type":"property","title":"let message: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"title":"TKBooking.BookingInput","path":"\/documentation\/tripkit\/tkbooking\/bookinginput","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption","type":"struct","title":"TKBooking.BookingInput.InputOption","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: TKBooking.BookingInput.InputOptionId","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/id","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/id","type":"property","title":"let id: String"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/longtext","type":"property","title":"var longText: String?"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/multipleselections","type":"property","title":"var multipleSelections: [String]?"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/options","type":"property","title":"let options: [TKBooking.BookingInput.InputOption]?"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/required","type":"property","title":"let required: Bool"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/singleselection","type":"property","title":"var singleSelection: String?"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/title","type":"property","title":"let title: String"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/type","type":"property","title":"var type: TKBooking.BookingInput.InputType"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/value","type":"property","title":"var value: TKBooking.BookingInput.InputValue"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/displaytitle(for:)","type":"method","title":"func displayTitle(for: InputOptionId) -> String?"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoptionid","type":"typealias","title":"TKBooking.BookingInput.InputOptionId"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype","type":"enum","title":"TKBooking.BookingInput.InputType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/longtext","type":"case","title":"case longText"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/multipleselections","type":"case","title":"case multipleSelections"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/number","type":"case","title":"case number"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/requestreturntrip","type":"case","title":"case requestReturnTrip"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/singleselection","type":"case","title":"case singleSelection"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/terms","type":"case","title":"case terms"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue","type":"enum","title":"TKBooking.BookingInput.InputValue","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case longText(String)","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/longtext(_:)"},{"type":"case","title":"case multipleSelections([TKBooking.BookingInput.InputOptionId])","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/multipleselections(_:)"},{"type":"case","title":"case number(Int, min: Int?, max: Int?)","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/number(_:min:max:)"},{"type":"case","title":"case returnTripDate(TKBooking.BookingInput.ReturnTripDateValue)","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/returntripdate(_:)"},{"type":"case","title":"case singleSelection(TKBooking.BookingInput.InputOptionId)","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/singleselection(_:)"},{"type":"case","title":"case terms(URL, accepted: Bool)","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/terms(_:accepted:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue","type":"enum","title":"TKBooking.BookingInput.ReturnTripDateValue","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case date(Date)","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/date(_:)","type":"case"},{"title":"case oneWayTrip","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/onewaytrip","type":"case"},{"title":"case unspecified","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/unspecified","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func toJSONString() -> String","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/tojsonstring()","type":"method"},{"title":"func toString(forJSONEncoding: Bool, timeZone: TimeZone) -> String","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/tostring(forjsonencoding:timezone:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/equatable-implementations","type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/!=(_:_:)"}]}]},{"title":"TKBooking.BookingNote","path":"\/documentation\/tripkit\/tkbooking\/bookingnote","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let provider: String","type":"property","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/provider"},{"title":"let text: String","type":"property","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/text"},{"title":"var timestamp: Date","type":"property","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/timestamp"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/equatable-implementations"}]},{"title":"TKBooking.Confirmation","path":"\/documentation\/tripkit\/tkbooking\/confirmation","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/actions","title":"let actions: [TKBooking.Action]?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/input","title":"let input: [TKBooking.BookingInput]?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/notes","title":"let notes: [TKBooking.BookingNote]?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/provider","title":"let provider: TKBooking.Detail?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/purchase","title":"let purchase: TKBooking.Purchase?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/purchasedtickets","title":"var purchasedTickets: [TKBooking.PurchasedTicket]","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/status","title":"let status: TKBooking.Detail","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/vehicle","title":"let vehicle: TKBooking.Detail?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/confirmation\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"}]},{"title":"TKBooking.Detail","path":"\/documentation\/tripkit\/tkbooking\/detail","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/detail\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/detail\/imageurl","type":"property","title":"let imageURL: URL?"},{"path":"\/documentation\/tripkit\/tkbooking\/detail\/subtitle","type":"property","title":"let subtitle: String?"},{"path":"\/documentation\/tripkit\/tkbooking\/detail\/title","type":"property","title":"let title: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbooking\/detail\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/detail\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"title":"TKBooking.Fare","path":"\/documentation\/tripkit\/tkbooking\/fare","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/fare\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var amount: Int?","path":"\/documentation\/tripkit\/tkbooking\/fare\/amount","type":"property"},{"title":"let currencyCode: String?","path":"\/documentation\/tripkit\/tkbooking\/fare\/currencycode","type":"property"},{"title":"let details: String?","path":"\/documentation\/tripkit\/tkbooking\/fare\/details","type":"property"},{"title":"var groupIDs: [TKBooking.FareGroup.ID]","path":"\/documentation\/tripkit\/tkbooking\/fare\/groupids","type":"property"},{"title":"let id: TKBooking.Fare.ID","path":"\/documentation\/tripkit\/tkbooking\/fare\/id-swift.property","type":"property"},{"title":"var max: Int?","path":"\/documentation\/tripkit\/tkbooking\/fare\/max","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkit\/tkbooking\/fare\/name","type":"property"},{"title":"let price: Int?","path":"\/documentation\/tripkit\/tkbooking\/fare\/price","type":"property"},{"title":"var rider: TKBooking.Rider?","path":"\/documentation\/tripkit\/tkbooking\/fare\/rider","type":"property"},{"title":"var riders: [TKBooking.Rider]","path":"\/documentation\/tripkit\/tkbooking\/fare\/riders","type":"property"},{"title":"let status: TKBooking.Fare.Status?","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func noAmount() -> Bool","path":"\/documentation\/tripkit\/tkbooking\/fare\/noamount()","type":"method"},{"title":"func priceValue(locale: Locale) -> String?","path":"\/documentation\/tripkit\/tkbooking\/fare\/pricevalue(locale:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKBooking.Fare.ID","path":"\/documentation\/tripkit\/tkbooking\/fare\/id-swift.typealias","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKBooking.Fare.CodingKeys","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case amount","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/amount","type":"case"},{"title":"case currencyCode","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/currencycode","type":"case"},{"title":"case details","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/details","type":"case"},{"title":"case groupIDs","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/groupids","type":"case"},{"title":"case id","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/id","type":"case"},{"title":"case max","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/max","type":"case"},{"title":"case name","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/name","type":"case"},{"title":"case price","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/price","type":"case"},{"title":"case riders","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/riders","type":"case"},{"title":"case status","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/status","type":"case"},{"title":"case type","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/init(intvalue:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/init(rawvalue:)","type":"init"},{"title":"init?(stringValue: String)","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/init(stringvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/codingkey-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/debugdescription"},{"title":"var description: String","type":"property","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/description"}]},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/hash(into:)"}]}]},{"title":"TKBooking.Fare.InputValue","path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case amount(Int)","path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue\/amount(_:)"},{"type":"case","title":"case selection(TKBooking.Fare.ID)","path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue\/selection(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue\/equatable-implementations"}]},{"title":"TKBooking.Fare.RideType","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case multiple","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/multiple"},{"type":"case","title":"case single","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/single"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/rawrepresentable-implementations"}]},{"title":"TKBooking.Fare.Status","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/activated","title":"case activated","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/activeonanotherdevice","title":"case activeOnAnotherDevice","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/expired","title":"case expired","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/farecapped","title":"case fareCapped","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/inactive","title":"case inactive","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/invalid","title":"case invalid","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/refunded","title":"case refunded","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/stale","title":"case stale","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/unused","title":"case unused","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/fare\/!=(_:_:)","type":"op"}]}]},{"title":"TKBooking.FareGroup","path":"\/documentation\/tripkit\/tkbooking\/faregroup","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/selected","title":"var selected: Bool","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"}]},{"title":"TKBooking.Location","path":"\/documentation\/tripkit\/tkbooking\/location","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/location\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let address: String?","path":"\/documentation\/tripkit\/tkbooking\/location\/address"},{"type":"property","title":"let latitude: TKAPI.Degrees","path":"\/documentation\/tripkit\/tkbooking\/location\/latitude"},{"type":"property","title":"let longitude: TKAPI.Degrees","path":"\/documentation\/tripkit\/tkbooking\/location\/longitude"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkit\/tkbooking\/location\/name"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKBooking.Location.CodingKeys","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case address","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/address","type":"case"},{"title":"case latitude","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/latitude","type":"case"},{"title":"case longitude","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/longitude","type":"case"},{"title":"case name","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/init(intvalue:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/init(rawvalue:)","type":"init"},{"title":"init?(stringValue: String)","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/init(stringvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/codingkey-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/description","type":"property"}],"type":"symbol"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/!=(_:_:)","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/location\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/location\/!=(_:_:)"}]}]},{"title":"TKBooking.Purchase","path":"\/documentation\/tripkit\/tkbooking\/purchase","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/attribution","type":"property","title":"let attribution: TKAPI.DataAttribution?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/branding","type":"property","title":"let branding: TKBooking.TSPBranding?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/budgetpoints","type":"property","title":"let budgetPoints: Int?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/currency","type":"property","title":"let currency: String?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/id","type":"property","title":"let id: String"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/isvalid","type":"property","title":"var isValid: Bool"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/paymentdate","type":"property","title":"var paymentDate: Date?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/price","type":"property","title":"var price: NSDecimalNumber?"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/productname","title":"let productName: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/producttype","title":"let productType: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/validfor","title":"let validFor: TimeInterval?"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/validfrom","title":"var validFrom: Date?"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/validto","title":"var validTo: Date?"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/waittime","title":"let waitTime: Int?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkbooking\/purchase\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var actions: [TKBooking.Action]","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/actions"},{"type":"property","title":"let fare: TKBooking.Fare","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/fare"},{"type":"property","title":"let id: TKBooking.PurchasedTicket.ID","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/id-swift.property"},{"type":"property","title":"var purchased: Date?","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/purchased"},{"type":"property","title":"let qrCode: String?","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/qrcode"},{"type":"property","title":"let status: TKBooking.PurchasedTicket.Status?","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/status-swift.property"},{"type":"property","title":"var ticketExpiration: Date?","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/ticketexpiration"},{"type":"property","title":"let ticketURL: URL?","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/ticketurl"},{"type":"property","title":"var validFrom: Date?","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/validfrom"},{"type":"property","title":"var validUntil: Date?","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/validuntil"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKBooking.PurchasedTicket.ID","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/id-swift.typealias"},{"type":"typealias","title":"TKBooking.PurchasedTicket.Status","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/status-swift.typealias"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKBooking.PurchasedTicket.CodingKeys","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case actions","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/actions"},{"type":"case","title":"case fare","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/fare"},{"type":"case","title":"case id","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/id"},{"type":"case","title":"case purchased","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/purchased"},{"type":"case","title":"case qrCode","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/qrcode"},{"type":"case","title":"case status","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/status"},{"type":"case","title":"case ticketExpiration","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/ticketexpiration"},{"type":"case","title":"case ticketURL","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/ticketurl"},{"type":"case","title":"case validFrom","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/validfrom"},{"type":"case","title":"case validUntil","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/validuntil"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(intValue: Int)","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/init(intvalue:)"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/init(rawvalue:)"},{"type":"init","title":"init?(stringValue: String)","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/init(stringvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CodingKey Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/debugdescription","title":"var debugDescription: String"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/description","title":"var description: String"}],"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/codingkey-implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/equatable-implementations"}],"title":"TKBooking.PurchasedTicket"},{"path":"\/documentation\/tripkit\/tkbooking\/rider","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/rider\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var description: String?","path":"\/documentation\/tripkit\/tkbooking\/rider\/description"},{"type":"property","title":"var id: TKBooking.Rider.ID","path":"\/documentation\/tripkit\/tkbooking\/rider\/id-swift.property"},{"type":"property","title":"var name: String","path":"\/documentation\/tripkit\/tkbooking\/rider\/name"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKBooking.Rider.ID","path":"\/documentation\/tripkit\/tkbooking\/rider\/id-swift.typealias"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/description","type":"case","title":"case description"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/id","type":"case","title":"case id"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/name","type":"case","title":"case name"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/init(intvalue:)","type":"init","title":"init?(intValue: Int)"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/init(stringvalue:)","type":"init","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/debugdescription"},{"type":"property","title":"var description: String","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/description-swift.property"}],"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/codingkey-implementations","type":"symbol","title":"CodingKey Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}],"type":"enum","title":"TKBooking.Rider.CodingKeys","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/rider\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/rider\/equatable-implementations","type":"symbol"}],"title":"TKBooking.Rider"},{"path":"\/documentation\/tripkit\/tkbooking\/tspbranding","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/color","title":"var color: TKColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/downloadablelogourl","title":"var downloadableLogoURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/logoimagename","title":"let logoImageName: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/!=(_:_:)","type":"op"}]}],"title":"TKBooking.TSPBranding"}],"path":"\/documentation\/tripkit\/tkbooking","title":"TKBooking","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case arrivalTimeTooOld","path":"\/documentation\/tripkit\/tkerrorcode\/arrivaltimetooold","type":"case"},{"title":"case departureTimeTooOld","path":"\/documentation\/tripkit\/tkerrorcode\/departuretimetooold","type":"case"},{"title":"case destinationTooCloseToOrigin","path":"\/documentation\/tripkit\/tkerrorcode\/destinationtooclosetoorigin","type":"case"},{"title":"case internalError","path":"\/documentation\/tripkit\/tkerrorcode\/internalerror","type":"case"},{"title":"case noDestination","path":"\/documentation\/tripkit\/tkerrorcode\/nodestination","type":"case"},{"title":"case noOrigin","path":"\/documentation\/tripkit\/tkerrorcode\/noorigin","type":"case"},{"title":"case timeTooOld","path":"\/documentation\/tripkit\/tkerrorcode\/timetooold","type":"case"},{"title":"case unsupportedDestinationRegion","path":"\/documentation\/tripkit\/tkerrorcode\/unsupporteddestinationregion","type":"case"},{"title":"case unsupportedOriginRegion","path":"\/documentation\/tripkit\/tkerrorcode\/unsupportedoriginregion","type":"case"},{"title":"case unsupportedRegionCombination","path":"\/documentation\/tripkit\/tkerrorcode\/unsupportedregioncombination","type":"case"},{"title":"case userError","path":"\/documentation\/tripkit\/tkerrorcode\/usererror","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tkerrorcode\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkerrorcode\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkerrorcode\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkerrorcode\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkerrorcode\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkerrorcode\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/tripkit\/tkerrorcode","title":"TKErrorCode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cache","path":"\/documentation\/tripkit\/tkfilecachedirectory\/cache","type":"case"},{"title":"case documents","path":"\/documentation\/tripkit\/tkfilecachedirectory\/documents","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tkfilecachedirectory\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkfilecachedirectory\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkfilecachedirectory\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkfilecachedirectory\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkfilecachedirectory\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkfilecachedirectory\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol"}],"path":"\/documentation\/tripkit\/tkfilecachedirectory","title":"TKFileCacheDirectory","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"TKGeoJSON.Feature","path":"\/documentation\/tripkit\/tkgeojson\/feature","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkgeojson\/feature\/geometry","title":"let geometry: Geometry"},{"type":"property","path":"\/documentation\/tripkit\/tkgeojson\/feature\/properties","title":"let properties: Decodable?"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkgeojson\/feature\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"type":"symbol","path":"\/documentation\/tripkit\/tkgeojson\/feature\/decodable-implementations","title":"Decodable Implementations"}]},{"title":"TKGeoJSON.Polygon","path":"\/documentation\/tripkit\/tkgeojson\/polygon","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let exterior: [Position]","type":"property","path":"\/documentation\/tripkit\/tkgeojson\/polygon\/exterior"},{"title":"let interiors: [[Position]]","type":"property","path":"\/documentation\/tripkit\/tkgeojson\/polygon\/interiors"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkgeojson\/polygon\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkgeojson\/polygon\/equatable-implementations"}]},{"title":"TKGeoJSON.Position","path":"\/documentation\/tripkit\/tkgeojson\/position","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let altitude: TKAPI.Distance?","path":"\/documentation\/tripkit\/tkgeojson\/position\/altitude","type":"property"},{"title":"let latitude: TKAPI.Degrees","path":"\/documentation\/tripkit\/tkgeojson\/position\/latitude","type":"property"},{"title":"let longitude: TKAPI.Degrees","path":"\/documentation\/tripkit\/tkgeojson\/position\/longitude","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkgeojson\/position\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkgeojson\/position\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case collection([Feature])","path":"\/documentation\/tripkit\/tkgeojson\/collection(_:)","type":"case"},{"title":"case feature(Feature)","path":"\/documentation\/tripkit\/tkgeojson\/feature(_:)","type":"case"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKGeoJSON.Geometry","path":"\/documentation\/tripkit\/tkgeojson\/geometry","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case lineString([Position])","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/linestring(_:)"},{"type":"case","title":"case multiPolygon([Polygon])","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/multipolygon(_:)"},{"type":"case","title":"case point(Position)","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/point(_:)"},{"type":"case","title":"case polygon(Polygon)","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/polygon(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Decodable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/init(from:)"}],"path":"\/documentation\/tripkit\/tkgeojson\/geometry\/decodable-implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkgeojson\/geometry\/equatable-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkit\/tkgeojson\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkgeojson\/init(from:)","type":"init"}]}],"path":"\/documentation\/tripkit\/tkgeojson","title":"TKGeoJSON","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case alert","path":"\/documentation\/tripkit\/tkinfoicontype\/alert"},{"type":"case","title":"case none","path":"\/documentation\/tripkit\/tkinfoicontype\/none"},{"type":"case","title":"case unknownLocation","path":"\/documentation\/tripkit\/tkinfoicontype\/unknownlocation"},{"type":"case","title":"case warning","path":"\/documentation\/tripkit\/tkinfoicontype\/warning"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tkinfoicontype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkinfoicontype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkinfoicontype\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkinfoicontype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkinfoicontype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkinfoicontype\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkit\/tkinfoicontype","title":"TKInfoIconType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case map","path":"\/documentation\/tripkit\/tkinfoiconusage\/map","type":"case"},{"title":"case normal","path":"\/documentation\/tripkit\/tkinfoiconusage\/normal","type":"case"},{"title":"case overlay","path":"\/documentation\/tripkit\/tkinfoiconusage\/overlay","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tkinfoiconusage\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkinfoiconusage\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkinfoiconusage\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/tripkit\/tkinfoiconusage","title":"TKInfoIconUsage","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case confirmed","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/confirmed","type":"case"},{"title":"case externalEstimate","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/externalestimate","type":"case"},{"title":"case internalEstimate","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/internalestimate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/equatable-implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tklocalcostaccuracy\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tklocalcostaccuracy\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tklocalcostaccuracy\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tklocalcostaccuracy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tklocalcostaccuracy","title":"TKLocalCostAccuracy","type":"enum"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func fetchLocations(center: CLLocationCoordinate2D, radius: CLLocationDistance, limit: Int, modes: [String]?, strictModeMatch: Bool) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tklocationprovider\/fetchlocations(center:radius:limit:modes:strictmodematch:)"},{"type":"method","title":"static func fetchLocations(center: CLLocationCoordinate2D, radius: CLLocationDistance, limit: Int, modes: [String]?, strictModeMatch: Bool, in: TKRegion) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tklocationprovider\/fetchlocations(center:radius:limit:modes:strictmodematch:in:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKLocationProvider.Error","path":"\/documentation\/tripkit\/tklocationprovider\/error","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case serverReturnedBadFormat","path":"\/documentation\/tripkit\/tklocationprovider\/error\/serverreturnedbadformat","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tklocationprovider\/error\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tklocationprovider\/error\/!=(_:_:)","type":"op"}],"type":"symbol"},{"title":"Error Implementations","path":"\/documentation\/tripkit\/tklocationprovider\/error\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/tripkit\/tklocationprovider\/error\/localizeddescription"}],"type":"symbol"}]}],"path":"\/documentation\/tripkit\/tklocationprovider","title":"TKLocationProvider","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case dismount","type":"case","path":"\/documentation\/tripkit\/tkpathfriendliness\/dismount"},{"title":"case friendly","type":"case","path":"\/documentation\/tripkit\/tkpathfriendliness\/friendly"},{"title":"case unfriendly","type":"case","path":"\/documentation\/tripkit\/tkpathfriendliness\/unfriendly"},{"title":"case unknown","type":"case","path":"\/documentation\/tripkit\/tkpathfriendliness\/unknown"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor","type":"property","path":"\/documentation\/tripkit\/tkpathfriendliness\/color"},{"title":"var title: String","type":"property","path":"\/documentation\/tripkit\/tkpathfriendliness\/title"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkpathfriendliness\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkpathfriendliness\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}],"path":"\/documentation\/tripkit\/tkpathfriendliness","title":"TKPathFriendliness","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkquickbookinghelper\/fetchquickbookings(for:)","title":"static func fetchQuickBookings(for: TKSegment) async throws -> [TKQuickBooking]","type":"method"}],"path":"\/documentation\/tripkit\/tkquickbookinghelper","title":"TKQuickBookingHelper","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case idle","path":"\/documentation\/tripkit\/tkrealtimeupdateprogress\/idle","type":"case"},{"title":"case updated(E)","path":"\/documentation\/tripkit\/tkrealtimeupdateprogress\/updated(_:)","type":"case"},{"title":"case updating","path":"\/documentation\/tripkit\/tkrealtimeupdateprogress\/updating","type":"case"}],"path":"\/documentation\/tripkit\/tkrealtimeupdateprogress","title":"TKRealTimeUpdateProgress","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkregionparsererror\/badtimezoneidentifier(_:)","title":"case badTimeZoneIdentifier(String)","type":"case"},{"path":"\/documentation\/tripkit\/tkregionparsererror\/cannotparseinternationalregion","title":"case cannotParseInternationalRegion","type":"case"},{"path":"\/documentation\/tripkit\/tkregionparsererror\/emptypolygon","title":"case emptyPolygon","type":"case"},{"path":"\/documentation\/tripkit\/tkregionparsererror\/fetchingregionsfailed","title":"case fetchingRegionsFailed","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkregionparsererror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkregionparsererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkregionparsererror","title":"TKRegionParserError","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkroutingquerytime\/arriveby(_:)","type":"case","title":"case arriveBy(Date)"},{"path":"\/documentation\/tripkit\/tkroutingquerytime\/leaveasap","type":"case","title":"case leaveASAP"},{"path":"\/documentation\/tripkit\/tkroutingquerytime\/leaveafter(_:)","type":"case","title":"case leaveAfter(Date)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkroutingquerytime\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkroutingquerytime\/!=(_:_:)","type":"op"}]}],"path":"\/documentation\/tripkit\/tkroutingquerytime","title":"TKRoutingQueryTime","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case end","path":"\/documentation\/tripkit\/tksegmentordering\/end"},{"type":"case","title":"case regular","path":"\/documentation\/tripkit\/tksegmentordering\/regular"},{"type":"case","title":"case start","path":"\/documentation\/tripkit\/tksegmentordering\/start"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tksegmentordering\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksegmentordering\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tksegmentordering\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksegmentordering\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tksegmentordering\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkit\/tksegmentordering\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkit\/tksegmentordering","title":"TKSegmentOrdering","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case scheduled","path":"\/documentation\/tripkit\/tksegmenttype\/scheduled"},{"type":"case","title":"case stationary","path":"\/documentation\/tripkit\/tksegmenttype\/stationary"},{"type":"case","title":"case unknown","path":"\/documentation\/tripkit\/tksegmenttype\/unknown"},{"type":"case","title":"case unscheduled","path":"\/documentation\/tripkit\/tksegmenttype\/unscheduled"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tksegmenttype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksegmenttype\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tksegmenttype\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tksegmenttype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tksegmenttype\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tksegmenttype\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkit\/tksegmenttype","title":"TKSegmentType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkservicetiming\/frequencybased(frequency:start:end:totaltraveltime:)","title":"case frequencyBased(frequency: TimeInterval, start: Date?, end: Date?, totalTravelTime: TimeInterval?)","type":"case"},{"path":"\/documentation\/tripkit\/tkservicetiming\/timetabled(arrival:departure:)","title":"case timetabled(arrival: Date?, departure: Date?)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkservicetiming\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkservicetiming\/!=(_:_:)"}]}],"path":"\/documentation\/tripkit\/tkservicetiming","title":"TKServiceTiming","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/alert","title":"case alert","type":"case"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/listmainmode","title":"case listMainMode","type":"case"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/mapicon","title":"case mapIcon","type":"case"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/resolutionindependent","title":"case resolutionIndependent","type":"case"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/vehicle","title":"case vehicle","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkstylemodeicontype\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkstylemodeicontype","title":"TKStyleModeIconType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case arriveBefore","type":"case","path":"\/documentation\/tripkit\/tktimetype\/arrivebefore"},{"title":"case leaveASAP","type":"case","path":"\/documentation\/tripkit\/tktimetype\/leaveasap"},{"title":"case leaveAfter","type":"case","path":"\/documentation\/tripkit\/tktimetype\/leaveafter"},{"title":"case none","type":"case","path":"\/documentation\/tripkit\/tktimetype\/none"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/tripkit\/tktimetype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tktimetype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktimetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tktimetype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tktimetype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tktimetype\/hash(into:)"}]}],"path":"\/documentation\/tripkit\/tktimetype","title":"TKTimeType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bicycle","path":"\/documentation\/tripkit\/tktransportmode\/bicycle","type":"case"},{"title":"case bicycleDeprecated","path":"\/documentation\/tripkit\/tktransportmode\/bicycledeprecated","type":"case"},{"title":"case bicycleShared","path":"\/documentation\/tripkit\/tktransportmode\/bicycleshared","type":"case"},{"title":"case bikeShareDeprecated","path":"\/documentation\/tripkit\/tktransportmode\/bikesharedeprecated","type":"case"},{"title":"case car","path":"\/documentation\/tripkit\/tktransportmode\/car","type":"case"},{"title":"case carPool","path":"\/documentation\/tripkit\/tktransportmode\/carpool","type":"case"},{"title":"case carRental","path":"\/documentation\/tripkit\/tktransportmode\/carrental","type":"case"},{"title":"case carShare","path":"\/documentation\/tripkit\/tktransportmode\/carshare","type":"case"},{"title":"case drt","path":"\/documentation\/tripkit\/tktransportmode\/drt","type":"case"},{"title":"case flight","path":"\/documentation\/tripkit\/tktransportmode\/flight","type":"case"},{"title":"case limited","path":"\/documentation\/tripkit\/tktransportmode\/limited","type":"case"},{"title":"case micromobility","path":"\/documentation\/tripkit\/tktransportmode\/micromobility","type":"case"},{"title":"case micromobilityShared","path":"\/documentation\/tripkit\/tktransportmode\/micromobilityshared","type":"case"},{"title":"case motorbike","path":"\/documentation\/tripkit\/tktransportmode\/motorbike","type":"case"},{"title":"case publicTransport","path":"\/documentation\/tripkit\/tktransportmode\/publictransport","type":"case"},{"title":"case schoolBuses","path":"\/documentation\/tripkit\/tktransportmode\/schoolbuses","type":"case"},{"title":"case taxi","path":"\/documentation\/tripkit\/tktransportmode\/taxi","type":"case"},{"title":"case tnc","path":"\/documentation\/tripkit\/tktransportmode\/tnc","type":"case"},{"title":"case walking","path":"\/documentation\/tripkit\/tktransportmode\/walking","type":"case"},{"title":"case wheelchair","path":"\/documentation\/tripkit\/tktransportmode\/wheelchair","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(modeIdentifier: String)","path":"\/documentation\/tripkit\/tktransportmode\/init(modeidentifier:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tktransportmode\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var modeIdentifier: String","path":"\/documentation\/tripkit\/tktransportmode\/modeidentifier","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func color(for: String) -> TKColor","path":"\/documentation\/tripkit\/tktransportmode\/color(for:)","type":"method"},{"title":"static func genericModeIdentifier(forModeIdentifier: String) -> String","path":"\/documentation\/tripkit\/tktransportmode\/genericmodeidentifier(formodeidentifier:)","type":"method"},{"title":"static func groupModeIdentifiers(Set<String>, includeGroupForAll: Bool) -> Set<Set<String>>","path":"\/documentation\/tripkit\/tktransportmode\/groupmodeidentifiers(_:includegroupforall:)","type":"method"},{"title":"static func image(for: String) -> TKImage?","path":"\/documentation\/tripkit\/tktransportmode\/image(for:)-1bw5y","type":"method"},{"title":"static func image(for: TKTransportMode) -> TKImage?","path":"\/documentation\/tripkit\/tktransportmode\/image(for:)-2r1rv","type":"method"},{"title":"static func modeIdentifierIsCycling(String) -> Bool","path":"\/documentation\/tripkit\/tktransportmode\/modeidentifieriscycling(_:)","type":"method"},{"title":"static func modeIdentifierIsPublicTransport(String) -> Bool","path":"\/documentation\/tripkit\/tktransportmode\/modeidentifierispublictransport(_:)","type":"method"},{"title":"static func modeIdentifierIsWalking(String) -> Bool","path":"\/documentation\/tripkit\/tktransportmode\/modeidentifieriswalking(_:)","type":"method"},{"title":"static func modeIdentifierIsWheelchair(String) -> Bool","path":"\/documentation\/tripkit\/tktransportmode\/modeidentifieriswheelchair(_:)","type":"method"},{"title":"static func title(for: String) -> String?","path":"\/documentation\/tripkit\/tktransportmode\/title(for:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tktransportmode\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tktransportmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tktransportmode\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktransportmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktransportmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"path":"\/documentation\/tripkit\/tktransportmode","title":"TKTransportMode","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/calories","title":"case calories"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/carbon","title":"case carbon"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/count","title":"case count"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/duration","title":"case duration"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/hassle","title":"case hassle"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/price","title":"case price"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/score","title":"case score"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/time","title":"case time"},{"type":"case","path":"\/documentation\/tripkit\/tktripcosttype\/walking","title":"case walking"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tktripcosttype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripcosttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/tripkit\/tktripcosttype\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripcosttype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripcosttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripcosttype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tktripcosttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkit\/tktripcosttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"path":"\/documentation\/tripkit\/tktripcosttype","title":"TKTripCostType","type":"enum"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tktripfetcher\/downloadtrip(_:identifier:into:)","type":"method","title":"static func downloadTrip(URL, identifier: String?, into: NSManagedObjectContext) async throws -> Trip"},{"path":"\/documentation\/tripkit\/tktripfetcher\/downloadtrip(_:identifier:into:completion:)","type":"method","title":"static func downloadTrip(URL, identifier: String?, into: NSManagedObjectContext, completion: (Result<Trip, Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tktripfetcher\/update(_:url:aborter:)","type":"method","title":"static func update(Trip, url: URL?, aborter: ((URL) -> Bool)) async throws -> (Trip, URL, didUpdate: Bool)"},{"path":"\/documentation\/tripkit\/tktripfetcher\/update(_:url:aborter:completion:)","type":"method","title":"static func update(Trip, url: URL?, aborter: ((URL) -> Bool), completion: (Result<(Trip, URL, didUpdate: Bool), Error>) -> Void)"}],"path":"\/documentation\/tripkit\/tktripfetcher","title":"TKTripFetcher","type":"enum"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tktrippattern\/modelabels(for:)-1vnec","type":"method","title":"static func modeLabels(for: [TKSegmentPattern]) -> [String]"},{"path":"\/documentation\/tripkit\/tktrippattern\/modelabels(for:)-nm1b","type":"method","title":"static func modeLabels(for: Trip) -> [String]"},{"path":"\/documentation\/tripkit\/tktrippattern\/od(for:)","type":"method","title":"static func od(for: [TKSegmentPattern]) -> (o: CLLocationCoordinate2D, d: CLLocationCoordinate2D)?"},{"path":"\/documentation\/tripkit\/tktrippattern\/pattern(for:)","type":"method","title":"static func pattern(for: Trip) -> [TKSegmentPattern]"}],"path":"\/documentation\/tripkit\/tktrippattern","title":"TKTripPattern","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/hidden","type":"case","title":"case hidden"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/indetails","type":"case","title":"case inDetails"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/insummary","type":"case","title":"case inSummary"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/onmap","type":"case","title":"case onMap"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/hash(into:)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations"}],"path":"\/documentation\/tripkit\/tktripsegmentvisibility","title":"TKTripSegmentVisibility","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cycling","path":"\/documentation\/tripkit\/tkturnbyturnmode\/cycling","type":"case"},{"title":"case driving","path":"\/documentation\/tripkit\/tkturnbyturnmode\/driving","type":"case"},{"title":"case walking","path":"\/documentation\/tripkit\/tkturnbyturnmode\/walking","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkturnbyturnmode\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkturnbyturnmode\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkturnbyturnmode\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkturnbyturnmode\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkturnbyturnmode\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkturnbyturnmode\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkturnbyturnmode\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkturnbyturnmode\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"path":"\/documentation\/tripkit\/tkturnbyturnmode","title":"TKTurnByTurnMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkvehicletype\/suv","title":"case SUV","type":"case"},{"path":"\/documentation\/tripkit\/tkvehicletype\/bicycle","title":"case bicycle","type":"case"},{"path":"\/documentation\/tripkit\/tkvehicletype\/car","title":"case car","type":"case"},{"path":"\/documentation\/tripkit\/tkvehicletype\/kickscooter","title":"case kickscooter","type":"case"},{"path":"\/documentation\/tripkit\/tkvehicletype\/motorbike","title":"case motorbike","type":"case"},{"path":"\/documentation\/tripkit\/tkvehicletype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkvehicletype\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkvehicletype\/title","title":"var title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkvehicletype\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkvehicletype\/!=(_:_:)"}],"type":"symbol"},{"path":"\/documentation\/tripkit\/tkvehicletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkvehicletype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkvehicletype\/hash(into:)"}],"type":"symbol"}],"path":"\/documentation\/tripkit\/tkvehicletype","title":"TKVehicleType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/accessible","title":"case accessible","type":"case"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/notaccessible","title":"case notAccessible","type":"case"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/init(bool:)","title":"init(bool: Bool?)","type":"init"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/title","title":"var title: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/combine(with:preferunknown:)","title":"func combine(with: TKWheelchairAccessibility, preferUnknown: Bool) -> TKWheelchairAccessibility","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/hash(into:)"}],"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkwheelchairaccessibility","title":"TKWheelchairAccessibility","type":"enum"},{"children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var apiKey: String","path":"\/documentation\/tripkit\/tripkit\/apikey"},{"type":"property","title":"static let bundle: Bundle","path":"\/documentation\/tripkit\/tripkit\/bundle"},{"type":"property","title":"static let shared: TKStore","path":"\/documentation\/tripkit\/tripkit\/shared"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func loadModel() -> NSManagedObjectModel?","path":"\/documentation\/tripkit\/tripkit\/loadmodel()"},{"type":"method","title":"static func prepareForNewSession()","path":"\/documentation\/tripkit\/tripkit\/preparefornewsession()"}],"path":"\/documentation\/tripkit\/tripkit","title":"TripKit","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func containsObject<E>(E.Type, predicate: NSPredicate?) -> Bool","path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext\/containsobject(_:predicate:)","type":"method"},{"title":"func fetchObjects<E>(E.Type, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor]?) -> [E]","path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext\/fetchobjects(_:predicate:sortdescriptors:)","type":"method"},{"title":"func fetchObjects<E>(E.Type, sortDescriptors: [NSSortDescriptor], predicate: NSPredicate?, relationshipKeyPathsForPrefetching: [String]?, fetchLimit: Int?) -> [E]","path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext\/fetchobjects(_:sortdescriptors:predicate:relationshipkeypathsforprefetching:fetchlimit:)","type":"method"},{"title":"func fetchUniqueObject<E>(E.Type, predicate: NSPredicate?) -> E?","path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext\/fetchuniqueobject(_:predicate:)","type":"method"}],"title":"NSManagedObjectContext","path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext","type":"extension"}],"path":"\/documentation\/tripkit\/coredata","title":"CoreData","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"Bundle","type":"extension","path":"\/documentation\/tripkit\/foundation\/bundle","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var productName: String?","path":"\/documentation\/tripkit\/foundation\/bundle\/productname","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let tripKit: Bundle","path":"\/documentation\/tripkit\/foundation\/bundle\/tripkit","type":"property"}]},{"title":"JSONDecoder","type":"extension","path":"\/documentation\/tripkit\/foundation\/jsondecoder","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/foundation\/jsondecoder\/decode(_:withjsonobject:options:)","title":"func decode<T>(T.Type, withJSONObject: Any, options: JSONSerialization.WritingOptions) throws -> T"}]},{"title":"JSONEncoder","type":"extension","path":"\/documentation\/tripkit\/foundation\/jsonencoder","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encodeJSONObject<T>(T, options: JSONSerialization.ReadingOptions) throws -> Any","path":"\/documentation\/tripkit\/foundation\/jsonencoder\/encodejsonobject(_:options:)"}]},{"title":"NSError","type":"extension","path":"\/documentation\/tripkit\/foundation\/nserror","children":[{"title":"Initializers","type":"groupMarker"},{"title":"convenience init(code: Int, message: String)","path":"\/documentation\/tripkit\/foundation\/nserror\/init(code:message:)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func error(code: Int, message: String) -> NSError","path":"\/documentation\/tripkit\/foundation\/nserror\/error(code:message:)","type":"method"}]},{"title":"NSNumber","type":"extension","path":"\/documentation\/tripkit\/foundation\/nsnumber","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/foundation\/nsnumber\/tocarbonstring()","type":"method","title":"func toCarbonString() -> String"},{"path":"\/documentation\/tripkit\/foundation\/nsnumber\/tomoneystring(currencycode:decimalplaces:)","type":"method","title":"func toMoneyString(currencyCode: String, decimalPlaces: Int) -> String"},{"path":"\/documentation\/tripkit\/foundation\/nsnumber\/tomoneystring(currencycode:locale:)","type":"method","title":"func toMoneyString(currencyCode: String, locale: Locale) -> String"}]},{"title":"UserDefaults","type":"extension","path":"\/documentation\/tripkit\/foundation\/userdefaults","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/foundation\/userdefaults\/shared","title":"static let shared: UserDefaults"}]},{"title":"Extended Structures","type":"groupMarker"},{"title":"Date","type":"extension","path":"\/documentation\/tripkit\/foundation\/date","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/foundation\/date\/init(iso8601:)","type":"init","title":"init(iso8601: String) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/foundation\/date\/iso8601","type":"property","title":"var iso8601: String"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationlongsince(_:)","type":"method","title":"func durationLongSince(Date) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationshortsince(_:)","type":"method","title":"func durationShortSince(Date) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationsince(_:)","type":"method","title":"func durationSince(Date) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/midnight(in:)","type":"method","title":"func midnight(in: TimeZone) -> Date"},{"path":"\/documentation\/tripkit\/foundation\/date\/minutessince(_:)","type":"method","title":"func minutesSince(Date) -> Int"},{"path":"\/documentation\/tripkit\/foundation\/date\/nextmidnight(in:)","type":"method","title":"func nextMidnight(in: TimeZone) -> Date"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationstring(fordays:)","type":"method","title":"static func durationString(forDays: Int) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationstring(forhours:)","type":"method","title":"static func durationString(forHours: Int) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationstring(forminutes:)","type":"method","title":"static func durationString(forMinutes: Int) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationstring(forseconds:)","type":"method","title":"static func durationString(forSeconds: TimeInterval) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationstringlong(forminutes:)","type":"method","title":"static func durationStringLong(forMinutes: Int) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationstringmedium(forminutes:)","type":"method","title":"static func durationStringMedium(forMinutes: Int) -> String"},{"path":"\/documentation\/tripkit\/foundation\/date\/durationstringshort(forminutes:)","type":"method","title":"static func durationStringShort(forMinutes: Int) -> String"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/foundation\/date\/dateconversionerror","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/foundation\/date\/dateconversionerror\/invalidiso8601(_:)","title":"case invalidISO8601(String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkit\/foundation\/date\/dateconversionerror\/localizeddescription"}],"path":"\/documentation\/tripkit\/foundation\/date\/dateconversionerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"title":"Date.DateConversionError"}]},{"title":"Extended Types","type":"groupMarker"},{"title":"NSNotification","type":"extension","path":"\/documentation\/tripkit\/foundation\/nsnotification","children":[{"title":"Extended Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/foundation\/nsnotification\/name","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let TKRegionManagerUpdatedRegions: NSNotification.Name","path":"\/documentation\/tripkit\/foundation\/nsnotification\/name\/tkregionmanagerupdatedregions","type":"property"},{"title":"static let TKTripKitDidReset: Notification.Name","path":"\/documentation\/tripkit\/foundation\/nsnotification\/name\/tktripkitdidreset","type":"property"}],"title":"NSNotification.Name","type":"extension"}]}],"path":"\/documentation\/tripkit\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/tkdisplayableroute-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var routeColor: TKColor?","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/routecolor","type":"property"},{"title":"var routeDashPattern: [NSNumber]?","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/routedashpattern","type":"property"},{"title":"var routeIsTravelled: Bool","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/routeistravelled","type":"property"},{"title":"var routePath: [Any]","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/routepath","type":"property"},{"title":"var selectionIdentifier: String?","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/selectionidentifier","type":"property"}],"title":"TKDisplayableRoute Implementations"}],"path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline","title":"MKGeodesicPolyline","type":"extension"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/mapkit\/mkmultipoint\/closestpoint(to:)","type":"method","title":"func closestPoint(to: MKMapPoint) -> (point: MKMapPoint, distance: CLLocationDistance)"}],"path":"\/documentation\/tripkit\/mapkit\/mkmultipoint","title":"MKMultiPoint","type":"extension"},{"title":"Extended Protocols","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/mapkit\/mkannotation\/tk_valid(geocoder:)","type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation"}],"path":"\/documentation\/tripkit\/mapkit\/mkannotation","title":"MKAnnotation","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"type":"method","title":"static func forCoordinateRegion(MKCoordinateRegion) -> MKMapRect","path":"\/documentation\/tripkit\/mapkit\/mkmaprect\/forcoordinateregion(_:)"}],"path":"\/documentation\/tripkit\/mapkit\/mkmaprect","title":"MKMapRect","type":"extension"}],"path":"\/documentation\/tripkit\/mapkit","title":"MapKit","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/swift\/array\/localizedsharestring","type":"property","title":"var localizedShareString: String"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/swift\/array\/mergewithpreferences(_:)","type":"method","title":"func mergeWithPreferences([Element]) -> [Element]"},{"path":"\/documentation\/tripkit\/swift\/array\/tk_filterduplicates(includeelement:)","type":"method","title":"func tk_filterDuplicates(includeElement: (Element, Element) -> Bool) -> [Element]"}],"title":"Array","path":"\/documentation\/tripkit\/swift\/array","type":"extension"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-40dx3","type":"method","title":"func decode<P>(DefaultCodable<P>.Type, forKey: KeyedDecodingContainer<K>.Key) throws -> DefaultCodable<P>"},{"path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-5zja1","type":"method","title":"func decode(OptionalISO8601OrSecondsSince1970.Type, forKey: KeyedDecodingContainer<K>.Key) throws -> OptionalISO8601OrSecondsSince1970"},{"path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-6ie5y","type":"method","title":"func decode<P>(DefaultCodable<P>.Type, forKey: KeyedDecodingContainer<K>.Key) throws -> DefaultCodable<P>"},{"path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-98ax1","type":"method","title":"func decode(OptionalISO8601.Type, forKey: KeyedDecodingContainer<K>.Key) throws -> OptionalISO8601"}],"title":"KeyedDecodingContainer","path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer","type":"extension"}],"path":"\/documentation\/tripkit\/swift","title":"Swift","type":"extension"},{"children":[{"type":"groupMarker","title":"Extended Classes"},{"path":"\/documentation\/tripkit\/uikit\/uicolor","type":"extension","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var routeDashColorNonTravelled: TKColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/routedashcolornontravelled"},{"title":"static var tkAppTintColor: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkapptintcolor"},{"title":"static var tkBackground: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackground"},{"title":"static var tkBackgroundBelowTile: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundbelowtile"},{"title":"static var tkBackgroundGrouped: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundgrouped"},{"title":"static var tkBackgroundSecondary: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundsecondary"},{"title":"static var tkBackgroundSelected: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundselected"},{"title":"static var tkBackgroundTile: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundtile"},{"title":"static var tkBarBackgroundColor: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbarbackgroundcolor"},{"title":"static var tkBarForegroundColor: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbarforegroundcolor"},{"title":"static var tkBarSecondary: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbarsecondary"},{"title":"static var tkEmptyButtonBackgroundColor: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkemptybuttonbackgroundcolor"},{"title":"static var tkEmptyButtonTextColor: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkemptybuttontextcolor"},{"title":"static var tkFilledButtonBackgroundColor: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkfilledbuttonbackgroundcolor"},{"title":"static var tkFilledButtonTextColor: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkfilledbuttontextcolor"},{"title":"static var tkLabelOnDark: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelondark"},{"title":"static var tkLabelOnLight: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelonlight"},{"title":"static var tkLabelPrimary: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelprimary"},{"title":"static var tkLabelQuarternary: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelquarternary"},{"title":"static var tkLabelSecondary: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelsecondary"},{"title":"static var tkLabelTertiary: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabeltertiary"},{"title":"static var tkMapOverlay: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkmapoverlay"},{"title":"static var tkNeutral: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral"},{"title":"static var tkNeutral1: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral1"},{"title":"static var tkNeutral2: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral2"},{"title":"static var tkNeutral3: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral3"},{"title":"static var tkNeutral4: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral4"},{"title":"static var tkNeutral5: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral5"},{"title":"static var tkSeparator: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkseparator"},{"title":"static var tkSeparatorSubtle: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkseparatorsubtle"},{"title":"static let tkSheetOverlay: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tksheetoverlay"},{"title":"static var tkStateError: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkstateerror"},{"title":"static var tkStateSuccess: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkstatesuccess"},{"title":"static var tkStateWarning: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkstatewarning"},{"title":"static let tkStatusBarOverlay: UIColor","type":"property","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkstatusbaroverlay"}],"title":"UIColor"},{"path":"\/documentation\/tripkit\/uikit\/uiimage","type":"extension","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/backgroundnavsecondary","title":"static let backgroundNavSecondary: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery","title":"static let iconBattery: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery0","title":"static let iconBattery0: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery100","title":"static let iconBattery100: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery25","title":"static let iconBattery25: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery50","title":"static let iconBattery50: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery75","title":"static let iconBattery75: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodeaeroplane","title":"static let iconModeAeroplane: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodebicycle","title":"static let iconModeBicycle: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodebicycleelectric","title":"static let iconModeBicycleElectric: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodebicyclefolding","title":"static let iconModeBicycleFolding: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodebus","title":"static let iconModeBus: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecar","title":"static let iconModeCar: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecarpool","title":"static let iconModeCarPool: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecarrideshare","title":"static let iconModeCarRideShare: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecarshare","title":"static let iconModeCarShare: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecoach","title":"static let iconModeCoach: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodeferry","title":"static let iconModeFerry: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodehoverboard","title":"static let iconModeHoverboard: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodekickscooter","title":"static let iconModeKickscooter: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodemotorbike","title":"static let iconModeMotorbike: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodemotoscooter","title":"static let iconModeMotoscooter: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodeparking","title":"static let iconModeParking: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodepublictransport","title":"static let iconModePublicTransport: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodesegway","title":"static let iconModeSegway: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodetaxi","title":"static let iconModeTaxi: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodetrain","title":"static let iconModeTrain: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodetrainintercity","title":"static let iconModeTrainIntercity: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodetram","title":"static let iconModeTram: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodeunicycle","title":"static let iconModeUnicycle: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodewalk","title":"static let iconModeWalk: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodewheelchair","title":"static let iconModeWheelchair: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconpin","title":"static let iconPin: TKImage"},{"type":"property","path":"\/documentation\/tripkit\/uikit\/uiimage\/iconsearchtimetable","title":"static let iconSearchTimetable: TKImage"}],"title":"UIImage"}],"path":"\/documentation\/tripkit\/uikit","title":"UIKit","type":"extension"},{"children":[{"type":"groupMarker","title":"Extended Structures"},{"path":"\/documentation\/tripkit\/_locationessentials\/cllocationcoordinate2d","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isValid: Bool","type":"property","path":"\/documentation\/tripkit\/_locationessentials\/cllocationcoordinate2d\/isvalid"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func distance(from: CLLocationCoordinate2D) -> CLLocationDistance?","type":"method","path":"\/documentation\/tripkit\/_locationessentials\/cllocationcoordinate2d\/distance(from:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let invalid: CLLocationCoordinate2D","type":"property","path":"\/documentation\/tripkit\/_locationessentials\/cllocationcoordinate2d\/invalid"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func decodePolyline(String) -> [CLLocationCoordinate2D]","type":"method","path":"\/documentation\/tripkit\/_locationessentials\/cllocationcoordinate2d\/decodepolyline(_:)"}],"type":"extension","title":"CLLocationCoordinate2D"}],"path":"\/documentation\/tripkit\/_locationessentials","title":"_LocationEssentials","type":"extension"}],"title":"TripKit"}],"title":"Documentation","type":"module"}]}}