{"schemaVersion":{"major":0,"patch":2,"minor":1},"includedArchiveIdentifiers":["TripKitAPI","TripKitInterApp","TripKitUI","TripKit"],"interfaceLanguages":{"swift":[{"children":[{"type":"module","path":"\/documentation\/tripkitapi","children":[{"type":"groupMarker","title":"Classes"},{"type":"class","path":"\/documentation\/tripkitapi\/tkconfig","title":"TKConfig","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var appGroupName: String?","path":"\/documentation\/tripkitapi\/tkconfig\/appgroupname","type":"property"},{"title":"let configuration: [String : AnyHashable]","path":"\/documentation\/tripkitapi\/tkconfig\/configuration","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKConfig","path":"\/documentation\/tripkitapi\/tkconfig\/shared","type":"property"}]},{"type":"class","path":"\/documentation\/tripkitapi\/tkconsolelogger","title":"TKConsoleLogger","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkconsolelogger\/init(level:subsystem:)","title":"init(level: TKLog.LogLevel, subsystem: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkconsolelogger\/level","title":"let level: TKLog.LogLevel"},{"type":"property","path":"\/documentation\/tripkitapi\/tkconsolelogger\/subsystem","title":"let subsystem: String"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkconsolelogger\/output(_:identifier:message:)","title":"func output(TKLog.LogLevel, identifier: String, message: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func log(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkitapi\/tkconsolelogger\/log(_:identifier:message:)"},{"type":"method","title":"func log(identifier: String, request: TKLog.ServerRequest)","path":"\/documentation\/tripkitapi\/tkconsolelogger\/log(identifier:request:)"},{"type":"method","title":"func log(identifier: String, response: TKLog.ServerResponse)","path":"\/documentation\/tripkitapi\/tkconsolelogger\/log(identifier:response:)"}],"path":"\/documentation\/tripkitapi\/tkconsolelogger\/tklogger-implementations","title":"TKLogger Implementations"}]},{"type":"class","path":"\/documentation\/tripkitapi\/tkerror","title":"TKError","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkerror\/details","title":"var details: TKAPI.ServerError?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkerror\/isusererror","title":"var isUserError: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkerror\/title","title":"var title: String?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkerror\/error(from:domain:)","title":"class func error(from: Data, domain: String) -> TKError?","type":"method"},{"path":"\/documentation\/tripkitapi\/tkerror\/error(from:statuscode:)","title":"class func error(from: Data?, statusCode: Int) -> TKError?","type":"method"},{"path":"\/documentation\/tripkitapi\/tkerror\/error(withcode:userinfo:)","title":"class func error(withCode: Int, userInfo: [String : Any]?) -> TKError","type":"method"}]},{"type":"class","path":"\/documentation\/tripkitapi\/tklocalcost","title":"TKLocalCost","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tklocalcost\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tklocalcost\/accuracy","title":"let accuracy: TKLocalCostAccuracy"},{"type":"property","path":"\/documentation\/tripkitapi\/tklocalcost\/cost","title":"let cost: Double"},{"type":"property","path":"\/documentation\/tripkitapi\/tklocalcost\/currency","title":"let currency: String"},{"type":"property","path":"\/documentation\/tripkitapi\/tklocalcost\/maxcost","title":"let maxCost: Double?"},{"type":"property","path":"\/documentation\/tripkitapi\/tklocalcost\/mincost","title":"let minCost: Double?"}]},{"type":"class","path":"\/documentation\/tripkitapi\/tklog","title":"TKLog","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKLog.ServerRequest","path":"\/documentation\/tripkitapi\/tklog\/serverrequest","type":"struct","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func == (TKLog.ServerRequest, TKLog.ServerRequest) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/==(_:_:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","type":"property","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/id"},{"title":"let request: URLRequest","type":"property","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/request"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/hash(into:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tklog\/serverrequest\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"TKLog.ServerResponse","path":"\/documentation\/tripkitapi\/tklog\/serverresponse","type":"struct","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/==(_:_:)","title":"static func == (TKLog.ServerResponse, TKLog.ServerResponse) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/request","title":"let request: ServerRequest","type":"property"},{"path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/result","title":"let result: ServerResult","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tklog\/serverresponse\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKLog.ServerResult","path":"\/documentation\/tripkitapi\/tklog\/serverresult","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var loggers: [TKLogger]","path":"\/documentation\/tripkitapi\/tklog\/loggers","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func debug(String, text: @autoclosure () -> String)","path":"\/documentation\/tripkitapi\/tklog\/debug(_:text:)","type":"method"},{"title":"class func debug(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkitapi\/tklog\/debug(identifier:_:file:)","type":"method"},{"title":"class func error(String, text: String)","path":"\/documentation\/tripkitapi\/tklog\/error(_:text:)","type":"method"},{"title":"class func error(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkitapi\/tklog\/error(identifier:_:file:)","type":"method"},{"title":"class func format(response: URLResponse, data: Data?, for: TKLog.ServerRequest, detailed: Bool) -> String","path":"\/documentation\/tripkitapi\/tklog\/format(response:data:for:detailed:)","type":"method"},{"title":"class func formatForVCCode(request: TKLog.ServerRequest) -> String","path":"\/documentation\/tripkitapi\/tklog\/formatforvccode(request:)","type":"method"},{"title":"class func info(String, text: @autoclosure () -> String)","path":"\/documentation\/tripkitapi\/tklog\/info(_:text:)","type":"method"},{"title":"class func info(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkitapi\/tklog\/info(identifier:_:file:)","type":"method"},{"title":"class func log(String, request: URLRequest, uuid: UUID)","path":"\/documentation\/tripkitapi\/tklog\/log(_:request:uuid:)","type":"method"},{"title":"class func log(String, response: URLResponse?, data: Data?, orError: Error?, for: URLRequest, uuid: UUID)","path":"\/documentation\/tripkitapi\/tklog\/log(_:response:data:orerror:for:uuid:)","type":"method"},{"title":"class func verbose(String, text: @autoclosure () -> String)","path":"\/documentation\/tripkitapi\/tklog\/verbose(_:text:)","type":"method"},{"title":"class func verbose(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkitapi\/tklog\/verbose(identifier:_:file:)","type":"method"},{"title":"class func warn(String, text: String)","path":"\/documentation\/tripkitapi\/tklog\/warn(_:text:)","type":"method"},{"title":"class func warn(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkitapi\/tklog\/warn(identifier:_:file:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKLog.LogLevel","path":"\/documentation\/tripkitapi\/tklog\/loglevel","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case debug","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/debug"},{"type":"case","title":"case error","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/error"},{"type":"case","title":"case info","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/info"},{"type":"case","title":"case verbose","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/verbose"},{"type":"case","title":"case warning","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/warning"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tklog\/loglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tklog\/loglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tklog\/loglevel\/rawrepresentable-implementations"}]}]},{"type":"class","path":"\/documentation\/tripkitapi\/tkmaptiles","title":"TKMapTiles","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkmaptiles\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkmaptiles\/name","title":"let name: String"},{"type":"property","path":"\/documentation\/tripkitapi\/tkmaptiles\/sources","title":"let sources: [TKAPI.DataAttribution]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkmaptiles\/urltemplates","title":"let urlTemplates: [String]"}]},{"type":"class","path":"\/documentation\/tripkitapi\/tkminiinstruction","title":"TKMiniInstruction","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkminiinstruction\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkminiinstruction\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkminiinstruction\/detail","title":"let detail: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkminiinstruction\/instruction","title":"let instruction: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkminiinstruction\/encode(with:)","title":"func encode(with: NSCoder)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkminiinstruction\/supportssecurecoding","title":"static var supportsSecureCoding: Bool","type":"property"}]},{"type":"class","path":"\/documentation\/tripkitapi\/tkmodeinfo","title":"TKModeInfo","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/alt","type":"property","title":"let alt: String"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/color","type":"property","title":"var color: TKColor?"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/descriptor","type":"property","title":"let descriptor: String?"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/hash","type":"property","title":"var hash: Int"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/identifier","type":"property","title":"let identifier: String?"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/localimagename","type":"property","title":"let localImageName: String?"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/remoteimageisbranding","type":"property","title":"var remoteImageIsBranding: Bool"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/remoteimageistemplate","type":"property","title":"var remoteImageIsTemplate: Bool"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/remoteimagename","type":"property","title":"let remoteImageName: String?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/encode(with:)","type":"method","title":"func encode(with: NSCoder)"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/isequal(_:)","type":"method","title":"func isEqual(Any?) -> Bool"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitapi\/tkmodeinfo\/supportssecurecoding","type":"property","title":"static var supportsSecureCoding: Bool"}]},{"type":"class","path":"\/documentation\/tripkitapi\/tkregion","title":"TKRegion","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(asInternationalWithCode: String, modes: [String])","type":"init","path":"\/documentation\/tripkitapi\/tkregion\/init(asinternationalwithcode:modes:)"},{"title":"init(forTestingWithCode: String, modes: [String], cities: [City])","type":"init","path":"\/documentation\/tripkitapi\/tkregion\/init(fortestingwithcode:modes:cities:)"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkregion\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let cities: [City]","type":"property","path":"\/documentation\/tripkitapi\/tkregion\/cities"},{"title":"let code: String","type":"property","path":"\/documentation\/tripkitapi\/tkregion\/code"},{"title":"var isInternational: Bool","type":"property","path":"\/documentation\/tripkitapi\/tkregion\/isinternational"},{"title":"let modeIdentifiers: [String]","type":"property","path":"\/documentation\/tripkitapi\/tkregion\/modeidentifiers"},{"title":"var name: String","type":"property","path":"\/documentation\/tripkitapi\/tkregion\/name"},{"title":"var polygon: MKPolygon","type":"property","path":"\/documentation\/tripkitapi\/tkregion\/polygon"},{"title":"let timeZone: TimeZone","type":"property","path":"\/documentation\/tripkitapi\/tkregion\/timezone"},{"title":"let urls: [URL]","type":"property","path":"\/documentation\/tripkitapi\/tkregion\/urls"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func contains(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Bool","type":"method","path":"\/documentation\/tripkitapi\/tkregion\/contains(latitude:longitude:)"},{"title":"func encode(to: Encoder) throws","type":"method","path":"\/documentation\/tripkitapi\/tkregion\/encode(to:)"},{"title":"func intersects(polygonPoints: [(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)]) -> Bool","type":"method","path":"\/documentation\/tripkitapi\/tkregion\/intersects(polygonpoints:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKRegion.City","type":"typealias","path":"\/documentation\/tripkitapi\/tkregion\/city"}]},{"type":"class","path":"\/documentation\/tripkitapi\/tkregioncity","title":"TKRegionCity","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkregioncity\/init(from:)"},{"title":"init(title: String, latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)","type":"init","path":"\/documentation\/tripkitapi\/tkregioncity\/init(title:latitude:longitude:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let latitude: TKAPI.Degrees","type":"property","path":"\/documentation\/tripkitapi\/tkregioncity\/latitude"},{"title":"let longitude: TKAPI.Degrees","type":"property","path":"\/documentation\/tripkitapi\/tkregioncity\/longitude"},{"title":"let name: String?","type":"property","path":"\/documentation\/tripkitapi\/tkregioncity\/name"},{"title":"var orderInRegion: Int?","type":"property","path":"\/documentation\/tripkitapi\/tkregioncity\/orderinregion"},{"title":"var region: TKRegion?","type":"property","path":"\/documentation\/tripkitapi\/tkregioncity\/region"}]},{"type":"class","title":"TKRegionManager","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/hasregions","title":"var hasRegions: Bool"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/regions","title":"var regions: [TKRegion]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/regionshash","title":"var regionsHash: NSNumber?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/color(formodeidentifier:)","title":"func color(forModeIdentifier: String) -> TKColor?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/coordinateispartofanyregion(latitude:longitude:)","title":"func coordinateIsPartOfAnyRegion(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Bool"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/dependentmodeidentifier(formodeidentifier:)","title":"func dependentModeIdentifier(forModeIdentifier: String) -> [String]"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/fetchregions(forced:)","title":"func fetchRegions(forced: Bool) async throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/impliedmodes(bymodeidentifer:)","title":"func impliedModes(byModeIdentifer: String) -> [String]"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/loadregionsfromcache()","title":"func loadRegionsFromCache() async"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/localregion(code:)","title":"func localRegion(code: String) -> TKRegion?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/localregion(named:)","title":"func localRegion(named: String) -> TKRegion?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/localregions(containinglatitude:longitude:)","title":"func localRegions(containingLatitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Set<TKRegion>"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/localregions(start:end:)","title":"func localRegions(start: (latitude: TKAPI.Degrees, longitude: TKAPI.Degrees), end: (latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)) -> [TKRegion]"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/modedetails(formodeidentifier:)","title":"func modeDetails(forModeIdentifier: String) -> TKAPI.ModeDetails?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/modeidentifierisrequired(_:)","title":"func modeIdentifierIsRequired(String) -> Bool"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/requireregions()","title":"func requireRegions() async throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/requireregions(completion:)","title":"func requireRegions(completion: (Result<Void, Error>) -> Void)"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/subtitle(formodeidentifier:)","title":"func subtitle(forModeIdentifier: String) -> String?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/timezone(containinglatitude:longitude:)","title":"func timeZone(containingLatitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> TimeZone?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/title(formodeidentifier:)","title":"func title(forModeIdentifier: String) -> String?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/updateregions(forced:)","title":"func updateRegions(forced: Bool)"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/websiteurl(formodeidentifier:)","title":"func websiteURL(forModeIdentifier: String) -> URL?"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/cacheurl","title":"static var cacheURL: URL"},{"type":"property","path":"\/documentation\/tripkitapi\/tkregionmanager\/shared","title":"static let shared: TKRegionManager"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/readlocalcache()","title":"static func readLocalCache() -> Data?"},{"type":"method","path":"\/documentation\/tripkitapi\/tkregionmanager\/savetocache(_:)","title":"static func saveToCache(Data)"}],"path":"\/documentation\/tripkitapi\/tkregionmanager"},{"type":"class","title":"TKRouter","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(config: TKAPIConfig)","path":"\/documentation\/tripkitapi\/tkrouter\/init(config:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var config: TKAPIConfig","path":"\/documentation\/tripkitapi\/tkrouter\/config"},{"type":"property","title":"var failOnAnyError: Bool","path":"\/documentation\/tripkitapi\/tkrouter\/failonanyerror"},{"type":"property","title":"var finishedWorkers: UInt","path":"\/documentation\/tripkitapi\/tkrouter\/finishedworkers"},{"type":"property","title":"var isActive: Bool","path":"\/documentation\/tripkitapi\/tkrouter\/isactive"},{"type":"property","title":"var lastWorkerError: Error?","path":"\/documentation\/tripkitapi\/tkrouter\/lastworkererror"},{"type":"property","title":"var modeIdentifiers: Set<String>","path":"\/documentation\/tripkitapi\/tkrouter\/modeidentifiers"},{"type":"property","title":"var server: TKServer?","path":"\/documentation\/tripkitapi\/tkrouter\/server"},{"type":"property","title":"var workerQueue: DispatchQueue?","path":"\/documentation\/tripkitapi\/tkrouter\/workerqueue"},{"type":"property","title":"var workers: [Set<String> : TKRouter]","path":"\/documentation\/tripkitapi\/tkrouter\/workers"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func cancelRequests()","path":"\/documentation\/tripkitapi\/tkrouter\/cancelrequests()"},{"type":"method","title":"func cancelRequestsWorker()","path":"\/documentation\/tripkitapi\/tkrouter\/cancelrequestsworker()"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var defaultParameters: [URLQueryItem]?","path":"\/documentation\/tripkitapi\/tkrouter\/defaultparameters"},{"type":"property","title":"static var modesToGroupInRequest: [String]?","path":"\/documentation\/tripkitapi\/tkrouter\/modestogroupinrequest"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func fetchTripsResponse<C>(for: TKRoutingQuery<C>, modeIdentifiers: Set<String>?, bestOnly: Bool, additional: Set<URLQueryItem>?, config: TKAPIConfig, server: TKServer?) async throws -> TKAPI.RoutingResponse","path":"\/documentation\/tripkitapi\/tkrouter\/fetchtripsresponse(for:modeidentifiers:bestonly:additional:config:server:)"},{"type":"method","title":"static func multiFetchTripResponses<C>(request: TKRoutingQuery<C>, config: TKAPIConfig, server: TKServer?) async throws -> [TKAPI.RoutingResponse]","path":"\/documentation\/tripkitapi\/tkrouter\/multifetchtripresponses(request:config:server:)"},{"type":"method","title":"static func requestParameters<C>(request: TKRoutingQuery<C>, modeIdentifiers: Set<String>?, additional: Set<URLQueryItem>?, config: TKAPIConfig, bestOnly: Bool, includeAddress: Bool) -> [String : Any]","path":"\/documentation\/tripkitapi\/tkrouter\/requestparameters(request:modeidentifiers:additional:config:bestonly:includeaddress:)"},{"type":"method","title":"static func routingRequestURL<C>(request: TKRoutingQuery<C>, modes: Set<String>?, includeAddress: Bool, config: TKAPIConfig) -> String?","path":"\/documentation\/tripkitapi\/tkrouter\/routingrequesturl(request:modes:includeaddress:config:)"},{"type":"method","title":"static func urlRequest<C>(request: TKRoutingQuery<C>, modes: Set<String>?, includeAddress: Bool, config: TKAPIConfig) throws -> URLRequest","path":"\/documentation\/tripkitapi\/tkrouter\/urlrequest(request:modes:includeaddress:config:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKRouter.RoutingError","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case endLocationNotDetermined","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/endlocationnotdetermined","type":"case"},{"title":"case invalidRequest(String)","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/invalidrequest(_:)","type":"case"},{"title":"case noTripFound","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/notripfound","type":"case"},{"title":"case routingNotSupported","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/routingnotsupported","type":"case"},{"title":"case startLocationNotDetermined","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/startlocationnotdetermined","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/localizeddescription"}],"title":"Error Implementations","path":"\/documentation\/tripkitapi\/tkrouter\/routingerror\/error-implementations","type":"symbol"}]}],"path":"\/documentation\/tripkitapi\/tkrouter"},{"type":"class","title":"TKRoutingServer","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkroutingserver\/init(baseurl:apikey:)","type":"init","title":"init(baseURL: URL?, apiKey: String?)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkroutingserver\/baseurls(for:)","type":"method","title":"func baseURLs(for: TKRegion?) -> [URL]"}],"path":"\/documentation\/tripkitapi\/tkroutingserver"},{"type":"class","title":"TKServer","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKServer.Response","type":"struct","path":"\/documentation\/tripkitapi\/tkserver\/response","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var headers: [String : Any]","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/response\/headers"},{"title":"var result: Result<T, Error>","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/response\/result"},{"title":"var statusCode: Int?","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/response\/statuscode"}]},{"title":"Instance Properties","type":"groupMarker"},{"title":"var apiKey: String","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/apikey"},{"title":"var customHeaders: [String : String]?","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/customheaders"},{"title":"var userToken: String?","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/usertoken"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func GETRequestWithSkedGoHTTPHeaders(for: URL, paras: [String : Any]?) throws -> URLRequest","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/getrequestwithskedgohttpheaders(for:paras:)"},{"title":"func baseURLs(for: TKRegion?) -> [URL]","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/baseurls(for:)"},{"title":"func hit<Input, Output>(Output.Type, HTTPMethod, path: String, input: Input, headers: [String : String]?, region: TKRegion?, encoderConfig: (JSONEncoder) -> Void, decoderConfig: (JSONDecoder) -> Void) async throws -> Response<Output>","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:path:input:headers:region:encoderconfig:decoderconfig:)"},{"title":"func hit<Model>(Model.Type, HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?) async -> Response<Model>","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:path:parameters:headers:region:)"},{"title":"func hit<Model>(Model.Type, HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?, callbackOnMain: Bool, completion: (Int, [String : Any], Result<Model, Error>) -> Void)","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:path:parameters:headers:region:callbackonmain:completion:)"},{"title":"func hit<Model>(Model.Type, HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, decoderConfig: (JSONDecoder) -> Void) async -> Response<Model>","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:url:parameters:headers:decoderconfig:)"},{"title":"func hit<Model>(Model.Type, HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, decoderConfig: (JSONDecoder) -> Void, completion: (Int, [String : Any], Result<Model, Error>) -> Void)","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:_:url:parameters:headers:decoderconfig:completion:)"},{"title":"func hit<Input>(HTTPMethod, path: String, input: Input, headers: [String : String]?, region: TKRegion?, encoderConfig: (JSONEncoder) -> Void) async throws -> Response<Data?>","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:path:input:headers:region:encoderconfig:)"},{"title":"func hit(HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?) async -> Response<Data>","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:path:parameters:headers:region:)"},{"title":"func hit(HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?, callbackOnMain: Bool, completion: (Int, [String : Any], Result<Data, Error>) -> Void)","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:path:parameters:headers:region:callbackonmain:completion:)"},{"title":"func hit(HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?) async -> Response<Data>","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:url:parameters:headers:)"},{"title":"func hit(HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, completion: (Int, [String : Any], Result<Data, Error>) -> Void)","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hit(_:url:parameters:headers:completion:)"},{"title":"func hitSync(HTTPMethod, url: URL, parameters: [String : Any]?, timeout: DispatchTimeInterval) throws -> Data","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/hitsync(_:url:parameters:timeout:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var customBaseURL: String?","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/custombaseurl"},{"title":"static var fallbackBaseURL: URL","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/fallbackbaseurl"},{"title":"static let shared: TKServer","type":"property","path":"\/documentation\/tripkitapi\/tkserver\/shared"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func xTripGoVersion() -> String?","type":"method","path":"\/documentation\/tripkitapi\/tkserver\/xtripgoversion()"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKServer.HTTPMethod","type":"enum","path":"\/documentation\/tripkitapi\/tkserver\/httpmethod","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case DELETE","path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/delete"},{"type":"case","title":"case GET","path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/get"},{"type":"case","title":"case POST","path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/post"},{"type":"case","title":"case PUT","path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/put"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/equatable-implementations"},{"type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkitapi\/tkserver\/httpmethod\/rawrepresentable-implementations"}]},{"title":"TKServer.RepeatHandler","type":"enum","path":"\/documentation\/tripkitapi\/tkserver\/repeathandler","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case repeatIn(TimeInterval)","type":"case","path":"\/documentation\/tripkitapi\/tkserver\/repeathandler\/repeatin(_:)"},{"title":"case repeatWithNewParameters(TimeInterval, [String : Any])","type":"case","path":"\/documentation\/tripkitapi\/tkserver\/repeathandler\/repeatwithnewparameters(_:_:)"}]},{"title":"TKServer.RequestError","type":"enum","path":"\/documentation\/tripkitapi\/tkserver\/requesterror","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case invalidURL","path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/invalidurl"},{"type":"case","title":"case noBaseURLs","path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/nobaseurls"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/equatable-implementations"},{"type":"symbol","title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/localizeddescription"}],"path":"\/documentation\/tripkitapi\/tkserver\/requesterror\/error-implementations"}]},{"title":"TKServer.ServerError","type":"enum","path":"\/documentation\/tripkitapi\/tkserver\/servererror","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkserver\/servererror\/nodata","type":"case","title":"case noData"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkserver\/servererror\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkserver\/servererror\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkserver\/servererror\/localizeddescription","title":"var localizedDescription: String"}],"path":"\/documentation\/tripkitapi\/tkserver\/servererror\/error-implementations","type":"symbol","title":"Error Implementations"}]}],"path":"\/documentation\/tripkitapi\/tkserver"},{"type":"class","title":"TKServerError","path":"\/documentation\/tripkitapi\/tkservererror"},{"title":"TKUserError","type":"class","path":"\/documentation\/tripkitapi\/tkusererror","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isUserError: Bool","path":"\/documentation\/tripkitapi\/tkusererror\/isusererror"}]},{"title":"Protocols","type":"groupMarker"},{"title":"BoolCodableStrategy","type":"protocol","path":"\/documentation\/tripkitapi\/boolcodablestrategy"},{"title":"DefaultCodableStrategy","type":"protocol","path":"\/documentation\/tripkitapi\/defaultcodablestrategy","children":[{"title":"Associated Types","type":"groupMarker"},{"title":"DefaultValue","path":"\/documentation\/tripkitapi\/defaultcodablestrategy\/defaultvalue-swift.associatedtype","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: DefaultValue","path":"\/documentation\/tripkitapi\/defaultcodablestrategy\/defaultvalue-swift.type.property","type":"property"}]},{"title":"TKLogger","type":"protocol","path":"\/documentation\/tripkitapi\/tklogger","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var level: TKLog.LogLevel","path":"\/documentation\/tripkitapi\/tklogger\/level","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func log(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkitapi\/tklogger\/log(_:identifier:message:)","type":"method"},{"children":[{"title":"TKLogger Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkitapi\/tklogger\/log(identifier:request:)-4twvi","type":"method","title":"func log(identifier: String, request: TKLog.ServerRequest)"}]}],"title":"func log(identifier: String, request: TKLog.ServerRequest)","path":"\/documentation\/tripkitapi\/tklogger\/log(identifier:request:)","type":"method"},{"children":[{"type":"groupMarker","children":[{"type":"method","title":"func log(identifier: String, response: TKLog.ServerResponse)","path":"\/documentation\/tripkitapi\/tklogger\/log(identifier:response:)-6xrpe"}],"title":"TKLogger Implementations"}],"title":"func log(identifier: String, response: TKLog.ServerResponse)","path":"\/documentation\/tripkitapi\/tklogger\/log(identifier:response:)","type":"method"},{"title":"func output(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkitapi\/tklogger\/output(_:identifier:message:)","type":"method"}]},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitapi\/defaultcodable","type":"struct","title":"DefaultCodable","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: Default.DefaultValue)","type":"init","path":"\/documentation\/tripkitapi\/defaultcodable\/init(wrappedvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: Default.DefaultValue","type":"property","path":"\/documentation\/tripkitapi\/defaultcodable\/wrappedvalue"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/defaultcodable\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"type":"symbol","path":"\/documentation\/tripkitapi\/defaultcodable\/decodable-implementations"},{"title":"Encodable Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/defaultcodable\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"}],"type":"symbol","path":"\/documentation\/tripkitapi\/defaultcodable\/encodable-implementations"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/defaultcodable\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/tripkitapi\/defaultcodable\/equatable-implementations"}]},{"path":"\/documentation\/tripkitapi\/defaultemptyarraystrategy","type":"struct","title":"DefaultEmptyArrayStrategy","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: [T]","path":"\/documentation\/tripkitapi\/defaultemptyarraystrategy\/defaultvalue","type":"property"}]},{"path":"\/documentation\/tripkitapi\/defaultfalsestrategy","type":"struct","title":"DefaultFalseStrategy","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: Bool","type":"property","path":"\/documentation\/tripkitapi\/defaultfalsestrategy\/defaultvalue"}]},{"path":"\/documentation\/tripkitapi\/defaultlossyarray","type":"struct","title":"DefaultLossyArray","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: LossyArray<T>","path":"\/documentation\/tripkitapi\/defaultlossyarray\/defaultvalue","type":"property"}]},{"path":"\/documentation\/tripkitapi\/defaulttruestrategy","type":"struct","title":"DefaultTrueStrategy","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: Bool","path":"\/documentation\/tripkitapi\/defaulttruestrategy\/defaultvalue","type":"property"}]},{"path":"\/documentation\/tripkitapi\/iso8601","type":"struct","title":"ISO8601","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/iso8601\/init(wrappedvalue:)","title":"init(wrappedValue: Date)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/iso8601\/wrappedvalue","title":"var wrappedValue: Date"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/iso8601\/decodable-implementations","title":"Decodable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/iso8601\/init(from:)"}]},{"type":"symbol","path":"\/documentation\/tripkitapi\/iso8601\/encodable-implementations","title":"Encodable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","type":"method","path":"\/documentation\/tripkitapi\/iso8601\/encode(to:)"}]},{"type":"symbol","path":"\/documentation\/tripkitapi\/iso8601\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/iso8601\/!=(_:_:)","type":"op"}]}]},{"path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970","type":"struct","title":"ISO8601OrSecondsSince1970","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: Date)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/wrappedvalue","type":"property","title":"var wrappedValue: Date"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/decodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/init(from:)"}],"title":"Decodable Implementations"},{"path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","type":"method","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/encode(to:)"}],"title":"Encodable Implementations"},{"path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/iso8601orsecondssince1970\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkitapi\/lossyarray","type":"struct","title":"LossyArray","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/lossyarray\/init(wrappedvalue:)","title":"init(wrappedValue: [T])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/lossyarray\/wrappedvalue","title":"var wrappedValue: [T]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/lossyarray\/decodable-implementations","title":"Decodable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/lossyarray\/init(from:)"}],"type":"symbol"},{"path":"\/documentation\/tripkitapi\/lossyarray\/encodable-implementations","title":"Encodable Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/lossyarray\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"type":"symbol"},{"path":"\/documentation\/tripkitapi\/lossyarray\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/lossyarray\/!=(_:_:)"}],"type":"symbol"}]},{"path":"\/documentation\/tripkitapi\/optionaliso8601","type":"struct","title":"OptionalISO8601","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: Date?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/wrappedvalue","type":"property","title":"var wrappedValue: Date?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/decodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/init(from:)","type":"init","title":"init(from: Decoder) throws"}],"title":"Decodable Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/encodable-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkitapi\/optionaliso8601\/encode(to:)","type":"method"}],"title":"Encodable Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/optionaliso8601\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970","type":"struct","title":"OptionalISO8601OrSecondsSince1970","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: Date?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/wrappedvalue","type":"property","title":"var wrappedValue: Date?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/init(from:)"}],"type":"symbol","title":"Decodable Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/encodable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"}],"type":"symbol","title":"Encodable Implementations"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/optionaliso8601orsecondssince1970\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkitapi\/point","type":"struct","title":"Point","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(latitude: Double, longitude: Double)","type":"init","path":"\/documentation\/tripkitapi\/point\/init(latitude:longitude:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func decodePolyline(String) -> [Point]","type":"method","path":"\/documentation\/tripkitapi\/point\/decodepolyline(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/point\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/point\/equatable-implementations"}]},{"path":"\/documentation\/tripkitapi\/polygon","type":"struct","title":"Polygon","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/polygon\/init(points:)","title":"init(points: [Point])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/polygon\/contains(_:online:)","title":"func contains(Point, onLine: Bool) -> Bool","type":"method"}]},{"path":"\/documentation\/tripkitapi\/tkapi","type":"struct","title":"TKAPI","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"TKAPI.Alert","path":"\/documentation\/tripkitapi\/tkapi\/alert","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/text","title":"let text: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/type","title":"let type: ActionType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case reroute([String])","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/actiontype\/reroute(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/actiontype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/actiontype\/!=(_:_:)"}],"type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/actiontype","title":"TKAPI.Alert.Action.ActionType","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/init(from:)","type":"init"}],"path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws"}],"path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.struct","title":"TKAPI.Alert.Action","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/action-swift.property","title":"let action: Action?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/fromdate","title":"let fromDate: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/hashcode","title":"let hashCode: Int","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/lastupdated","title":"let lastUpdated: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/location","title":"let location: TKAPI.Location?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/remoteicon","title":"let remoteIcon: URL?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/servicetripid","title":"let serviceTripID: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.property","title":"let severity: Severity","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/text","title":"let text: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/todate","title":"let toDate: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/url","title":"let url: URL?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/alert","title":"case alert","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/info","title":"case info","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkapi\/alert\/severity-swift.enum","title":"TKAPI.Alert.Severity","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/alert\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/alert\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"type":"struct","title":"TKAPI.AlertMapping","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let alert: TKAPI.Alert","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/alert"},{"type":"property","title":"let modeInfo: TKModeInfo?","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/modeinfo"},{"type":"property","title":"let operators: [String]?","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/operators"},{"type":"property","title":"let routes: [AlertRouteMapping]?","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/routes"},{"type":"property","title":"let serviceTripIDs: [String]?","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/servicetripids"},{"type":"property","title":"let stopCodes: [String]?","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/stopcodes"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/alertmapping\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"struct","title":"TKAPI.AlertRouteMapping","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var color: TKColor?","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/color"},{"type":"property","title":"let id: String","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/id"},{"type":"property","title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/modeinfo"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/name"},{"type":"property","title":"let number: String?","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/number"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/alertroutemapping\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.AppInfo","path":"\/documentation\/tripkitapi\/tkapi\/appinfo","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/deeplink","type":"property","title":"let deepLink: URL?"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/downloadurl","type":"property","title":"let downloadURL: URL?"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/name","type":"property","title":"let name: String?"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys","type":"enum","title":"TKAPI.AppInfo.CodingKeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case deepLink","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/deeplink","type":"case"},{"title":"case downloadURL","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/downloadurl","type":"case"},{"title":"case name","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/init(intvalue:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/init(rawvalue:)","type":"init"},{"title":"init?(stringValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/init(stringvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/codingkey-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/debugdescription","title":"var debugDescription: String"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/description","title":"var description: String"}],"type":"symbol"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/codingkeys\/hash(into:)"}],"type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/appinfo\/!=(_:_:)"}]}]},{"type":"struct","title":"TKAPI.CompanyInfo","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/init(from:)"},{"title":"init(name: String, website: URL?, phone: String?, remoteIcon: String?, remoteDarkIcon: String?, color: RGBColor?, appInfo: AppInfo?)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/init(name:website:phone:remoteicon:remotedarkicon:color:appinfo:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let appInfo: AppInfo?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/appinfo"},{"title":"let color: RGBColor?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/color"},{"title":"let name: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/name"},{"title":"let phone: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/phone"},{"title":"let remoteDarkIcon: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/remotedarkicon"},{"title":"let remoteIcon: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/remoteicon"},{"title":"let website: URL?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/website"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/companyinfo\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.DataAttribution","path":"\/documentation\/tripkitapi\/tkapi\/dataattribution","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/init(provider:disclaimer:)","title":"init(provider: CompanyInfo, disclaimer: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/disclaimer","title":"let disclaimer: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/provider","title":"let provider: CompanyInfo","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/dataattribution\/!=(_:_:)","type":"op"}],"type":"symbol"}]},{"type":"struct","title":"TKAPI.Departure","path":"\/documentation\/tripkitapi\/tkapi\/departure","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/departure\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alertHashCodes: [Int]","path":"\/documentation\/tripkitapi\/tkapi\/departure\/alerthashcodes","type":"property"},{"title":"var alternativeVehicles: [Vehicle]","path":"\/documentation\/tripkitapi\/tkapi\/departure\/alternativevehicles","type":"property"},{"title":"let bicycleAccessible: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/bicycleaccessible","type":"property"},{"title":"let color: RGBColor?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/color","type":"property"},{"title":"let direction: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/direction","type":"property"},{"title":"let endPlatform: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/endplatform","type":"property"},{"title":"let endStopCode: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/endstopcode","type":"property"},{"title":"var endTime: Date?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/endtime","type":"property"},{"title":"let frequency: Int?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/frequency","type":"property"},{"title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkitapi\/tkapi\/departure\/modeinfo","type":"property"},{"title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/name","type":"property"},{"title":"let number: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/number","type":"property"},{"title":"let operatorID: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/operatorid","type":"property"},{"title":"let operatorName: String","path":"\/documentation\/tripkitapi\/tkapi\/departure\/operatorname","type":"property"},{"title":"let primaryVehicle: Vehicle?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/primaryvehicle","type":"property"},{"title":"var realTimeArrival: Date?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/realtimearrival","type":"property"},{"title":"var realTimeDeparture: Date?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/realtimedeparture","type":"property"},{"title":"let realTimeStatus: RealTimeStatus?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/realtimestatus","type":"property"},{"title":"let routeID: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/routeid","type":"property"},{"title":"let searchString: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/searchstring","type":"property"},{"title":"let serviceTripID: String","path":"\/documentation\/tripkitapi\/tkapi\/departure\/servicetripid","type":"property"},{"title":"let startPlatform: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/startplatform","type":"property"},{"title":"var startTime: Date?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/starttime","type":"property"},{"title":"let timetableEndPlatform: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/timetableendplatform","type":"property"},{"title":"let timetableStartPlatform: String?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/timetablestartplatform","type":"property"},{"title":"let wheelchairAccessible: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/departure\/wheelchairaccessible","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/departure\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/departure\/equatable-implementations","type":"symbol"}]},{"type":"struct","title":"TKAPI.Departures","path":"\/documentation\/tripkitapi\/tkapi\/departures","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let services: [Departure]","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/services","type":"property"},{"title":"let stopCode: String","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/stopcode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations\/equatable-implementations","type":"symbol"}],"title":"TKAPI.Departures.Embarkations","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkations"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/departures\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let alerts: [Alert]?","path":"\/documentation\/tripkitapi\/tkapi\/departures\/alerts"},{"type":"property","title":"let embarkationStops: [Embarkations]","path":"\/documentation\/tripkitapi\/tkapi\/departures\/embarkationstops"},{"type":"property","title":"let parentStops: [Stop]?","path":"\/documentation\/tripkitapi\/tkapi\/departures\/parentstops"},{"type":"property","title":"let stops: [Stop]?","path":"\/documentation\/tripkitapi\/tkapi\/departures\/stops"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/departures\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/departures\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.DirectionStop","path":"\/documentation\/tripkitapi\/tkapi\/directionstop","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let isCommon: Bool","path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/iscommon"},{"type":"property","title":"let latitude: Double","path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/latitude"},{"type":"property","title":"let longitude: Double","path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/longitude"},{"type":"property","title":"let name: String","path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/name"},{"type":"property","title":"let stopCode: String","path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/stopcode"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/directionstop\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.Email","path":"\/documentation\/tripkitapi\/tkapi\/email","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(address: String, validated: Bool, primary: Bool)","path":"\/documentation\/tripkitapi\/tkapi\/email\/init(address:validated:primary:)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/email\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let address: String","path":"\/documentation\/tripkitapi\/tkapi\/email\/address","type":"property"},{"title":"let primary: Bool","path":"\/documentation\/tripkitapi\/tkapi\/email\/primary","type":"property"},{"title":"let verified: Bool","path":"\/documentation\/tripkitapi\/tkapi\/email\/verified","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/email\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/email\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}]},{"type":"struct","title":"TKAPI.EventsResponse","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let description: String","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/description"},{"type":"property","title":"let displayImage: String?","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/displayimage"},{"type":"property","title":"let endTime: Date?","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/endtime"},{"type":"property","title":"let icon: Icon?","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/icon"},{"type":"property","title":"let id: String","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/id"},{"type":"property","title":"let location: Location","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/location"},{"type":"property","title":"let startTime: Date?","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/starttime"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/title"},{"type":"property","title":"let url: URL?","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/url"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/event\/equatable-implementations"}],"title":"TKAPI.EventsResponse.Event"},{"type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let remoteIcon: String","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/remoteicon","type":"property"},{"title":"let remoteIconIsTemplate: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/remoteiconistemplate","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/icon\/equatable-implementations","type":"symbol"}],"title":"TKAPI.EventsResponse.Icon"},{"type":"struct","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let lat: Double","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/lat"},{"title":"let lng: Double","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/lng"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/location\/equatable-implementations"}],"title":"TKAPI.EventsResponse.Location"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/events","title":"let events: [Event]"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/empty","title":"static let empty: EventsResponse"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/eventsresponse\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"type":"struct","title":"TKAPI.GenericModeDetails","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/lockedmodes","title":"var lockedModes: [SpecificModeDetails]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/modeinfo","title":"let modeInfo: TKModeInfo","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/specificmodes","title":"var specificModes: [SpecificModeDetails]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/title","title":"let title: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/genericmodedetails\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"type":"struct","title":"TKAPI.LatestResponse","path":"\/documentation\/tripkitapi\/tkapi\/latestresponse","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/latestresponse\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/latestresponse\/services","type":"property","title":"let services: [LatestService]"}]},{"type":"struct","title":"TKAPI.LatestService","path":"\/documentation\/tripkitapi\/tkapi\/latestservice","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var alerts: [Alert]","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/alerts"},{"type":"property","title":"var alternativeVehicles: [Vehicle]","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/alternativevehicles"},{"type":"property","title":"let code: String","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/code"},{"type":"property","title":"var endTime: Date?","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/endtime"},{"type":"property","title":"let primaryVehicle: Vehicle?","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/primaryvehicle"},{"type":"property","title":"var startTime: Date?","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/starttime"},{"type":"property","title":"var stops: [LatestStop]","path":"\/documentation\/tripkitapi\/tkapi\/latestservice\/stops"}]},{"type":"struct","title":"TKAPI.LatestStop","path":"\/documentation\/tripkitapi\/tkapi\/lateststop","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/lateststop\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var arrival: Date?","path":"\/documentation\/tripkitapi\/tkapi\/lateststop\/arrival","type":"property"},{"title":"var departure: Date?","path":"\/documentation\/tripkitapi\/tkapi\/lateststop\/departure","type":"property"},{"title":"let stopCode: String","path":"\/documentation\/tripkitapi\/tkapi\/lateststop\/stopcode","type":"property"}]},{"type":"struct","title":"TKAPI.Location","path":"\/documentation\/tripkitapi\/tkapi\/location","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/location\/init(from:)"},{"type":"init","title":"init(latitude: Degrees, longitude: Degrees, bearing: Direction?, name: String?, address: String?)","path":"\/documentation\/tripkitapi\/tkapi\/location\/init(latitude:longitude:bearing:name:address:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var address: String?","path":"\/documentation\/tripkitapi\/tkapi\/location\/address"},{"type":"property","title":"var bearing: Direction?","path":"\/documentation\/tripkitapi\/tkapi\/location\/bearing"},{"type":"property","title":"var isValid: Bool","path":"\/documentation\/tripkitapi\/tkapi\/location\/isvalid"},{"type":"property","title":"let latitude: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/location\/latitude"},{"type":"property","title":"let longitude: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/location\/longitude"},{"type":"property","title":"var name: String?","path":"\/documentation\/tripkitapi\/tkapi\/location\/name"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKAPI.Location.CodingKeys","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case address","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/address"},{"title":"case bearing","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/bearing"},{"title":"case latitude","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/latitude"},{"title":"case longitude","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/longitude"},{"title":"case name","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/name"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/init(intvalue:)"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/init(rawvalue:)"},{"title":"init?(stringValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/init(stringvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/codingkey-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/description","type":"property"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/location\/codingkeys\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/location\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/location\/!=(_:_:)","type":"op"}]}]},{"type":"struct","title":"TKAPI.ModeDetails","path":"\/documentation\/tripkitapi\/tkapi\/modedetails","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let icon: String?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/icon","type":"property"},{"title":"let implies: [String]?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/implies","type":"property"},{"title":"let isBranding: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/isbranding","type":"property"},{"title":"let isTemplate: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/istemplate","type":"property"},{"title":"let required: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/required","type":"property"},{"title":"let rgbColor: TKAPI.RGBColor","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/rgbcolor","type":"property"},{"title":"let subtitle: String?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/subtitle","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/title","type":"property"},{"title":"let vehicleIcon: String?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/vehicleicon","type":"property"},{"title":"let websiteURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/modedetails\/websiteurl","type":"property"}]},{"type":"struct","title":"TKAPI.OpeningHours","path":"\/documentation\/tripkitapi\/tkapi\/openinghours","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time","type":"struct","title":"TKAPI.OpeningHours.Day.Time","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/closes","title":"let closes: TimeInterval","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/opens","title":"let opens: TimeInterval","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/time\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/init(day:times:)","type":"init","title":"init(day: DayOfWeek, times: [Time])"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/day","type":"property","title":"let day: DayOfWeek"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/times","type":"property","title":"let times: [Time]"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/contains(_:in:)","type":"method","title":"func contains(Date, in: TimeZone) -> Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/isopen(at:in:)","type":"method","title":"func isOpen(at: Date, in: TimeZone) -> Bool"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek","type":"enum","title":"TKAPI.OpeningHours.Day.DayOfWeek","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case friday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/friday"},{"title":"case monday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/monday"},{"title":"case publicHoliday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/publicholiday"},{"title":"case saturday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/saturday"},{"title":"case sunday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/sunday"},{"title":"case thursday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/thursday"},{"title":"case tuesday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/tuesday"},{"title":"case wednesday","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/wednesday"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/init(rawvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var weekday: Int?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/weekday"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let weekdays: [DayOfWeek]","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/weekdays"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/dayofweek\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day\/!=(_:_:)","type":"op"}]}],"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/day","title":"TKAPI.OpeningHours.Day"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/init(from:)","title":"init(from: Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/days","title":"let days: [Day]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/timezone","title":"let timeZone: TimeZone"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/encode(to:)","title":"func encode(to: Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/isopen(at:)","title":"func isOpen(at: Date) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/openinghours\/equatable-implementations","title":"Equatable Implementations"}]},{"type":"struct","title":"TKAPI.Operator","path":"\/documentation\/tripkitapi\/tkapi\/operator","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/operator\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/operator\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/operator\/name","title":"let name: String?","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/operator\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/operator\/!=(_:_:)","type":"op"}]}]},{"type":"struct","title":"TKAPI.Paratransit","path":"\/documentation\/tripkitapi\/tkapi\/paratransit","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/number","type":"property","title":"let number: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/url","type":"property","title":"let url: URL"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/paratransit\/!=(_:_:)","type":"op"}]}]},{"type":"struct","title":"TKAPI.Phone","path":"\/documentation\/tripkitapi\/tkapi\/phone","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/phone\/init(from:)"},{"title":"init(number: String, countryCode: String?, validated: Bool, type: String?, id: String?)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/phone\/init(number:countrycode:validated:type:id:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let countryCode: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/phone\/countrycode"},{"title":"let id: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/phone\/id"},{"title":"let number: String","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/phone\/number"},{"title":"let type: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/phone\/type"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/phone\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/phone\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.PricingTable","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.PricingTable.Entry","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/label","title":"let label: String?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/maxdurationinminutes","title":"let maxDurationInMinutes: Int?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/price","title":"let price: Float"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry\/equatable-implementations","title":"Equatable Implementations"}],"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entry","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let currency: String","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/currency","type":"property"},{"title":"let entries: [Entry]","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/entries","type":"property"},{"title":"let subtitle: String?","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/subtitle","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/pricingtable\/equatable-implementations","type":"symbol"}]},{"type":"struct","title":"TKAPI.PrivateVehicle","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/init(type:uuid:name:garage:)","type":"init","title":"init(type: PrivateVehicleType, UUID: String?, name: String?, garage: Location?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/uuid","type":"property","title":"let UUID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/garage","type":"property","title":"let garage: Location?"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/name","type":"property","title":"let name: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/type","type":"property","title":"let type: PrivateVehicleType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/privatevehicle\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"type":"struct","title":"TKAPI.Query","path":"\/documentation\/tripkitapi\/tkapi\/query","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/query\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/query\/arrive","title":"var arrive: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/query\/depart","title":"var depart: Date?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/query\/from","title":"let from: Location","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/query\/to","title":"let to: Location","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/query\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/query\/!=(_:_:)"}],"type":"symbol"}]},{"type":"struct","title":"TKAPI.RGBColor","path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/init(for:)","type":"init","title":"init?(for: TKColor?)"},{"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/color","type":"property","title":"var color: TKColor"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/rgbcolor\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}]},{"type":"struct","title":"TKAPI.RegionInfo","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let modes: [String : GenericModeDetails]","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/modes","type":"property"},{"title":"let paratransit: Paratransit?","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/paratransit","type":"property"},{"title":"let streetBicyclePaths: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/streetbicyclepaths","type":"property"},{"title":"let streetWheelchairAccessibility: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/streetwheelchairaccessibility","type":"property"},{"title":"let transitBicycleAccessibility: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/transitbicycleaccessibility","type":"property"},{"title":"let transitConcessionPricing: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/transitconcessionpricing","type":"property"},{"title":"let transitModes: [TKModeInfo]","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/transitmodes","type":"property"},{"title":"let transitWheelchairAccessibility: Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/transitwheelchairaccessibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/regioninfo\/!=(_:_:)","type":"op"}]}]},{"type":"struct","title":"TKAPI.RegionsResponse","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse\/hashcode","title":"let hashCode: Int"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse\/modes","title":"let modes: [String : ModeDetails]?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/regionsresponse\/regions","title":"let regions: [TKRegion]?"}]},{"type":"struct","title":"TKAPI.Route","path":"\/documentation\/tripkitapi\/tkapi\/route","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/color","title":"var color: TKColor?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/directions","title":"var directions: [RouteDirection]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/modeinfo","title":"let modeInfo: TKModeInfo","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/number","title":"var number: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/operatorid","title":"let operatorID: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/operatorname","title":"let operatorName: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/regioncode","title":"let regionCode: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/routecolor","title":"var routeColor: TKColor?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/routedescription","title":"let routeDescription: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/routename","title":"let routeName: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/route\/shortname","title":"let shortName: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/route\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/route\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"type":"struct","title":"TKAPI.RouteDirection","path":"\/documentation\/tripkitapi\/tkapi\/routedirection","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/encodedshape","title":"let encodedShape: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/shapeisdetailed","title":"let shapeIsDetailed: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/stops","title":"let stops: [DirectionStop]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/routedirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}]},{"type":"struct","title":"TKAPI.RoutingResponse","path":"\/documentation\/tripkitapi\/tkapi\/routingresponse","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var alerts: [Alert]","path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/alerts"},{"type":"property","title":"let error: String?","path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/error"},{"type":"property","title":"let groups: [TripGroup]?","path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/groups"},{"type":"property","title":"let query: Query?","path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/query"},{"type":"property","title":"var segmentTemplates: [SegmentTemplate]?","path":"\/documentation\/tripkitapi\/tkapi\/routingresponse\/segmenttemplates"}]},{"type":"struct","title":"TKAPI.SegmentReference","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alertHashCodes: [Int]","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/alerthashcodes","type":"property"},{"title":"var bicycleAccessible: Bool","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/bicycleaccessible","type":"property"},{"title":"var booking: TKBookingData?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/booking","type":"property"},{"title":"var bookingHashCode: Int?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/bookinghashcode","type":"property"},{"title":"var direction: String?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/direction","type":"property"},{"title":"var endPlatform: String?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/endplatform","type":"property"},{"title":"var endTime: Date","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/endtime","type":"property"},{"title":"var frequency: Int?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/frequency","type":"property"},{"title":"var lineName: String?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/linename","type":"property"},{"title":"var number: String?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/number","type":"property"},{"title":"var realTimeStatus: RealTimeStatus?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/realtimestatus","type":"property"},{"title":"var realTimeVehicle: Vehicle?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/realtimevehicle","type":"property"},{"title":"var realTimeVehicleAlternatives: [Vehicle]","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/realtimevehiclealternatives","type":"property"},{"title":"let segmentTemplateHashCode: Int","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/segmenttemplatehashcode","type":"property"},{"title":"var serviceColor: RGBColor?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/servicecolor","type":"property"},{"title":"var serviceStops: Int?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/servicestops","type":"property"},{"title":"var serviceTripID: String?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/servicetripid","type":"property"},{"title":"var sharedVehicle: TKAPI.SharedVehicleInfo?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/sharedvehicle","type":"property"},{"title":"var startPlatform: String?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/startplatform","type":"property"},{"title":"var startTime: Date","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/starttime","type":"property"},{"title":"var ticket: Ticket?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/ticket","type":"property"},{"title":"var ticketWebsite: URL?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/ticketwebsite","type":"property"},{"title":"var timesAreRealTime: Bool","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/timesarerealtime","type":"property"},{"title":"var timetableEndTime: Date?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/timetableendtime","type":"property"},{"title":"var timetableStartTime: Date?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/timetablestarttime","type":"property"},{"title":"var vehicleUUID: String?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/vehicleuuid","type":"property"},{"title":"var wheelchairAccessible: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/wheelchairaccessible","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentreference\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"struct","title":"TKAPI.SegmentShape","path":"\/documentation\/tripkitapi\/tkapi\/segmentshape","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/bicycleaccessible","title":"var bicycleAccessible: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/cyclingnetwork","title":"var cyclingNetwork: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/direction","title":"var direction: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/dismount","title":"var dismount: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/encodedwaypoints","title":"let encodedWaypoints: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/frequency","title":"var frequency: Int?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/hop","title":"var hop: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/instruction","title":"var instruction: ShapeInstruction?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/linename","title":"var lineName: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/metres","title":"var metres: Distance?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/modeinfo","title":"var modeInfo: TKModeInfo?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/number","title":"var number: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/operatorid","title":"var operatorID: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/operatorname","title":"var operatorName: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/roadtags","title":"var roadTags: [RoadTag]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/routeid","title":"var routeID: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/safe","title":"var safe: Bool?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/servicecolor","title":"var serviceColor: RGBColor?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/servicetripid","title":"var serviceTripID: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/stops","title":"var stops: [TKAPI.ShapeStop]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/travelled","title":"var travelled: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/wheelchairaccessible","title":"var wheelchairAccessible: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/segmentshape\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"}]},{"type":"struct","title":"TKAPI.SegmentTemplate","path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/action","type":"property","title":"let action: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/bearing","type":"property","title":"var bearing: Int?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/durationwithouttraffic","type":"property","title":"var durationWithoutTraffic: TimeInterval?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/endstopcode","type":"property","title":"var endStopCode: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/from","type":"property","title":"var from: Location?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/hascarparks","type":"property","title":"var hasCarParks: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/hashcode","type":"property","title":"let hashCode: Int"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/hideexacttimes","type":"property","title":"var hideExactTimes: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/iscontinuation","type":"property","title":"var isContinuation: Bool"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/localcost","type":"property","title":"var localCost: TKLocalCost?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/location","type":"property","title":"var location: Location?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/maptiles","type":"property","title":"var mapTiles: TKMapTiles?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/metres","type":"property","title":"var metres: Distance?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/metresdismount","type":"property","title":"var metresDismount: Distance?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/metressafe","type":"property","title":"var metresSafe: Distance?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/metresunsafe","type":"property","title":"var metresUnsafe: Distance?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/mini","type":"property","title":"var mini: TKMiniInstruction?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/modeidentifier","type":"property","title":"let modeIdentifier: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/modeinfo","type":"property","title":"let modeInfo: TKModeInfo?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/notes","type":"property","title":"var notes: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/notifications","type":"property","title":"var notifications: [TripNotification]"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/operatorid","type":"property","title":"var operatorID: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/operatorinfo","type":"property","title":"let operatorInfo: CompanyInfo?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/operatorname","type":"property","title":"var operatorName: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/shapes","type":"property","title":"var shapes: [SegmentShape]?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/stopcode","type":"property","title":"var stopCode: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/streets","type":"property","title":"var streets: [SegmentShape]?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/to","type":"property","title":"var to: Location?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/turnbyturn","type":"property","title":"var turnByTurn: TKTurnByTurnMode?"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/type","type":"property","title":"let type: SegmentType"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/visibility","type":"property","title":"let visibility: SegmentVisibility"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/segmenttemplate\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}]},{"type":"struct","title":"TKAPI.ServerError","path":"\/documentation\/tripkitapi\/tkapi\/servererror","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let errorCode: Int?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/errorcode"},{"title":"let errorMessage: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/errormessage"},{"title":"let isUserError: Bool","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/isusererror"},{"title":"let option: Option?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.property"},{"title":"let recovery: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/recovery"},{"title":"let title: String?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/title"},{"title":"let url: URL?","type":"property","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/url"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.ServerError.Option","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case abort","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/abort"},{"type":"case","title":"case back","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/back"},{"type":"case","title":"case retry","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/retry"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/!=(_:_:)","type":"op"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"path":"\/documentation\/tripkitapi\/tkapi\/servererror\/option-swift.enum"}]},{"type":"struct","title":"TKAPI.ServiceResponse","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alerts: [Alert]","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/alerts","type":"property"},{"title":"var alternativeVehicles: [Vehicle]","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/alternativevehicles","type":"property"},{"title":"let error: String?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/error","type":"property"},{"title":"let modeInfo: TKModeInfo?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/modeinfo","type":"property"},{"title":"let primaryVehicle: Vehicle?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/primaryvehicle","type":"property"},{"title":"let realTimeStatus: RealTimeStatus?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/realtimestatus","type":"property"},{"title":"let shapes: [SegmentShape]?","path":"\/documentation\/tripkitapi\/tkapi\/serviceresponse\/shapes","type":"property"}]},{"type":"struct","title":"TKAPI.ShapeStop","path":"\/documentation\/tripkitapi\/tkapi\/shapestop","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/arrival","type":"property","title":"var arrival: Date?"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/bearing","type":"property","title":"var bearing: Int?"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/code","type":"property","title":"let code: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/departure","type":"property","title":"var departure: Date?"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/lat","type":"property","title":"let lat: Degrees"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/lng","type":"property","title":"let lng: Degrees"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/relativearrival","type":"property","title":"var relativeArrival: TimeInterval?"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/relativedeparture","type":"property","title":"var relativeDeparture: TimeInterval?"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/shortname","type":"property","title":"let shortName: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/wheelchairaccessible","type":"property","title":"let wheelchairAccessible: Bool?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapestop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"type":"struct","title":"TKAPI.SharedVehicleInfo","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/batterylevel","title":"let batteryLevel: Int?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/currentrange","title":"let currentRange: Distance?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/deeplink","title":"let deepLink: URL?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/details","title":"let details: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/imageurl","title":"let imageURL: URL?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/isavailable","title":"var isAvailable: Bool","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/isdisabled","title":"let isDisabled: Bool","type":"property"},{"type":"property","title":"let isReserved: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/isreserved"},{"type":"property","title":"let lastReported: Date?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/lastreported"},{"type":"property","title":"let licensePlate: String?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/licenseplate"},{"type":"property","title":"let name: String?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/name"},{"type":"property","title":"let operatorInfo: TKAPI.CompanyInfo","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/operatorinfo"},{"type":"property","title":"let source: TKAPI.DataAttribution?","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/source"},{"type":"property","title":"let vehicleType: VehicleTypeInfo","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/vehicletype"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/sharedvehicleinfo\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.SpecificModeDetails","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/identifier","title":"var identifier: String","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/integrations","title":"var integrations: [Integrations]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/minimumlocalcostformembership","title":"let minimumLocalCostForMembership: Decimal?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/modeimagenames","title":"var modeImageNames: [String]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/modeinfo","title":"let modeInfo: TKModeInfo","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/operators","title":"var operators: [String]","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/title","title":"let title: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/url","title":"let url: URL?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/specificmodedetails\/equatable-implementations","type":"symbol"}]},{"type":"struct","title":"TKAPI.Stop","path":"\/documentation\/tripkitapi\/tkapi\/stop","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/stop\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let address: String?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/address"},{"type":"property","title":"var alertHashCodes: [Int]","path":"\/documentation\/tripkitapi\/tkapi\/stop\/alerthashcodes"},{"type":"property","title":"let availableRoutes: Int?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/availableroutes"},{"type":"property","title":"var children: [Stop]","path":"\/documentation\/tripkitapi\/tkapi\/stop\/children"},{"type":"property","title":"let code: String","path":"\/documentation\/tripkitapi\/tkapi\/stop\/code"},{"type":"property","title":"let lat: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/stop\/lat"},{"type":"property","title":"let lng: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/stop\/lng"},{"type":"property","title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkitapi\/tkapi\/stop\/modeinfo"},{"type":"property","title":"let name: String","path":"\/documentation\/tripkitapi\/tkapi\/stop\/name"},{"type":"property","title":"let operators: [Operator]?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/operators"},{"type":"property","title":"let popularity: Int?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/popularity"},{"type":"property","title":"let routes: [Route]?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/routes"},{"type":"property","title":"let services: String?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/services"},{"type":"property","title":"let shortName: String?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/shortname"},{"type":"property","title":"let timeZoneName: String","path":"\/documentation\/tripkitapi\/tkapi\/stop\/timezonename"},{"type":"property","title":"let wheelchairAccessible: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/wheelchairaccessible"},{"type":"property","title":"let zoneID: String?","path":"\/documentation\/tripkitapi\/tkapi\/stop\/zoneid"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/stop\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/stop\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.Ticket","path":"\/documentation\/tripkitapi\/tkapi\/ticket","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/ticket\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let cost: Decimal?","path":"\/documentation\/tripkitapi\/tkapi\/ticket\/cost","type":"property"},{"title":"let fareID: String?","path":"\/documentation\/tripkitapi\/tkapi\/ticket\/fareid","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkitapi\/tkapi\/ticket\/name","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/ticket\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/ticket\/equatable-implementations","type":"symbol"}]},{"type":"struct","title":"TKAPI.Trip","path":"\/documentation\/tripkitapi\/tkapi\/trip","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/trip\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/arrive","title":"var arrive: Date"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/availability","title":"var availability: TripAvailability?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/availabilityinfo","title":"var availabilityInfo: String?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/budgetpoints","title":"var budgetPoints: Double?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/bundleid","title":"var bundleId: String?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/caloriescost","title":"let caloriesCost: Double"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/carboncost","title":"let carbonCost: Double"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/currency","title":"var currency: String?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/depart","title":"var depart: Date"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/hasslecost","title":"let hassleCost: Double"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/hideexacttimes","title":"var hideExactTimes: Bool"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/id","title":"var id: String?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/logurl","title":"var logURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/mainsegmenthashcode","title":"let mainSegmentHashCode: Int"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/moneycost","title":"var moneyCost: Double?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/moneycostusd","title":"var moneyCostUSD: Double?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/plannedurl","title":"var plannedURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/progressurl","title":"var progressURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/saveurl","title":"var saveURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/segments","title":"let segments: [SegmentReference]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/shareurl","title":"var shareURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/subscribeurl","title":"var subscribeURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/temporaryurl","title":"var temporaryURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/unsubscribeurl","title":"var unsubscribeURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/updateurl","title":"var updateURL: URL?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/trip\/weightedscore","title":"let weightedScore: Double"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/trip\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/trip\/equatable-implementations","title":"Equatable Implementations"}]},{"type":"struct","title":"TKAPI.TripGroup","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/frequency","title":"var frequency: Int?"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/sources","title":"var sources: [DataAttribution]"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/trips","title":"var trips: [Trip]"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripgroup\/equatable-implementations","title":"Equatable Implementations"}]},{"type":"struct","title":"TKAPI.TripNotification","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.TripNotification.Coordinate","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let latitude: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/latitude"},{"type":"property","title":"let longitude: Degrees","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/longitude"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case latitude","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/latitude"},{"title":"case longitude","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/longitude"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(intvalue:)"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(rawvalue:)"},{"title":"init?(stringValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(stringvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/description","type":"property"}],"type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/codingkey-implementations"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys\/rawrepresentable-implementations"}],"title":"TKAPI.TripNotification.Coordinate.CodingKeys","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/codingkeys"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/equatable-implementations"}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(id: String, kind: Kind, messageKind: MessageKind, messageTitle: String, messageBody: String)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/init(id:kind:messagekind:messagetitle:messagebody:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/id","type":"property"},{"title":"let kind: Kind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.property","type":"property"},{"title":"var messageBody: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagebody","type":"property"},{"title":"let messageKind: MessageKind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.property","type":"property"},{"title":"var messageTitle: String","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagetitle","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.TripNotification.CodingKeys","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case center","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/center","type":"case"},{"title":"case id","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/id","type":"case"},{"title":"case kind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/kind","type":"case"},{"title":"case messageBody","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/messagebody","type":"case"},{"title":"case messageKind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/messagekind","type":"case"},{"title":"case messageTitle","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/messagetitle","type":"case"},{"title":"case radius","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/radius","type":"case"},{"title":"case time","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/time","type":"case"},{"title":"case trigger","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/trigger","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/init(intvalue:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/init(rawvalue:)","type":"init"},{"title":"init?(stringValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/init(stringvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/debugdescription","title":"var debugDescription: String"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/description","title":"var description: String"}],"title":"CodingKey Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/codingkey-implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/codingkeys\/rawrepresentable-implementations","type":"symbol"}],"type":"enum"},{"title":"TKAPI.TripNotification.Kind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func == (TKAPI.TripNotification.Kind, TKAPI.TripNotification.Kind) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/==(_:_:)"},{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case circle(center: Coordinate, radius: Distance, trigger: Trigger)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/circle(center:radius:trigger:)"},{"type":"case","title":"case pushNotification","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/pushnotification"},{"type":"case","title":"case time(Date)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/time(_:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/hash(into:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/kind-swift.enum\/equatable-implementations"}],"type":"enum"},{"title":"TKAPI.TripNotification.MessageKind","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/arrivingatyourstop","title":"case arrivingAtYourStop","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/nextstopisyours","title":"case nextStopIsYours","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/tripend","title":"case tripEnd","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/tripstart","title":"case tripStart","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/vehicleisapproaching","title":"case vehicleIsApproaching","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/messagekind-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum"},{"title":"TKAPI.TripNotification.Trigger","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case onEnter","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/onenter"},{"type":"case","title":"case onExit","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/onexit"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/trigger\/rawrepresentable-implementations"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/init(from:)","type":"init"}],"type":"symbol"},{"title":"Encodable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/encodable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/encode(to:)","type":"method"}],"type":"symbol"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/!=(_:_:)"}],"type":"symbol"}]},{"type":"struct","title":"TKAPI.User","path":"\/documentation\/tripkitapi\/tkapi\/user","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/user\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let address1: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/address1"},{"type":"property","title":"let address2: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/address2"},{"type":"property","title":"var appData: [String : Any]?","path":"\/documentation\/tripkitapi\/tkapi\/user\/appdata"},{"type":"property","title":"var emails: [Email]?","path":"\/documentation\/tripkitapi\/tkapi\/user\/emails"},{"type":"property","title":"let familyName: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/familyname"},{"type":"property","title":"let givenName: String?","path":"\/documentation\/tripkitapi\/tkapi\/user\/givenname"},{"type":"property","title":"let highResProfilePictureURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/user\/highresprofilepictureurl"},{"type":"property","title":"let lowResProfilePictureURL: URL?","path":"\/documentation\/tripkitapi\/tkapi\/user\/lowresprofilepictureurl"},{"path":"\/documentation\/tripkitapi\/tkapi\/user\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/user\/phone","title":"let phone: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/user\/phones","title":"let phones: [Phone]?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/user\/postcode","title":"let postCode: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/user\/userid","title":"var userId: String?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkapi\/user\/usertype","title":"let userType: String?","type":"property"}]},{"type":"struct","title":"TKAPI.Vehicle","path":"\/documentation\/tripkitapi\/tkapi\/vehicle","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let components: [[VehicleComponents]]?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/components"},{"type":"property","title":"let icon: URL?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/icon"},{"type":"property","title":"let id: String?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/id"},{"type":"property","title":"let label: String?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/label"},{"type":"property","title":"let lastUpdate: TimeInterval?","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/lastupdate"},{"type":"property","title":"let location: Location","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/location"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/vehicle\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.VehicleComponents","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let airConditioned: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/airconditioned"},{"type":"property","title":"let model: String?","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/model"},{"type":"property","title":"let occupancy: VehicleOccupancy?","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/occupancy"},{"type":"property","title":"let occupancyText: String?","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/occupancytext"},{"type":"property","title":"let wheelchairAccessible: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/wheelchairaccessible"},{"type":"property","title":"let wheelchairSeats: Int?","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/wheelchairseats"},{"type":"property","title":"let wifi: Bool?","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/wifi"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/vehiclecomponents\/equatable-implementations"}]},{"type":"struct","title":"TKAPI.VehicleTypeInfo","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/formfactor","type":"property","title":"let formFactor: VehicleFormFactor"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/maxrangemeters","type":"property","title":"let maxRangeMeters: Int?"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/name","type":"property","title":"let name: String?"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/propulsiontype","type":"property","title":"let propulsionType: VehiclePropulsionType?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/vehicletypeinfo\/!=(_:_:)"}]}]},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKAPI.Degrees","path":"\/documentation\/tripkitapi\/tkapi\/degrees"},{"type":"typealias","title":"TKAPI.Direction","path":"\/documentation\/tripkitapi\/tkapi\/direction"},{"type":"typealias","title":"TKAPI.Distance","path":"\/documentation\/tripkitapi\/tkapi\/distance"},{"type":"typealias","title":"TKAPI.Speed","path":"\/documentation\/tripkitapi\/tkapi\/speed"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKAPI.Integrations","path":"\/documentation\/tripkitapi\/tkapi\/integrations","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bookings","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/bookings","type":"case"},{"title":"case payments","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/payments","type":"case"},{"title":"case realTime","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/realtime","type":"case"},{"title":"case routing","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/routing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/integrations\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/integrations\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/integrations\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/integrations\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/integrations\/rawrepresentable-implementations","type":"symbol"}]},{"type":"enum","title":"TKAPI.PrivateVehicleType","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case SUV","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/suv","type":"case"},{"title":"case bicycle","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/bicycle","type":"case"},{"title":"case car","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/car","type":"case"},{"title":"case motorbike","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/motorbike","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/privatevehicletype\/hash(into:)","type":"method"}],"type":"symbol"}]},{"type":"enum","title":"TKAPI.RealTimeStatus","path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/capable","title":"case capable","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/incapable","title":"case incapable","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/isrealtime","title":"case isRealTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/realtimestatus\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"type":"enum","title":"TKAPI.RoadSafety","path":"\/documentation\/tripkitapi\/tkapi\/roadsafety","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/designated","type":"case","title":"case designated"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/hostile","type":"case","title":"case hostile"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/neutral","type":"case","title":"case neutral"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/safe","type":"case","title":"case safe"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/unknown","type":"case","title":"case unknown"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/comparable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'...(_:)-5r4wj","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'...(_:)-7rqdb","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/_(_:_:)","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/_=(_:_:)-6dmo9","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/_=(_:_:)-8l8lg","title":"static func <= (Self, Self) -> Bool","type":"op"}],"title":"Comparable Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadsafety\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"type":"enum","title":"TKAPI.RoadTag","path":"\/documentation\/tripkitapi\/tkapi\/roadtag","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/cctvcamera","title":"case CCTVCamera","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/bicycleboulevard","title":"case bicycleBoulevard","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/bicycledesignated","title":"case bicycleDesignated","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/cyclelane","title":"case cycleLane","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/cyclenetwork","title":"case cycleNetwork","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/cycletrack","title":"case cycleTrack","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/litroute","title":"case litRoute","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/mainroad","title":"case mainRoad","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/other","title":"case other","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/sharedroad","title":"case sharedRoad","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/sideroad","title":"case sideRoad","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/sidewalk","title":"case sideWalk","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/streetlight","title":"case streetLight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/safety","title":"var safety: RoadSafety","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/!=(_:_:)","type":"op"}],"type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/roadtag\/hash(into:)","type":"method"}],"type":"symbol"}]},{"type":"enum","title":"TKAPI.SegmentType","path":"\/documentation\/tripkitapi\/tkapi\/segmenttype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/scheduled","title":"case scheduled","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/stationary","title":"case stationary","type":"case"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/unscheduled","title":"case unscheduled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkitapi\/tkapi\/segmenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}]},{"type":"enum","title":"TKAPI.SegmentVisibility","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case hidden","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/hidden"},{"type":"case","title":"case inDetails","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/indetails"},{"type":"case","title":"case inSummary","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/insummary"},{"type":"case","title":"case onMap","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/onmap"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/segmentvisibility\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"type":"enum","title":"TKAPI.ShapeInstruction","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/continuestraight","type":"case","title":"case continueStraight"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/headtowards","type":"case","title":"case headTowards"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnleft","type":"case","title":"case turnLeft"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnright","type":"case","title":"case turnRight"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnsharplyleft","type":"case","title":"case turnSharplyLeft"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnsharplyright","type":"case","title":"case turnSharplyRight"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnslightlyright","type":"case","title":"case turnSlightlyRight"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/turnslightyleft","type":"case","title":"case turnSlightyLeft"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapi\/shapeinstruction\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol","title":"RawRepresentable Implementations"}]},{"type":"enum","title":"TKAPI.TripAvailability","path":"\/documentation\/tripkitapi\/tkapi\/tripavailability","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/canceled","type":"case","title":"case canceled"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/missedprebookingwindow","type":"case","title":"case missedPrebookingWindow"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkitapi\/tkapi\/tripavailability\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"type":"enum","title":"TKAPI.VehicleFormFactor","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case bicycle","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/bicycle"},{"type":"case","title":"case car","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/car"},{"type":"case","title":"case moped","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/moped"},{"type":"case","title":"case other","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/other"},{"type":"case","title":"case scooter","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/scooter"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/equatable-implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/hash(into:)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/vehicleformfactor\/rawrepresentable-implementations"}]},{"type":"enum","title":"TKAPI.VehicleOccupancy","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"title":"case crushedStandingRoomOnly","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/crushedstandingroomonly"},{"title":"case empty","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/empty"},{"title":"case fewSeatsAvailable","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/fewseatsavailable"},{"title":"case full","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/full"},{"title":"case manySeatsAvailable","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/manyseatsavailable"},{"title":"case notAcceptingPassengers","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/notacceptingpassengers"},{"title":"case standingRoomOnly","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/standingroomonly"},{"title":"case unknown","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/unknown"},{"title":"Initializers","type":"groupMarker"},{"title":"init(intValue: Int)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/init(intvalue:)"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var intValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/intvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/!=(_:_:)","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkapi\/vehicleoccupancy\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol"}]},{"type":"enum","title":"TKAPI.VehiclePropulsionType","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case combustion","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/combustion"},{"title":"case electric","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/electric"},{"title":"case electricAssist","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/electricassist"},{"title":"case human","type":"case","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/human"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkitapi\/tkapi\/vehiclepropulsiontype\/rawrepresentable-implementations"}]}]},{"path":"\/documentation\/tripkitapi\/tkapiconfig","type":"struct","title":"TKAPIConfig","children":[{"title":"Structures","type":"groupMarker"},{"type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var carbon: Double","type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/carbon"},{"title":"var exercise: Double","type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/exercise"},{"title":"var hassle: Double","type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/hassle"},{"title":"var money: Double","type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/money"},{"title":"var time: Double","type":"property","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/time"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct\/equatable-implementations"}],"title":"TKAPIConfig.Weights","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.struct"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var avoidModes: [String]","path":"\/documentation\/tripkitapi\/tkapiconfig\/avoidmodes"},{"type":"property","title":"var bookingSandbox: Bool","path":"\/documentation\/tripkitapi\/tkapiconfig\/bookingsandbox"},{"type":"property","title":"var concession: Bool","path":"\/documentation\/tripkitapi\/tkapiconfig\/concession"},{"type":"property","title":"var cyclingSpeed: Speed","path":"\/documentation\/tripkitapi\/tkapiconfig\/cyclingspeed"},{"type":"property","title":"var distanceUnit: DistanceUnit","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.property"},{"type":"property","title":"var emissions: [String : Double]","path":"\/documentation\/tripkitapi\/tkapiconfig\/emissions"},{"type":"property","title":"var maximumWalkingMinutes: Double?","path":"\/documentation\/tripkitapi\/tkapiconfig\/maximumwalkingminutes"},{"type":"property","title":"var minimumTransferMinutes: Double?","path":"\/documentation\/tripkitapi\/tkapiconfig\/minimumtransferminutes"},{"type":"property","title":"var paras: [String : Any]","path":"\/documentation\/tripkitapi\/tkapiconfig\/paras"},{"type":"property","title":"var twoWayHireCostIncludesReturn: Bool","path":"\/documentation\/tripkitapi\/tkapiconfig\/twowayhirecostincludesreturn"},{"type":"property","title":"let version: Int","path":"\/documentation\/tripkitapi\/tkapiconfig\/version"},{"type":"property","title":"var walkingSpeed: Speed","path":"\/documentation\/tripkitapi\/tkapiconfig\/walkingspeed"},{"type":"property","title":"var weights: Weights","path":"\/documentation\/tripkitapi\/tkapiconfig\/weights-swift.property"},{"type":"property","title":"var wheelchair: Bool","path":"\/documentation\/tripkitapi\/tkapiconfig\/wheelchair"},{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let parserJsonVersion: Int","path":"\/documentation\/tripkitapi\/tkapiconfig\/parserjsonversion"},{"title":"Type Methods","type":"groupMarker"},{"type":"method","title":"static func defaultValues() -> TKAPIConfig","path":"\/documentation\/tripkitapi\/tkapiconfig\/defaultvalues()"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/auto","title":"case auto"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/imperial","title":"case imperial"},{"type":"case","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/metric","title":"case metric"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}],"title":"TKAPIConfig.DistanceUnit","path":"\/documentation\/tripkitapi\/tkapiconfig\/distanceunit-swift.enum"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/custom(_:)","type":"case","title":"case custom(TKAPI.Speed)"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/fast","type":"case","title":"case fast"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/impaired","type":"case","title":"case impaired"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/medium","type":"case","title":"case medium"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/slow","type":"case","title":"case slow"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/init(apivalue:)","type":"init","title":"init?(apiValue: Any?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/apivalue","type":"property","title":"var apiValue: Any"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/decodable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/init(from:)"}],"type":"symbol","title":"Decodable Implementations"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/encodable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/encode(to:)","title":"func encode(to: Encoder) throws"}],"type":"symbol","title":"Encodable Implementations"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkapiconfig\/speed\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}],"title":"TKAPIConfig.Speed","path":"\/documentation\/tripkitapi\/tkapiconfig\/speed"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkapiconfig\/init(from:)","type":"init"}],"title":"Decodable Implementations","path":"\/documentation\/tripkitapi\/tkapiconfig\/decodable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkapiconfig\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkapiconfig\/equatable-implementations"}]},{"path":"\/documentation\/tripkitapi\/tkbookingdata","type":"struct","title":"TKBookingData","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/accessibilitylabel","type":"property","title":"let accessibilityLabel: String?"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/confirmation","type":"property","title":"var confirmation: TKBooking.Confirmation?"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/externalactions","type":"property","title":"let externalActions: [String]?"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/quickbookingsurl","type":"property","title":"let quickBookingsUrl: URL?"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/title","type":"property","title":"let title: String"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/url","type":"property","title":"let url: URL?"},{"path":"\/documentation\/tripkitapi\/tkbookingdata\/virtualbookingurl","type":"property","title":"let virtualBookingUrl: URL?"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbookingdata\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkbookingdata\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkitapi\/tkroutingquery","type":"struct","title":"TKRoutingQuery","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/init(from:to:at:modes:additional:)","title":"init(from: TKAPI.Location, to: TKAPI.Location, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/init(from:to:at:modes:additional:context:)","title":"init(from: TKAPI.Location, to: TKAPI.Location, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>, context: Context?)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/additional","title":"var additional: Set<URLQueryItem>","type":"property"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/at","title":"var at: TKRoutingQueryTime","type":"property"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/context","title":"var context: Context?","type":"property"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/from","title":"var from: TKAPI.Location","type":"property"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/modes","title":"var modes: Set<String>","type":"property"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/to","title":"var to: TKAPI.Location","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkroutingquery\/parsedate(_:)","title":"static func parseDate(Any?) -> Date?","type":"method"}]},{"path":"\/documentation\/tripkitapi\/unknownnilstrategy","type":"struct","title":"UnknownNilStrategy","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: T?","type":"property","path":"\/documentation\/tripkitapi\/unknownnilstrategy\/defaultvalue"}]},{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/==(_:_:)","type":"op","title":"func == (Point, Point) -> Bool"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitapi\/defaultemptyarray","type":"typealias","title":"DefaultEmptyArray"},{"path":"\/documentation\/tripkitapi\/defaultfalse","type":"typealias","title":"DefaultFalse"},{"path":"\/documentation\/tripkitapi\/defaulttrue","type":"typealias","title":"DefaultTrue"},{"path":"\/documentation\/tripkitapi\/emptylossyarray","type":"typealias","title":"EmptyLossyArray"},{"path":"\/documentation\/tripkitapi\/tkcolor","type":"typealias","title":"TKColor"},{"path":"\/documentation\/tripkitapi\/tkfont","type":"typealias","title":"TKFont"},{"path":"\/documentation\/tripkitapi\/tkimage","type":"typealias","title":"TKImage"},{"path":"\/documentation\/tripkitapi\/unknownnil","type":"typealias","title":"UnknownNil"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitapi\/tkbooking","type":"enum","title":"TKBooking","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/field","title":"let field: String"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/value","title":"var value: String?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actioninput\/equatable-implementations","title":"Equatable Implementations"}],"title":"TKBooking.Action.ActionInput"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/confirmation","type":"property","title":"let confirmation: ActionConfirmation?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/confirmationmessage","type":"property","title":"let confirmationMessage: String?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/externalaction","type":"property","title":"let externalAction: String?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/input","type":"property","title":"var input: [ActionInput]?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/internalurl","type":"property","title":"let internalURL: URL?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/isdestructive","type":"property","title":"let isDestructive: Bool"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/title","type":"property","title":"let title: String"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/type","type":"property","title":"let type: ActionType?"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/activatetickets","type":"case","title":"case activateTickets"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/cancel","type":"case","title":"case cancel"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/lock","type":"case","title":"case lock"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/plannext","type":"case","title":"case planNext"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/showtickets","type":"case","title":"case showTickets"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/showtrip","type":"case","title":"case showTrip"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/unknown","type":"case","title":"case unknown"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/unlock","type":"case","title":"case unlock"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/init(from:)","type":"init","title":"init(from: Decoder) throws"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/init(from:)-14sjg","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkbooking\/action\/actiontype\/hash(into:)","type":"method"}],"type":"symbol","title":"RawRepresentable Implementations"}],"title":"TKBooking.Action.ActionType"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/action\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/action\/!=(_:_:)"}],"title":"Equatable Implementations"}],"path":"\/documentation\/tripkitapi\/tkbooking\/action","title":"TKBooking.Action","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let abortActionTitle: String","path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/abortactiontitle","type":"property"},{"title":"let confirmActionTitle: String","path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/confirmactiontitle","type":"property"},{"title":"let message: String","path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/message","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation\/equatable-implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkbooking\/actionconfirmation","title":"TKBooking.ActionConfirmation","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"title":"TKBooking.BookingInput.InputOption","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let id: InputOptionId","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/id"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/title"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption\/equatable-implementations"}],"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoption","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/id","type":"property"},{"title":"let options: [InputOption]?","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/options","type":"property"},{"title":"let required: Bool","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/required","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/title","type":"property"},{"title":"var type: InputType","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/type","type":"property"},{"title":"var value: InputValue","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/value","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/encode(to:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKBooking.BookingInput.InputOptionId","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputoptionid","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKBooking.BookingInput.InputType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case longText","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/longtext"},{"type":"case","title":"case multipleSelections","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/multipleselections"},{"type":"case","title":"case number","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/number"},{"type":"case","title":"case requestReturnTrip","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/requestreturntrip"},{"type":"case","title":"case singleSelection","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/singleselection"},{"type":"case","title":"case terms","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/terms"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputtype","type":"enum"},{"title":"TKBooking.BookingInput.InputValue","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/longtext(_:)","title":"case longText(String)"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/multipleselections(_:)","title":"case multipleSelections([InputOptionId])"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/number(_:min:max:)","title":"case number(Int, min: Int?, max: Int?)"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/returntripdate(_:)","title":"case returnTripDate(ReturnTripDateValue)"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/singleselection(_:)","title":"case singleSelection(InputOptionId)"},{"type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/terms(_:accepted:)","title":"case terms(URL, accepted: Bool)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue\/!=(_:_:)"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/inputvalue","type":"enum"},{"title":"TKBooking.BookingInput.ReturnTripDateValue","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case date(Date)","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/date(_:)"},{"type":"case","title":"case oneWayTrip","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/onewaytrip"},{"type":"case","title":"case unspecified","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/unspecified"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func toJSONString() -> String","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/tojsonstring()"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue\/equatable-implementations"}],"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/returntripdatevalue","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput\/equatable-implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkbooking\/bookinginput","title":"TKBooking.BookingInput","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let provider: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/provider"},{"title":"let text: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/text"},{"title":"var timestamp: Date","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/timestamp"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote\/!=(_:_:)"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/bookingnote","title":"TKBooking.BookingNote","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let actions: [Action]?","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/actions","type":"property"},{"title":"let input: [BookingInput]?","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/input","type":"property"},{"title":"let notes: [BookingNote]?","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/notes","type":"property"},{"title":"let provider: Detail?","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/provider","type":"property"},{"title":"let purchase: Purchase?","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/purchase","type":"property"},{"title":"var purchasedTickets: [PurchasedTicket]","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/purchasedtickets","type":"property"},{"title":"let status: Detail","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/status","type":"property"},{"title":"let vehicle: Detail?","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/vehicle","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/confirmation","title":"TKBooking.Confirmation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let imageURL: URL?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/imageurl"},{"title":"let subtitle: String?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/subtitle"},{"title":"let title: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/title"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/detail\/equatable-implementations"}],"path":"\/documentation\/tripkitapi\/tkbooking\/detail","title":"TKBooking.Detail","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var amount: Int?","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/amount"},{"type":"property","title":"let currencyCode: String?","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/currencycode"},{"type":"property","title":"let details: String?","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/details"},{"type":"property","title":"var groupIDs: [FareGroup.ID]","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/groupids"},{"type":"property","title":"let id: ID","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/id-swift.property"},{"type":"property","title":"var max: Int?","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/max"},{"type":"property","title":"let name: String","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/name"},{"type":"property","title":"let price: Int?","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/price"},{"type":"property","title":"var rider: TKBooking.Rider?","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/rider"},{"type":"property","title":"var riders: [TKBooking.Rider]","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/riders"},{"type":"property","title":"let status: Status?","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.property"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKBooking.Fare.ID","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/id-swift.typealias"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKBooking.Fare.CodingKeys","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case amount","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/amount"},{"title":"case currencyCode","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/currencycode"},{"title":"case details","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/details"},{"title":"case groupIDs","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/groupids"},{"title":"case id","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/id"},{"title":"case max","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/max"},{"title":"case name","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/name"},{"title":"case price","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/price"},{"title":"case riders","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/riders"},{"title":"case status","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/status"},{"title":"case type","type":"case","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/type"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/init(intvalue:)"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/init(rawvalue:)"},{"title":"init?(stringValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/init(stringvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/codingkey-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/debugdescription"},{"title":"var description: String","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/description"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/codingkeys\/hash(into:)","type":"method"}]}]},{"type":"enum","title":"TKBooking.Fare.InputValue","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue\/amount(_:)","title":"case amount(Int)","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue\/selection(_:)","title":"case selection(Fare.ID)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/inputvalue\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}]},{"type":"enum","title":"TKBooking.Fare.RideType","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/multiple","title":"case multiple","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/single","title":"case single","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tkbooking\/fare\/ridetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol"}]},{"type":"enum","title":"TKBooking.Fare.Status","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case activated","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/activated","type":"case"},{"title":"case activeOnAnotherDevice","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/activeonanotherdevice","type":"case"},{"title":"case expired","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/expired","type":"case"},{"title":"case fareCapped","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/farecapped","type":"case"},{"title":"case inactive","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/inactive","type":"case"},{"title":"case invalid","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/invalid","type":"case"},{"title":"case refunded","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/refunded","type":"case"},{"title":"case stale","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/stale","type":"case"},{"title":"case unused","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/unused","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/status-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/fare\/!=(_:_:)"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/fare","title":"TKBooking.Fare","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/id","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/name","type":"property"},{"title":"var selected: Bool","path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/selected","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/!=(_:_:)"}],"path":"\/documentation\/tripkitapi\/tkbooking\/faregroup\/equatable-implementations","type":"symbol"}],"path":"\/documentation\/tripkitapi\/tkbooking\/faregroup","title":"TKBooking.FareGroup","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/location\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let address: String?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/location\/address"},{"title":"let latitude: TKAPI.Degrees","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/location\/latitude"},{"title":"let longitude: TKAPI.Degrees","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/location\/longitude"},{"title":"let name: String?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/location\/name"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/address","type":"case","title":"case address"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/latitude","type":"case","title":"case latitude"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/longitude","type":"case","title":"case longitude"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/name","type":"case","title":"case name"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/init(intvalue:)","type":"init","title":"init?(intValue: Int)"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/init(stringvalue:)","type":"init","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/codingkey-implementations","type":"symbol","title":"CodingKey Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/description","type":"property"}]},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys\/hash(into:)","type":"method"}]}],"title":"TKBooking.Location.CodingKeys","type":"enum","path":"\/documentation\/tripkitapi\/tkbooking\/location\/codingkeys"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/location\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/location\/equatable-implementations"}],"path":"\/documentation\/tripkitapi\/tkbooking\/location","title":"TKBooking.Location","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/attribution","type":"property","title":"let attribution: TKAPI.DataAttribution?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/branding","type":"property","title":"let branding: TSPBranding?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/budgetpoints","type":"property","title":"let budgetPoints: Int?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/currency","type":"property","title":"let currency: String?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/id","type":"property","title":"let id: String"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/isvalid","type":"property","title":"var isValid: Bool"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/paymentdate","type":"property","title":"var paymentDate: Date?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/price","type":"property","title":"var price: NSDecimalNumber?"},{"type":"property","title":"let productName: String?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/productname"},{"type":"property","title":"let productType: String?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/producttype"},{"type":"property","title":"let validFor: TimeInterval?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/validfor"},{"type":"property","title":"var validFrom: Date?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/validfrom"},{"type":"property","title":"var validTo: Date?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/validto"},{"type":"property","title":"let waitTime: Int?","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/waittime"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/purchase\/!=(_:_:)"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/purchase","title":"TKBooking.Purchase","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var actions: [Action]","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/actions"},{"type":"property","title":"let fare: Fare","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/fare"},{"type":"property","title":"let id: ID","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/id-swift.property"},{"type":"property","title":"var purchased: Date?","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/purchased"},{"type":"property","title":"let qrCode: String?","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/qrcode"},{"type":"property","title":"let status: Status?","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/status-swift.property"},{"type":"property","title":"var ticketExpiration: Date?","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/ticketexpiration"},{"type":"property","title":"let ticketURL: URL?","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/ticketurl"},{"type":"property","title":"var validFrom: Date?","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/validfrom"},{"type":"property","title":"var validUntil: Date?","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/validuntil"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKBooking.PurchasedTicket.ID","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/id-swift.typealias"},{"type":"typealias","title":"TKBooking.PurchasedTicket.Status","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/status-swift.typealias"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKBooking.PurchasedTicket.CodingKeys","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case actions","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/actions"},{"type":"case","title":"case fare","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/fare"},{"type":"case","title":"case id","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/id"},{"type":"case","title":"case purchased","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/purchased"},{"type":"case","title":"case qrCode","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/qrcode"},{"type":"case","title":"case status","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/status"},{"type":"case","title":"case ticketExpiration","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/ticketexpiration"},{"type":"case","title":"case ticketURL","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/ticketurl"},{"type":"case","title":"case validFrom","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/validfrom"},{"type":"case","title":"case validUntil","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/validuntil"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(intValue: Int)","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/init(intvalue:)"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/init(rawvalue:)"},{"type":"init","title":"init?(stringValue: String)","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/init(stringvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/description","type":"property"}],"type":"symbol","title":"CodingKey Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/codingkey-implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/codingkeys\/rawrepresentable-implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket\/!=(_:_:)"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/purchasedticket","title":"TKBooking.PurchasedTicket","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/description","type":"property","title":"var description: String?"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/id-swift.property","type":"property","title":"var id: ID"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/name","type":"property","title":"var name: String"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/id-swift.typealias","type":"typealias","title":"TKBooking.Rider.ID"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/description","title":"case description","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/name","title":"case name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/codingkey-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/debugdescription","type":"property"},{"title":"var description: String","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/description-swift.property","type":"property"}],"title":"CodingKey Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}],"title":"TKBooking.Rider.CodingKeys"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tkbooking\/rider\/equatable-implementations"}],"path":"\/documentation\/tripkitapi\/tkbooking\/rider","title":"TKBooking.Rider","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/color"},{"title":"let logoImageName: String?","type":"property","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/logoimagename"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/tripkitapi\/tkbooking\/tspbranding","title":"TKBooking.TSPBranding","type":"struct"}]},{"path":"\/documentation\/tripkitapi\/tkerrorcode","type":"enum","title":"TKErrorCode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case arrivalTimeTooOld","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/arrivaltimetooold"},{"title":"case departureTimeTooOld","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/departuretimetooold"},{"title":"case destinationTooCloseToOrigin","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/destinationtooclosetoorigin"},{"title":"case internalError","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/internalerror"},{"title":"case noDestination","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/nodestination"},{"title":"case noOrigin","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/noorigin"},{"title":"case timeTooOld","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/timetooold"},{"title":"case unsupportedDestinationRegion","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/unsupporteddestinationregion"},{"title":"case unsupportedOriginRegion","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/unsupportedoriginregion"},{"title":"case unsupportedRegionCombination","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/unsupportedregioncombination"},{"title":"case userError","type":"case","path":"\/documentation\/tripkitapi\/tkerrorcode\/usererror"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/tripkitapi\/tkerrorcode\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkerrorcode\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkerrorcode\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkitapi\/tkerrorcode\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkerrorcode\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkerrorcode\/hash(into:)","type":"method"}]}]},{"path":"\/documentation\/tripkitapi\/tklocalcostaccuracy","type":"enum","title":"TKLocalCostAccuracy","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case confirmed","type":"case","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/confirmed"},{"title":"case externalEstimate","type":"case","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/externalestimate"},{"title":"case internalEstimate","type":"case","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/internalestimate"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/hash(into:)"}],"path":"\/documentation\/tripkitapi\/tklocalcostaccuracy\/rawrepresentable-implementations"}]},{"path":"\/documentation\/tripkitapi\/tkregionparsererror","type":"enum","title":"TKRegionParserError","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/tkregionparsererror\/badtimezoneidentifier(_:)","title":"case badTimeZoneIdentifier(String)"},{"type":"case","path":"\/documentation\/tripkitapi\/tkregionparsererror\/cannotparseinternationalregion","title":"case cannotParseInternationalRegion"},{"type":"case","path":"\/documentation\/tripkitapi\/tkregionparsererror\/emptypolygon","title":"case emptyPolygon"},{"type":"case","path":"\/documentation\/tripkitapi\/tkregionparsererror\/fetchingregionsfailed","title":"case fetchingRegionsFailed"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitapi\/tkregionparsererror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/tripkitapi\/tkregionparsererror\/localizeddescription"}],"title":"Error Implementations"}]},{"path":"\/documentation\/tripkitapi\/tkroutingquerytime","type":"enum","title":"TKRoutingQueryTime","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitapi\/tkroutingquerytime\/arriveby(_:)","type":"case","title":"case arriveBy(Date)"},{"path":"\/documentation\/tripkitapi\/tkroutingquerytime\/leaveasap","type":"case","title":"case leaveASAP"},{"path":"\/documentation\/tripkitapi\/tkroutingquerytime\/leaveafter(_:)","type":"case","title":"case leaveAfter(Date)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitapi\/tkroutingquerytime\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkroutingquerytime\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkitapi\/tktransportmode","type":"enum","title":"TKTransportMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case bicycle","path":"\/documentation\/tripkitapi\/tktransportmode\/bicycle"},{"type":"case","title":"case bicycleDeprecated","path":"\/documentation\/tripkitapi\/tktransportmode\/bicycledeprecated"},{"type":"case","title":"case bicycleShared","path":"\/documentation\/tripkitapi\/tktransportmode\/bicycleshared"},{"type":"case","title":"case bikeShareDeprecated","path":"\/documentation\/tripkitapi\/tktransportmode\/bikesharedeprecated"},{"type":"case","title":"case car","path":"\/documentation\/tripkitapi\/tktransportmode\/car"},{"type":"case","title":"case carPool","path":"\/documentation\/tripkitapi\/tktransportmode\/carpool"},{"type":"case","title":"case carRental","path":"\/documentation\/tripkitapi\/tktransportmode\/carrental"},{"type":"case","title":"case carShare","path":"\/documentation\/tripkitapi\/tktransportmode\/carshare"},{"type":"case","title":"case drt","path":"\/documentation\/tripkitapi\/tktransportmode\/drt"},{"type":"case","title":"case flight","path":"\/documentation\/tripkitapi\/tktransportmode\/flight"},{"type":"case","title":"case limited","path":"\/documentation\/tripkitapi\/tktransportmode\/limited"},{"type":"case","title":"case micromobility","path":"\/documentation\/tripkitapi\/tktransportmode\/micromobility"},{"type":"case","title":"case micromobilityShared","path":"\/documentation\/tripkitapi\/tktransportmode\/micromobilityshared"},{"type":"case","title":"case motorbike","path":"\/documentation\/tripkitapi\/tktransportmode\/motorbike"},{"type":"case","title":"case publicTransport","path":"\/documentation\/tripkitapi\/tktransportmode\/publictransport"},{"type":"case","title":"case schoolBuses","path":"\/documentation\/tripkitapi\/tktransportmode\/schoolbuses"},{"type":"case","title":"case taxi","path":"\/documentation\/tripkitapi\/tktransportmode\/taxi"},{"type":"case","title":"case tnc","path":"\/documentation\/tripkitapi\/tktransportmode\/tnc"},{"type":"case","title":"case walking","path":"\/documentation\/tripkitapi\/tktransportmode\/walking"},{"type":"case","title":"case wheelchair","path":"\/documentation\/tripkitapi\/tktransportmode\/wheelchair"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(modeIdentifier: String)","path":"\/documentation\/tripkitapi\/tktransportmode\/init(modeidentifier:)"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkitapi\/tktransportmode\/init(rawvalue:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var modeIdentifier: String","path":"\/documentation\/tripkitapi\/tktransportmode\/modeidentifier"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func genericModeIdentifier(forModeIdentifier: String) -> String","path":"\/documentation\/tripkitapi\/tktransportmode\/genericmodeidentifier(formodeidentifier:)"},{"type":"method","title":"static func groupModeIdentifiers(Set<String>, includeGroupForAll: Bool) -> Set<Set<String>>","path":"\/documentation\/tripkitapi\/tktransportmode\/groupmodeidentifiers(_:includegroupforall:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tktransportmode\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tktransportmode\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tktransportmode\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/tktransportmode\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/tktransportmode\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"path":"\/documentation\/tripkitapi\/tktripcosttype","type":"enum","title":"TKTripCostType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case calories","path":"\/documentation\/tripkitapi\/tktripcosttype\/calories"},{"type":"case","title":"case carbon","path":"\/documentation\/tripkitapi\/tktripcosttype\/carbon"},{"type":"case","title":"case count","path":"\/documentation\/tripkitapi\/tktripcosttype\/count"},{"type":"case","title":"case duration","path":"\/documentation\/tripkitapi\/tktripcosttype\/duration"},{"type":"case","title":"case hassle","path":"\/documentation\/tripkitapi\/tktripcosttype\/hassle"},{"type":"case","title":"case price","path":"\/documentation\/tripkitapi\/tktripcosttype\/price"},{"type":"case","title":"case score","path":"\/documentation\/tripkitapi\/tktripcosttype\/score"},{"type":"case","title":"case time","path":"\/documentation\/tripkitapi\/tktripcosttype\/time"},{"type":"case","title":"case walking","path":"\/documentation\/tripkitapi\/tktripcosttype\/walking"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkitapi\/tktripcosttype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitapi\/tktripcosttype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitapi\/tktripcosttype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkitapi\/tktripcosttype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitapi\/tktripcosttype\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitapi\/tktripcosttype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitapi\/tktripcosttype\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkitapi\/tktripcosttype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode","type":"enum","title":"TKTurnByTurnMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/cycling","title":"case cycling","type":"case"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/driving","title":"case driving","type":"case"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/walking","title":"case walking","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitapi\/tkturnbyturnmode\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"type":"groupMarker","title":"Extended Modules"},{"path":"\/documentation\/tripkitapi\/corelocation","type":"extension","title":"CoreLocation","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"CLLocationCoordinate2D","path":"\/documentation\/tripkitapi\/corelocation\/cllocationcoordinate2d","type":"extension","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func decodePolyline(String) -> [CLLocationCoordinate2D]","type":"method","path":"\/documentation\/tripkitapi\/corelocation\/cllocationcoordinate2d\/decodepolyline(_:)"}]}]},{"path":"\/documentation\/tripkitapi\/foundation","type":"extension","title":"Foundation","children":[{"title":"Extended Classes","type":"groupMarker"},{"type":"extension","title":"JSONDecoder","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func decode<T>(T.Type, withJSONObject: Any, options: JSONSerialization.WritingOptions) throws -> T","type":"method","path":"\/documentation\/tripkitapi\/foundation\/jsondecoder\/decode(_:withjsonobject:options:)"}],"path":"\/documentation\/tripkitapi\/foundation\/jsondecoder"},{"type":"extension","title":"JSONEncoder","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitapi\/foundation\/jsonencoder\/encodejsonobject(_:options:)","title":"func encodeJSONObject<T>(T, options: JSONSerialization.ReadingOptions) throws -> Any","type":"method"}],"path":"\/documentation\/tripkitapi\/foundation\/jsonencoder"},{"type":"extension","title":"NSError","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(code: Int, message: String)","path":"\/documentation\/tripkitapi\/foundation\/nserror\/init(code:message:)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func error(code: Int, message: String) -> NSError","path":"\/documentation\/tripkitapi\/foundation\/nserror\/error(code:message:)","type":"method"}],"path":"\/documentation\/tripkitapi\/foundation\/nserror"},{"type":"extension","title":"UserDefaults","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitapi\/foundation\/userdefaults\/shared","type":"property","title":"static let shared: UserDefaults"}],"path":"\/documentation\/tripkitapi\/foundation\/userdefaults"},{"title":"Extended Structures","type":"groupMarker"},{"type":"extension","title":"Date","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitapi\/foundation\/date\/init(iso8601:)","title":"init(iso8601: String) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitapi\/foundation\/date\/iso8601","title":"var iso8601: String"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitapi\/foundation\/date\/midnight(in:)","title":"func midnight(in: TimeZone) -> Date"},{"type":"method","path":"\/documentation\/tripkitapi\/foundation\/date\/nextmidnight(in:)","title":"func nextMidnight(in: TimeZone) -> Date"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitapi\/foundation\/date\/dateconversionerror\/invalidiso8601(_:)","title":"case invalidISO8601(String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/tripkitapi\/foundation\/date\/dateconversionerror\/localizeddescription","type":"property"}],"type":"symbol","path":"\/documentation\/tripkitapi\/foundation\/date\/dateconversionerror\/error-implementations","title":"Error Implementations"}],"path":"\/documentation\/tripkitapi\/foundation\/date\/dateconversionerror","title":"Date.DateConversionError"}],"path":"\/documentation\/tripkitapi\/foundation\/date"},{"title":"Extended Types","type":"groupMarker"},{"type":"extension","title":"NSNotification","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"NSNotification.Name","path":"\/documentation\/tripkitapi\/foundation\/nsnotification\/name","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let TKRegionManagerUpdatedRegions: NSNotification.Name","type":"property","path":"\/documentation\/tripkitapi\/foundation\/nsnotification\/name\/tkregionmanagerupdatedregions"}],"type":"extension"}],"path":"\/documentation\/tripkitapi\/foundation\/nsnotification"}]},{"path":"\/documentation\/tripkitapi\/swift","type":"extension","title":"Swift","children":[{"type":"groupMarker","title":"Extended Structures"},{"type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tk_filterDuplicates(includeElement: (_ lhs: Element, _ rhs: Element) -> Bool) -> [Element]","path":"\/documentation\/tripkitapi\/swift\/array\/tk_filterduplicates(includeelement:)","type":"method"}],"path":"\/documentation\/tripkitapi\/swift\/array","title":"Array"},{"type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func decode<P>(DefaultCodable<P>.Type, forKey: Key) throws -> DefaultCodable<P>","type":"method","path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-40dx3"},{"title":"func decode(OptionalISO8601OrSecondsSince1970.Type, forKey: `Self`.Key) throws -> OptionalISO8601OrSecondsSince1970","type":"method","path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-5zja1"},{"title":"func decode<P>(DefaultCodable<P>.Type, forKey: Key) throws -> DefaultCodable<P>","type":"method","path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-6ie5y"},{"title":"func decode(OptionalISO8601.Type, forKey: `Self`.Key) throws -> OptionalISO8601","type":"method","path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-98ax1"}],"path":"\/documentation\/tripkitapi\/swift\/keyeddecodingcontainer","title":"KeyedDecodingContainer"}]}],"title":"TripKitAPI"},{"type":"module","path":"\/documentation\/tripkitinterapp","children":[{"title":"Classes","type":"groupMarker"},{"title":"TKInterAppCommunicator","path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction","type":"struct","title":"TKInterAppCommunicator.ExternalAction","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/==(_:_:)","title":"static func == (TKInterAppCommunicator.ExternalAction, TKInterAppCommunicator.ExternalAction) -> Bool","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/accessibilitylabel","title":"var accessibilityLabel: String","type":"property"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/identifier","title":"var identifier: AnyHashable","type":"property"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/title","title":"var title: String","type":"property"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/type","title":"let type: ExternalActionType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalaction\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/openstorehandler","type":"property","title":"var openStoreHandler: @MainActor (Int, UIViewController) -> Void"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/openurlhandler","type":"property","title":"var openURLHandler: @MainActor (URL, String, UIViewController) -> Void"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/canhandleexternalaction(_:)","type":"method","title":"func canHandleExternalAction(String) -> Bool"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/canhandleexternalactions(for:)","type":"method","title":"func canHandleExternalActions(for: TKSegment) -> Bool"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactions(for:)","type":"method","title":"func externalActions(for: TKSegment) -> [ExternalAction]"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/handleexternalactions(for:presenter:sender:completion:)","type":"method","title":"func handleExternalActions(for: TKSegment, presenter: UIViewController, sender: Any?, completion: ((String) -> Void)?)"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/perform(_:for:presenter:sender:)","type":"method","title":"func perform(ExternalAction, for: TKSegment?, presenter: UIViewController, sender: Any?)"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/performexternalaction(_:for:presenter:sender:)","type":"method","title":"func performExternalAction(String, for: TKSegment?, presenter: UIViewController, sender: Any?)"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/registerexternalactionhandlers(_:)","type":"method","title":"func registerExternalActionHandlers([TKInterAppExternalActionHandler])"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/shared","type":"property","title":"static let shared: TKInterAppCommunicator"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/canopeninmapsapp(_:)","type":"method","title":"static func canOpenInMapsApp(TKSegment) -> Bool"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/openmapsapp(in:routefrom:to:viewcontroller:initiatedby:)","type":"method","title":"static func openMapsApp(in: TKTurnByTurnMode, routeFrom: MKAnnotation?, to: MKAnnotation, viewController: UIViewController, initiatedBy: Any?)"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/opensegmentinmapsapp(_:forviewcontroller:initiatedby:currentlocationhandler:)","type":"method","title":"static func openSegmentInMapsApp(TKSegment, forViewController: UIViewController, initiatedBy: Any, currentLocationHandler: ((TKSegment) -> Bool)?)"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype","type":"enum","title":"TKInterAppCommunicator.ExternalActionType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/appdeeplink","title":"case appDeepLink","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/appdownload","title":"case appDownload","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/message","title":"case message","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/phone","title":"case phone","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/ticket","title":"case ticket","type":"case"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/website","title":"case website","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitinterapp\/tkinterappcommunicator\/externalactiontype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]}],"type":"class"},{"title":"TKPhoneActionHandler","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let priority: TKInterAppExternalActionPriority","type":"property","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/priority"},{"title":"let type: TKInterAppCommunicator.ExternalActionType","type":"property","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/type"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func canHandle(TKInterAppIdentifier) -> Bool","type":"method","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/canhandle(_:)"},{"title":"func performAction(for: TKInterAppIdentifier, segment: TKSegment?, presenter: UIViewController, sender: Any?)","type":"method","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/performaction(for:segment:presenter:sender:)"},{"title":"func title(for: TKInterAppIdentifier) -> String","type":"method","path":"\/documentation\/tripkitinterapp\/tkphoneactionhandler\/title(for:)"}],"type":"class"},{"title":"TKSMSActionHandler","path":"\/documentation\/tripkitinterapp\/tksmsactionhandler","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/priority","title":"let priority: TKInterAppExternalActionPriority"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/type","title":"let type: TKInterAppCommunicator.ExternalActionType"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/canhandle(_:)","title":"func canHandle(TKInterAppIdentifier) -> Bool"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/performaction(for:segment:presenter:sender:)","title":"func performAction(for: TKInterAppIdentifier, segment: TKSegment?, presenter: UIViewController, sender: Any?)"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tksmsactionhandler\/title(for:)","title":"func title(for: TKInterAppIdentifier) -> String"}],"type":"class"},{"title":"TKWebActionHandler","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let priority: TKInterAppExternalActionPriority","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/priority","type":"property"},{"title":"let type: TKInterAppCommunicator.ExternalActionType","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func canHandle(TKInterAppIdentifier) -> Bool","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/canhandle(_:)","type":"method"},{"title":"func performAction(for: TKInterAppIdentifier, segment: TKSegment?, presenter: UIViewController, sender: Any?)","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/performaction(for:segment:presenter:sender:)","type":"method"},{"title":"func title(for: TKInterAppIdentifier) -> String","path":"\/documentation\/tripkitinterapp\/tkwebactionhandler\/title(for:)","type":"method"}],"type":"class"},{"title":"Protocols","type":"groupMarker"},{"title":"TKInterAppExternalActionHandler","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/priority","title":"var priority: TKInterAppExternalActionPriority"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/type","title":"var type: TKInterAppCommunicator.ExternalActionType"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/canhandle(_:)","title":"func canHandle(TKInterAppIdentifier) -> Bool"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/performaction(for:segment:presenter:sender:)","title":"func performAction(for: TKInterAppIdentifier, segment: TKSegment?, presenter: UIViewController, sender: Any?)"},{"type":"method","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionhandler\/title(for:)","title":"func title(for: TKInterAppIdentifier) -> String"}],"type":"protocol"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKInterAppIdentifier","path":"\/documentation\/tripkitinterapp\/tkinterappidentifier","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKInterAppExternalActionPriority","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case high","type":"case","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/high"},{"title":"case low","type":"case","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/low"},{"title":"case medium","type":"case","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/medium"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkitinterapp\/tkinterappexternalactionpriority\/rawrepresentable-implementations"}],"type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"title":"TripKitAPI","path":"\/documentation\/tripkitinterapp\/tripkitapi","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/tripkitinterapp\/tripkitapi\/tkconfig","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tripkitapi\/tkconfig\/googlemapscallback","title":"var googleMapsCallback: String?"},{"type":"property","path":"\/documentation\/tripkitinterapp\/tripkitapi\/tkconfig\/interappconfiguration","title":"var interAppConfiguration: [String : Any]"}],"title":"TKConfig","type":"extension"}],"type":"extension"}],"title":"TripKitInterApp"},{"type":"module","path":"\/documentation\/tripkitui","children":[{"type":"groupMarker","title":"Trip Planning Interface"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontroller","type":"class","title":"TKUIRoutingResultsViewController","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontroller\/init(coder:)","title":"init(coder: NSCoder)"},{"type":"init","path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontroller\/init(destination:)","title":"init(destination: MKAnnotation)"},{"type":"init","path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontroller\/init(request:modes:)","title":"init(request: TripRequest, modes: Set<String>?)"}]},{"path":"\/documentation\/tripkitui\/tkuiroutingresultsviewcontrollerdelegate","type":"protocol","title":"TKUIRoutingResultsViewControllerDelegate"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard","type":"class","title":"TKUIRoutingResultsCard","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration","title":"TKUIRoutingResultsCard.Configuration","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/autocompletiondataproviders","title":"var autocompletionDataProviders: [TKAutocompleting]"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/contactcustomersupport","title":"var contactCustomerSupport: ((TKUIRoutingResultsCard, SupportType) -> Void)?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/customitemprovider","title":"var customItemProvider: TKUIRoutingResultsCustomItemProvider?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/initialcardposition","title":"var initialCardPosition: TGCardPosition"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/limittomodes","title":"var limitToModes: Set<String>?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/mapmanagerfactory","title":"var mapManagerFactory: (@MainActor (MKAnnotation?, Bool) -> TKUIRoutingResultsMapManagerType)"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/timepickerconfig","title":"var timePickerConfig: TKUITimePickerSheet.Configuration"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/tripbadgestoshow","title":"var tripBadgesToShow: Set<TKMetricClassifier.Classification>"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/tripgroupactionfactory","title":"var tripGroupActionFactory: ((TripGroup) -> TripGroupAction?)?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/configuration\/tripmetricstoshow","title":"var tripMetricsToShow: [TKTripCostType]"}]},{"type":"struct","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem","title":"TKUIRoutingResultsCard.CustomItem","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/init(payload:preferredindex:)","type":"init","title":"init(payload: AnyHashable, preferredIndex: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/payload","type":"property","title":"let payload: AnyHashable"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/preferredindex","type":"property","title":"let preferredIndex: Int"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/customitem\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/init(destination:origin:zoomtodestination:initialposition:)","title":"init(destination: MKAnnotation, origin: MKAnnotation?, zoomToDestination: Bool, initialPosition: TGCardPosition?)"},{"type":"init","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/init(request:editable:modes:)","title":"init(request: TripRequest, editable: Bool, modes: Set<String>?)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/keycommands","title":"var keyCommands: [UIKeyCommand]?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/onselection","title":"var onSelection: ((Trip) -> Bool)?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/preferredview","title":"var preferredView: UIView?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/resultsdelegate","title":"var resultsDelegate: TKUIRoutingResultsCardDelegate?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/canperformaction(_:withsender:)","title":"func canPerformAction(Selector, withSender: Any?) -> Bool"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/debugactioncopyprimaryrequest(_:)","title":"func debugActionCopyPrimaryRequest(AnyObject?)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/didappear(animated:)","title":"func didAppear(animated: Bool)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/didbuild(tableview:cardview:)","title":"func didBuild(tableView: UITableView, cardView: TGCardView)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/refreshforupdatedmodes()","title":"func refreshForUpdatedModes()"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/traitcollectiondidchange(_:)","title":"func traitCollectionDidChange(UITraitCollection?)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/willappear(animated:)","title":"func willAppear(animated: Bool)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/willdisappear(animated:)","title":"func willDisappear(animated: Bool)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tripgroupaction","title":"TKUIRoutingResultsCard.TripGroupAction"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/config","title":"static var config: TKUIRoutingResultsCard.Configuration"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/supporttype","title":"TKUIRoutingResultsCard.SupportType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/supporttype\/routingerror(_:_:)","type":"case","title":"case routingError(Error, TripRequest)"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/supporttype\/unsupportedquery(_:)","type":"case","title":"case unsupportedQuery(TripRequest)"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tkuiroutingqueryinputcarddelegate-implementations","title":"TKUIRoutingQueryInputCardDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/routingqueryinput(card:selectedorigin:destination:)","title":"func routingQueryInput(card: TKUIRoutingQueryInputCard, selectedOrigin: MKAnnotation, destination: MKAnnotation)","type":"method"}]},{"type":"symbol","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tkuitimepickersheetdelegate-implementations","title":"TKUITimePickerSheetDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func timePicker(TKUITimePickerSheet, pickedDate: Date, for: TKTimeType)","type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/timepicker(_:pickeddate:for:)"},{"title":"func timePickerRequestsResign(TKUITimePickerSheet)","type":"method","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/timepickerrequestsresign(_:)"}]},{"type":"symbol","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tableView(UITableView, contextMenuConfigurationForRowAt: IndexPath, point: CGPoint) -> UIContextMenuConfiguration?","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:contextmenuconfigurationforrowat:point:)","type":"method"},{"title":"func tableView(UITableView, estimatedHeightForFooterInSection: Int) -> CGFloat","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:estimatedheightforfooterinsection:)","type":"method"},{"title":"func tableView(UITableView, estimatedHeightForHeaderInSection: Int) -> CGFloat","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:estimatedheightforheaderinsection:)","type":"method"},{"title":"func tableView(UITableView, heightForFooterInSection: Int) -> CGFloat","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:heightforfooterinsection:)","type":"method"},{"title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:heightforheaderinsection:)","type":"method"},{"title":"func tableView(UITableView, viewForFooterInSection: Int) -> UIView?","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:viewforfooterinsection:)","type":"method"},{"title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","path":"\/documentation\/tripkitui\/tkuiroutingresultscard\/tableview(_:viewforheaderinsection:)","type":"method"}]}]},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscarddelegate","type":"protocol","title":"TKUIRoutingResultsCardDelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func resultsCard(TKUIRoutingResultsCard, requestsModePickerWithModes: [String], for: TKRegion, sender: Any?)","path":"\/documentation\/tripkitui\/tkuiroutingresultscarddelegate\/resultscard(_:requestsmodepickerwithmodes:for:sender:)"}]},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard","type":"class","title":"TKUIRoutingQueryInputCard","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/init(origin:destination:biasmaprect:)","type":"init","title":"init(origin: MKAnnotation?, destination: MKAnnotation?, biasMapRect: MKMapRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/keycommands","type":"property","title":"var keyCommands: [UIKeyCommand]?"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/preferredview","type":"property","title":"var preferredView: UIView?"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/querydelegate","type":"property","title":"var queryDelegate: TKUIRoutingQueryInputCardDelegate?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/didappear(animated:)","type":"method","title":"func didAppear(animated: Bool)"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/didbuild(tableview:)","type":"method","title":"func didBuild(tableView: UITableView)"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/traitcollectiondidchange(_:)","type":"method","title":"func traitCollectionDidChange(UITraitCollection?)"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/willappear(animated:)","type":"method","title":"func willAppear(animated: Bool)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/uiscrollviewdelegate-implementations","type":"symbol","title":"UIScrollViewDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/uitableviewdelegate-implementations","type":"symbol","title":"UITableViewDelegate Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcard\/tableview(_:didselectrowat:)"}]}]},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcarddelegate","type":"protocol","title":"TKUIRoutingQueryInputCardDelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiroutingqueryinputcarddelegate\/routingqueryinput(card:selectedorigin:destination:)","type":"method","title":"func routingQueryInput(card: TKUIRoutingQueryInputCard, selectedOrigin: MKAnnotation, destination: MKAnnotation)"}]},{"path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontroller","type":"class","title":"TKUITripOverviewViewController","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontroller\/init(coder:)","type":"init"},{"title":"init(trip: Trip)","path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontroller\/init(trip:)","type":"init"}]},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard","type":"class","title":"TKUITripOverviewCard","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKUITripOverviewCard.Configuration","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var enableDropToAddStopover: Bool","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/enabledroptoaddstopover","type":"property"},{"title":"var mapManagerFactory: (@MainActor (Trip) -> TKUITripMapManagerType)","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/mapmanagerfactory","type":"property"},{"title":"var maximumAlertsPerSegment: Int","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/maximumalertspersegment","type":"property"},{"title":"var presentSegmentHandler: (@MainActor (TKUITripOverviewCard, TKSegment) -> Void)?","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/presentsegmenthandler","type":"property"},{"title":"var segmentActionsfactory: (@MainActor (TKSegment) -> [SegmentAction])?","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/segmentactionsfactory","type":"property"},{"title":"var showTripActionTitle: Bool","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/showtripactiontitle","type":"property"},{"title":"var tripActionsFactory: (@MainActor (Trip) -> [TripAction])?","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration\/tripactionsfactory","type":"property"}],"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/configuration"},{"title":"Initializers","type":"groupMarker"},{"title":"init(trip: Trip, index: Int?)","type":"init","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/init(trip:index:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var includeTimeToLeaveNotification: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/includetimetoleavenotification"},{"title":"let initialTrip: Trip","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/initialtrip"},{"title":"var selectedAlternativeTripCallback: ((Trip) -> Bool)?","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/selectedalternativetripcallback"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/didappear(animated:)"},{"title":"func didBuild(tableView: UITableView, cardView: TGCardView)","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/didbuild(tableview:cardview:)"},{"title":"func shows(tripURL: URL, tripID: String?) -> Bool","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/shows(tripurl:tripid:)"},{"title":"func traitCollectionDidChange(UITraitCollection?)","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/traitcollectiondidchange(_:)"},{"title":"func willAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/willappear(animated:)"},{"title":"func willDisappear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/willdisappear(animated:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUITripOverviewCard.SegmentAction","type":"typealias","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/segmentaction"},{"title":"TKUITripOverviewCard.TripAction","type":"typealias","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/tripaction"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: TKUITripOverviewCard.Configuration","type":"property","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/config"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func buildStartTripAction(startingOn: TKSegment?, label: String?, mode: TKUISegmentMode, style: TKUICardActionStyle, actionHandler: TKUITripModeByModeCard.TripStartedActionHandler?) -> TKUITripOverviewCard.TripAction","type":"method","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/buildstarttripaction(startingon:label:mode:style:actionhandler:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKUITripOverviewCard.DefaultActionPriority","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/alternatives","title":"case alternatives","type":"case"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/book","title":"case book","type":"case"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/go","title":"case go","type":"case"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/notify","title":"case notify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/defaultactionpriority"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUITripModeByModeCardDelegate Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func modeByModeCard(TKUITripModeByModeCard, updatedTrip: Trip)","path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/modebymodecard(_:updatedtrip:)"}],"path":"\/documentation\/tripkitui\/tkuitripoverviewcard\/tkuitripmodebymodecarddelegate-implementations"}]},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontroller","type":"class","title":"TKUITripModeByModeViewController","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontroller\/init(coder:)"},{"type":"init","title":"init(startingOn: TKSegment, mode: TKUISegmentMode, initialPosition: TGCardPosition)","path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontroller\/init(startingon:mode:initialposition:)"},{"type":"init","title":"init(trip: Trip, initialPosition: TGCardPosition)","path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontroller\/init(trip:initialposition:)"}]},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodeviewcontrollerdelegate","type":"protocol","title":"TKUITripModeByModeViewControllerDelegate"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard","type":"class","title":"TKUITripModeByModeCard","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/configuration","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var builder: TKUITripModeByModePageBuilder","type":"property","path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/configuration\/builder"}],"title":"TKUITripModeByModeCard.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/init(mapmanager:)","title":"init(mapManager: TKUITripMapManager)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/init(startingon:mode:mapmanager:initialposition:)","title":"init(startingOn: TKSegment, mode: TKUISegmentMode, mapManager: TKUITripMapManager?, initialPosition: TGCardPosition) throws","type":"init"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/init(trip:initialposition:)","title":"init(trip: Trip, initialPosition: TGCardPosition)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/modebymodedelegate","title":"var modeByModeDelegate: TKUITripModeByModeCardDelegate?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/tripstartedhandler","title":"var tripStartedHandler: TripStartedActionHandler?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/didappear(animated:)","title":"func didAppear(animated: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/didbuild(cardview:headerview:)","title":"func didBuild(cardView: TGCardView?, headerView: TGHeaderView?)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/didmovetopage(index:)","title":"func didMoveToPage(index: Int)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/offsettoreach(mode:in:)","title":"func offsetToReach(mode: TKUISegmentMode, in: TKSegment) -> Int?","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/shows(tripurl:tripid:)","title":"func shows(tripURL: URL, tripID: String?) -> Bool","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/tripstartedactionhandler","title":"TKUITripModeByModeCard.TripStartedActionHandler","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecard\/config","title":"static var config: TKUITripModeByModeCard.Configuration","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder","type":"protocol","title":"TKUITripModeByModePageBuilder","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func cardIdentifier(for: TKSegment) -> String?","path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder\/cardidentifier(for:)"},{"type":"method","title":"func cards(for: TKSegment, mapManager: TKUITripMapManager) -> [(TGCard, TKUISegmentMode)]","path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder\/cards(for:mapmanager:)"},{"type":"method","title":"func cleanUp(existingCards: [TGCard])","path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder\/cleanup(existingcards:)"},{"type":"method","title":"func shouldUpdate(trip: Trip, counter: Int) -> Bool","path":"\/documentation\/tripkitui\/tkuitripmodebymodepagebuilder\/shouldupdate(trip:counter:)"}]},{"type":"groupMarker","title":"Timetable Interface"},{"path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller","type":"class","title":"TKUITimetableViewController","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(coder: NSCoder)","type":"init","path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller\/init(coder:)"},{"title":"init(dlsTable: TKDLSTable, startDate: Date)","type":"init","path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller\/init(dlstable:startdate:)"},{"title":"init(stop: TKUIStopAnnotation, filter: String?)","type":"init","path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller\/init(stop:filter:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var timetableDelegate: TKUITimetableViewControllerDelegate?","type":"property","path":"\/documentation\/tripkitui\/tkuitimetableviewcontroller\/timetabledelegate"}]},{"path":"\/documentation\/tripkitui\/tkuitimetableviewcontrollerdelegate","type":"protocol","title":"TKUITimetableViewControllerDelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitimetableviewcontrollerdelegate\/timetableviewcontroller(_:updatedfilter:)","title":"func timetableViewController(TKUITimetableViewController, updatedFilter: String)"}]},{"path":"\/documentation\/tripkitui\/tkuitimetablecard","type":"class","title":"TKUITimetableCard","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKUITimetableCard.Configuration","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimetablecard\/configuration\/showoperatornames","title":"var showOperatorNames: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitimetablecard\/configuration\/showtimetableactiontitle","title":"var showTimetableActionTitle: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuitimetablecard\/configuration\/timetableactionsfactory","title":"var timetableActionsFactory: (@MainActor ([TKUIStopAnnotation]) -> [Action])?","type":"property"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard\/configuration"},{"title":"Initializers","type":"groupMarker"},{"title":"init(titleView: (UIView, UIButton)?, dlsTable: TKDLSTable, startDate: Date, selectedServiceID: String?, reusing: TGMapManager?)","type":"init","path":"\/documentation\/tripkitui\/tkuitimetablecard\/init(titleview:dlstable:startdate:selectedserviceid:reusing:)"},{"title":"init(titleView: (UIView, UIButton)?, stops: [TKUIStopAnnotation], reusing: TGMapManager?, initialPosition: TGCardPosition?)","type":"init","path":"\/documentation\/tripkitui\/tkuitimetablecard\/init(titleview:stops:reusing:initialposition:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var departuresDelegate: TKUITimetableCardDelegate?","type":"property","path":"\/documentation\/tripkitui\/tkuitimetablecard\/departuresdelegate"},{"title":"var filter: String?","type":"property","path":"\/documentation\/tripkitui\/tkuitimetablecard\/filter"},{"title":"var filterUpdatedHandler: ((String) -> Void)?","type":"property","path":"\/documentation\/tripkitui\/tkuitimetablecard\/filterupdatedhandler"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/didappear(animated:)"},{"title":"func didBuild(tableView: UITableView, cardView: TGCardView)","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/didbuild(tableview:cardview:)"},{"title":"func visibleDepartures() -> [StopVisits]","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/visibledepartures()"},{"title":"func willAppear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/willappear(animated:)"},{"title":"func willDisappear(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecard\/willdisappear(animated:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUITimetableCard.Action","type":"typealias","path":"\/documentation\/tripkitui\/tkuitimetablecard\/action"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: TKUITimetableCard.Configuration","type":"property","path":"\/documentation\/tripkitui\/tkuitimetablecard\/config"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUITimePickerSheetDelegate Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuitimetablecard\/timepicker(_:pickeddate:for:)","type":"method","title":"func timePicker(TKUITimePickerSheet, pickedDate: Date, for: TKTimeType)"},{"path":"\/documentation\/tripkitui\/tkuitimetablecard\/timepickerrequestsresign(_:)","type":"method","title":"func timePickerRequestsResign(TKUITimePickerSheet)"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard\/tkuitimepickersheetdelegate-implementations"},{"title":"UIScrollViewDelegate Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func scrollViewDidScroll(UIScrollView)","path":"\/documentation\/tripkitui\/tkuitimetablecard\/scrollviewdidscroll(_:)","type":"method"},{"title":"func scrollViewShouldScrollToTop(UIScrollView) -> Bool","path":"\/documentation\/tripkitui\/tkuitimetablecard\/scrollviewshouldscrolltotop(_:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard\/uiscrollviewdelegate-implementations"},{"title":"UISearchBarDelegate Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func searchBarSearchButtonClicked(UISearchBar)","path":"\/documentation\/tripkitui\/tkuitimetablecard\/searchbarsearchbuttonclicked(_:)","type":"method"}],"path":"\/documentation\/tripkitui\/tkuitimetablecard\/uisearchbardelegate-implementations"}]},{"path":"\/documentation\/tripkitui\/tkuitimetablecarddelegate","type":"protocol","title":"TKUITimetableCardDelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecarddelegate\/timetablecard(_:forsegmentatindex:updatedwithtrip:)","title":"func timetableCard(TKUITimetableCard, forSegmentAtIndex: Int, updatedWithTrip: Trip)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuitimetablecarddelegate\/timetablecard(_:selecteddeparture:)","title":"func timetableCard(TKUITimetableCard, selectedDeparture: StopVisits)"}]},{"path":"\/documentation\/tripkitui\/tkuiservicecard","type":"class","title":"TKUIServiceCard","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"TKUIServiceCard.Configuration","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/configuration\/bicycleaccessibilityimage","type":"property","title":"var bicycleAccessibilityImage: UIImage"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/configuration\/bicycleaccessibilityimagemini","type":"property","title":"var bicycleAccessibilityImageMini: UIImage"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/configuration\/serviceactionsfactory","type":"property","title":"var serviceActionsFactory: (@MainActor (EmbarkationPair) -> [TKUICardAction<TKUIServiceCard, EmbarkationPair>])?"}],"path":"\/documentation\/tripkitui\/tkuiservicecard\/configuration"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(titleView: (UIView, UIButton)?, embarkation: StopVisits, disembarkation: StopVisits?, reusing: TKUITripMapManager?)","path":"\/documentation\/tripkitui\/tkuiservicecard\/init(titleview:embarkation:disembarkation:reusing:)"},{"type":"init","title":"init(titleView: (UIView, UIButton)?, publicTransportSegment: TKSegment, reusing: TKUITripMapManager?)","path":"\/documentation\/tripkitui\/tkuiservicecard\/init(titleview:publictransportsegment:reusing:)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func didAppear(animated: Bool)","path":"\/documentation\/tripkitui\/tkuiservicecard\/didappear(animated:)"},{"type":"method","title":"func didBuild(tableView: UITableView)","path":"\/documentation\/tripkitui\/tkuiservicecard\/didbuild(tableview:)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKUIServiceCard.EmbarkationPair","path":"\/documentation\/tripkitui\/tkuiservicecard\/embarkationpair"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var config: TKUIServiceCard.Configuration","path":"\/documentation\/tripkitui\/tkuiservicecard\/config"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"UIScrollViewDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func scrollViewShouldScrollToTop(UIScrollView) -> Bool","type":"method","path":"\/documentation\/tripkitui\/tkuiservicecard\/scrollviewshouldscrolltotop(_:)"}],"path":"\/documentation\/tripkitui\/tkuiservicecard\/uiscrollviewdelegate-implementations"},{"type":"symbol","title":"UITableViewDelegate Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/tableview(_:didselectrowat:)","type":"method","title":"func tableView(UITableView, didSelectRowAt: IndexPath)"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/tableview(_:heightforheaderinsection:)","type":"method","title":"func tableView(UITableView, heightForHeaderInSection: Int) -> CGFloat"},{"path":"\/documentation\/tripkitui\/tkuiservicecard\/tableview(_:viewforheaderinsection:)","type":"method","title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?"}],"path":"\/documentation\/tripkitui\/tkuiservicecard\/uitableviewdelegate-implementations"}]},{"type":"groupMarker","title":"Search Interface"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller","type":"class","title":"TKUIAutocompletionViewController","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/init(coder:)"},{"type":"init","title":"init(providers: [TKAutocompleting])","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/init(providers:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var biasMapRect: MKMapRect","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/biasmaprect"},{"type":"property","title":"var delegate: TKUIAutocompletionViewControllerDelegate?","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/delegate"},{"type":"property","title":"let providers: [TKAutocompleting]","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/providers"},{"type":"property","title":"var showAccessoryButtons: Bool","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/showaccessorybuttons"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func scrollViewDidScroll(UIScrollView)","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/scrollviewdidscroll(_:)"},{"type":"method","title":"func viewDidLoad()","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/viewdidload()"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"UISearchResultsUpdating Implementations","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/uisearchresultsupdating-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func updateSearchResults(for: UISearchController)","type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontroller\/updatesearchresults(for:)"}]}]},{"path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontrollerdelegate","type":"protocol","title":"TKUIAutocompletionViewControllerDelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontrollerdelegate\/autocompleter(_:didselect:)","type":"method","title":"func autocompleter(TKUIAutocompletionViewController, didSelect: TKAutocompletionSelection)"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionviewcontrollerdelegate\/autocompleter(_:didselectaccessoryfor:)","type":"method","title":"func autocompleter(TKUIAutocompletionViewController, didSelectAccessoryFor: TKAutocompletionSelection)"}]},{"type":"groupMarker","title":"Home Screen Interface"},{"path":"\/documentation\/tripkitui\/tkuihomeviewcontroller","type":"class","title":"TKUIHomeViewController","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/init(coder:)"},{"type":"init","title":"init(mapManager: TKUICompatibleHomeMapManager?, initialPosition: TGCardPosition?)","path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/init(mapmanager:initialposition:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var autocompletionDataProviders: [TKAutocompleting]?","path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/autocompletiondataproviders"},{"type":"property","title":"var initialPosition: TGCardPosition?","path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/initialposition"},{"type":"property","title":"var mapManager: TKUICompatibleHomeMapManager?","path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/mapmanager"},{"type":"property","title":"var searchResultsDelegate: TKUIHomeCardSearchResultsDelegate?","path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/searchresultsdelegate"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func viewDidLoad()","path":"\/documentation\/tripkitui\/tkuihomeviewcontroller\/viewdidload()"}]},{"path":"\/documentation\/tripkitui\/tkuihomecard","type":"class","title":"TKUIHomeCard","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration","title":"TKUIHomeCard.Configuration","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/autocompletiondataproviders","title":"var autocompletionDataProviders: [TKAutocompleting]?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/componentviewmodelclasses","title":"var componentViewModelClasses: [TKUIHomeComponentViewModel.Type]","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/directionbuttonstartsqueryinputindestinationmode","title":"var directionButtonStartsQueryInputInDestinationMode: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/ignorecomponentcustomization","title":"var ignoreComponentCustomization: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/requestlocationservicesonload","title":"var requestLocationServicesOnLoad: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/selectionmode","title":"var selectionMode: SelectionMode","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/topmaptoolbaritems","title":"var topMapToolbarItems: [UIView]?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/configuration\/voiceoverstartmode","title":"var voiceOverStartMode: TKUIHomeCard.VoiceOverMode","type":"property"}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/init(mapmanager:initialposition:)","title":"init(mapManager: TKUICompatibleHomeMapManager?, initialPosition: TGCardPosition?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/disposebag","title":"let disposeBag: DisposeBag","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/preferredview","title":"var preferredView: UIView?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/searchresultdelegate","title":"var searchResultDelegate: TKUIHomeCardSearchResultsDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/didappear(animated:)","title":"func didAppear(animated: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/didbuild(tableview:)","title":"func didBuild(tableView: UITableView)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/diddisappear(animated:)","title":"func didDisappear(animated: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/entersearchmode()","title":"func enterSearchMode()","type":"method"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/showqueryinput(startingindestinationmode:)","title":"func showQueryInput(startingInDestinationMode: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/willappear(animated:)","title":"func willAppear(animated: Bool)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/config","title":"static var config: TKUIHomeCard.Configuration","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/hidecomponent(id:)","title":"static func hideComponent(id: String)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction","title":"TKUIHomeCard.ComponentAction","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/entersearchmode","title":"case enterSearchMode","type":"case"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/handleselection(_:component:)","title":"case handleSelection(TKAutocompletionSelection, component: TKUIHomeComponentViewModel?)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/hidesection(identifier:)","title":"case hideSection(identifier: String)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/present(_:innavigationcontroller:)","title":"case present(UIViewController, inNavigationController: Bool)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/push(_:selection:)","title":"case push(TGCard, selection: MKAnnotation?)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/showcustomizer","title":"case showCustomizer","type":"case"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/success","title":"case success","type":"case"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/componentaction\/trigger(_:)","title":"case trigger((UIViewController) -> Void)","type":"case"}],"type":"enum"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/selectionmode","title":"TKUIHomeCard.SelectionMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case callback((TKAutocompletionSelection, TKUIHomeComponentViewModel?) -> Bool)","type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/selectionmode\/callback(_:)"},{"title":"case `default`","type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/selectionmode\/default"},{"title":"case selectOnMap","type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/selectionmode\/selectonmap"}],"type":"enum"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode","title":"TKUIHomeCard.VoiceOverMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case routeButton","type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode\/routebutton"},{"title":"case searchBar","type":"case","path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode\/searchbar"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/voiceovermode\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/tkuiroutingqueryinputcarddelegate-implementations","title":"TKUIRoutingQueryInputCardDelegate Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func routingQueryInput(card: TKUIRoutingQueryInputCard, selectedOrigin: MKAnnotation, destination: MKAnnotation)","path":"\/documentation\/tripkitui\/tkuihomecard\/routingqueryinput(card:selectedorigin:destination:)","type":"method"}],"type":"symbol"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/uisearchbardelegate-implementations","title":"UISearchBarDelegate Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func searchBar(UISearchBar, textDidChange: String)","path":"\/documentation\/tripkitui\/tkuihomecard\/searchbar(_:textdidchange:)"},{"type":"method","title":"func searchBarCancelButtonClicked(UISearchBar)","path":"\/documentation\/tripkitui\/tkuihomecard\/searchbarcancelbuttonclicked(_:)"},{"type":"method","title":"func searchBarSearchButtonClicked(UISearchBar)","path":"\/documentation\/tripkitui\/tkuihomecard\/searchbarsearchbuttonclicked(_:)"},{"type":"method","title":"func searchBarTextDidBeginEditing(UISearchBar)","path":"\/documentation\/tripkitui\/tkuihomecard\/searchbartextdidbeginediting(_:)"},{"type":"method","title":"func searchBarTextDidEndEditing(UISearchBar)","path":"\/documentation\/tripkitui\/tkuihomecard\/searchbartextdidendediting(_:)"}],"type":"symbol"},{"path":"\/documentation\/tripkitui\/tkuihomecard\/uitableviewdelegate-implementations","title":"UITableViewDelegate Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/tableview(_:contextmenuconfigurationforrowat:point:)","title":"func tableView(UITableView, contextMenuConfigurationForRowAt: IndexPath, point: CGPoint) -> UIContextMenuConfiguration?"},{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/tableview(_:leadingswipeactionsconfigurationforrowat:)","title":"func tableView(UITableView, leadingSwipeActionsConfigurationForRowAt: IndexPath) -> UISwipeActionsConfiguration?"},{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/tableview(_:trailingswipeactionsconfigurationforrowat:)","title":"func tableView(UITableView, trailingSwipeActionsConfigurationForRowAt: IndexPath) -> UISwipeActionsConfiguration?"},{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecard\/tableview(_:viewforheaderinsection:)","title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?"}],"type":"symbol"}]},{"path":"\/documentation\/tripkitui\/tkuihomecardsearchresultsdelegate","type":"protocol","title":"TKUIHomeCardSearchResultsDelegate","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func homeCard(TKUIHomeCard, selected: MKAnnotation)","path":"\/documentation\/tripkitui\/tkuihomecardsearchresultsdelegate\/homecard(_:selected:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel","type":"protocol","title":"TKUIHomeComponentViewModel","children":[{"type":"groupMarker","title":"Instance Properties"},{"children":[{"type":"groupMarker","children":[{"type":"property","title":"var customizerItem: TKUIHomeCardCustomizerItem?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/customizeritem-34abl"}],"title":"TKUIHomeComponentViewModel Implementations"}],"type":"property","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/customizeritem","title":"var customizerItem: TKUIHomeCardCustomizerItem?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/homecardsection","title":"var homeCardSection: Driver<TKUIHomeComponentContent>"},{"type":"property","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/identity","title":"var identity: String"},{"children":[{"children":[{"title":"var nextAction: Signal<TKUIHomeCard.ComponentAction>","type":"property","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/nextaction-2luib"}],"type":"groupMarker","title":"TKUIHomeComponentViewModel Implementations"}],"type":"property","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/nextaction","title":"var nextAction: Signal<TKUIHomeCard.ComponentAction>"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/cell(for:at:in:)","title":"func cell(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UITableViewCell?"},{"children":[{"type":"groupMarker","title":"TKUIHomeComponentViewModel Implementations","children":[{"type":"method","title":"func contextMenuConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UIContextMenuConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/contextmenuconfiguration(for:at:in:)-4kdip"}]}],"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/contextmenuconfiguration(for:at:in:)","title":"func contextMenuConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UIContextMenuConfiguration?"},{"children":[{"children":[{"title":"func leadingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/leadingswipeactionsconfiguration(for:at:in:)-62y67","type":"method"}],"title":"TKUIHomeComponentViewModel Implementations","type":"groupMarker"}],"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/leadingswipeactionsconfiguration(for:at:in:)","title":"func leadingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?"},{"children":[{"children":[{"path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/registercell(with:)-5ghju","title":"func registerCell(with: UITableView)","type":"method"}],"title":"TKUIHomeComponentViewModel Implementations","type":"groupMarker"}],"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/registercell(with:)","title":"func registerCell(with: UITableView)"},{"children":[{"type":"groupMarker","children":[{"title":"func trailingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/trailingswipeactionsconfiguration(for:at:in:)-1ylze"}],"title":"TKUIHomeComponentViewModel Implementations"}],"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/trailingswipeactionsconfiguration(for:at:in:)","title":"func trailingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuihomecomponentviewmodel\/buildinstance(from:)","title":"static func buildInstance(from: TKUIHomeComponentInput) -> Self"}]},{"path":"\/documentation\/tripkitui\/tkuihomecomponentcontent","type":"struct","title":"TKUIHomeComponentContent","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(items: [TKUIHomeComponentItem]?, header: TKUIHomeHeaderConfiguration?)","path":"\/documentation\/tripkitui\/tkuihomecomponentcontent\/init(items:header:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let header: TKUIHomeHeaderConfiguration?","path":"\/documentation\/tripkitui\/tkuihomecomponentcontent\/header","type":"property"},{"title":"let items: [TKUIHomeComponentItem]?","path":"\/documentation\/tripkitui\/tkuihomecomponentcontent\/items","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuihomecomponentinput","type":"struct","title":"TKUIHomeComponentInput","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentinput\/homecardwillappear","title":"let homeCardWillAppear: Observable<Bool>","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentinput\/itemselected","title":"let itemSelected: Signal<TKUIHomeComponentItem>","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentinput\/maprect","title":"let mapRect: Driver<MKMapRect>","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem","type":"protocol","title":"TKUIHomeComponentItem","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/canedit","title":"var canEdit: Bool","children":[{"children":[{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/canedit-1jnvs","title":"var canEdit: Bool","type":"property"}],"type":"groupMarker","title":"TKUIHomeComponentItem Implementations"}],"type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/equalitytoken","title":"var equalityToken: String","children":[{"type":"groupMarker","title":"TKUIHomeComponentItem Implementations","children":[{"type":"property","title":"var equalityToken: String","path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/equalitytoken-8otba"}]}],"type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/identity","title":"var identity: String","type":"property"},{"path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/isaction","title":"var isAction: Bool","children":[{"type":"groupMarker","title":"TKUIHomeComponentItem Implementations","children":[{"type":"property","path":"\/documentation\/tripkitui\/tkuihomecomponentitem\/isaction-4pb8c","title":"var isAction: Bool"}]}],"type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuihomeheaderconfiguration","type":"struct","title":"TKUIHomeHeaderConfiguration","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(title: String, action: (String, (TKUIHomeCard) -> TKUIHomeCard.ComponentAction)?)","path":"\/documentation\/tripkitui\/tkuihomeheaderconfiguration\/init(title:action:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var action: (title: String, handler: (TKUIHomeCard) -> TKUIHomeCard.ComponentAction)?","path":"\/documentation\/tripkitui\/tkuihomeheaderconfiguration\/action","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkitui\/tkuihomeheaderconfiguration\/title","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem","type":"struct","title":"TKUIHomeCardCustomizerItem","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(name: String, icon: UIImage, canBeHidden: Bool)","path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem\/init(name:icon:canbehidden:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var canBeHidden: Bool","path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem\/canbehidden","type":"property"},{"title":"let icon: UIImage","path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem\/icon","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkitui\/tkuihomecardcustomizeritem\/name","type":"property"}]},{"type":"groupMarker","title":"Core UI Components"},{"path":"\/documentation\/tripkitui\/tkuicardaction","type":"class","title":"TKUICardAction","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/tkuicardaction\/init(content:priority:handler:)","title":"init(content: AnyPublisher<TKUICardActionContent, Never>, priority: Int, handler: @MainActor (TKUICardAction<Card, Model>, Card, Model, UIView) -> Void)"},{"type":"init","path":"\/documentation\/tripkitui\/tkuicardaction\/init(title:accessibilitylabel:icon:style:priority:isenabled:handler:)-71i7z","title":"init(title: () -> String, accessibilityLabel: (() -> String)?, icon: () -> UIImage, style: (() -> TKUICardActionStyle)?, priority: Int, isEnabled: Bool, handler: @MainActor (Card, Model, UIView) -> Void)"},{"type":"init","path":"\/documentation\/tripkitui\/tkuicardaction\/init(title:accessibilitylabel:icon:style:priority:isenabled:handler:)-7hz67","title":"init(title: String, accessibilityLabel: String?, icon: UIImage, style: TKUICardActionStyle, priority: Int, isEnabled: Bool, handler: @MainActor (TKUICardAction<Card, Model>, Card, Model, UIView) -> Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicardaction\/accessibilitylabel","title":"var accessibilityLabel: String"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicardaction\/handler","title":"let handler: @MainActor (TKUICardAction<Card, Model>, Card, Model, UIView) -> Bool"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicardaction\/icon","title":"var icon: UIImage"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicardaction\/isenabled","title":"var isEnabled: Bool"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicardaction\/isinprogress","title":"var isInProgress: Bool"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicardaction\/priority","title":"var priority: Int"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicardaction\/style","title":"var style: TKUICardActionStyle"},{"type":"property","path":"\/documentation\/tripkitui\/tkuicardaction\/title","title":"var title: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuicardaction\/objectwillchange","type":"property","title":"var objectWillChange: ObservableObjectPublisher"}],"path":"\/documentation\/tripkitui\/tkuicardaction\/observableobject-implementations","title":"ObservableObject Implementations"}]},{"path":"\/documentation\/tripkitui\/tkuicustomization","type":"class","title":"TKUICustomization","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/alerthandler","type":"property","title":"var alertHandler: ((Error, UIViewController) -> Void)"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/cardactionnormalstyle","type":"property","title":"var cardActionNormalStyle: TKUICardActionNormalStyle"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/cardstyle","type":"property","title":"var cardStyle: TGCardStyle"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/colorcodetransiticons","type":"property","title":"var colorCodeTransitIcons: Bool"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/feedbackactiveitemhandler","type":"property","title":"var feedbackActiveItemHandler: ((Any) -> Void)?"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/forcecompactactionslayout","type":"property","title":"var forceCompactActionsLayout: Bool"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/locationinfotaphandler","type":"property","title":"var locationInfoTapHandler: ((TKUILocationInfo) -> TKUILocationHandlerAction)?"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/showcardactiontitle","type":"property","title":"var showCardActionTitle: Bool"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitui\/tkuicustomization\/shared","type":"property","title":"static let shared: TKUICustomization"}]},{"path":"\/documentation\/tripkitui\/tkuimapmanager","type":"class","title":"TKUIMapManager","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var animatedAnnotations: [any MKAnnotation]","path":"\/documentation\/tripkitui\/tkuimapmanager\/animatedannotations"},{"type":"property","title":"var annotationSelectionEnabled: Bool","path":"\/documentation\/tripkitui\/tkuimapmanager\/annotationselectionenabled"},{"type":"property","title":"var attributionDisplayer: (([TKAPI.DataAttribution], _ sender: UIView) -> Void)?","path":"\/documentation\/tripkitui\/tkuimapmanager\/attributiondisplayer"},{"type":"property","title":"var dynamicAnnotations: [any MKAnnotation]","path":"\/documentation\/tripkitui\/tkuimapmanager\/dynamicannotations"},{"type":"property","title":"var overlays: [any MKOverlay]","path":"\/documentation\/tripkitui\/tkuimapmanager\/overlays"},{"type":"property","title":"var selectionIdentifier: String?","path":"\/documentation\/tripkitui\/tkuimapmanager\/selectionidentifier"},{"type":"property","title":"var selectionMode: TKUIPolylineRenderer.SelectionMode","path":"\/documentation\/tripkitui\/tkuimapmanager\/selectionmode"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func annotationBuilder(for: MKAnnotation, in: MKMapView) -> TKUIAnnotationViewBuilder","path":"\/documentation\/tripkitui\/tkuimapmanager\/annotationbuilder(for:in:)"},{"type":"method","title":"func cleanUp(MKMapView, animated: Bool)","path":"\/documentation\/tripkitui\/tkuimapmanager\/cleanup(_:animated:)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:didadd:)","title":"func mapView(MKMapView, didAdd: [MKAnnotationView])"},{"type":"method","path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:didselect:)","title":"func mapView(MKMapView, didSelect: MKAnnotationView)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:regiondidchangeanimated:)","title":"func mapView(MKMapView, regionDidChangeAnimated: Bool)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:rendererfor:)","title":"func mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer"},{"type":"method","path":"\/documentation\/tripkitui\/tkuimapmanager\/mapview(_:viewfor:)","title":"func mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?"},{"type":"method","path":"\/documentation\/tripkitui\/tkuimapmanager\/takecharge(of:animated:)","title":"func takeCharge(of: MKMapView, animated: Bool)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuimapmanager\/updatedynamicannotations(animated:)","title":"func updateDynamicAnnotations(animated: Bool)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuimapmanager\/annotationbuilderfactory","title":"static var annotationBuilderFactory: ((MKAnnotation, MKMapView) -> TKUIAnnotationViewBuilder)"},{"type":"property","path":"\/documentation\/tripkitui\/tkuimapmanager\/pointsofintereststoexclude","title":"static var pointsOfInterestsToExclude: [MKPointOfInterestCategory]"}]},{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource","type":"class","title":"CollectionViewSectionedDataSource","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(configureCell: ConfigureCell, configureSupplementaryView: ConfigureSupplementaryView?, moveItem: MoveItem, canMoveItemAtIndexPath: CanMoveItemAtIndexPath)","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/init(configurecell:configuresupplementaryview:moveitem:canmoveitematindexpath:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var canMoveItemAtIndexPath: ((CollectionViewSectionedDataSource<Section>, IndexPath) -> Bool)?","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/canmoveitematindexpath-swift.property","type":"property"},{"title":"var configureCell: ConfigureCell","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/configurecell-swift.property","type":"property"},{"title":"var configureSupplementaryView: ConfigureSupplementaryView?","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/configuresupplementaryview-swift.property","type":"property"},{"title":"var moveItem: MoveItem","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/moveitem-swift.property","type":"property"},{"title":"var sectionModels: [Section]","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/sectionmodels","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func collectionView(UICollectionView, canMoveItemAt: IndexPath) -> Bool","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:canmoveitemat:)","type":"method"},{"title":"func collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:cellforitemat:)","type":"method"},{"title":"func collectionView(UICollectionView, moveItemAt: IndexPath, to: IndexPath)","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:moveitemat:to:)","type":"method"},{"title":"func collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:numberofitemsinsection:)","type":"method"},{"title":"func collectionView(UICollectionView, viewForSupplementaryElementOfKind: String, at: IndexPath) -> UICollectionReusableView","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/collectionview(_:viewforsupplementaryelementofkind:at:)","type":"method"},{"title":"func model(at: IndexPath) throws -> Any","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/model(at:)","type":"method"},{"title":"func numberOfSections(in: UICollectionView) -> Int","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/numberofsections(in:)","type":"method"},{"title":"func responds(to: Selector!) -> Bool","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/responds(to:)","type":"method"},{"title":"func setSections([Section])","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/setsections(_:)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(Int) -> Section","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/subscript(_:)-2ll7m","type":"subscript"},{"title":"subscript(IndexPath) -> Item","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/subscript(_:)-5hzlh","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"title":"CollectionViewSectionedDataSource.CanMoveItemAtIndexPath","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/canmoveitematindexpath-swift.typealias","type":"typealias"},{"title":"CollectionViewSectionedDataSource.ConfigureCell","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/configurecell-swift.typealias","type":"typealias"},{"title":"CollectionViewSectionedDataSource.ConfigureSupplementaryView","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/configuresupplementaryview-swift.typealias","type":"typealias"},{"title":"CollectionViewSectionedDataSource.Item","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/item","type":"typealias"},{"title":"CollectionViewSectionedDataSource.MoveItem","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/moveitem-swift.typealias","type":"typealias"},{"title":"CollectionViewSectionedDataSource.Section","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/section","type":"typealias"},{"title":"CollectionViewSectionedDataSource.SectionModelSnapshot","path":"\/documentation\/tripkitui\/collectionviewsectioneddatasource\/sectionmodelsnapshot","type":"typealias"}]},{"path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource","type":"class","title":"RxCollectionViewSectionedAnimatedDataSource","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(animationConfiguration: AnimationConfiguration, decideViewTransition: DecideViewTransition, configureCell: ConfigureCell, configureSupplementaryView: ConfigureSupplementaryView?, moveItem: MoveItem, canMoveItemAtIndexPath: CanMoveItemAtIndexPath)","type":"init","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/init(animationconfiguration:decideviewtransition:configurecell:configuresupplementaryview:moveitem:canmoveitematindexpath:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var animationConfiguration: AnimationConfiguration","type":"property","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/animationconfiguration"},{"title":"var decideViewTransition: DecideViewTransition","type":"property","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/decideviewtransition-swift.property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func collectionView(UICollectionView, observedEvent: Event<Element>)","type":"method","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/collectionview(_:observedevent:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxCollectionViewSectionedAnimatedDataSource.DecideViewTransition","type":"typealias","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/decideviewtransition-swift.typealias"},{"title":"RxCollectionViewSectionedAnimatedDataSource.Element","type":"typealias","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedanimateddatasource\/element"}]},{"path":"\/documentation\/tripkitui\/rxcollectionviewsectionedreloaddatasource","type":"class","title":"RxCollectionViewSectionedReloadDataSource","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func collectionView(UICollectionView, observedEvent: Event<Element>)","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedreloaddatasource\/collectionview(_:observedevent:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxCollectionViewSectionedReloadDataSource.Element","path":"\/documentation\/tripkitui\/rxcollectionviewsectionedreloaddatasource\/element","type":"typealias"}]},{"path":"\/documentation\/tripkitui\/rxpickerviewattributedstringadapter","type":"class","title":"RxPickerViewAttributedStringAdapter","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(components: Components, numberOfComponents: NumberOfComponents, numberOfRowsInComponent: NumberOfRowsInComponent, attributedTitleForRow: AttributedTitleForRow)","path":"\/documentation\/tripkitui\/rxpickerviewattributedstringadapter\/init(components:numberofcomponents:numberofrowsincomponent:attributedtitleforrow:)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func pickerView(UIPickerView, attributedTitleForRow: Int, forComponent: Int) -> NSAttributedString?","path":"\/documentation\/tripkitui\/rxpickerviewattributedstringadapter\/pickerview(_:attributedtitleforrow:forcomponent:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxPickerViewAttributedStringAdapter.AttributedTitleForRow","path":"\/documentation\/tripkitui\/rxpickerviewattributedstringadapter\/attributedtitleforrow","type":"typealias"}]},{"path":"\/documentation\/tripkitui\/rxpickerviewdatasource","type":"class","title":"RxPickerViewDataSource","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func numberOfComponents(in: UIPickerView) -> Int","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/numberofcomponents(in:)"},{"type":"method","title":"func pickerView(UIPickerView, numberOfRowsInComponent: Int) -> Int","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/pickerview(_:numberofrowsincomponent:)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"RxPickerViewDataSource.NumberOfComponents","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/numberofcomponents"},{"type":"typealias","title":"RxPickerViewDataSource.NumberOfRowsInComponent","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/numberofrowsincomponent"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"RxPickerViewDataSourceType Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func pickerView(UIPickerView, observedEvent: Event<Components>)","path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/pickerview(_:observedevent:)","type":"method"}],"path":"\/documentation\/tripkitui\/rxpickerviewdatasource\/rxpickerviewdatasourcetype-implementations"}]},{"path":"\/documentation\/tripkitui\/rxpickerviewstringadapter","type":"class","title":"RxPickerViewStringAdapter","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/rxpickerviewstringadapter\/init(components:numberofcomponents:numberofrowsincomponent:titleforrow:)","type":"init","title":"init(components: Components, numberOfComponents: NumberOfComponents, numberOfRowsInComponent: NumberOfRowsInComponent, titleForRow: TitleForRow)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/rxpickerviewstringadapter\/pickerview(_:titleforrow:forcomponent:)","type":"method","title":"func pickerView(UIPickerView, titleForRow: Int, forComponent: Int) -> String?"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/rxpickerviewstringadapter\/titleforrow","type":"typealias","title":"RxPickerViewStringAdapter.TitleForRow"}]},{"path":"\/documentation\/tripkitui\/rxpickerviewviewadapter","type":"class","title":"RxPickerViewViewAdapter","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(components: Components, numberOfComponents: NumberOfComponents, numberOfRowsInComponent: NumberOfRowsInComponent, viewForRow: ViewForRow)","path":"\/documentation\/tripkitui\/rxpickerviewviewadapter\/init(components:numberofcomponents:numberofrowsincomponent:viewforrow:)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func pickerView(UIPickerView, viewForRow: Int, forComponent: Int, reusing: UIView?) -> UIView","path":"\/documentation\/tripkitui\/rxpickerviewviewadapter\/pickerview(_:viewforrow:forcomponent:reusing:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxPickerViewViewAdapter.ViewForRow","path":"\/documentation\/tripkitui\/rxpickerviewviewadapter\/viewforrow","type":"typealias"}]},{"path":"\/documentation\/tripkitui\/rxpublisher","type":"class","title":"RxPublisher","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func receive<S>(subscriber: S)","type":"method","path":"\/documentation\/tripkitui\/rxpublisher\/receive(subscriber:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxPublisher.Failure","type":"typealias","path":"\/documentation\/tripkitui\/rxpublisher\/failure"},{"title":"RxPublisher.Output","type":"typealias","path":"\/documentation\/tripkitui\/rxpublisher\/output"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Publisher Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/rxpublisher\/asobservable()","title":"func asObservable() -> Observable<Output>","type":"method"}],"path":"\/documentation\/tripkitui\/rxpublisher\/publisher-implementations"},{"title":"Publisher Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/rxpublisher\/asobservable()","title":"func asObservable() -> Observable<Output>","type":"method"}],"path":"\/documentation\/tripkitui\/rxpublisher\/publisher-implementations"}]},{"path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource","type":"class","title":"RxTableViewSectionedAnimatedDataSource","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/init(animationconfiguration:decideviewtransition:configurecell:titleforheaderinsection:titleforfooterinsection:caneditrowatindexpath:canmoverowatindexpath:sectionindextitles:sectionforsectionindextitle:)","title":"init(animationConfiguration: AnimationConfiguration, decideViewTransition: DecideViewTransition, configureCell: ConfigureCell, titleForHeaderInSection: TitleForHeaderInSection, titleForFooterInSection: TitleForFooterInSection, canEditRowAtIndexPath: CanEditRowAtIndexPath, canMoveRowAtIndexPath: CanMoveRowAtIndexPath, sectionIndexTitles: SectionIndexTitles, sectionForSectionIndexTitle: SectionForSectionIndexTitle)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/animationconfiguration","title":"var animationConfiguration: AnimationConfiguration"},{"type":"property","path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/decideviewtransition-swift.property","title":"var decideViewTransition: DecideViewTransition"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/tableview(_:observedevent:)","title":"func tableView(UITableView, observedEvent: Event<Element>)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/decideviewtransition-swift.typealias","title":"RxTableViewSectionedAnimatedDataSource.DecideViewTransition"},{"type":"typealias","path":"\/documentation\/tripkitui\/rxtableviewsectionedanimateddatasource\/element","title":"RxTableViewSectionedAnimatedDataSource.Element"}]},{"path":"\/documentation\/tripkitui\/rxtableviewsectionedreloaddatasource","type":"class","title":"RxTableViewSectionedReloadDataSource","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tableView(UITableView, observedEvent: Event<Element>)","type":"method","path":"\/documentation\/tripkitui\/rxtableviewsectionedreloaddatasource\/tableview(_:observedevent:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"RxTableViewSectionedReloadDataSource.Element","type":"typealias","path":"\/documentation\/tripkitui\/rxtableviewsectionedreloaddatasource\/element"}]},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller","type":"class","title":"TKUIAlertViewController","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/setalerts(_:)","title":"func setAlerts([TKAPI.Alert])","type":"method"},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/tableview(_:didselectrowat:)","title":"func tableView(UITableView, didSelectRowAt: IndexPath)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"path":"\/documentation\/tripkitui\/tkuialertviewcontroller\/viewwillappear(_:)","title":"func viewWillAppear(Bool)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder","type":"class","title":"TKUIAnnotationViewBuilder","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/init(for:in:)","title":"init(for: MKAnnotation, in: MKMapView)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/annotation","title":"let annotation: MKAnnotation","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/mapview","title":"let mapView: MKMapView","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/build()","title":"func build() -> MKAnnotationView?","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/enableclustering(_:)","title":"func enableClustering(Bool) -> TKUIAnnotationViewBuilder","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/prefermarker(_:)","title":"func preferMarker(Bool) -> TKUIAnnotationViewBuilder","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/withheading(_:)","title":"func withHeading(CLLocationDirection) -> TKUIAnnotationViewBuilder","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiannotationviewbuilder\/update(annotationview:forheading:)","title":"static func update(annotationView: MKAnnotationView, forHeading: CLLocationDirection)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller","type":"class","title":"TKUIAttributionTableViewController","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/init(attributions:)","title":"init(attributions: [TKAPI.DataAttribution])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/attributions","title":"var attributions: [TKAPI.DataAttribution]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/numberofsections(in:)","title":"func numberOfSections(in: UITableView) -> Int","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/tableview(_:accessorybuttontappedforrowwith:)","title":"func tableView(UITableView, accessoryButtonTappedForRowWith: IndexPath)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/tableview(_:cellforrowat:)","title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/tableview(_:numberofrowsinsection:)","title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/viewdidappear(_:)","title":"func viewDidAppear(Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/viewdidload()","title":"func viewDidLoad()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributiontableviewcontroller\/presentattributionhandler","title":"static var presentAttributionHandler: ((TKUIAttributionTableViewController, URL) -> Void)?","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuiattributionview","type":"class","title":"TKUIAttributionView","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/init(contentalignment:)","title":"init(contentAlignment: Alignment)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/init(frame:)","title":"init(frame: CGRect)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/contentalignment","title":"var contentAlignment: Alignment","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/logo","title":"var logo: UIImageView!","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.property","title":"var style: Style","type":"property"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/title","title":"var title: UILabel!","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/newview(_:wording:fitsin:alignment:)","title":"static func newView(TKAPI.DataAttribution, wording: Wording, fitsIn: UIView?, alignment: Alignment) -> TKUIAttributionView","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/newview(_:wording:fitsin:alignment:style:)","title":"static func newView([TKAPI.DataAttribution], wording: Wording, fitsIn: UIView?, alignment: Alignment, style: Style) -> TKUIAttributionView?","type":"method"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/newview(title:icon:iconurl:url:alignment:wording:style:)","title":"static func newView(title: String, icon: UIImage?, iconURL: URL?, url: URL?, alignment: Alignment, wording: Wording, style: Style) -> TKUIAttributionView","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment","title":"TKUIAttributionView.Alignment","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case center","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/center","type":"case"},{"title":"case leading","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/leading","type":"case"},{"title":"case trailing","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/trailing","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuiattributionview\/alignment\/!=(_:_:)","type":"op"}],"type":"symbol"}],"type":"enum"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum","title":"TKUIAttributionView.Style","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case mapAnnotation","path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum\/mapannotation"},{"type":"case","title":"case regular","path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum\/regular"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiattributionview\/style-swift.enum\/equatable-implementations"}],"type":"enum"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/wording","title":"TKUIAttributionView.Wording","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case dataProvidedBy","path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/dataprovidedby","type":"case"},{"title":"case mapBy","path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/mapby","type":"case"},{"title":"case poweredBy","path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/poweredby","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiattributionview\/wording\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}],"type":"enum"}]},{"path":"\/documentation\/tripkitui\/tkuicircleannotationview","type":"class","title":"TKUICircleAnnotationView","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicircleannotationview\/init(annotation:drawlarge:reuseidentifier:)","title":"init(annotation: MKAnnotation?, drawLarge: Bool, reuseIdentifier: String?)","type":"init"},{"path":"\/documentation\/tripkitui\/tkuicircleannotationview\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicircleannotationview\/bordercolor","title":"var borderColor: UIColor?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicircleannotationview\/circlecolor","title":"var circleColor: UIColor?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicircleannotationview\/isfaded","title":"var isFaded: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicircleannotationview\/islarge","title":"let isLarge: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicircleannotationview\/draw(_:)","title":"func draw(CGRect)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuicomposingmapmanager","type":"class","title":"TKUIComposingMapManager","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicomposingmapmanager\/init(composing:ontopof:)","title":"init(composing: TKUIMapManager, onTopOf: TGMapManager)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicomposingmapmanager\/cleanup(_:animated:)","title":"func cleanUp(MKMapView, animated: Bool)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuicomposingmapmanager\/takecharge(of:animated:)","title":"func takeCharge(of: MKMapView, animated: Bool)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewcontroller","type":"class","title":"TKUIDateTimePickerViewController","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func build(selection: TKUIDateTimePickerViewModel.Selection, timeZone: TimeZone, items: [TKUIDateTimePickerViewModel.ToggleItem], minimumDate: Date?, maximumDate: Date?, onConfirm: (TKUIDateTimePickerViewModel.Selection) -> Void) -> TKUIDateTimePickerViewController","path":"\/documentation\/tripkitui\/tkuidatetimepickerviewcontroller\/build(selection:timezone:items:minimumdate:maximumdate:onconfirm:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel","type":"class","title":"TKUIDateTimePickerViewModel","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/toggleitem","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/toggleitem\/init(name:isselected:)","title":"init(name: String, isSelected: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/toggleitem\/id","title":"let id: String","type":"property"}],"type":"struct","title":"TKUIDateTimePickerViewModel.ToggleItem"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/selection","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case dateTime(Date)","path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/selection\/datetime(_:)","type":"case"},{"title":"case special(String)","path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/selection\/special(_:)","type":"case"}],"type":"enum","title":"TKUIDateTimePickerViewModel.Selection"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/observableobject-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerviewmodel\/objectwillchange","title":"var objectWillChange: ObservableObjectPublisher","type":"property"}],"type":"symbol","title":"ObservableObject Implementations"}]},{"path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder","type":"class","title":"TKUIDefaultPageBuilder","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cardIdentifier(for: TKSegment) -> String?","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/cardidentifier(for:)","type":"method"},{"title":"func cards(for: TKSegment, mapManager: TKUITripMapManager) -> [(TGCard, TKUISegmentMode)]","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/cards(for:mapmanager:)","type":"method"},{"title":"func cleanUp(existingCards: [TGCard])","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/cleanup(existingcards:)","type":"method"},{"title":"func shouldUpdate(trip: Trip, counter: Int) -> Bool","path":"\/documentation\/tripkitui\/tkuidefaultpagebuilder\/shouldupdate(trip:counter:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuiimageannotationview","type":"class","title":"TKUIImageAnnotationView","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(annotation: MKAnnotation?, reuseIdentifier: String?)","path":"\/documentation\/tripkitui\/tkuiimageannotationview\/init(annotation:reuseidentifier:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var annotation: MKAnnotation?","path":"\/documentation\/tripkitui\/tkuiimageannotationview\/annotation"}]},{"path":"\/documentation\/tripkitui\/tkuilocationcard","type":"class","title":"TKUILocationCard","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuilocationcard\/configuration","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuilocationcard\/configuration\/actionfactory","type":"property","title":"var actionFactory: ((TKNamedCoordinate) -> [Action])?"}],"title":"TKUILocationCard.Configuration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuilocationcard\/init(for:routebutton:)","title":"init(for: TKNamedCoordinate, routeButton: TKUILocationInfo.RouteButton)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuilocationcard\/didbuild(tableview:)","title":"func didBuild(tableView: UITableView)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuilocationcard\/action","title":"TKUILocationCard.Action","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuilocationcard\/config","title":"static var config: TKUILocationCard.Configuration","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuilocationmapmanager","type":"class","title":"TKUILocationMapManager","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/tkuilocationmapmanager\/init(for:)","title":"init(for: TKNamedCoordinate)"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuilocationmapmanager\/takecharge(of:animated:)","title":"func takeCharge(of: MKMapView, animated: Bool)"}]},{"path":"\/documentation\/tripkitui\/tkuimodeannotationview","type":"class","title":"TKUIModeAnnotationView","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(annotation: MKAnnotation?, reuseIdentifier: String?)","path":"\/documentation\/tripkitui\/tkuimodeannotationview\/init(annotation:reuseidentifier:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var annotation: MKAnnotation?","path":"\/documentation\/tripkitui\/tkuimodeannotationview\/annotation","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let defaultSize: CGSize","path":"\/documentation\/tripkitui\/tkuimodeannotationview\/defaultsize","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuimodepicker","type":"class","title":"TKUIModePicker","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/tripkitui\/tkuimodepicker\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var containerView: UIView?","type":"property","path":"\/documentation\/tripkitui\/tkuimodepicker\/containerview"},{"title":"var isEnabled: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuimodepicker\/isenabled"},{"title":"var rx_pickedModes: Signal<Set<Item>>","type":"property","path":"\/documentation\/tripkitui\/tkuimodepicker\/rx_pickedmodes"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func configure(all: [Item], updateAll: Bool, currentlyEnabled: (Item) -> Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuimodepicker\/configure(all:updateall:currentlyenabled:)"}]},{"path":"\/documentation\/tripkitui\/tkuinearbycell","type":"class","title":"TKUINearbyCell","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbycell\/nearbyitem","title":"var nearbyItem: TKUINearbyViewModel.Item?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbycell\/awakefromnib()","title":"func awakeFromNib()","type":"method"},{"path":"\/documentation\/tripkitui\/tkuinearbycell\/prepareforreuse()","title":"func prepareForReuse()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbycell\/nib","title":"static var nib: UINib","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbycell\/reuseidentifier","title":"static var reuseIdentifier: String","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager","type":"class","title":"TKUINearbyMapManager","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/init(defaultmaprect:)","type":"init","title":"init(defaultMapRect: MKMapRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapcenter","type":"property","title":"var mapCenter: Driver<CLLocationCoordinate2D?>"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/maprect","type":"property","title":"var mapRect: Driver<MKMapRect>"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapselection","type":"property","title":"var mapSelection: Signal<TKUIIdentifiableAnnotation?>"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/searchresult","type":"property","title":"var searchResult: MKAnnotation?"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/viewmodel","type":"property","title":"var viewModel: TKUINearbyViewModel?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/cleanup(_:animated:)","type":"method","title":"func cleanUp(MKMapView, animated: Bool)"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapview(_:didchange:animated:)","type":"method","title":"func mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapview(_:didselect:)","type":"method","title":"func mapView(MKMapView, didSelect: MKAnnotationView)"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/mapview(_:regiondidchangeanimated:)","type":"method","title":"func mapView(MKMapView, regionDidChangeAnimated: Bool)"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/takecharge(of:animated:)","type":"method","title":"func takeCharge(of: MKMapView, animated: Bool)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/tkuicompatiblehomemapmanager-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/nextfrommap","type":"property","title":"var nextFromMap: Observable<TKUIHomeCard.ComponentAction>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/onhomecardappearance(_:)","type":"method","title":"func onHomeCardAppearance(Bool)"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/select(_:)","type":"method","title":"func select(MKAnnotation)"},{"path":"\/documentation\/tripkitui\/tkuinearbymapmanager\/zoom(to:animated:)","type":"method","title":"func zoom(to: TKRegion.City, animated: Bool)"}],"type":"symbol","title":"TKUICompatibleHomeMapManager Implementations"}]},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel","type":"class","title":"TKUINearbyViewModel","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/distance","title":"let distance: Driver<CLLocationDistance?>","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/heading","title":"let heading: Driver<CLLocationDirection?>","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/mapannotation","title":"var mapAnnotation: TKUIIdentifiableAnnotation?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/modecoordinate","title":"let modeCoordinate: TKModeCoordinate","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/providericon","title":"let providerIcon: UIImage?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/providericonurl","title":"let providerIconURL: URL?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/subtitle","title":"let subtitle: Driver<String?>","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/vehicle","title":"let vehicle: TKAPI.SharedVehicleInfo?","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/!=(_:_:)"},{"type":"op","title":"static func == (TKUINearbyViewModel.Item, TKUINearbyViewModel.Item) -> Bool","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/==(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/identifiabletype-implementations","children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/identity-swift.typealias","title":"TKUINearbyViewModel.Item.Identity","type":"typealias"}],"title":"IdentifiableType Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/tkuihomecomponentitem-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var canEdit: Bool","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/canedit"},{"type":"property","title":"var equalityToken: String","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/equalitytoken"},{"type":"property","title":"var identity: Identity","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/identity-swift.property"},{"type":"property","title":"var isAction: Bool","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item\/isaction"}],"title":"TKUIHomeComponentItem Implementations"}],"title":"TKUINearbyViewModel.Item","type":"struct","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/item"},{"children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(pickedModes: Signal<Set<TKModeInfo>>, selection: Signal<TKUINearbyViewModel.Item>, searchResult: Driver<MKAnnotation>)","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput\/init(pickedmodes:selection:searchresult:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let pickedModes: Signal<Set<TKModeInfo>>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput\/pickedmodes"},{"type":"property","title":"let searchResult: Driver<MKAnnotation>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput\/searchresult"},{"type":"property","title":"let selection: Signal<TKUINearbyViewModel.Item>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput\/selection"}],"title":"TKUINearbyViewModel.ListInput","type":"struct","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/listinput"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput\/init(maprect:selection:focus:)","title":"init(mapRect: Driver<MKMapRect>, selection: Signal<TKUIIdentifiableAnnotation?>, focus: Signal<MKAnnotation?>)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput\/focus","title":"let focus: Signal<MKAnnotation?>"},{"type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput\/maprect","title":"let mapRect: Driver<MKMapRect>"},{"type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput\/selection","title":"let selection: Signal<TKUIIdentifiableAnnotation?>"}],"title":"TKUINearbyViewModel.MapInput","type":"struct","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapinput"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var header: String","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/header"},{"title":"var items: [Item]","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/items"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var identity: Identity","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/identity-swift.property"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKUINearbyViewModel.Section.Identity","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/identity-swift.typealias"}],"title":"IdentifiableType Implementations","type":"symbol","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/identifiabletype-implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(original: TKUINearbyViewModel.Section, items: [Item])","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/init(original:items:)","type":"init"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUINearbyViewModel.Section.Item","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/item","type":"typealias"}],"title":"SectionModelType Implementations","type":"symbol","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section\/sectionmodeltype-implementations"}],"title":"TKUINearbyViewModel.Section","type":"struct","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/section"},{"title":"Initializers","type":"groupMarker"},{"title":"init(limitTo: String?, strictModeMatch: Bool, fixedLocation: MKAnnotation?, selectedLocationID: String?, cardInput: ListInput, mapInput: MapInput)","type":"init","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/init(limitto:strictmodematch:fixedlocation:selectedlocationid:cardinput:mapinput:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let availableModes: Driver<[TKModeInfo]>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/availablemodes"},{"title":"let error: Driver<Error>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/error"},{"title":"let fixedLocation: MKAnnotation?","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/fixedlocation"},{"title":"let limitToMode: String?","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/limittomode","type":"property"},{"title":"let mapAnnotationToSelect: Signal<TKUIIdentifiableAnnotation>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapannotationtoselect","type":"property"},{"title":"let mapAnnotations: Driver<[TKUIIdentifiableAnnotation]>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapannotations","type":"property"},{"title":"let mapOverlays: Driver<[MKOverlay]>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/mapoverlays","type":"property"},{"title":"let next: Signal<Next>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/next-swift.property","type":"property"},{"title":"let searchResultToShow: Driver<MKAnnotation?>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/searchresulttoshow","type":"property"},{"title":"let sections: Driver<[Section]>","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/sections","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case location(TKModeCoordinate)","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/next-swift.enum\/location(_:)"},{"type":"case","title":"case stop(TKUIStopAnnotation)","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/next-swift.enum\/stop(_:)"}],"title":"TKUINearbyViewModel.Next","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/next-swift.enum","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var customizerItem: TKUIHomeCardCustomizerItem?","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/customizeritem"},{"title":"var homeCardSection: Driver<TKUIHomeComponentContent>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/homecardsection"},{"title":"var identity: String","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/identity"},{"title":"var nextAction: Signal<TKUIHomeCard.ComponentAction>","type":"property","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/nextaction"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cell(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UITableViewCell?","type":"method","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/cell(for:at:in:)"},{"title":"func contextMenuConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UIContextMenuConfiguration?","type":"method","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/contextmenuconfiguration(for:at:in:)"},{"title":"func leadingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","type":"method","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/leadingswipeactionsconfiguration(for:at:in:)"},{"title":"func registerCell(with: UITableView)","type":"method","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/registercell(with:)"},{"title":"func trailingSwipeActionsConfiguration(for: TKUIHomeComponentItem, at: IndexPath, in: UITableView) -> UISwipeActionsConfiguration?","type":"method","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/trailingswipeactionsconfiguration(for:at:in:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func buildInstance(from: TKUIHomeComponentInput) -> Self","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/buildinstance(from:)"}],"title":"TKUIHomeComponentViewModel Implementations","path":"\/documentation\/tripkitui\/tkuinearbyviewmodel\/tkuihomecomponentviewmodel-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkitui\/tkuinotificationmanager","type":"class","title":"TKUINotificationManager","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var delegate: TKUINotificationManagerDelegate?","path":"\/documentation\/tripkitui\/tkuinotificationmanager\/delegate","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clearAllRequests()","path":"\/documentation\/tripkitui\/tkuinotificationmanager\/clearallrequests()","type":"method"},{"title":"func clearRequests(of: TKUINotificationSubscription.Context)","path":"\/documentation\/tripkitui\/tkuinotificationmanager\/clearrequests(of:)","type":"method"},{"title":"func getRequests(from: TKUINotificationSubscription.Context) -> [UNNotificationRequest]","path":"\/documentation\/tripkitui\/tkuinotificationmanager\/getrequests(from:)","type":"method"},{"title":"func isSubscribed(to: TKUINotificationSubscription.Context) -> Bool","path":"\/documentation\/tripkitui\/tkuinotificationmanager\/issubscribed(to:)","type":"method"},{"title":"func subscribe(to: TKUINotificationSubscription.Context, updates: ([UNNotificationRequest]) -> Void)","path":"\/documentation\/tripkitui\/tkuinotificationmanager\/subscribe(to:updates:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKUINotificationManager","path":"\/documentation\/tripkitui\/tkuinotificationmanager\/shared","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription","type":"class","title":"TKUINotificationSubscription","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/add(request:)","type":"method","title":"func add(request: UNNotificationRequest)"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/clearrequests()","type":"method","title":"func clearRequests()"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/getrequests()","type":"method","title":"func getRequests() -> [UNNotificationRequest]"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/issubscribed()","type":"method","title":"func isSubscribed() -> Bool"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/subscribe(_:)","type":"method","title":"func subscribe(([UNNotificationRequest]) -> Void)"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/pushnotifications","type":"case","title":"case pushNotifications"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/tripalerts","type":"case","title":"case tripAlerts"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/identifier","type":"property","title":"var identifier: String"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuinotificationsubscription\/context\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"title":"TKUINotificationSubscription.Context"}]},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer","type":"class","title":"TKUIPolylineRenderer","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/init(polyline:)","title":"init(polyline: MKPolyline)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/backgroundcolor","title":"var backgroundColor: UIColor?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/bordercolor","title":"var borderColor: UIColor","type":"property"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/bordermultiplier","title":"var borderMultiplier: CGFloat","type":"property"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/filldashbackground","title":"var fillDashBackground: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionidentifier","title":"var selectionIdentifier: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/draw(_:zoomscale:in:)","title":"func draw(MKMapRect, zoomScale: MKZoomScale, in: CGContext)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode","title":"TKUIPolylineRenderer.SelectionMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case regularWithNormalColor","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode\/regularwithnormalcolor"},{"type":"case","title":"case thickWithSelectionColor","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode\/thickwithselectioncolor"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode\/!=(_:_:)"}],"path":"\/documentation\/tripkitui\/tkuipolylinerenderer\/selectionmode\/equatable-implementations"}],"type":"enum"}]},{"path":"\/documentation\/tripkitui\/tkuiprogresscell","type":"class","title":"TKUIProgressCell","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func awakeFromNib()","path":"\/documentation\/tripkitui\/tkuiprogresscell\/awakefromnib()"},{"type":"method","title":"func prepareForReuse()","path":"\/documentation\/tripkitui\/tkuiprogresscell\/prepareforreuse()"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let nib: UINib","path":"\/documentation\/tripkitui\/tkuiprogresscell\/nib"},{"type":"property","title":"static let reuseIdentifier: String","path":"\/documentation\/tripkitui\/tkuiprogresscell\/reuseidentifier"}]},{"path":"\/documentation\/tripkitui\/tkuiresultsfetcher","type":"class","title":"TKUIResultsFetcher","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/modereplacementhandler","title":"static var modeReplacementHandler: ((TKRegion, Set<String>, TripRequest) -> Single<Set<String>>)?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/replacementhandler","title":"static var replacementHandler: (CLLocation) -> TKNamedCoordinate"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/streamtrips(for:modes:classifier:baseurl:)","title":"static func streamTrips(for: TripRequest, modes: Set<String>?, classifier: TKTripClassifier?, baseURL: URL?) -> Observable<Progress>"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/finished","title":"case finished","type":"case"},{"path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/locating","title":"case locating","type":"case"},{"path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/partial(completed:total:)","title":"case partial(completed: Int, total: Int)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/started(total:)","title":"case started(total: Int)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuiresultsfetcher\/progress\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"title":"TKUIResultsFetcher.Progress"}]},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller","type":"class","title":"TKUISectionedAlertViewController","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/viewdidappear(_:)","type":"method","title":"func viewDidAppear(Bool)"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/viewdidload()","type":"method","title":"func viewDidLoad()"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/newinstance(region:)","type":"method","title":"static func newInstance(region: TKRegion) -> TKUISectionedAlertViewController"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/uiscrollviewdelegate-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/scrollviewdidscroll(_:)","title":"func scrollViewDidScroll(UIScrollView)"}],"title":"UIScrollViewDelegate Implementations"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/uisearchbardelegate-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbar(_:textdidchange:)","title":"func searchBar(UISearchBar, textDidChange: String)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbarcancelbuttonclicked(_:)","title":"func searchBarCancelButtonClicked(UISearchBar)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbarsearchbuttonclicked(_:)","title":"func searchBarSearchButtonClicked(UISearchBar)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbartextdidbeginediting(_:)","title":"func searchBarTextDidBeginEditing(UISearchBar)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/searchbartextdidendediting(_:)","title":"func searchBarTextDidEndEditing(UISearchBar)","type":"method"}],"title":"UISearchBarDelegate Implementations"},{"path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/uitableviewdelegate-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tableView(UITableView, viewForHeaderInSection: Int) -> UIView?","path":"\/documentation\/tripkitui\/tkuisectionedalertviewcontroller\/tableview(_:viewforheaderinsection:)","type":"method"}],"title":"UITableViewDelegate Implementations"}]},{"path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard","type":"class","title":"TKUISegmentDirectionsCard","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var actionFactory: ((TKSegment) -> [Action])?","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/configuration\/actionfactory"}],"title":"TKUISegmentDirectionsCard.Configuration","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/configuration","type":"struct"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didAppear(animated: Bool)","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/didappear(animated:)","type":"method"},{"title":"func didBuild(tableView: UITableView)","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/didbuild(tableview:)","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUISegmentDirectionsCard.Action","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/action","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var config: TKUISegmentDirectionsCard.Configuration","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/config","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func canShowInstructions(for: TKSegment) -> Bool","path":"\/documentation\/tripkitui\/tkuisegmentdirectionscard\/canshowinstructions(for:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuisegmentinstructioncard","type":"class","title":"TKUISegmentInstructionCard","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(for: TKSegment, mapManager: TKUITripMapManager)","path":"\/documentation\/tripkitui\/tkuisegmentinstructioncard\/init(for:mapmanager:)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didBuild(cardView: TGCardView?, headerView: TGHeaderView?)","path":"\/documentation\/tripkitui\/tkuisegmentinstructioncard\/didbuild(cardview:headerview:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func hasContent(for: TKSegment) -> Bool","path":"\/documentation\/tripkitui\/tkuisegmentinstructioncard\/hascontent(for:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuisegmenttitleview","type":"class","title":"TKUISegmentTitleView","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var dismissButton: UIButton!","type":"property","path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/dismissbutton"},{"title":"var preferredView: UIView?","type":"property","path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/preferredview"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func applyStyleToCloseButton(TGCardStyle)","type":"method","path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/applystyletoclosebutton(_:)"},{"title":"func awakeFromNib()","type":"method","path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/awakefromnib()"},{"title":"func configure(for: TKSegment, preferredTitle: String?, showSubtitle: Bool, mode: TKUISegmentMode)","type":"method","path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/configure(for:preferredtitle:showsubtitle:mode:)"},{"title":"func setCustomActions([TKUISegmentTitleView.Action], for: TKSegment, card: TGCard)","type":"method","path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/setcustomactions(_:for:card:)"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKUISegmentTitleView.Action","type":"typealias","path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/action"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func newInstance() -> TKUISegmentTitleView","type":"method","path":"\/documentation\/tripkitui\/tkuisegmenttitleview\/newinstance()"}]},{"path":"\/documentation\/tripkitui\/tkuisemaphoreview","type":"class","title":"TKUISemaphoreView","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(annotation: MKAnnotation?, reuseIdentifier: String?)","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/init(annotation:reuseidentifier:)"},{"type":"init","title":"init(annotation: MKAnnotation?, reuseIdentifier: String?, withHeading: CLLocationDirection)","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/init(annotation:reuseidentifier:withheading:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var annotation: MKAnnotation?","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/annotation"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func prepareForReuse()","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/prepareforreuse()"},{"type":"method","title":"func update(for: MKAnnotation?)","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/update(for:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var customHeadImage: UIImage?","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/customheadimage"},{"type":"property","title":"static var customHeadTintColor: UIColor?","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/customheadtintcolor"},{"type":"property","title":"static var customPointerImage: UIImage?","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/custompointerimage"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/onleft","title":"case onLeft"},{"type":"case","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/onright","title":"case onRight"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/defaultdirection","title":"static var defaultDirection: LabelSide"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside\/!=(_:_:)"}],"title":"Equatable Implementations"}],"type":"enum","title":"TKUISemaphoreView.LabelSide","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/labelside"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/headonly","title":"case headOnly"},{"type":"case","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/headwithfrequency(minutes:)","title":"case headWithFrequency(minutes: Int)"},{"type":"case","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/headwithtime(_:_:isrealtime:)","title":"case headWithTime(Date, TimeZone, isRealTime: Bool)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/!=(_:_:)"}],"path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode\/equatable-implementations","title":"Equatable Implementations"}],"type":"enum","title":"TKUISemaphoreView.Mode","path":"\/documentation\/tripkitui\/tkuisemaphoreview\/mode"}]},{"path":"\/documentation\/tripkitui\/tkuisheet","type":"class","title":"TKUISheet","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/tripkitui\/tkuisheet\/init(coder:)"},{"title":"init(frame: CGRect)","type":"init","path":"\/documentation\/tripkitui\/tkuisheet\/init(frame:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var isBeingOverlaid: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuisheet\/isbeingoverlaid"},{"title":"var overlayColor: UIColor","type":"property","path":"\/documentation\/tripkitui\/tkuisheet\/overlaycolor"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func removeOverlay(animated: Bool)","type":"method","path":"\/documentation\/tripkitui\/tkuisheet\/removeoverlay(animated:)"},{"title":"func showWithOverlay(in: UIView, below: UIView?, hiding: [UIView], onDismiss: (() -> Void)?)","type":"method","path":"\/documentation\/tripkitui\/tkuisheet\/showwithoverlay(in:below:hiding:ondismiss:)"}]},{"path":"\/documentation\/tripkitui\/tkuisheetviewcontroller","type":"class","title":"TKUISheetViewController","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/tkuisheetviewcontroller\/init(sheet:)","title":"init(sheet: TKUISheet)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuisheetviewcontroller\/preferredcontentsize","title":"var preferredContentSize: CGSize"},{"type":"property","path":"\/documentation\/tripkitui\/tkuisheetviewcontroller\/sheet","title":"var sheet: TKUISheet?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuisheetviewcontroller\/viewdiddisappear(_:)","title":"func viewDidDisappear(Bool)"}]},{"path":"\/documentation\/tripkitui\/tkuistyledlabel","type":"class","title":"TKUIStyledLabel","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkitui\/tkuistyledlabel\/init(coder:)","type":"init"},{"title":"init(frame: CGRect)","path":"\/documentation\/tripkitui\/tkuistyledlabel\/init(frame:)","type":"init"}]},{"path":"\/documentation\/tripkitui\/tkuitablecard","type":"class","title":"TKUITableCard","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitablecard\/didbuild(tableview:)","title":"func didBuild(tableView: UITableView)","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitablecard\/selectedindex(in:)","title":"func selectedIndex(in: UITableView) -> Signal<IndexPath>","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitablecard\/selecteditem(in:datasource:)","title":"func selectedItem<Item, Section>(in: UITableView, dataSource: TableViewSectionedDataSource<Section>) -> Signal<Item>","type":"method"},{"path":"\/documentation\/tripkitui\/tkuitablecard\/selecteditemwithsender(in:datasource:)","title":"func selectedItemWithSender<Item, Section>(in: UITableView, dataSource: TableViewSectionedDataSource<Section>) -> Signal<(Item, sender: Any?)>","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet","type":"class","title":"TKUITimePickerSheet","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowsASAP: Bool","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/allowsasap","type":"property"},{"title":"var allowsOutOfRangeSelection: Bool","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/allowsoutofrangeselection","type":"property"},{"title":"var arriveByLabel: String","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/arrivebylabel","type":"property"},{"title":"var incrementInterval: Int","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/incrementinterval","type":"property"},{"title":"var leaveAtLabel: String","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/leaveatlabel","type":"property"},{"title":"var maximumDate: Date?","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/maximumdate","type":"property"},{"title":"var minimumDate: Date?","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/minimumdate","type":"property"},{"title":"var removeDateLimits: Bool","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/removedatelimits","type":"property"},{"title":"var style: Style","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/style","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let `default`: TKUITimePickerSheet.Configuration","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration\/default","type":"property"}],"title":"TKUITimePickerSheet.Configuration","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/configuration","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(elements: [TKUITimePickerSheet.ToolbarElement], accessibilityElements: [TKUITimePickerSheet.ToolbarElement])","type":"init","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarbuilder\/init(elements:accessibilityelements:)"}],"title":"TKUITimePickerSheet.ToolbarBuilder","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarbuilder","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(date: Date, timeZone: TimeZone, toolbarBuilder: ToolbarBuilder?, config: Configuration)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/init(date:timezone:toolbarbuilder:config:)","type":"init"},{"title":"init(time: Date, timeType: TKTimeType, timeZone: TimeZone, toolbarBuilder: ToolbarBuilder?, config: Configuration)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/init(time:timetype:timezone:toolbarbuilder:config:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var delegate: TKUITimePickerSheetDelegate?","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/delegate","type":"property"},{"title":"var selectAction: (TKTimeType, Date) -> Void","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectaction","type":"property"},{"title":"var selectedDate: Date","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selecteddate","type":"property"},{"title":"var selectedTimeType: TKTimeType","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectedtimetype","type":"property"},{"title":"var selectionStateDelegate: TKUITimePickerSheetSelectionStateDelegate?","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatedelegate","type":"property"},{"title":"var selectionStatus: SelectionStatus","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.property","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func tappedOverlay(Any)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/tappedoverlay(_:)","type":"method"},{"title":"func updateSpecialSelectionState(with: String)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/updatespecialselectionstate(with:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case above","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum\/above","type":"case"},{"title":"case below","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum\/below","type":"case"},{"title":"case special(String)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum\/special(_:)","type":"case"},{"title":"case valid(Date)","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum\/valid(_:)","type":"case"}],"title":"TKUITimePickerSheet.SelectionStatus","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/selectionstatus-swift.enum","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case embed","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style\/embed"},{"type":"case","title":"case sheet","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style\/sheet"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style\/equatable-implementations"}],"title":"TKUITimePickerSheet.Style","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/style","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarelement\/button(title:tint:isselector:handler:)","title":"case button(title: String, tint: UIColor?, isSelector: Bool, handler: (Date) -> Void)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarelement\/picker","title":"case picker","type":"case"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarelement\/spacer","title":"case spacer","type":"case"}],"title":"TKUITimePickerSheet.ToolbarElement","path":"\/documentation\/tripkitui\/tkuitimepickersheet\/toolbarelement","type":"enum"}]},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller","type":"class","title":"TKUITimePickerViewController","children":[{"type":"groupMarker","title":"Classes"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/item","type":"class","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/item\/init(title:color:)","type":"init","title":"init(title: String, color: UIColor)"}],"title":"TKUITimePickerViewController.Item"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/init(time:timezone:items:config:onselection:)","type":"init","title":"init(time: Date, timeZone: TimeZone, items: [Item], config: TKUITimePickerSheet.Configuration, onSelection: (TKUITimePickerSheet.SelectionStatus) -> Void)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/viewdidload()","type":"method","title":"func viewDidLoad()"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/tkuitimepickersheetselectionstatedelegate-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func timePicker(TKUITimePickerSheet, statusChanged: TKUITimePickerSheet.SelectionStatus)","path":"\/documentation\/tripkitui\/tkuitimepickerviewcontroller\/timepicker(_:statuschanged:)"}],"title":"TKUITimePickerSheetSelectionStateDelegate Implementations"}]},{"path":"\/documentation\/tripkitui\/tkuitripboyview","type":"class","title":"TKUITripBoyView","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var actionButton: UIButton!","path":"\/documentation\/tripkitui\/tkuitripboyview\/actionbutton"},{"type":"property","title":"var retryButton: UIButton!","path":"\/documentation\/tripkitui\/tkuitripboyview\/retrybutton"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func configure(title: String?, description: String?, actionTitle: String?, isHappy: Bool, allowRetry: Bool)","path":"\/documentation\/tripkitui\/tkuitripboyview\/configure(title:description:actiontitle:ishappy:allowretry:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func addTopPadding(CGFloat, from: UIView)","path":"\/documentation\/tripkitui\/tkuitripboyview\/addtoppadding(_:from:)"},{"type":"method","title":"static func clear(from: UIView)","path":"\/documentation\/tripkitui\/tkuitripboyview\/clear(from:)"},{"type":"method","title":"static func newInstance() -> TKUITripBoyView","path":"\/documentation\/tripkitui\/tkuitripboyview\/newinstance()"},{"type":"method","title":"static func show(error: Error, title: String?, in: UIView, aboveSubview: UIView?, topPadding: CGFloat, actionTitle: String?) -> TKUITripBoyView","path":"\/documentation\/tripkitui\/tkuitripboyview\/show(error:title:in:abovesubview:toppadding:actiontitle:)"}]},{"path":"\/documentation\/tripkitui\/tkuitripcell","type":"class","title":"TKUITripCell","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/awakefromnib()","type":"method","title":"func awakeFromNib()"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/configure(_:allowfading:isarrivebefore:preferredcontentsizecategory:)","type":"method","title":"func configure(Trip, allowFading: Bool, isArriveBefore: Bool?, preferredContentSizeCategory: UIContentSizeCategory)"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/prepareforreuse()","type":"method","title":"func prepareForReuse()"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/sethighlighted(_:animated:)","type":"method","title":"func setHighlighted(Bool, animated: Bool)"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/setselected(_:animated:)","type":"method","title":"func setSelected(Bool, animated: Bool)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/nib","type":"property","title":"static let nib: UINib"},{"path":"\/documentation\/tripkitui\/tkuitripcell\/reuseidentifier","type":"property","title":"static let reuseIdentifier: String"}]},{"path":"\/documentation\/tripkitui\/tkuitripmapmanager","type":"class","title":"TKUITripMapManager","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(trip: Trip)","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/init(trip:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var annotationsToZoomToOnTakingCharge: [MKAnnotation]","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/annotationstozoomtoontakingcharge","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func cleanUp(MKMapView, animated: Bool)","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/cleanup(_:animated:)","type":"method"},{"title":"func deselectSegment(animated: Bool)","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/deselectsegment(animated:)","type":"method"},{"title":"func mapView(MKMapView, didAdd: [MKAnnotationView])","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/mapview(_:didadd:)","type":"method"},{"title":"func refresh(with: Trip)","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/refresh(with:)","type":"method"},{"title":"func show(TKSegment, animated: Bool, mode: TKUISegmentMode)","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/show(_:animated:mode:)","type":"method"},{"title":"func showTrip(animated: Bool)","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/showtrip(animated:)","type":"method"},{"title":"func takeCharge(of: MKMapView, animated: Bool)","path":"\/documentation\/tripkitui\/tkuitripmapmanager\/takecharge(of:animated:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuitripmonitormanager","type":"class","title":"TKUITripMonitorManager","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKUITripMonitorManager.GeofenceMatch","type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let notification: TKAPI.TripNotification","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch\/notification"},{"type":"property","title":"let segment: TKSegment","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch\/segment"},{"type":"property","title":"let trip: Trip","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch\/trip"}],"path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func match(geofenceID: String) -> GeofenceMatch?","type":"method","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/match(geofenceid:)"},{"title":"func monitorRegions(from: Trip, includeTimeToLeaveNotification: Bool) async throws","type":"method","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/monitorregions(from:includetimetoleavenotification:)"},{"title":"func stopMonitoring() async","type":"method","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/stopmonitoring()"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKUITripMonitorManager","type":"property","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/shared"},{"title":"static let tripNotificationCategoryIdentifier: String","type":"property","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/tripnotificationcategoryidentifier"},{"title":"Default Implementations","type":"groupMarker"},{"title":"ObservableObject Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var objectWillChange: ObservableObjectPublisher","type":"property","path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/objectwillchange"}],"path":"\/documentation\/tripkitui\/tkuitripmonitormanager\/observableobject-implementations"}]},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview","type":"class","title":"TKUITripSegmentsView","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/init(frame:)","type":"init","title":"init(frame: CGRect)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/allowbicycleaccessibilityicon","type":"property","title":"var allowBicycleAccessibilityIcon: Bool"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/allowwheelchairicon","type":"property","title":"var allowWheelchairIcon: Bool"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/colorcodingtransiticon","type":"property","title":"var colorCodingTransitIcon: Bool"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/darktextcolor","type":"property","title":"var darkTextColor: UIColor"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/intrinsiccontentsize","type":"property","title":"var intrinsicContentSize: CGSize"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/iscanceled","type":"property","title":"var isCanceled: Bool"},{"path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/lighttextcolor","type":"property","title":"var lightTextColor: UIColor"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func configure([TKUITripSegmentDisplayable], allowSubtitles: Bool, allowInfoIcons: Bool)","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/configure(_:allowsubtitles:allowinfoicons:)","type":"method"},{"title":"func layoutSubviews()","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/layoutsubviews()","type":"method"},{"title":"func segmentIndex(atX: CGFloat) -> Int","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/segmentindex(atx:)","type":"method"},{"title":"func selectSegment(atIndex: Int)","path":"\/documentation\/tripkitui\/tkuitripsegmentsview\/selectsegment(atindex:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource","type":"class","title":"TableViewSectionedDataSource","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/init(configurecell:titleforheaderinsection:titleforfooterinsection:caneditrowatindexpath:canmoverowatindexpath:sectionindextitles:sectionforsectionindextitle:)","type":"init","title":"init(configureCell: ConfigureCell, titleForHeaderInSection: TitleForHeaderInSection, titleForFooterInSection: TitleForFooterInSection, canEditRowAtIndexPath: CanEditRowAtIndexPath, canMoveRowAtIndexPath: CanMoveRowAtIndexPath, sectionIndexTitles: SectionIndexTitles, sectionForSectionIndexTitle: SectionForSectionIndexTitle)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/caneditrowatindexpath-swift.property","type":"property","title":"var canEditRowAtIndexPath: CanEditRowAtIndexPath"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/canmoverowatindexpath-swift.property","type":"property","title":"var canMoveRowAtIndexPath: CanMoveRowAtIndexPath"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/configurecell-swift.property","type":"property","title":"var configureCell: ConfigureCell"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionforsectionindextitle-swift.property","type":"property","title":"var sectionForSectionIndexTitle: SectionForSectionIndexTitle"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionindextitles-swift.property","type":"property","title":"var sectionIndexTitles: SectionIndexTitles"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionmodels","type":"property","title":"var sectionModels: [Section]"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/titleforfooterinsection-swift.property","type":"property","title":"var titleForFooterInSection: TitleForFooterInSection"},{"path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/titleforheaderinsection-swift.property","type":"property","title":"var titleForHeaderInSection: TitleForHeaderInSection"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func model(at: IndexPath) throws -> Any","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/model(at:)","type":"method"},{"title":"func numberOfSections(in: UITableView) -> Int","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/numberofsections(in:)","type":"method"},{"title":"func sectionIndexTitles(for: UITableView) -> [String]?","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionindextitles(for:)","type":"method"},{"title":"func setSections([Section])","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/setsections(_:)","type":"method"},{"title":"func tableView(UITableView, canEditRowAt: IndexPath) -> Bool","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:caneditrowat:)","type":"method"},{"title":"func tableView(UITableView, canMoveRowAt: IndexPath) -> Bool","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:canmoverowat:)","type":"method"},{"title":"func tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:cellforrowat:)","type":"method"},{"title":"func tableView(UITableView, moveRowAt: IndexPath, to: IndexPath)","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:moverowat:to:)","type":"method"},{"title":"func tableView(UITableView, numberOfRowsInSection: Int) -> Int","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:numberofrowsinsection:)","type":"method"},{"title":"func tableView(UITableView, sectionForSectionIndexTitle: String, at: Int) -> Int","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:sectionforsectionindextitle:at:)","type":"method"},{"title":"func tableView(UITableView, titleForFooterInSection: Int) -> String?","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:titleforfooterinsection:)","type":"method"},{"title":"func tableView(UITableView, titleForHeaderInSection: Int) -> String?","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/tableview(_:titleforheaderinsection:)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"title":"subscript(IndexPath) -> Item","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/subscript(_:)-5cd95","type":"subscript"},{"title":"subscript(Int) -> Section","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/subscript(_:)-8bj11","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TableViewSectionedDataSource.CanEditRowAtIndexPath","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/caneditrowatindexpath-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.CanMoveRowAtIndexPath","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/canmoverowatindexpath-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.ConfigureCell","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/configurecell-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.Item","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/item","type":"typealias"},{"title":"TableViewSectionedDataSource.SectionForSectionIndexTitle","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionforsectionindextitle-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.SectionIndexTitles","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionindextitles-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.SectionModelSnapshot","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/sectionmodelsnapshot","type":"typealias"},{"title":"TableViewSectionedDataSource.TitleForFooterInSection","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/titleforfooterinsection-swift.typealias","type":"typealias"},{"title":"TableViewSectionedDataSource.TitleForHeaderInSection","path":"\/documentation\/tripkitui\/tableviewsectioneddatasource\/titleforheaderinsection-swift.typealias","type":"typealias"}]},{"type":"groupMarker","title":"Protocols"},{"path":"\/documentation\/tripkitui\/animatablesectionmodeltype","type":"protocol","title":"AnimatableSectionModelType"},{"path":"\/documentation\/tripkitui\/anyobserverconvertible","type":"protocol","title":"AnyObserverConvertible","children":[{"type":"groupMarker","title":"Associated Types"},{"type":"associatedtype","title":"Output","path":"\/documentation\/tripkitui\/anyobserverconvertible\/output"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func asAnyObserver() -> AnyObserver<Output>","path":"\/documentation\/tripkitui\/anyobserverconvertible\/asanyobserver()","children":[{"title":"AnyObserverConvertible Implementations","type":"groupMarker","children":[{"title":"func asAnyObserver() -> AnyObserver<Output>","path":"\/documentation\/tripkitui\/anyobserverconvertible\/asanyobserver()-95p1y","type":"method"}]}]}]},{"path":"\/documentation\/tripkitui\/identifiabletype","type":"protocol","title":"IdentifiableType","children":[{"type":"groupMarker","title":"Associated Types"},{"type":"associatedtype","title":"Identity","path":"\/documentation\/tripkitui\/identifiabletype\/identity-swift.associatedtype"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var identity: Identity","path":"\/documentation\/tripkitui\/identifiabletype\/identity-swift.property"}]},{"path":"\/documentation\/tripkitui\/sectionmodeltype","type":"protocol","title":"SectionModelType","children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/sectionmodeltype\/item","title":"Item","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/sectionmodeltype\/init(original:items:)","title":"init(original: Self, items: [Item])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/sectionmodeltype\/items","title":"var items: [Item]","type":"property"}]},{"path":"\/documentation\/tripkitui\/sectionedviewtype","type":"protocol","title":"SectionedViewType","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func batchUpdates<Section>(Changeset<Section>, animationConfiguration: AnimationConfiguration)","path":"\/documentation\/tripkitui\/sectionedviewtype\/batchupdates(_:animationconfiguration:)","type":"method"},{"title":"func deleteItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/sectionedviewtype\/deleteitemsatindexpaths(_:animationstyle:)","type":"method"},{"title":"func deleteSections([Int], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/sectionedviewtype\/deletesections(_:animationstyle:)","type":"method"},{"title":"func insertItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/sectionedviewtype\/insertitemsatindexpaths(_:animationstyle:)","type":"method"},{"title":"func insertSections([Int], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/sectionedviewtype\/insertsections(_:animationstyle:)","type":"method"},{"title":"func moveItemAtIndexPath(IndexPath, to: IndexPath)","path":"\/documentation\/tripkitui\/sectionedviewtype\/moveitematindexpath(_:to:)","type":"method"},{"title":"func moveSection(Int, to: Int)","path":"\/documentation\/tripkitui\/sectionedviewtype\/movesection(_:to:)","type":"method"},{"title":"func reloadItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/sectionedviewtype\/reloaditemsatindexpaths(_:animationstyle:)","type":"method"},{"title":"func reloadSections([Int], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/sectionedviewtype\/reloadsections(_:animationstyle:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuicircledisplayable","type":"protocol","title":"TKUICircleDisplayable","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicircledisplayable\/aslarge","title":"var asLarge: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicircledisplayable\/circlecolor","title":"var circleColor: UIColor","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicircledisplayable\/istravelled","title":"var isTravelled: Bool","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager","type":"protocol","title":"TKUICompatibleHomeMapManager","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/maprect","type":"property","title":"var mapRect: Driver<MKMapRect>"},{"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/nextfrommap","children":[{"title":"TKUICompatibleHomeMapManager Implementations","children":[{"title":"var nextFromMap: Observable<TKUIHomeCard.ComponentAction>","path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/nextfrommap-l3op","type":"property"}],"type":"groupMarker"}],"type":"property","title":"var nextFromMap: Observable<TKUIHomeCard.ComponentAction>"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/onhomecardappearance(_:)","children":[{"title":"TKUICompatibleHomeMapManager Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/onhomecardappearance(_:)-4wefh","type":"method","title":"func onHomeCardAppearance(Bool)"}]}],"type":"method","title":"func onHomeCardAppearance(Bool)"},{"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/select(_:)","type":"method","title":"func select(MKAnnotation)"},{"path":"\/documentation\/tripkitui\/tkuicompatiblehomemapmanager\/zoom(to:animated:)","type":"method","title":"func zoom(to: TKRegion.City, animated: Bool)"}]},{"path":"\/documentation\/tripkitui\/tkuidebugactionhandler","type":"protocol","title":"TKUIDebugActionHandler","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuidebugactionhandler\/debugactioncopyprimaryrequest(_:)","title":"func debugActionCopyPrimaryRequest(AnyObject?)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuiglyphableannotation","type":"protocol","title":"TKUIGlyphableAnnotation","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuiglyphableannotation\/glyphcolor","type":"property","title":"var glyphColor: TKColor?"},{"path":"\/documentation\/tripkitui\/tkuiglyphableannotation\/glyphimage","type":"property","title":"var glyphImage: TKImage?"},{"path":"\/documentation\/tripkitui\/tkuiglyphableannotation\/glyphimageistemplate","type":"property","title":"var glyphImageIsTemplate: Bool"},{"path":"\/documentation\/tripkitui\/tkuiglyphableannotation\/glyphimageurl","type":"property","title":"var glyphImageURL: URL?"}]},{"path":"\/documentation\/tripkitui\/tkuiidentifiableannotation","type":"protocol","title":"TKUIIdentifiableAnnotation","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tkuiidentifiableannotation\/identity","type":"property","title":"var identity: String?"}]},{"path":"\/documentation\/tripkitui\/tkuiimageannotation","type":"protocol","title":"TKUIImageAnnotation","children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"title":"TKUIImageAnnotation Implementations","children":[{"type":"property","title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tkuiimageannotation\/image-367pr"}],"type":"groupMarker"}],"title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tkuiimageannotation\/image","type":"property"},{"children":[{"children":[{"type":"property","path":"\/documentation\/tripkitui\/tkuiimageannotation\/imageurl-9pp85","title":"var imageURL: URL?"}],"title":"TKUIImageAnnotation Implementations","type":"groupMarker"}],"title":"var imageURL: URL?","path":"\/documentation\/tripkitui\/tkuiimageannotation\/imageurl","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuimaptiles","type":"protocol","title":"TKUIMapTiles","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuimaptiles\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/tripkitui\/tkuimaptiles\/sources","title":"var sources: [TKAPI.DataAttribution]","type":"property"},{"path":"\/documentation\/tripkitui\/tkuimaptiles\/urltemplates","title":"var urlTemplates: [String]","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuimodeannotation","type":"protocol","title":"TKUIModeAnnotation","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tkuimodeannotation\/clusteridentifier","title":"var clusterIdentifier: String?"},{"type":"property","path":"\/documentation\/tripkitui\/tkuimodeannotation\/imageistemplate","title":"var imageIsTemplate: Bool"},{"type":"property","path":"\/documentation\/tripkitui\/tkuimodeannotation\/modeinfo","title":"var modeInfo: TKModeInfo?"}]},{"path":"\/documentation\/tripkitui\/tkuimodepickeritem","type":"protocol","title":"TKUIModePickerItem","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/image"},{"type":"property","title":"var imageTextRepresentation: String","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/imagetextrepresentation"},{"type":"property","title":"var imageURL: URL?","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/imageurl"},{"type":"property","title":"var imageURLIsBranding: Bool","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/imageurlisbranding"},{"type":"property","title":"var imageURLIsTemplate: Bool","path":"\/documentation\/tripkitui\/tkuimodepickeritem\/imageurlistemplate"}]},{"path":"\/documentation\/tripkitui\/tkuinotificationmanagerdelegate","type":"protocol","title":"TKUINotificationManagerDelegate","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func notificationRequireUserToken() async throws","children":[{"type":"groupMarker","title":"TKUINotificationManagerDelegate Implementations","children":[{"title":"func notificationRequireUserToken() async throws","type":"method","path":"\/documentation\/tripkitui\/tkuinotificationmanagerdelegate\/notificationrequireusertoken()-4ls2w"}]}],"path":"\/documentation\/tripkitui\/tkuinotificationmanagerdelegate\/notificationrequireusertoken()","type":"method"},{"title":"func notificationsPermissionsNeeded() async -> Bool","path":"\/documentation\/tripkitui\/tkuinotificationmanagerdelegate\/notificationspermissionsneeded()","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider","type":"protocol","title":"TKUIRoutingResultsCustomItemProvider","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func cell(for: TKUIRoutingResultsCard.CustomItem, tableView: UITableView, indexPath: IndexPath) -> UITableViewCell","path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/cell(for:tableview:indexpath:)","type":"method"},{"title":"func item(for: Observable<(TripRequest, [TripGroup])>) -> Observable<TKUIRoutingResultsCard.CustomItem?>","path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/item(for:)","type":"method"},{"title":"func registerCell(with: UITableView)","path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/registercell(with:)","type":"method","children":[{"type":"groupMarker","title":"TKUIRoutingResultsCustomItemProvider Implementations","children":[{"path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/registercell(with:)-6yxry","title":"func registerCell(with: UITableView)","type":"method"}]}]},{"title":"func show(TKUIRoutingResultsCard.CustomItem, presenter: TGCardViewController)","path":"\/documentation\/tripkitui\/tkuiroutingresultscustomitemprovider\/show(_:presenter:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuiroutingresultsmapmanagertype","type":"protocol","title":"TKUIRoutingResultsMapManagerType","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var droppedPin: Signal<CLLocationCoordinate2D>","path":"\/documentation\/tripkitui\/tkuiroutingresultsmapmanagertype\/droppedpin"},{"type":"property","title":"var selectedMapRoute: Signal<TKUIRoutingResultsMapRouteItem>","path":"\/documentation\/tripkitui\/tkuiroutingresultsmapmanagertype\/selectedmaproute"}]},{"path":"\/documentation\/tripkitui\/tkuiselectableonmap","type":"protocol","title":"TKUISelectableOnMap","children":[{"title":"Instance Properties","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"TKUISelectableOnMap Implementations","children":[{"type":"property","path":"\/documentation\/tripkitui\/tkuiselectableonmap\/selectioncondition-2s9s0","title":"var selectionCondition: TKUISelectionCondition"}]}],"title":"var selectionCondition: TKUISelectionCondition","type":"property","path":"\/documentation\/tripkitui\/tkuiselectableonmap\/selectioncondition"},{"children":[{"type":"groupMarker","title":"TKUISelectableOnMap Implementations","children":[{"path":"\/documentation\/tripkitui\/tkuiselectableonmap\/selectionidentifier-3mrsn","title":"var selectionIdentifier: String?","type":"property"}]}],"title":"var selectionIdentifier: String?","type":"property","path":"\/documentation\/tripkitui\/tkuiselectableonmap\/selectionidentifier"}]},{"path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable","type":"protocol","title":"TKUISemaphoreDisplayable","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var bearing: NSNumber?","path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/bearing","type":"property"},{"title":"var imageIsTemplate: Bool","path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/imageistemplate","type":"property"},{"title":"var isTerminal: Bool","path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/isterminal","type":"property","children":[{"type":"groupMarker","title":"TKUISemaphoreDisplayable Implementations","children":[{"title":"var isTerminal: Bool","path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/isterminal-549mc","type":"property"}]}]},{"title":"var semaphoreMode: TKUISemaphoreView.Mode","path":"\/documentation\/tripkitui\/tkuisemaphoredisplayable\/semaphoremode","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuistopannotation","type":"protocol","title":"TKUIStopAnnotation","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var stopCode: String","type":"property","path":"\/documentation\/tripkitui\/tkuistopannotation\/stopcode"},{"title":"var timeZone: TimeZone?","type":"property","path":"\/documentation\/tripkitui\/tkuistopannotation\/timezone"}]},{"path":"\/documentation\/tripkitui\/tkuitimepickersheetdelegate","type":"protocol","title":"TKUITimePickerSheetDelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func timePicker(TKUITimePickerSheet, pickedDate: Date, for: TKTimeType)","path":"\/documentation\/tripkitui\/tkuitimepickersheetdelegate\/timepicker(_:pickeddate:for:)"},{"type":"method","title":"func timePickerRequestsResign(TKUITimePickerSheet)","path":"\/documentation\/tripkitui\/tkuitimepickersheetdelegate\/timepickerrequestsresign(_:)"}]},{"path":"\/documentation\/tripkitui\/tkuitimepickersheetselectionstatedelegate","type":"protocol","title":"TKUITimePickerSheetSelectionStateDelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuitimepickersheetselectionstatedelegate\/timepicker(_:statuschanged:)","type":"method","title":"func timePicker(TKUITimePickerSheet, statusChanged: TKUITimePickerSheet.SelectionStatus)"}]},{"path":"\/documentation\/tripkitui\/tkuitripmapmanagertype","type":"protocol","title":"TKUITripMapManagerType"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecarddelegate","type":"protocol","title":"TKUITripModeByModeCardDelegate","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuitripmodebymodecarddelegate\/modebymodecard(_:updatedtrip:)","type":"method","title":"func modeByModeCard(TKUITripModeByModeCard, updatedTrip: Trip)"}]},{"path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontrollerdelegate","type":"protocol","title":"TKUITripOverviewViewControllerDelegate","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tripOverview(TKUITripOverviewViewController, selected: Trip)","path":"\/documentation\/tripkitui\/tkuitripoverviewviewcontrollerdelegate\/tripoverview(_:selected:)","type":"method"}]},{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable","type":"protocol","title":"TKUITripSegmentDisplayable","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var tripSegmentAccessibilityLabel: String?","type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentaccessibilitylabel"},{"title":"var tripSegmentBicycleAccessibility: TKBicycleAccessibility?","type":"property","children":[{"title":"TKUITripSegmentDisplayable Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentbicycleaccessibility-7kvjg","type":"property","title":"var tripSegmentBicycleAccessibility: TKBicycleAccessibility?"}]}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentbicycleaccessibility"},{"title":"var tripSegmentFixedDepartureTime: Date?","type":"property","children":[{"title":"TKUITripSegmentDisplayable Implementations","children":[{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentfixeddeparturetime-1vmrc","title":"var tripSegmentFixedDepartureTime: Date?","type":"property"}],"type":"groupMarker"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentfixeddeparturetime"},{"title":"var tripSegmentModeColor: TKColor?","type":"property","children":[{"title":"TKUITripSegmentDisplayable Implementations","children":[{"title":"var tripSegmentModeColor: TKColor?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodecolor-3noec","type":"property"}],"type":"groupMarker"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodecolor"},{"title":"var tripSegmentModeImage: TKImage?","type":"property","children":[{"type":"groupMarker","children":[{"type":"property","title":"var tripSegmentModeImage: TKImage?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimage-4io9n"}],"title":"TKUITripSegmentDisplayable Implementations"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimage"},{"title":"var tripSegmentModeImageIsBranding: Bool","type":"property","children":[{"type":"groupMarker","title":"TKUITripSegmentDisplayable Implementations","children":[{"title":"var tripSegmentModeImageIsBranding: Bool","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageisbranding-9jrz5","type":"property"}]}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageisbranding"},{"title":"var tripSegmentModeImageIsTemplate: Bool","type":"property","children":[{"type":"groupMarker","title":"TKUITripSegmentDisplayable Implementations","children":[{"title":"var tripSegmentModeImageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageistemplate-4j9vy"}]}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageistemplate"},{"title":"var tripSegmentModeImageURL: URL?","type":"property","children":[{"type":"groupMarker","children":[{"type":"property","title":"var tripSegmentModeImageURL: URL?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageurl-1mzhf"}],"title":"TKUITripSegmentDisplayable Implementations"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeimageurl"},{"title":"var tripSegmentModeInfoIconType: TKInfoIconType","type":"property","children":[{"title":"TKUITripSegmentDisplayable Implementations","children":[{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeinfoicontype-68t6y","type":"property","title":"var tripSegmentModeInfoIconType: TKInfoIconType"}],"type":"groupMarker"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodeinfoicontype"},{"title":"var tripSegmentModeSubtitle: String?","type":"property","children":[{"type":"groupMarker","children":[{"type":"property","title":"var tripSegmentModeSubtitle: String?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodesubtitle-9hvmt"}],"title":"TKUITripSegmentDisplayable Implementations"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodesubtitle"},{"title":"var tripSegmentModeTitle: String?","type":"property","children":[{"title":"TKUITripSegmentDisplayable Implementations","type":"groupMarker","children":[{"title":"var tripSegmentModeTitle: String?","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodetitle-6z1is","type":"property"}]}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentmodetitle"},{"title":"var tripSegmentSubtitleIconType: TKInfoIconType","type":"property","children":[{"type":"groupMarker","children":[{"type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentsubtitleicontype-4k2ac","title":"var tripSegmentSubtitleIconType: TKInfoIconType"}],"title":"TKUITripSegmentDisplayable Implementations"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentsubtitleicontype"},{"title":"var tripSegmentTimeZone: TimeZone?","type":"property","children":[{"children":[{"title":"var tripSegmentTimeZone: TimeZone?","type":"property","path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmenttimezone-9sanh"}],"title":"TKUITripSegmentDisplayable Implementations","type":"groupMarker"}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmenttimezone"},{"title":"var tripSegmentTimesAreRealTime: Bool","type":"property","children":[{"type":"groupMarker","title":"TKUITripSegmentDisplayable Implementations","children":[{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmenttimesarerealtime-2ee9n","type":"property","title":"var tripSegmentTimesAreRealTime: Bool"}]}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmenttimesarerealtime"},{"title":"var tripSegmentWheelchairAccessibility: TKWheelchairAccessibility","type":"property","children":[{"title":"TKUITripSegmentDisplayable Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentwheelchairaccessibility-1h03n","type":"property","title":"var tripSegmentWheelchairAccessibility: TKWheelchairAccessibility"}]}],"path":"\/documentation\/tripkitui\/tkuitripsegmentdisplayable\/tripsegmentwheelchairaccessibility"}]},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel","type":"struct","title":"AnimatableSectionModel","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(model: Section, items: [ItemType])","path":"\/documentation\/tripkitui\/animatablesectionmodel\/init(model:items:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkitui\/animatablesectionmodel\/hashvalue"},{"type":"property","title":"var items: [Item]","path":"\/documentation\/tripkitui\/animatablesectionmodel\/items"},{"type":"property","title":"var model: Section","path":"\/documentation\/tripkitui\/animatablesectionmodel\/model"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","type":"property","path":"\/documentation\/tripkitui\/animatablesectionmodel\/description"}],"type":"symbol","title":"CustomStringConvertible Implementations","path":"\/documentation\/tripkitui\/animatablesectionmodel\/customstringconvertible-implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/animatablesectionmodel\/!=(_:_:)"},{"type":"op","title":"static func == (AnimatableSectionModel, AnimatableSectionModel) -> Bool","path":"\/documentation\/tripkitui\/animatablesectionmodel\/==(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkitui\/animatablesectionmodel\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/identity-swift.property","type":"property","title":"var identity: Section.Identity"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/animatablesectionmodel\/identity-swift.typealias","type":"typealias","title":"AnimatableSectionModel.Identity"}],"type":"symbol","title":"IdentifiableType Implementations","path":"\/documentation\/tripkitui\/animatablesectionmodel\/identifiabletype-implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkitui\/animatablesectionmodel\/init(original:items:)","title":"init(original: AnimatableSectionModel, items: [Item])"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitui\/animatablesectionmodel\/item","title":"AnimatableSectionModel.Item"}],"type":"symbol","title":"SectionModelType Implementations","path":"\/documentation\/tripkitui\/animatablesectionmodel\/sectionmodeltype-implementations"}]},{"path":"\/documentation\/tripkitui\/animationconfiguration","type":"struct","title":"AnimationConfiguration","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(insertAnimation: UITableView.RowAnimation, reloadAnimation: UITableView.RowAnimation, deleteAnimation: UITableView.RowAnimation)","type":"init","path":"\/documentation\/tripkitui\/animationconfiguration\/init(insertanimation:reloadanimation:deleteanimation:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let deleteAnimation: UITableView.RowAnimation","type":"property","path":"\/documentation\/tripkitui\/animationconfiguration\/deleteanimation"},{"title":"let insertAnimation: UITableView.RowAnimation","type":"property","path":"\/documentation\/tripkitui\/animationconfiguration\/insertanimation"},{"title":"let reloadAnimation: UITableView.RowAnimation","type":"property","path":"\/documentation\/tripkitui\/animationconfiguration\/reloadanimation"}]},{"path":"\/documentation\/tripkitui\/changeset","type":"struct","title":"Changeset","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let deletedItems: [ItemPath]","path":"\/documentation\/tripkitui\/changeset\/deleteditems","type":"property"},{"title":"let deletedSections: [Int]","path":"\/documentation\/tripkitui\/changeset\/deletedsections","type":"property"},{"title":"let finalSections: [Section]","path":"\/documentation\/tripkitui\/changeset\/finalsections","type":"property"},{"title":"let insertedItems: [ItemPath]","path":"\/documentation\/tripkitui\/changeset\/inserteditems","type":"property"},{"title":"let insertedSections: [Int]","path":"\/documentation\/tripkitui\/changeset\/insertedsections","type":"property"},{"title":"let movedItems: [(from: ItemPath, to: ItemPath)]","path":"\/documentation\/tripkitui\/changeset\/moveditems","type":"property"},{"title":"let movedSections: [(from: Int, to: Int)]","path":"\/documentation\/tripkitui\/changeset\/movedsections","type":"property"},{"title":"let originalSections: [Section]","path":"\/documentation\/tripkitui\/changeset\/originalsections","type":"property"},{"title":"let reloadData: Bool","path":"\/documentation\/tripkitui\/changeset\/reloaddata","type":"property"},{"title":"let updatedItems: [ItemPath]","path":"\/documentation\/tripkitui\/changeset\/updateditems","type":"property"},{"title":"let updatedSections: [Int]","path":"\/documentation\/tripkitui\/changeset\/updatedsections","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"title":"Changeset.Item","path":"\/documentation\/tripkitui\/changeset\/item","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func initialValue([Section]) -> Changeset<Section>","path":"\/documentation\/tripkitui\/changeset\/initialvalue(_:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/tripkitui\/changeset\/customdebugstringconvertible-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/changeset\/debugdescription","title":"var debugDescription: String"}]}]},{"path":"\/documentation\/tripkitui\/identifiablevalue","type":"struct","title":"IdentifiableValue","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let value: Value","path":"\/documentation\/tripkitui\/identifiablevalue\/value"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/identifiablevalue\/debugdescription","type":"property","title":"var debugDescription: String"}],"title":"CustomDebugStringConvertible Implementations","path":"\/documentation\/tripkitui\/identifiablevalue\/customdebugstringconvertible-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String","path":"\/documentation\/tripkitui\/identifiablevalue\/description","type":"property"}],"title":"CustomStringConvertible Implementations","path":"\/documentation\/tripkitui\/identifiablevalue\/customstringconvertible-implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/identifiablevalue\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/identifiablevalue\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/identifiablevalue\/identity-swift.property","title":"var identity: Identity"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/tripkitui\/identifiablevalue\/identity-swift.typealias","title":"IdentifiableValue.Identity"}],"title":"IdentifiableType Implementations","path":"\/documentation\/tripkitui\/identifiablevalue\/identifiabletype-implementations"}]},{"path":"\/documentation\/tripkitui\/itempath","type":"struct","title":"ItemPath","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/itempath\/init(sectionindex:itemindex:)","title":"init(sectionIndex: Int, itemIndex: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/itempath\/itemindex","title":"let itemIndex: Int","type":"property"},{"path":"\/documentation\/tripkitui\/itempath\/sectionindex","title":"let sectionIndex: Int","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/itempath\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/tripkitui\/itempath\/debugdescription"}]},{"path":"\/documentation\/tripkitui\/itempath\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkitui\/itempath\/!=(_:_:)"}]},{"path":"\/documentation\/tripkitui\/itempath\/hashable-implementations","title":"Hashable Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkitui\/itempath\/hash(into:)"}]}]},{"path":"\/documentation\/tripkitui\/sectionmodel","type":"struct","title":"SectionModel","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(model: Section, items: [Item])","type":"init","path":"\/documentation\/tripkitui\/sectionmodel\/init(model:items:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var identity: Section","type":"property","path":"\/documentation\/tripkitui\/sectionmodel\/identity-swift.property"},{"title":"var items: [Item]","type":"property","path":"\/documentation\/tripkitui\/sectionmodel\/items"},{"title":"var model: Section","type":"property","path":"\/documentation\/tripkitui\/sectionmodel\/model"},{"title":"Type Aliases","type":"groupMarker"},{"title":"SectionModel.Identity","type":"typealias","path":"\/documentation\/tripkitui\/sectionmodel\/identity-swift.typealias"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CustomStringConvertible Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/sectionmodel\/description","title":"var description: String","type":"property"}],"type":"symbol","path":"\/documentation\/tripkitui\/sectionmodel\/customstringconvertible-implementations"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/sectionmodel\/!=(_:_:)","type":"op"},{"title":"static func == (SectionModel, SectionModel) -> Bool","path":"\/documentation\/tripkitui\/sectionmodel\/==(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/tripkitui\/sectionmodel\/equatable-implementations"},{"title":"SectionModelType Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/sectionmodel\/init(original:items:)","type":"init","title":"init(original: SectionModel<Section, Item>, items: [Item])"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkitui\/sectionmodel\/item","type":"typealias","title":"SectionModel.Item"}],"type":"symbol","path":"\/documentation\/tripkitui\/sectionmodel\/sectionmodeltype-implementations"}]},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview","type":"struct","title":"TKUIAutocompletionView","children":[{"type":"groupMarker","title":"Classes"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinator\/autocompleter(_:didselect:)","title":"func autocompleter(TKUIAutocompletionViewController, didSelect: TKAutocompletionSelection)"},{"type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinator\/autocompleter(_:didselectaccessoryfor:)","title":"func autocompleter(TKUIAutocompletionViewController, didSelectAccessoryFor: TKAutocompletionSelection)"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinator","type":"class","title":"TKUIAutocompletionView.Coordinator"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/init(providers:searchtext:biasmaprect:onresult:)","type":"init","title":"init(providers: [TKAutocompleting], searchText: String, biasMapRect: MKMapRect?, onResult: (TKAutocompletionSelection) -> Void)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/makecoordinator()","type":"method","title":"func makeCoordinator() -> Coordinator"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/makeuiviewcontroller(context:)","type":"method","title":"func makeUIViewController(context: Context) -> TKUIAutocompletionViewController"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/updateuiviewcontroller(_:context:)","type":"method","title":"func updateUIViewController(TKUIAutocompletionViewController, context: Context)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var body: Never","type":"property","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/body"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func sizeThatFits(ProposedViewSize, uiViewController: Self.UIViewControllerType, context: Self.Context) -> CGSize?","type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sizethatfits(_:uiviewcontroller:context:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func dismantleUIViewController(Self.UIViewControllerType, coordinator: Self.Coordinator)","type":"method","path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dismantleuiviewcontroller(_:coordinator:)"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/uiviewcontrollerrepresentable-implementations","type":"symbol","title":"UIViewControllerRepresentable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accentcolor(_:)","type":"method","title":"func accentColor(Color?) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(activationpoint:)-3rtwa","type":"method","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(activationpoint:)-z0h1","type":"method","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(addtraits:)","type":"method","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(hidden:)","type":"method","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(hint:)","type":"method","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(identifier:)","type":"method","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(inputlabels:)","type":"method","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(label:)","type":"method","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(removetraits:)","type":"method","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(selectionidentifier:)","type":"method","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(sortpriority:)","type":"method","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibility(value:)","type":"method","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(_:_:)","type":"method","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(action:label:)","type":"method","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(named:_:)-24dko","type":"method","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(named:_:)-7yenx","type":"method","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaction(named:_:)-lejo","type":"method","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactions(_:)","type":"method","title":"func accessibilityActions<Content>(() -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactions(category:_:)","type":"method","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactivationpoint(_:)-58vx3","type":"method","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactivationpoint(_:)-7aool","type":"method","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactivationpoint(_:isenabled:)-5p6f7","type":"method","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityactivationpoint(_:isenabled:)-6mp70","type":"method","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityaddtraits(_:)","type":"method","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityadjustableaction(_:)","type":"method","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitychartdescriptor(_:)","type":"method","title":"func accessibilityChartDescriptor<R>(R) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitychildren(children:)","type":"method","title":"func accessibilityChildren<V>(children: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-1sx4k","type":"method","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-2phl","type":"method","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-2w11v","type":"method","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-3ocbq","type":"method","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-4tm06","type":"method","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-5t6ti","type":"method","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-6zstj","type":"method","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitycustomcontent(_:_:importance:)-8ckur","type":"method","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydirecttouch(_:options:)","type":"method","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:)-1w8wm","type":"method","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:)-23z3g","type":"method","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:)-36xs2","type":"method","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:isenabled:)-5yt2w","type":"method","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:isenabled:)-6dfda","type":"method","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydragpoint(_:description:isenabled:)-83nb5","type":"method","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:)-1n9o1","type":"method","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:)-5fz06","type":"method","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:)-9e7yo","type":"method","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:isenabled:)-7ke99","type":"method","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:isenabled:)-8t507","type":"method","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitydroppoint(_:description:isenabled:)-hhw9","type":"method","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityelement(children:)","type":"method","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityfocused(_:)","type":"method","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityfocused(_:equals:)","type":"method","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityheading(_:)","type":"method","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhidden(_:)","type":"method","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhidden(_:isenabled:)","type":"method","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:)-4rjr6","type":"method","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:)-7cz9i","type":"method","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:)-912se","type":"method","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:isenabled:)-1yzg0","type":"method","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:isenabled:)-3nukq","type":"method","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityhint(_:isenabled:)-5uu9u","type":"method","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityidentifier(_:)","type":"method","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityidentifier(_:isenabled:)","type":"method","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityignoresinvertcolors(_:)","type":"method","title":"func accessibilityIgnoresInvertColors(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:)-1rnc8","type":"method","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:)-6clcx","type":"method","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:)-98qsi","type":"method","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:isenabled:)-89uf1","type":"method","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:isenabled:)-8jsfg","type":"method","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityinputlabels(_:isenabled:)-g7mj","type":"method","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:)-3gqj7","type":"method","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:)-3smn8","type":"method","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:)-80qre","type":"method","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:isenabled:)-4m9lr","type":"method","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:isenabled:)-6xo8u","type":"method","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(_:isenabled:)-7icr6","type":"method","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabel(content:)","type":"method","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylabeledpair(role:id:in:)","type":"method","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitylinkedgroup(id:in:)","type":"method","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityremovetraits(_:)","type":"method","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrepresentation(representation:)","type":"method","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrespondstouserinteraction(_:)","type":"method","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrespondstouserinteraction(_:isenabled:)","type":"method","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-44d2f","type":"method","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-4u5lm","type":"method","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-65fi1","type":"method","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:)-6jj3w","type":"method","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-1l2ag","type":"method","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-8ow7w","type":"method","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-99jr3","type":"method","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entryid:entrylabel:)-9hv8p","type":"method","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-5bb1","type":"method","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-677l5","type":"method","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-z4ug","type":"method","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:entries:entrylabel:)-zda5","type":"method","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-1jtjd","type":"method","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-3c56q","type":"method","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-8x0f","type":"method","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotor(_:textranges:)-9jsl6","type":"method","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityrotorentry(id:in:)","type":"method","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityscrollaction(_:)","type":"method","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityshowslargecontentviewer()","type":"method","title":"func accessibilityShowsLargeContentViewer() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityshowslargecontentviewer(_:)","type":"method","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitysortpriority(_:)","type":"method","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilitytextcontenttype(_:)","type":"method","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:)-7xzbw","type":"method","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:)-8qot4","type":"method","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:)-ua6k","type":"method","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:isenabled:)-3lciy","type":"method","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:isenabled:)-41nsy","type":"method","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityvalue(_:isenabled:)-81flp","type":"method","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/accessibilityzoomaction(_:)","type":"method","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/actionsheet(ispresented:content:)","type":"method","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/actionsheet(item:content:)","type":"method","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:)-1kmqz","type":"method","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:)-4qa2l","type":"method","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:)-6vx16","type":"method","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:message:)-3z2ms","type":"method","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:message:)-6qj8a","type":"method","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:actions:message:)-923z9","type":"method","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:)-2ks6p","type":"method","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:)-6l6de","type":"method","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:)-71hmj","type":"method","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:message:)-8xbjt","type":"method","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:message:)-ol91","type":"method","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(_:ispresented:presenting:actions:message:)-vcxr","type":"method","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(ispresented:content:)","type":"method","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(ispresented:error:actions:)","type":"method","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(ispresented:error:actions:message:)","type":"method","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alert(item:content:)","type":"method","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alignmentguide(_:computevalue:)-70iyq","type":"method","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alignmentguide(_:computevalue:)-79bc7","type":"method","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/alloweddynamicrange(_:)","type":"method","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/allowshittesting(_:)","type":"method","title":"func allowsHitTesting(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/allowstightening(_:)","type":"method","title":"func allowsTightening(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/allowswindowactivationevents(_:)","type":"method","title":"func allowsWindowActivationEvents(Bool?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/anchorpreference(key:value:transform:)","type":"method","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/animation(_:)","type":"method","title":"func animation(Animation?) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/animation(_:body:)","type":"method","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/animation(_:value:)","type":"method","title":"func animation<V>(Animation?, value: V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/aspectratio(_:contentmode:)-665rf","type":"method","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/aspectratio(_:contentmode:)-rcz6","type":"method","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/autocapitalization(_:)","type":"method","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/autocorrectiondisabled(_:)","type":"method","title":"func autocorrectionDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(_:alignment:)","type":"method","title":"func background<Background>(Background, alignment: Alignment) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(_:ignoressafeareaedges:)","type":"method","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(_:in:fillstyle:)-6rgra","type":"method","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(_:in:fillstyle:)-9js2g","type":"method","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(alignment:content:)","type":"method","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(ignoressafeareaedges:)","type":"method","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(in:fillstyle:)-2xaqg","type":"method","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/background(in:fillstyle:)-34b34","type":"method","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/backgroundpreferencevalue(_:_:)","type":"method","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/backgroundpreferencevalue(_:alignment:_:)","type":"method","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/backgroundstyle(_:)","type":"method","title":"func backgroundStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-3dkg8","type":"method","title":"func badge<S>(S?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-3un19","type":"method","title":"func badge(LocalizedStringKey?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-6yba6","type":"method","title":"func badge(Text?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badge(_:)-9cick","type":"method","title":"func badge(Int) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/badgeprominence(_:)","type":"method","title":"func badgeProminence(BadgeProminence) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/baselineoffset(_:)","type":"method","title":"func baselineOffset(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/blendmode(_:)","type":"method","title":"func blendMode(BlendMode) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/blur(radius:opaque:)","type":"method","title":"func blur(radius: CGFloat, opaque: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/bold(_:)","type":"method","title":"func bold(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/border(_:width:)","type":"method","title":"func border<S>(S, width: CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/brightness(_:)","type":"method","title":"func brightness(Double) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonbordershape(_:)","type":"method","title":"func buttonBorderShape(ButtonBorderShape) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonrepeatbehavior(_:)","type":"method","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonstyle(_:)-180ga","type":"method","title":"func buttonStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/buttonstyle(_:)-8wq5h","type":"method","title":"func buttonStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartangleselection(value:)","type":"method","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartbackground(alignment:content:)","type":"method","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(_:)","type":"method","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(domain:mapping:)","type":"method","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(domain:range:type:)","type":"method","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(domain:type:)","type":"method","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(mapping:)","type":"method","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(range:type:)","type":"method","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartforegroundstylescale(type:)","type":"method","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartgesture(_:)","type":"method","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlegend(_:)","type":"method","title":"func chartLegend(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlegend(position:alignment:spacing:)","type":"method","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlegend(position:alignment:spacing:content:)","type":"method","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(_:)","type":"method","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(domain:)","type":"method","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(domain:mapping:)","type":"method","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(domain:range:)","type":"method","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(mapping:)","type":"method","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartlinestylescale(range:)","type":"method","title":"func chartLineStyleScale<Range>(range: Range) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartoverlay(alignment:content:)","type":"method","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartplotstyle(content:)","type":"method","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollposition(initialx:)","type":"method","title":"func chartScrollPosition(initialX: some Plottable) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollposition(initialy:)","type":"method","title":"func chartScrollPosition(initialY: some Plottable) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollposition(x:)","type":"method","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollposition(y:)","type":"method","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrolltargetbehavior(_:)","type":"method","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartscrollableaxes(_:)","type":"method","title":"func chartScrollableAxes(Axis.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(_:)-528vy","type":"method","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(_:)-8een4","type":"method","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(domain:)","type":"method","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(domain:mapping:)","type":"method","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(domain:range:)-80zd","type":"method","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(domain:range:)-82973","type":"method","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(mapping:)","type":"method","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(range:)-4natz","type":"method","title":"func chartSymbolScale<Range>(range: Range) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolscale(range:)-7r961","type":"method","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(_:)","type":"method","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(domain:mapping:)","type":"method","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(domain:range:type:)","type":"method","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(domain:type:)","type":"method","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(mapping:)","type":"method","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(range:type:)","type":"method","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartsymbolsizescale(type:)","type":"method","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxis(_:)","type":"method","title":"func chartXAxis(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxis(content:)","type":"method","title":"func chartXAxis<Content>(content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxislabel(_:position:alignment:spacing:)-8x1f9","type":"method","title":"func chartXAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxislabel(_:position:alignment:spacing:)-b578","type":"method","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxislabel(position:alignment:spacing:content:)","type":"method","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxaxisstyle(content:)","type":"method","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxscale(domain:range:type:)","type":"method","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxscale(domain:type:)","type":"method","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxscale(range:type:)","type":"method","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxscale(type:)","type":"method","title":"func chartXScale(type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxselection(range:)","type":"method","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxselection(value:)","type":"method","title":"func chartXSelection<P>(value: Binding<P?>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartxvisibledomain(length:)","type":"method","title":"func chartXVisibleDomain<P>(length: P) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxis(_:)","type":"method","title":"func chartYAxis(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxis(content:)","type":"method","title":"func chartYAxis<Content>(content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxislabel(_:position:alignment:spacing:)-6g3ue","type":"method","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxislabel(_:position:alignment:spacing:)-94fv1","type":"method","title":"func chartYAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxislabel(position:alignment:spacing:content:)","type":"method","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyaxisstyle(content:)","type":"method","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyscale(domain:range:type:)","type":"method","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyscale(domain:type:)","type":"method","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyscale(range:type:)","type":"method","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyscale(type:)","type":"method","title":"func chartYScale(type: ScaleType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyselection(range:)","type":"method","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyselection(value:)","type":"method","title":"func chartYSelection<P>(value: Binding<P?>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/chartyvisibledomain(length:)","type":"method","title":"func chartYVisibleDomain<P>(length: P) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/clipshape(_:style:)","type":"method","title":"func clipShape<S>(S, style: FillStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/clipped(antialiased:)","type":"method","title":"func clipped(antialiased: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coloreffect(_:isenabled:)","type":"method","title":"func colorEffect(Shader, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/colorinvert()","type":"method","title":"func colorInvert() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/colormultiply(_:)","type":"method","title":"func colorMultiply(Color) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/colorscheme(_:)","type":"method","title":"func colorScheme(ColorScheme) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/compositinggroup()","type":"method","title":"func compositingGroup() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-198dq","type":"method","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8m4xb","type":"method","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-d99","type":"method","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-11wrk","type":"method","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-5cv1c","type":"method","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-duj3","type":"method","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5hc0k","type":"method","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-5ynha","type":"method","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-9qlwp","type":"method","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1r4j2","type":"method","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-1unud","type":"method","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-99o6q","type":"method","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerbackground(_:for:)","type":"method","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerbackground(for:alignment:content:)","type":"method","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerrelativeframe(_:alignment:)","type":"method","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerrelativeframe(_:alignment:_:)","type":"method","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containerrelativeframe(_:count:span:spacing:alignment:)","type":"method","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containershape(_:)","type":"method","title":"func containerShape<T>(T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/containervalue(_:_:)","type":"method","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentmargins(_:_:for:)-58438","type":"method","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentmargins(_:_:for:)-73vxt","type":"method","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentmargins(_:for:)","type":"method","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentshape(_:_:eofill:)","type":"method","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contentshape(_:eofill:)","type":"method","title":"func contentShape<S>(S, eoFill: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contenttoolbar(for:content:)-9orol","type":"method","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contenttoolbar(for:content:)-ckw5","type":"method","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contenttransition(_:)","type":"method","title":"func contentTransition(ContentTransition) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contextmenu(_:)","type":"method","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contextmenu(forselectiontype:menu:primaryaction:)","type":"method","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contextmenu(menuitems:)","type":"method","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contextmenu(menuitems:preview:)","type":"method","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/contrast(_:)","type":"method","title":"func contrast(Double) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/controlgroupstyle(_:)","type":"method","title":"func controlGroupStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/controlsize(_:)","type":"method","title":"func controlSize(ControlSize) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinatespace(_:)","type":"method","title":"func coordinateSpace(NamedCoordinateSpace) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/coordinatespace(name:)","type":"method","title":"func coordinateSpace<T>(name: T) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/cornerradius(_:antialiased:)","type":"method","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/datepickerstyle(_:)","type":"method","title":"func datePickerStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultadaptabletabbarplacement(_:)","type":"method","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultappstorage(_:)","type":"method","title":"func defaultAppStorage(UserDefaults) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultfocus(_:_:priority:)","type":"method","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaulthovereffect(_:)-6ixit","type":"method","title":"func defaultHoverEffect(HoverEffect?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaulthovereffect(_:)-8hi0q","type":"method","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultscrollanchor(_:)","type":"method","title":"func defaultScrollAnchor(UnitPoint?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/defaultscrollanchor(_:for:)","type":"method","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/deferssystemgestures(on:)","type":"method","title":"func defersSystemGestures(on: Edge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/deletedisabled(_:)","type":"method","title":"func deleteDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogicon(_:)","type":"method","title":"func dialogIcon(Image?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(_:issuppressed:)-5dh9s","type":"method","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(_:issuppressed:)-6uzkh","type":"method","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(_:issuppressed:)-7szku","type":"method","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dialogsuppressiontoggle(issuppressed:)","type":"method","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/disableautocorrection(_:)","type":"method","title":"func disableAutocorrection(Bool?) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/disabled(_:)","type":"method","title":"func disabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/disclosuregroupstyle(_:)","type":"method","title":"func disclosureGroupStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/distortioneffect(_:maxsampleoffset:isenabled:)","type":"method","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/documentbrowsercontextmenu(_:)","type":"method","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/draggable(_:)","type":"method","title":"func draggable<T>(@autoclosure () -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/draggable(_:preview:)","type":"method","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/drawinggroup(opaque:colormode:)","type":"method","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dropdestination(for:action:istargeted:)","type":"method","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/dynamictypesize(_:)","type":"method","title":"func dynamicTypeSize(DynamicTypeSize) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/edgesignoringsafearea(_:)","type":"method","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/environment(_:)","type":"method","title":"func environment<T>(T?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/environment(_:_:)","type":"method","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/environmentobject(_:)","type":"method","title":"func environmentObject<T>(T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogbrowseroptions(_:)","type":"method","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogconfirmationlabel(_:)-2p83h","type":"method","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogconfirmationlabel(_:)-4455","type":"method","title":"func fileDialogConfirmationLabel<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogconfirmationlabel(_:)-65mac","type":"method","title":"func fileDialogConfirmationLabel(Text?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogcustomizationid(_:)","type":"method","title":"func fileDialogCustomizationID(String) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogdefaultdirectory(_:)","type":"method","title":"func fileDialogDefaultDirectory(URL?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogimportsunresolvedaliases(_:)","type":"method","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogmessage(_:)-5070e","type":"method","title":"func fileDialogMessage(Text?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogmessage(_:)-9oazi","type":"method","title":"func fileDialogMessage(LocalizedStringKey) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogmessage(_:)-9x4ge","type":"method","title":"func fileDialogMessage<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filedialogurlenabled(_:)","type":"method","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-251i0","type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-7vvw9","type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-3k4lu","type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-rjal","type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-10e5z","type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8zx8","type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-1ea4v","type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-9yq02","type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)","type":"method","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)","type":"method","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporterfilenamelabel(_:)-2bwdr","type":"method","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporterfilenamelabel(_:)-9fcux","type":"method","title":"func fileExporterFilenameLabel<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileexporterfilenamelabel(_:)-9vbfr","type":"method","title":"func fileExporterFilenameLabel(Text?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)","type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)","type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)","type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filemover(ispresented:file:oncompletion:)","type":"method","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filemover(ispresented:file:oncompletion:oncancellation:)","type":"method","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filemover(ispresented:files:oncompletion:)","type":"method","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/filemover(ispresented:files:oncompletion:oncancellation:)","type":"method","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/finddisabled(_:)","type":"method","title":"func findDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/findnavigator(ispresented:)","type":"method","title":"func findNavigator(isPresented: Binding<Bool>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fixedsize()","type":"method","title":"func fixedSize() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fixedsize(horizontal:vertical:)","type":"method","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/flipsforrighttoleftlayoutdirection(_:)","type":"method","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focuseffectdisabled(_:)","type":"method","title":"func focusEffectDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusable(_:)","type":"method","title":"func focusable(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusable(_:interactions:)","type":"method","title":"func focusable(Bool, interactions: FocusInteractions) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focused(_:)","type":"method","title":"func focused(FocusState<Bool>.Binding) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focused(_:equals:)","type":"method","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedobject(_:)-1h8ua","type":"method","title":"func focusedObject<T>(T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedobject(_:)-1yjkv","type":"method","title":"func focusedObject<T>(T?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedsceneobject(_:)-1oplb","type":"method","title":"func focusedSceneObject<T>(T?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedsceneobject(_:)-5o7vl","type":"method","title":"func focusedSceneObject<T>(T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedscenevalue(_:)","type":"method","title":"func focusedSceneValue<T>(T?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedscenevalue(_:_:)-5z32i","type":"method","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedscenevalue(_:_:)-hwxn","type":"method","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedvalue(_:)","type":"method","title":"func focusedValue<T>(T?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedvalue(_:_:)-1wg55","type":"method","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/focusedvalue(_:_:)-6srfx","type":"method","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/font(_:)","type":"method","title":"func font(Font?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fontdesign(_:)","type":"method","title":"func fontDesign(Font.Design?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fontweight(_:)","type":"method","title":"func fontWeight(Font.Weight?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fontwidth(_:)","type":"method","title":"func fontWidth(Font.Width?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/foregroundcolor(_:)","type":"method","title":"func foregroundColor(Color?) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/foregroundstyle(_:)","type":"method","title":"func foregroundStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/foregroundstyle(_:_:)","type":"method","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/foregroundstyle(_:_:_:)","type":"method","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/formstyle(_:)","type":"method","title":"func formStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/frame()","type":"method","title":"func frame() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)","type":"method","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/frame(width:height:alignment:)","type":"method","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fullscreencover(ispresented:ondismiss:content:)","type":"method","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/fullscreencover(item:ondismiss:content:)","type":"method","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gaugestyle(_:)","type":"method","title":"func gaugeStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/geometrygroup()","type":"method","title":"func geometryGroup() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gesture(_:)","type":"method","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gesture(_:including:)","type":"method","title":"func gesture<T>(T, including: GestureMask) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gesture(_:isenabled:)","type":"method","title":"func gesture<T>(T, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gesture(_:name:isenabled:)","type":"method","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/grayscale(_:)","type":"method","title":"func grayscale(Double) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gridcellanchor(_:)","type":"method","title":"func gridCellAnchor(UnitPoint) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gridcellcolumns(_:)","type":"method","title":"func gridCellColumns(Int) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gridcellunsizedaxes(_:)","type":"method","title":"func gridCellUnsizedAxes(Axis.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/gridcolumnalignment(_:)","type":"method","title":"func gridColumnAlignment(HorizontalAlignment) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/groupboxstyle(_:)","type":"method","title":"func groupBoxStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/handgestureshortcut(_:isenabled:)","type":"method","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/handlesexternalevents(preferring:allowing:)","type":"method","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/headerprominence(_:)","type":"method","title":"func headerProminence(Prominence) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/help(_:)-1n81b","type":"method","title":"func help(LocalizedStringKey) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/help(_:)-5121t","type":"method","title":"func help(Text) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/help(_:)-96xf4","type":"method","title":"func help<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hidden()","type":"method","title":"func hidden() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/highprioritygesture(_:including:)","type":"method","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/highprioritygesture(_:isenabled:)","type":"method","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/highprioritygesture(_:name:isenabled:)","type":"method","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hovereffect(_:)","type":"method","title":"func hoverEffect(HoverEffect) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hovereffect(_:isenabled:)-20t3c","type":"method","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hovereffect(_:isenabled:)-2w19t","type":"method","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/hovereffectdisabled(_:)","type":"method","title":"func hoverEffectDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/huerotation(_:)","type":"method","title":"func hueRotation(Angle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/id(_:)","type":"method","title":"func id<ID>(ID) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ignoressafearea(_:edges:)","type":"method","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/imagescale(_:)","type":"method","title":"func imageScale(Image.Scale) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/indexviewstyle(_:)","type":"method","title":"func indexViewStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/inspector(ispresented:content:)","type":"method","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/inspectorcolumnwidth(_:)","type":"method","title":"func inspectorColumnWidth(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/inspectorcolumnwidth(min:ideal:max:)","type":"method","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/interactionactivitytrackingtag(_:)","type":"method","title":"func interactionActivityTrackingTag(String) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/interactivedismissdisabled(_:)","type":"method","title":"func interactiveDismissDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/invalidatablecontent(_:)","type":"method","title":"func invalidatableContent(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/italic(_:)","type":"method","title":"func italic(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/itemprovider(_:)","type":"method","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/kerning(_:)","type":"method","title":"func kerning(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardshortcut(_:)-3rxwi","type":"method","title":"func keyboardShortcut(KeyboardShortcut) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardshortcut(_:)-43dtr","type":"method","title":"func keyboardShortcut(KeyboardShortcut?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardshortcut(_:modifiers:)","type":"method","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardshortcut(_:modifiers:localization:)","type":"method","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyboardtype(_:)","type":"method","title":"func keyboardType(UIKeyboardType) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyframeanimator(initialvalue:repeating:content:keyframes:)","type":"method","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/keyframeanimator(initialvalue:trigger:content:keyframes:)","type":"method","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labelstyle(_:)","type":"method","title":"func labelStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labeledcontentstyle(_:)","type":"method","title":"func labeledContentStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labelshidden()","type":"method","title":"func labelsHidden() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/labelsvisibility(_:)","type":"method","title":"func labelsVisibility(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/layereffect(_:maxsampleoffset:isenabled:)","type":"method","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/layoutdirectionbehavior(_:)","type":"method","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/layoutpriority(_:)","type":"method","title":"func layoutPriority(Double) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/layoutvalue(key:value:)","type":"method","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/linelimit(_:)","type":"method","title":"func lineLimit(Int?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/linelimit(_:reservesspace:)","type":"method","title":"func lineLimit(Int, reservesSpace: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/linespacing(_:)","type":"method","title":"func lineSpacing(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listitemtint(_:)-2j0fn","type":"method","title":"func listItemTint(Color?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listitemtint(_:)-87a5u","type":"method","title":"func listItemTint(ListItemTint?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowbackground(_:)","type":"method","title":"func listRowBackground<V>(V?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowinsets(_:)","type":"method","title":"func listRowInsets(EdgeInsets?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowseparator(_:edges:)","type":"method","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowseparatortint(_:edges:)","type":"method","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listrowspacing(_:)","type":"method","title":"func listRowSpacing(CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionseparator(_:edges:)","type":"method","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionseparatortint(_:edges:)","type":"method","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionspacing(_:)-3pn0z","type":"method","title":"func listSectionSpacing(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/listsectionspacing(_:)-90php","type":"method","title":"func listSectionSpacing(ListSectionSpacing) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/liststyle(_:)","type":"method","title":"func listStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/lookaroundviewer(ispresented:initialscene:allowsnavigation:showsroadlabels:pointsofinterest:ondismiss:)","type":"method","title":"func lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/lookaroundviewer(ispresented:scene:allowsnavigation:showsroadlabels:pointsofinterest:ondismiss:)","type":"method","title":"func lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/luminancetoalpha()","type":"method","title":"func luminanceToAlpha() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapcamerakeyframeanimator(trigger:keyframes:)","type":"method","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapcontrolvisibility(_:)","type":"method","title":"func mapControlVisibility(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapcontrols(_:)","type":"method","title":"func mapControls(() -> some View) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapfeatureselectionaccessory(_:)","type":"method","title":"func mapFeatureSelectionAccessory(MapItemDetailSelectionAccessoryStyle?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapfeatureselectioncontent(content:)","type":"method","title":"func mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapfeatureselectiondisabled(_:)","type":"method","title":"func mapFeatureSelectionDisabled((MapFeature) -> Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailpopover(ispresented:item:displaysmap:attachmentanchor:)","type":"method","title":"func mapItemDetailPopover(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailpopover(ispresented:item:displaysmap:attachmentanchor:arrowedge:)","type":"method","title":"func mapItemDetailPopover(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailpopover(item:displaysmap:attachmentanchor:)","type":"method","title":"func mapItemDetailPopover(item: Binding<MKMapItem?>, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailpopover(item:displaysmap:attachmentanchor:arrowedge:)","type":"method","title":"func mapItemDetailPopover(item: Binding<MKMapItem?>, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailsheet(ispresented:item:displaysmap:)","type":"method","title":"func mapItemDetailSheet(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapitemdetailsheet(item:displaysmap:)","type":"method","title":"func mapItemDetailSheet(item: Binding<MKMapItem?>, displaysMap: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapscope(_:)","type":"method","title":"func mapScope(Namespace.ID) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mapstyle(_:)","type":"method","title":"func mapStyle(MapStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mask(_:)","type":"method","title":"func mask<Mask>(Mask) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/mask(alignment:_:)","type":"method","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/matchedgeometryeffect(id:in:properties:anchor:issource:)","type":"method","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/matchedtransitionsource(id:in:)","type":"method","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/matchedtransitionsource(id:in:configuration:)","type":"method","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/materialactiveappearance(_:)","type":"method","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/menuactiondismissbehavior(_:)","type":"method","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/menuindicator(_:)","type":"method","title":"func menuIndicator(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/menuorder(_:)","type":"method","title":"func menuOrder(MenuOrder) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/menustyle(_:)","type":"method","title":"func menuStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/minimumscalefactor(_:)","type":"method","title":"func minimumScaleFactor(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/modifier(_:)","type":"method","title":"func modifier<T>(T) -> ModifiedContent<Self, T>"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/monospaced(_:)","type":"method","title":"func monospaced(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/monospaceddigit()","type":"method","title":"func monospacedDigit() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/movedisabled(_:)","type":"method","title":"func moveDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/multilinetextalignment(_:)","type":"method","title":"func multilineTextAlignment(TextAlignment) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbarbackbuttonhidden(_:)","type":"method","title":"func navigationBarBackButtonHidden(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbarhidden(_:)","type":"method","title":"func navigationBarHidden(Bool) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbaritems(leading:)","type":"method","title":"func navigationBarItems<L>(leading: L) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbaritems(leading:trailing:)","type":"method","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbaritems(trailing:)","type":"method","title":"func navigationBarItems<T>(trailing: T) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:)-1ghzs","type":"method","title":"func navigationBarTitle(LocalizedStringKey) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:)-3k47y","type":"method","title":"func navigationBarTitle(Text) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:)-73rp","type":"method","title":"func navigationBarTitle<S>(S) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:displaymode:)-3ndjg","type":"method","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:displaymode:)-61c5k","type":"method","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitle(_:displaymode:)-utjc","type":"method","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationbartitledisplaymode(_:)","type":"method","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdestination(for:destination:)","type":"method","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdestination(ispresented:destination:)","type":"method","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdestination(item:destination:)","type":"method","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:)-4c5dq","type":"method","title":"func navigationDocument(URL) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:)-4z902","type":"method","title":"func navigationDocument<D>(D) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:preview:)-1jw04","type":"method","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:preview:)-1mr8t","type":"method","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:preview:)-3o7lj","type":"method","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationdocument(_:preview:)-4hy58","type":"method","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsplitviewcolumnwidth(_:)","type":"method","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsplitviewcolumnwidth(min:ideal:max:)","type":"method","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationsplitviewstyle(_:)","type":"method","title":"func navigationSplitViewStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-3exhs","type":"method","title":"func navigationTitle(LocalizedStringKey) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-4bp0x","type":"method","title":"func navigationTitle(Text) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-8m98f","type":"method","title":"func navigationTitle<V>(() -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-9myme","type":"method","title":"func navigationTitle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtitle(_:)-j6on","type":"method","title":"func navigationTitle(Binding<String>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationtransition(_:)","type":"method","title":"func navigationTransition(some NavigationTransition) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/navigationviewstyle(_:)","type":"method","title":"func navigationViewStyle<S>(S) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/offset(_:)","type":"method","title":"func offset(CGSize) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/offset(x:y:)","type":"method","title":"func offset(x: CGFloat, y: CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onappear(perform:)","type":"method","title":"func onAppear(perform: (() -> Void)?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onchange(of:initial:_:)-5hswj","type":"method","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onchange(of:initial:_:)-86cw0","type":"method","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onchange(of:perform:)","type":"method","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/oncontinueuseractivity(_:perform:)","type":"method","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/oncontinuoushover(coordinatespace:perform:)-3c957","type":"method","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/oncontinuoushover(coordinatespace:perform:)-9xwlo","type":"method","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondisappear(perform:)","type":"method","title":"func onDisappear(perform: (() -> Void)?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrag(_:)","type":"method","title":"func onDrag(() -> NSItemProvider) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrag(_:preview:)","type":"method","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:delegate:)-1ofvq","type":"method","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:delegate:)-6zb3x","type":"method","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:istargeted:perform:)-1rsm0","type":"method","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:istargeted:perform:)-8mdd6","type":"method","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:istargeted:perform:)-9a5ci","type":"method","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ondrop(of:istargeted:perform:)-fp7q","type":"method","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ongeometrychange(for:of:action:)-28xk8","type":"method","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ongeometrychange(for:of:action:)-9284q","type":"method","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onhover(perform:)","type":"method","title":"func onHover(perform: (Bool) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(_:action:)","type":"method","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(_:phases:action:)","type":"method","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(characters:phases:action:)","type":"method","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(keys:phases:action:)","type":"method","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onkeypress(phases:action:)","type":"method","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)","type":"method","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)","type":"method","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)","type":"method","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onlongpressgesture(minimumduration:pressing:perform:)","type":"method","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onmapcamerachange(frequency:_:)-21nla","type":"method","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onmapcamerachange(frequency:_:)-7yt7d","type":"method","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onopenurl(perform:)","type":"method","title":"func onOpenURL(perform: (URL) -> ()) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onpencildoubletap(perform:)","type":"method","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onpencilsqueeze(perform:)","type":"method","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onpreferencechange(_:perform:)","type":"method","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onreceive(_:perform:)","type":"method","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrollgeometrychange(for:of:action:)","type":"method","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrollphasechange(_:)-4zqug","type":"method","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrollphasechange(_:)-8m500","type":"method","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrolltargetvisibilitychange(idtype:threshold:_:)","type":"method","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onscrollvisibilitychange(threshold:_:)","type":"method","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/onsubmit(of:_:)","type":"method","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ontapgesture(count:coordinatespace:perform:)-3p065","type":"method","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ontapgesture(count:coordinatespace:perform:)-6612b","type":"method","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/ontapgesture(count:perform:)","type":"method","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/opacity(_:)","type":"method","title":"func opacity(Double) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlay(_:alignment:)","type":"method","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlay(_:ignoressafeareaedges:)","type":"method","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlay(_:in:fillstyle:)","type":"method","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlay(alignment:content:)","type":"method","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlaypreferencevalue(_:_:)","type":"method","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/overlaypreferencevalue(_:alignment:_:)","type":"method","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/padding(_:)-1ej1y","type":"method","title":"func padding(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/padding(_:)-7mn9z","type":"method","title":"func padding(EdgeInsets) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/padding(_:_:)","type":"method","title":"func padding(Edge.Set, CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/paletteselectioneffect(_:)","type":"method","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/persistentsystemoverlays(_:)","type":"method","title":"func persistentSystemOverlays(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/phaseanimator(_:content:animation:)","type":"method","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/phaseanimator(_:trigger:content:animation:)","type":"method","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/pickerstyle(_:)","type":"method","title":"func pickerStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/popover(ispresented:attachmentanchor:arrowedge:content:)","type":"method","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/popover(item:attachmentanchor:arrowedge:content:)","type":"method","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/popovertip(_:arrowedge:action:)","type":"method","title":"func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/position(_:)","type":"method","title":"func position(CGPoint) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/position(x:y:)","type":"method","title":"func position(x: CGFloat, y: CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/preference(key:value:)","type":"method","title":"func preference<K>(key: K.Type, value: K.Value) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/preferredcolorscheme(_:)","type":"method","title":"func preferredColorScheme(ColorScheme?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationbackground(_:)","type":"method","title":"func presentationBackground<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationbackground(alignment:content:)","type":"method","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationbackgroundinteraction(_:)","type":"method","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationcompactadaptation(_:)","type":"method","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationcompactadaptation(horizontal:vertical:)","type":"method","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationcontentinteraction(_:)","type":"method","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationcornerradius(_:)","type":"method","title":"func presentationCornerRadius(CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationdetents(_:)","type":"method","title":"func presentationDetents(Set<PresentationDetent>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationdetents(_:selection:)","type":"method","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationdragindicator(_:)","type":"method","title":"func presentationDragIndicator(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/presentationsizing(_:)","type":"method","title":"func presentationSizing(some PresentationSizing) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewcontext(_:)","type":"method","title":"func previewContext<C>(C) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewdevice(_:)","type":"method","title":"func previewDevice(PreviewDevice?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewdisplayname(_:)","type":"method","title":"func previewDisplayName(String?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewinterfaceorientation(_:)","type":"method","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/previewlayout(_:)","type":"method","title":"func previewLayout(PreviewLayout) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/privacysensitive(_:)","type":"method","title":"func privacySensitive(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/progressviewstyle(_:)","type":"method","title":"func progressViewStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/projectioneffect(_:)","type":"method","title":"func projectionEffect(ProjectionTransform) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/redacted(reason:)","type":"method","title":"func redacted(reason: RedactionReasons) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/refreshable(action:)","type":"method","title":"func refreshable(action: () async -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/renameaction(_:)-5j8vb","type":"method","title":"func renameAction(FocusState<Bool>.Binding) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/renameaction(_:)-te4p","type":"method","title":"func renameAction(() -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/replacedisabled(_:)","type":"method","title":"func replaceDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)","type":"method","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/rotationeffect(_:anchor:)","type":"method","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareainset(edge:alignment:spacing:content:)-22tm2","type":"method","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareainset(edge:alignment:spacing:content:)-526lv","type":"method","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareapadding(_:)-4hcm4","type":"method","title":"func safeAreaPadding(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareapadding(_:)-6t7k","type":"method","title":"func safeAreaPadding(EdgeInsets) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/safeareapadding(_:_:)","type":"method","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/saturation(_:)","type":"method","title":"func saturation(Double) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaleeffect(_:anchor:)-4019i","type":"method","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaleeffect(_:anchor:)-9sk8j","type":"method","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaleeffect(x:y:anchor:)","type":"method","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaledtofill()","type":"method","title":"func scaledToFill() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scaledtofit()","type":"method","title":"func scaledToFit() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scenepadding(_:)","type":"method","title":"func scenePadding(Edge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scenepadding(_:edges:)","type":"method","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollbouncebehavior(_:axes:)","type":"method","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollclipdisabled(_:)","type":"method","title":"func scrollClipDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollcontentbackground(_:)","type":"method","title":"func scrollContentBackground(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolldisabled(_:)","type":"method","title":"func scrollDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolldismisseskeyboard(_:)","type":"method","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollindicators(_:axes:)","type":"method","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollindicatorsflash(onappear:)","type":"method","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollindicatorsflash(trigger:)","type":"method","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollinputbehavior(_:for:)","type":"method","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollposition(_:anchor:)","type":"method","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrollposition(id:anchor:)","type":"method","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolltargetbehavior(_:)","type":"method","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolltargetlayout(isenabled:)","type":"method","title":"func scrollTargetLayout(isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolltransition(_:axis:transition:)","type":"method","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/scrolltransition(topleading:bottomtrailing:axis:transition:)","type":"method","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchcompletion(_:)","type":"method","title":"func searchCompletion(String) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchdictationbehavior(_:)","type":"method","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchfocused(_:)","type":"method","title":"func searchFocused(FocusState<Bool>.Binding) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchfocused(_:equals:)","type":"method","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchpresentationtoolbarbehavior(_:)","type":"method","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchscopes(_:activation:_:)","type":"method","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchscopes(_:scopes:)","type":"method","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchsuggestions(_:)","type":"method","title":"func searchSuggestions<S>(() -> S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchsuggestions(_:for:)","type":"method","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6gtga","type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6ov7o","type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-84az3","type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:placement:prompt:token:)-8obvd","type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:placement:prompt:token:)-si7q","type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:editabletokens:placement:prompt:token:)-uosa","type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:ispresented:placement:prompt:)-1kweh","type":"method","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:ispresented:placement:prompt:)-1mse6","type":"method","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:ispresented:placement:prompt:)-5qh72","type":"method","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:)-2nlrs","type":"method","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:)-7sycf","type":"method","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:)-8qo46","type":"method","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:suggestions:)-69nfh","type":"method","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:suggestions:)-7szd7","type":"method","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:placement:prompt:suggestions:)-9wrn1","type":"method","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:ispresented:placement:prompt:token:)-11tbs","type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:ispresented:placement:prompt:token:)-7jhc1","type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:ispresented:placement:prompt:token:)-99d36","type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:placement:prompt:token:)-2l90s","type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:placement:prompt:token:)-9bd8i","type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:placement:prompt:token:)-9qdqk","type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-4ev44","type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6hizm","type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9glt7","type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-1aoyg","type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-393x6","type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-4unsj","type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sectionactions(content:)","type":"method","title":"func sectionActions<Content>(content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/selectiondisabled(_:)","type":"method","title":"func selectionDisabled(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sensoryfeedback(_:trigger:)","type":"method","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sensoryfeedback(_:trigger:condition:)","type":"method","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sensoryfeedback(trigger:_:)","type":"method","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/shadow(color:radius:x:y:)","type":"method","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sheet(ispresented:ondismiss:content:)","type":"method","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/sheet(item:ondismiss:content:)","type":"method","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/simultaneousgesture(_:including:)","type":"method","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/simultaneousgesture(_:isenabled:)","type":"method","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/simultaneousgesture(_:name:isenabled:)","type":"method","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/speechadjustedpitch(_:)","type":"method","title":"func speechAdjustedPitch(Double) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/speechalwaysincludespunctuation(_:)","type":"method","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/speechannouncementsqueued(_:)","type":"method","title":"func speechAnnouncementsQueued(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/speechspellsoutcharacters(_:)","type":"method","title":"func speechSpellsOutCharacters(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/springloadingbehavior(_:)","type":"method","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/statusbar(hidden:)","type":"method","title":"func statusBar(hidden: Bool) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/statusbarhidden(_:)","type":"method","title":"func statusBarHidden(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/strikethrough(_:pattern:color:)","type":"method","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/submitlabel(_:)","type":"method","title":"func submitLabel(SubmitLabel) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/submitscope(_:)","type":"method","title":"func submitScope(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/swipeactions(edge:allowsfullswipe:content:)","type":"method","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symboleffect(_:options:isactive:)","type":"method","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symboleffect(_:options:value:)","type":"method","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symboleffectsremoved(_:)","type":"method","title":"func symbolEffectsRemoved(Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symbolrenderingmode(_:)","type":"method","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/symbolvariant(_:)","type":"method","title":"func symbolVariant(SymbolVariants) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabitem(_:)","type":"method","title":"func tabItem<V>(() -> V) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewcustomization(_:)","type":"method","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewsidebarbottombar(content:)","type":"method","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewsidebarfooter(content:)","type":"method","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewsidebarheader(content:)","type":"method","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tabviewstyle(_:)","type":"method","title":"func tabViewStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tablecolumnheaders(_:)","type":"method","title":"func tableColumnHeaders(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tablestyle(_:)","type":"method","title":"func tableStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tag(_:includeoptional:)","type":"method","title":"func tag<V>(V, includeOptional: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/task(id:priority:_:)","type":"method","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/task(priority:_:)","type":"method","title":"func task(priority: TaskPriority, () async -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textcase(_:)","type":"method","title":"func textCase(Text.Case?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textcontenttype(_:)","type":"method","title":"func textContentType(UITextContentType?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/texteditorstyle(_:)","type":"method","title":"func textEditorStyle(some TextEditorStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textfieldstyle(_:)","type":"method","title":"func textFieldStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textinputautocapitalization(_:)","type":"method","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textrenderer(_:)","type":"method","title":"func textRenderer<T>(T) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textscale(_:isenabled:)","type":"method","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textselection(_:)","type":"method","title":"func textSelection<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/textselectionaffinity(_:)","type":"method","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tint(_:)","type":"method","title":"func tint(Color?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipbackground(_:)","type":"method","title":"func tipBackground(some ShapeStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipcornerradius(_:antialiased:)","type":"method","title":"func tipCornerRadius(CGFloat, antialiased: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipimagesize(_:)","type":"method","title":"func tipImageSize(CGSize) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipimagestyle(_:)","type":"method","title":"func tipImageStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipimagestyle(_:_:)","type":"method","title":"func tipImageStyle<S1, S2>(S1, S2) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipimagestyle(_:_:_:)","type":"method","title":"func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tipviewstyle(_:)","type":"method","title":"func tipViewStyle(some TipViewStyle) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/togglestyle(_:)","type":"method","title":"func toggleStyle<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(_:for:)","type":"method","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(content:)-4mg8z","type":"method","title":"func toolbar<Content>(content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(content:)-8ac4v","type":"method","title":"func toolbar<Content>(content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(id:content:)","type":"method","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbar(removing:)","type":"method","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarbackground(_:for:)-1cb5","type":"method","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarbackground(_:for:)-4ki5q","type":"method","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","deprecated":true},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarbackgroundvisibility(_:for:)","type":"method","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarcolorscheme(_:for:)","type":"method","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarforegroundstyle(_:for:)","type":"method","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarrole(_:)","type":"method","title":"func toolbarRole(ToolbarRole) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbartitledisplaymode(_:)","type":"method","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbartitlemenu(content:)","type":"method","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/toolbarvisibility(_:for:)","type":"method","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/tracking(_:)","type":"method","title":"func tracking(CGFloat) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transaction(_:)","type":"method","title":"func transaction((inout Transaction) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transaction(_:body:)","type":"method","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transaction(value:_:)","type":"method","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transformanchorpreference(key:value:transform:)","type":"method","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transformeffect(_:)","type":"method","title":"func transformEffect(CGAffineTransform) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transformenvironment(_:transform:)","type":"method","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transformpreference(_:_:)","type":"method","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/transition(_:)","type":"method","title":"func transition(AnyTransition) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/truncationmode(_:)","type":"method","title":"func truncationMode(Text.TruncationMode) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typeselectequivalent(_:)-5iorw","type":"method","title":"func typeSelectEquivalent<S>(S) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typeselectequivalent(_:)-64glb","type":"method","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typeselectequivalent(_:)-7i795","type":"method","title":"func typeSelectEquivalent(Text?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typesettinglanguage(_:isenabled:)-6zq5o","type":"method","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/typesettinglanguage(_:isenabled:)-9wihd","type":"method","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/underline(_:pattern:color:)","type":"method","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/unredacted()","type":"method","title":"func unredacted() -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/useractivity(_:element:_:)","type":"method","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/useractivity(_:isactive:_:)","type":"method","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/visualeffect(_:)","type":"method","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/windowtoolbarfullscreenvisibility(_:)","type":"method","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/writingtoolsaffordancevisibility(_:)","type":"method","title":"func writingToolsAffordanceVisibility(Visibility) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/writingtoolsbehavior(_:)","type":"method","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View"},{"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/zindex(_:)","type":"method","title":"func zIndex(Double) -> some View"}],"path":"\/documentation\/tripkitui\/tkuiautocompletionview\/view-implementations","type":"symbol","title":"View Implementations"}]},{"path":"\/documentation\/tripkitui\/tkuicardactioncontent","type":"struct","title":"TKUICardActionContent","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicardactioncontent\/init(title:accessibilitylabel:icon:style:isinprogress:isenabled:)","title":"init(title: String, accessibilityLabel: String?, icon: UIImage, style: TKUICardActionStyle, isInProgress: Bool, isEnabled: Bool)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuicardactioncontent\/accessibilitylabel","title":"var accessibilityLabel: String?","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicardactioncontent\/icon","title":"var icon: UIImage","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicardactioncontent\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicardactioncontent\/isinprogress","title":"var isInProgress: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicardactioncontent\/style","title":"var style: TKUICardActionStyle","type":"property"},{"path":"\/documentation\/tripkitui\/tkuicardactioncontent\/title","title":"var title: String","type":"property"}]},{"path":"\/documentation\/tripkitui\/tkuidatetimepickerview","type":"struct","title":"TKUIDateTimePickerView","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var body: some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/body","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"View Implementations","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/view-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func accentColor(Color?) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accentcolor(_:)"},{"type":"method","title":"func accessibility(activationPoint: UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(activationpoint:)-2xu24"},{"type":"method","title":"func accessibility(activationPoint: CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(activationpoint:)-3h02a"},{"type":"method","title":"func accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(addtraits:)"},{"type":"method","title":"func accessibility(hidden: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(hidden:)"},{"type":"method","title":"func accessibility(hint: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(hint:)"},{"type":"method","title":"func accessibility(identifier: String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(identifier:)"},{"type":"method","title":"func accessibility(inputLabels: [Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(inputlabels:)"},{"type":"method","title":"func accessibility(label: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(label:)"},{"type":"method","title":"func accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(removetraits:)"},{"type":"method","title":"func accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(selectionidentifier:)"},{"type":"method","title":"func accessibility(sortPriority: Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(sortpriority:)"},{"type":"method","title":"func accessibility(value: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibility(value:)"},{"type":"method","title":"func accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(_:_:)"},{"type":"method","title":"func accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(action:label:)"},{"type":"method","title":"func accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(named:_:)-3zdwy"},{"type":"method","title":"func accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(named:_:)-5i1uz"},{"type":"method","title":"func accessibilityAction(named: Text, () -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaction(named:_:)-7zuu4"},{"type":"method","title":"func accessibilityActions<Content>(() -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactions(_:)"},{"type":"method","title":"func accessibilityActions<Content>(category: AccessibilityActionCategory, () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactions(category:_:)"},{"type":"method","title":"func accessibilityActivationPoint(CGPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactivationpoint(_:)-5n7l9"},{"type":"method","title":"func accessibilityActivationPoint(UnitPoint) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactivationpoint(_:)-7j5n0"},{"type":"method","title":"func accessibilityActivationPoint(CGPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactivationpoint(_:isenabled:)-5z9zj"},{"type":"method","title":"func accessibilityActivationPoint(UnitPoint, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityactivationpoint(_:isenabled:)-7c80b"},{"type":"method","title":"func accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityaddtraits(_:)"},{"type":"method","title":"func accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityadjustableaction(_:)"},{"type":"method","title":"func accessibilityChartDescriptor<R>(R) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitychartdescriptor(_:)"},{"type":"method","title":"func accessibilityChildren<V>(children: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitychildren(children:)"},{"type":"method","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-10u11"},{"type":"method","title":"func accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-3l0cz"},{"type":"method","title":"func accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-47uns"},{"type":"method","title":"func accessibilityCustomContent<L, V>(L, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-5huac"},{"type":"method","title":"func accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-6dkti"},{"type":"method","title":"func accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-6gky"},{"type":"method","title":"func accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-6umdk"},{"type":"method","title":"func accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitycustomcontent(_:_:importance:)-8su64"},{"type":"method","title":"func accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydirecttouch(_:options:)"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:)-2qluo"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:)-3ncow"},{"type":"method","title":"func accessibilityDragPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:)-65tbu"},{"type":"method","title":"func accessibilityDragPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:isenabled:)-41b0o"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:isenabled:)-7ccv8"},{"type":"method","title":"func accessibilityDragPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydragpoint(_:description:isenabled:)-8iap4"},{"type":"method","title":"func accessibilityDropPoint<S>(UnitPoint, description: S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:)-5q2ky"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:)-6s3bu"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:)-9svbr"},{"type":"method","title":"func accessibilityDropPoint<S>(UnitPoint, description: S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:isenabled:)-3l253"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:isenabled:)-58a3v"},{"type":"method","title":"func accessibilityDropPoint(UnitPoint, description: Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitydroppoint(_:description:isenabled:)-6wd77"},{"type":"method","title":"func accessibilityElement(children: AccessibilityChildBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityelement(children:)"},{"type":"method","title":"func accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityfocused(_:)"},{"type":"method","title":"func accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityfocused(_:equals:)"},{"type":"method","title":"func accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityheading(_:)"},{"type":"method","title":"func accessibilityHidden(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhidden(_:)"},{"type":"method","title":"func accessibilityHidden(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhidden(_:isenabled:)"},{"type":"method","title":"func accessibilityHint<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:)-5sm6m"},{"type":"method","title":"func accessibilityHint(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:)-9apy9"},{"type":"method","title":"func accessibilityHint(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:)-sj2z"},{"type":"method","title":"func accessibilityHint<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:isenabled:)-811z8"},{"type":"method","title":"func accessibilityHint(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:isenabled:)-9mc9g"},{"type":"method","title":"func accessibilityHint(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityhint(_:isenabled:)-ygz9"},{"type":"method","title":"func accessibilityIdentifier(String) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityidentifier(_:)"},{"type":"method","title":"func accessibilityIdentifier(String, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityidentifier(_:isenabled:)"},{"type":"method","title":"func accessibilityIgnoresInvertColors(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityignoresinvertcolors(_:)"},{"type":"method","title":"func accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:)-3jl4n"},{"type":"method","title":"func accessibilityInputLabels<S>([S]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:)-756rb"},{"type":"method","title":"func accessibilityInputLabels([Text]) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:)-95dgf"},{"type":"method","title":"func accessibilityInputLabels<S>([S], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:isenabled:)-2h7ur"},{"type":"method","title":"func accessibilityInputLabels([LocalizedStringKey], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:isenabled:)-2l0da"},{"type":"method","title":"func accessibilityInputLabels([Text], isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityinputlabels(_:isenabled:)-3ccq"},{"type":"method","title":"func accessibilityLabel<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:)-4enpc"},{"type":"method","title":"func accessibilityLabel(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:)-70to6"},{"type":"method","title":"func accessibilityLabel(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:)-966dn"},{"type":"method","title":"func accessibilityLabel(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:isenabled:)-1plha"},{"type":"method","title":"func accessibilityLabel(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:isenabled:)-2nl4o"},{"type":"method","title":"func accessibilityLabel<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(_:isenabled:)-586pj"},{"type":"method","title":"func accessibilityLabel<V>(content: (PlaceholderContentView<Self>) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabel(content:)"},{"type":"method","title":"func accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylabeledpair(role:id:in:)"},{"type":"method","title":"func accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitylinkedgroup(id:in:)"},{"type":"method","title":"func accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityremovetraits(_:)"},{"type":"method","title":"func accessibilityRepresentation<V>(representation: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrepresentation(representation:)"},{"type":"method","title":"func accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrespondstouserinteraction(_:)"},{"type":"method","title":"func accessibilityRespondsToUserInteraction(Bool, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrespondstouserinteraction(_:isenabled:)"},{"type":"method","title":"func accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-6379i"},{"type":"method","title":"func accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-6dj76"},{"type":"method","title":"func accessibilityRotor<Content>(Text, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-6yied"},{"type":"method","title":"func accessibilityRotor<L, Content>(L, entries: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:)-72szv"},{"type":"method","title":"func accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-3isrz"},{"type":"method","title":"func accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5iupa"},{"type":"method","title":"func accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-5ze2j"},{"type":"method","title":"func accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entryid:entrylabel:)-7lk8v"},{"type":"method","title":"func accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-1xaau"},{"type":"method","title":"func accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-3ta4a"},{"type":"method","title":"func accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-5bs5w"},{"type":"method","title":"func accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:entries:entrylabel:)-6x2nv"},{"type":"method","title":"func accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-7chhc"},{"type":"method","title":"func accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-8pslo"},{"type":"method","title":"func accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-924hq"},{"type":"method","title":"func accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotor(_:textranges:)-rave"},{"type":"method","title":"func accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityrotorentry(id:in:)"},{"type":"method","title":"func accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityscrollaction(_:)"},{"type":"method","title":"func accessibilityShowsLargeContentViewer() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityshowslargecontentviewer()"},{"type":"method","title":"func accessibilityShowsLargeContentViewer<V>(() -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityshowslargecontentviewer(_:)"},{"type":"method","title":"func accessibilitySortPriority(Double) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitysortpriority(_:)"},{"type":"method","title":"func accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilitytextcontenttype(_:)"},{"type":"method","title":"func accessibilityValue<S>(S) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:)-2s0uz"},{"type":"method","title":"func accessibilityValue(Text) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:)-46mzb"},{"type":"method","title":"func accessibilityValue(LocalizedStringKey) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:)-iqkv"},{"type":"method","title":"func accessibilityValue<S>(S, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:isenabled:)-3d2lk"},{"type":"method","title":"func accessibilityValue(Text, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:isenabled:)-3z52h"},{"type":"method","title":"func accessibilityValue(LocalizedStringKey, isEnabled: Bool) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityvalue(_:isenabled:)-9xime"},{"type":"method","title":"func accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<Self, AccessibilityAttachmentModifier>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/accessibilityzoomaction(_:)"},{"type":"method","title":"func actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/actionsheet(ispresented:content:)"},{"type":"method","title":"func actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/actionsheet(item:content:)"},{"type":"method","title":"func alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:)-24e23"},{"type":"method","title":"func alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:)-7dana"},{"type":"method","title":"func alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:)-9n9fm"},{"type":"method","title":"func alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:message:)-6w4jp"},{"type":"method","title":"func alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:message:)-93ziu"},{"type":"method","title":"func alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:actions:message:)-9kywi"},{"type":"method","title":"func alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:)-4pda5"},{"type":"method","title":"func alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:)-8tnqa"},{"type":"method","title":"func alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:)-9frgt"},{"type":"method","title":"func alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:message:)-79h3i"},{"type":"method","title":"func alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:message:)-7xe9l"},{"type":"method","title":"func alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(_:ispresented:presenting:actions:message:)-x8jg"},{"type":"method","title":"func alert(isPresented: Binding<Bool>, content: () -> Alert) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(ispresented:content:)"},{"type":"method","title":"func alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(ispresented:error:actions:)"},{"type":"method","title":"func alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(ispresented:error:actions:message:)"},{"type":"method","title":"func alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alert(item:content:)"},{"type":"method","title":"func alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alignmentguide(_:computevalue:)-6fbgx"},{"type":"method","title":"func alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alignmentguide(_:computevalue:)-6lr7n"},{"type":"method","title":"func allowedDynamicRange(Image.DynamicRange?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/alloweddynamicrange(_:)"},{"type":"method","title":"func allowsHitTesting(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/allowshittesting(_:)"},{"type":"method","title":"func allowsTightening(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/allowstightening(_:)"},{"type":"method","title":"func allowsWindowActivationEvents(Bool?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/allowswindowactivationevents(_:)"},{"type":"method","title":"func anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/anchorpreference(key:value:transform:)"},{"type":"method","title":"func animation(Animation?) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/animation(_:)"},{"type":"method","title":"func animation<V>(Animation?, body: (PlaceholderContentView<Self>) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/animation(_:body:)"},{"type":"method","title":"func animation<V>(Animation?, value: V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/animation(_:value:)"},{"type":"method","title":"func aspectRatio(CGSize, contentMode: ContentMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/aspectratio(_:contentmode:)-7z93p"},{"type":"method","title":"func aspectRatio(CGFloat?, contentMode: ContentMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/aspectratio(_:contentmode:)-lzpn"},{"type":"method","title":"func autocapitalization(UITextAutocapitalizationType) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/autocapitalization(_:)"},{"type":"method","title":"func autocorrectionDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/autocorrectiondisabled(_:)"},{"type":"method","title":"func background<Background>(Background, alignment: Alignment) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(_:alignment:)"},{"type":"method","title":"func background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(_:ignoressafeareaedges:)"},{"type":"method","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(_:in:fillstyle:)-7buuu"},{"type":"method","title":"func background<S, T>(S, in: T, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(_:in:fillstyle:)-8imam"},{"type":"method","title":"func background<V>(alignment: Alignment, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(alignment:content:)"},{"type":"method","title":"func background(ignoresSafeAreaEdges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(ignoressafeareaedges:)"},{"type":"method","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(in:fillstyle:)-30fit"},{"type":"method","title":"func background<S>(in: S, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/background(in:fillstyle:)-61d75"},{"type":"method","title":"func backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/backgroundpreferencevalue(_:_:)"},{"type":"method","title":"func backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/backgroundpreferencevalue(_:alignment:_:)"},{"type":"method","title":"func backgroundStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/backgroundstyle(_:)"},{"type":"method","title":"func badge(LocalizedStringKey?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-2h1g9"},{"type":"method","title":"func badge(Int) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-4hqja"},{"type":"method","title":"func badge(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-7vu1l"},{"type":"method","title":"func badge<S>(S?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badge(_:)-9fxzg"},{"type":"method","title":"func badgeProminence(BadgeProminence) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/badgeprominence(_:)"},{"type":"method","title":"func baselineOffset(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/baselineoffset(_:)"},{"type":"method","title":"func blendMode(BlendMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/blendmode(_:)"},{"type":"method","title":"func blur(radius: CGFloat, opaque: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/blur(radius:opaque:)"},{"type":"method","title":"func bold(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/bold(_:)"},{"type":"method","title":"func border<S>(S, width: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/border(_:width:)"},{"type":"method","title":"func brightness(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/brightness(_:)"},{"type":"method","title":"func buttonBorderShape(ButtonBorderShape) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonbordershape(_:)"},{"type":"method","title":"func buttonRepeatBehavior(ButtonRepeatBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonrepeatbehavior(_:)"},{"type":"method","title":"func buttonStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonstyle(_:)-2afjy"},{"type":"method","title":"func buttonStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/buttonstyle(_:)-41yc7"},{"type":"method","title":"func chartAngleSelection<P>(value: Binding<P?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartangleselection(value:)"},{"type":"method","title":"func chartBackground<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartbackground(alignment:content:)"},{"type":"method","title":"func chartForegroundStyleScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(_:)"},{"type":"method","title":"func chartForegroundStyleScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(domain:mapping:)"},{"type":"method","title":"func chartForegroundStyleScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(domain:range:type:)"},{"type":"method","title":"func chartForegroundStyleScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(domain:type:)"},{"type":"method","title":"func chartForegroundStyleScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(mapping:)"},{"type":"method","title":"func chartForegroundStyleScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(range:type:)"},{"type":"method","title":"func chartForegroundStyleScale(type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartforegroundstylescale(type:)"},{"type":"method","title":"func chartGesture((ChartProxy) -> some Gesture) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartgesture(_:)"},{"type":"method","title":"func chartLegend(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlegend(_:)"},{"type":"method","title":"func chartLegend(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlegend(position:alignment:spacing:)"},{"type":"method","title":"func chartLegend<Content>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlegend(position:alignment:spacing:content:)"},{"type":"method","title":"func chartLineStyleScale<DataValue>(KeyValuePairs<DataValue, StrokeStyle>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(_:)"},{"type":"method","title":"func chartLineStyleScale<Domain>(domain: Domain) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(domain:)"},{"type":"method","title":"func chartLineStyleScale<Domain>(domain: Domain, mapping: (Domain.Element) -> StrokeStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(domain:mapping:)"},{"type":"method","title":"func chartLineStyleScale<Domain, Range>(domain: Domain, range: Range) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(domain:range:)"},{"type":"method","title":"func chartLineStyleScale<DataValue>(mapping: (DataValue) -> StrokeStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(mapping:)"},{"type":"method","title":"func chartLineStyleScale<Range>(range: Range) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartlinestylescale(range:)"},{"type":"method","title":"func chartOverlay<V>(alignment: Alignment, content: (ChartProxy) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartoverlay(alignment:content:)"},{"type":"method","title":"func chartPlotStyle<Content>(content: (ChartPlotContent) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartplotstyle(content:)"},{"type":"method","title":"func chartScrollPosition(initialX: some Plottable) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollposition(initialx:)"},{"type":"method","title":"func chartScrollPosition(initialY: some Plottable) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollposition(initialy:)"},{"type":"method","title":"func chartScrollPosition(x: Binding<some Plottable>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollposition(x:)"},{"type":"method","title":"func chartScrollPosition(y: Binding<some Plottable>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollposition(y:)"},{"type":"method","title":"func chartScrollTargetBehavior(some ChartScrollTargetBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrolltargetbehavior(_:)"},{"type":"method","title":"func chartScrollableAxes(Axis.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartscrollableaxes(_:)"},{"type":"method","title":"func chartSymbolScale<DataValue, S>(KeyValuePairs<DataValue, S>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(_:)-7we3w"},{"type":"method","title":"func chartSymbolScale<DataValue>(KeyValuePairs<DataValue, any ChartSymbolShape>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(_:)-7y2pu"},{"type":"method","title":"func chartSymbolScale<Domain>(domain: Domain) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(domain:)"},{"type":"method","title":"func chartSymbolScale<Domain, S>(domain: Domain, mapping: (Domain.Element) -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(domain:mapping:)"},{"type":"method","title":"func chartSymbolScale<Domain, Range>(domain: Domain, range: Range) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(domain:range:)-1t51j"},{"type":"method","title":"func chartSymbolScale<Domain>(domain: Domain, range: [any ChartSymbolShape]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(domain:range:)-71qtg"},{"type":"method","title":"func chartSymbolScale<DataValue, S>(mapping: (DataValue) -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(mapping:)"},{"type":"method","title":"func chartSymbolScale(range: [any ChartSymbolShape]) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(range:)-59lkp"},{"type":"method","title":"func chartSymbolScale<Range>(range: Range) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolscale(range:)-5lfkn"},{"type":"method","title":"func chartSymbolSizeScale<DataValue>(KeyValuePairs<DataValue, CGFloat>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(_:)"},{"type":"method","title":"func chartSymbolSizeScale<Domain>(domain: Domain, mapping: (Domain.Element) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(domain:mapping:)"},{"type":"method","title":"func chartSymbolSizeScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(domain:range:type:)"},{"type":"method","title":"func chartSymbolSizeScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(domain:type:)"},{"type":"method","title":"func chartSymbolSizeScale<DataValue>(mapping: (DataValue) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(mapping:)"},{"type":"method","title":"func chartSymbolSizeScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(range:type:)"},{"type":"method","title":"func chartSymbolSizeScale(type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartsymbolsizescale(type:)"},{"type":"method","title":"func chartXAxis(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxis(_:)"},{"type":"method","title":"func chartXAxis<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxis(content:)"},{"type":"method","title":"func chartXAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxislabel(_:position:alignment:spacing:)-35aja"},{"type":"method","title":"func chartXAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxislabel(_:position:alignment:spacing:)-7gcc0"},{"type":"method","title":"func chartXAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxislabel(position:alignment:spacing:content:)"},{"type":"method","title":"func chartXAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxaxisstyle(content:)"},{"type":"method","title":"func chartXScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxscale(domain:range:type:)"},{"type":"method","title":"func chartXScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxscale(domain:type:)"},{"type":"method","title":"func chartXScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxscale(range:type:)"},{"type":"method","title":"func chartXScale(type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxscale(type:)"},{"type":"method","title":"func chartXSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxselection(range:)"},{"type":"method","title":"func chartXSelection<P>(value: Binding<P?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxselection(value:)"},{"type":"method","title":"func chartXVisibleDomain<P>(length: P) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartxvisibledomain(length:)"},{"type":"method","title":"func chartYAxis(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxis(_:)"},{"type":"method","title":"func chartYAxis<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxis(content:)"},{"type":"method","title":"func chartYAxisLabel<S>(S, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxislabel(_:position:alignment:spacing:)-6sbij"},{"type":"method","title":"func chartYAxisLabel(LocalizedStringKey, position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxislabel(_:position:alignment:spacing:)-962j4"},{"type":"method","title":"func chartYAxisLabel<C>(position: AnnotationPosition, alignment: Alignment?, spacing: CGFloat?, content: () -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxislabel(position:alignment:spacing:content:)"},{"type":"method","title":"func chartYAxisStyle<Content>(content: (ChartAxisContent) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyaxisstyle(content:)"},{"type":"method","title":"func chartYScale<Domain, Range>(domain: Domain, range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyscale(domain:range:type:)"},{"type":"method","title":"func chartYScale<Domain>(domain: Domain, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyscale(domain:type:)"},{"type":"method","title":"func chartYScale<Range>(range: Range, type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyscale(range:type:)"},{"type":"method","title":"func chartYScale(type: ScaleType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyscale(type:)"},{"type":"method","title":"func chartYSelection<P>(range: Binding<ClosedRange<P>?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyselection(range:)"},{"type":"method","title":"func chartYSelection<P>(value: Binding<P?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyselection(value:)"},{"type":"method","title":"func chartYVisibleDomain<P>(length: P) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/chartyvisibledomain(length:)"},{"type":"method","title":"func clipShape<S>(S, style: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/clipshape(_:style:)"},{"type":"method","title":"func clipped(antialiased: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/clipped(antialiased:)"},{"type":"method","title":"func colorEffect(Shader, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/coloreffect(_:isenabled:)"},{"type":"method","title":"func colorInvert() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/colorinvert()"},{"type":"method","title":"func colorMultiply(Color) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/colormultiply(_:)"},{"type":"method","title":"func colorScheme(ColorScheme) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/colorscheme(_:)"},{"type":"method","title":"func compositingGroup() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/compositinggroup()"},{"type":"method","title":"func confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5a1w3"},{"type":"method","title":"func confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-5mgkq"},{"type":"method","title":"func confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:)-8dsbt"},{"type":"method","title":"func confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-2zvh5"},{"type":"method","title":"func confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-tzgv"},{"type":"method","title":"func confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:actions:message:)-wjlx"},{"type":"method","title":"func confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6qxdc"},{"type":"method","title":"func confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-6xu46"},{"type":"method","title":"func confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:)-84v94"},{"type":"method","title":"func confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-201hv"},{"type":"method","title":"func confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-2gkvd"},{"type":"method","title":"func confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/confirmationdialog(_:ispresented:titlevisibility:presenting:actions:message:)-6o3tj"},{"type":"method","title":"func containerBackground<S>(S, for: ContainerBackgroundPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerbackground(_:for:)"},{"type":"method","title":"func containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerbackground(for:alignment:content:)"},{"type":"method","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerrelativeframe(_:alignment:)"},{"type":"method","title":"func containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerrelativeframe(_:alignment:_:)"},{"type":"method","title":"func containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containerrelativeframe(_:count:span:spacing:alignment:)"},{"type":"method","title":"func containerShape<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containershape(_:)"},{"type":"method","title":"func containerValue<V>(WritableKeyPath<ContainerValues, V>, V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/containervalue(_:_:)"},{"type":"method","title":"func contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentmargins(_:_:for:)-1he8u"},{"type":"method","title":"func contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentmargins(_:_:for:)-4edn8"},{"type":"method","title":"func contentMargins(CGFloat, for: ContentMarginPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentmargins(_:for:)"},{"type":"method","title":"func contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentshape(_:_:eofill:)"},{"type":"method","title":"func contentShape<S>(S, eoFill: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contentshape(_:eofill:)"},{"type":"method","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contenttoolbar(for:content:)-80s69"},{"type":"method","title":"func contentToolbar<Content>(for: ContentToolbarPlacement, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contenttoolbar(for:content:)-yhp5"},{"type":"method","title":"func contentTransition(ContentTransition) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contenttransition(_:)"},{"type":"method","title":"func contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contextmenu(_:)"},{"type":"method","title":"func contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contextmenu(forselectiontype:menu:primaryaction:)"},{"type":"method","title":"func contextMenu<MenuItems>(menuItems: () -> MenuItems) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contextmenu(menuitems:)"},{"type":"method","title":"func contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contextmenu(menuitems:preview:)"},{"type":"method","title":"func contrast(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/contrast(_:)"},{"type":"method","title":"func controlGroupStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/controlgroupstyle(_:)"},{"type":"method","title":"func controlSize(ControlSize) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/controlsize(_:)"},{"type":"method","title":"func coordinateSpace(NamedCoordinateSpace) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/coordinatespace(_:)"},{"type":"method","title":"func coordinateSpace<T>(name: T) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/coordinatespace(name:)"},{"type":"method","title":"func cornerRadius(CGFloat, antialiased: Bool) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/cornerradius(_:antialiased:)"},{"type":"method","title":"func datePickerStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/datepickerstyle(_:)"},{"type":"method","title":"func defaultAdaptableTabBarPlacement(AdaptableTabBarPlacement) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultadaptabletabbarplacement(_:)"},{"type":"method","title":"func defaultAppStorage(UserDefaults) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultappstorage(_:)"},{"type":"method","title":"func defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultfocus(_:_:priority:)"},{"type":"method","title":"func defaultHoverEffect(some CustomHoverEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaulthovereffect(_:)-1eysk"},{"type":"method","title":"func defaultHoverEffect(HoverEffect?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaulthovereffect(_:)-6t179"},{"type":"method","title":"func defaultScrollAnchor(UnitPoint?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultscrollanchor(_:)"},{"type":"method","title":"func defaultScrollAnchor(UnitPoint?, for: ScrollAnchorRole) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/defaultscrollanchor(_:for:)"},{"type":"method","title":"func defersSystemGestures(on: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/deferssystemgestures(on:)"},{"type":"method","title":"func deleteDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/deletedisabled(_:)"},{"type":"method","title":"func dialogIcon(Image?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogicon(_:)"},{"type":"method","title":"func dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(_:issuppressed:)-3rw6b"},{"type":"method","title":"func dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(_:issuppressed:)-7xen5"},{"type":"method","title":"func dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(_:issuppressed:)-av66"},{"type":"method","title":"func dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dialogsuppressiontoggle(issuppressed:)"},{"type":"method","title":"func disableAutocorrection(Bool?) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/disableautocorrection(_:)"},{"type":"method","title":"func disabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/disabled(_:)"},{"type":"method","title":"func disclosureGroupStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/disclosuregroupstyle(_:)"},{"type":"method","title":"func distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/distortioneffect(_:maxsampleoffset:isenabled:)"},{"type":"method","title":"func documentBrowserContextMenu(([URL]?) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/documentbrowsercontextmenu(_:)"},{"type":"method","title":"func draggable<T>(@autoclosure () -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/draggable(_:)"},{"type":"method","title":"func draggable<V, T>(@autoclosure () -> T, preview: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/draggable(_:preview:)"},{"type":"method","title":"func drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/drawinggroup(opaque:colormode:)"},{"type":"method","title":"func dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dropdestination(for:action:istargeted:)"},{"type":"method","title":"func dynamicTypeSize(DynamicTypeSize) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/dynamictypesize(_:)"},{"type":"method","title":"func edgesIgnoringSafeArea(Edge.Set) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/edgesignoringsafearea(_:)"},{"type":"method","title":"func environment<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/environment(_:)"},{"type":"method","title":"func environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/environment(_:_:)"},{"type":"method","title":"func environmentObject<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/environmentobject(_:)"},{"type":"method","title":"func fileDialogBrowserOptions(FileDialogBrowserOptions) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogbrowseroptions(_:)"},{"type":"method","title":"func fileDialogConfirmationLabel(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogconfirmationlabel(_:)-2kwbh"},{"type":"method","title":"func fileDialogConfirmationLabel(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogconfirmationlabel(_:)-5ma5m"},{"type":"method","title":"func fileDialogConfirmationLabel<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogconfirmationlabel(_:)-8n0n1"},{"type":"method","title":"func fileDialogCustomizationID(String) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogcustomizationid(_:)"},{"type":"method","title":"func fileDialogDefaultDirectory(URL?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogdefaultdirectory(_:)"},{"type":"method","title":"func fileDialogImportsUnresolvedAliases(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogimportsunresolvedaliases(_:)"},{"type":"method","title":"func fileDialogMessage(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogmessage(_:)-529c0"},{"type":"method","title":"func fileDialogMessage<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogmessage(_:)-5w0ur"},{"type":"method","title":"func fileDialogMessage(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogmessage(_:)-8dval"},{"type":"method","title":"func fileDialogURLEnabled(Predicate<URL>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filedialogurlenabled(_:)"},{"type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-3wiys"},{"type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:document:contenttype:defaultfilename:oncompletion:)-8h7m8"},{"type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-1owwv"},{"type":"method","title":"func fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:document:contenttypes:defaultfilename:oncompletion:oncancellation:)-6h6nz"},{"type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-35b5z"},{"type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:documents:contenttype:oncompletion:)-8r11c"},{"type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-8ob21"},{"type":"method","title":"func fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:documents:contenttypes:oncompletion:oncancellation:)-ds5g"},{"type":"method","title":"func fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:item:contenttypes:defaultfilename:oncompletion:oncancellation:)"},{"type":"method","title":"func fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporter(ispresented:items:contenttypes:oncompletion:oncancellation:)"},{"type":"method","title":"func fileExporterFilenameLabel<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporterfilenamelabel(_:)-3e7qi"},{"type":"method","title":"func fileExporterFilenameLabel(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporterfilenamelabel(_:)-46psd"},{"type":"method","title":"func fileExporterFilenameLabel(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileexporterfilenamelabel(_:)-8y6ho"},{"type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:)"},{"type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileimporter(ispresented:allowedcontenttypes:allowsmultipleselection:oncompletion:oncancellation:)"},{"type":"method","title":"func fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fileimporter(ispresented:allowedcontenttypes:oncompletion:)"},{"type":"method","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filemover(ispresented:file:oncompletion:)"},{"type":"method","title":"func fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filemover(ispresented:file:oncompletion:oncancellation:)"},{"type":"method","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filemover(ispresented:files:oncompletion:)"},{"type":"method","title":"func fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], any Error>) -> Void, onCancellation: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/filemover(ispresented:files:oncompletion:oncancellation:)"},{"type":"method","title":"func findDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/finddisabled(_:)"},{"type":"method","title":"func findNavigator(isPresented: Binding<Bool>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/findnavigator(ispresented:)"},{"type":"method","title":"func fixedSize() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fixedsize()"},{"type":"method","title":"func fixedSize(horizontal: Bool, vertical: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fixedsize(horizontal:vertical:)"},{"type":"method","title":"func flipsForRightToLeftLayoutDirection(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/flipsforrighttoleftlayoutdirection(_:)"},{"type":"method","title":"func focusEffectDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focuseffectdisabled(_:)"},{"type":"method","title":"func focusable(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusable(_:)"},{"type":"method","title":"func focusable(Bool, interactions: FocusInteractions) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusable(_:interactions:)"},{"type":"method","title":"func focused(FocusState<Bool>.Binding) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focused(_:)"},{"type":"method","title":"func focused<Value>(FocusState<Value>.Binding, equals: Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focused(_:equals:)"},{"type":"method","title":"func focusedObject<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedobject(_:)-1zmpl"},{"type":"method","title":"func focusedObject<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedobject(_:)-6nsku"},{"type":"method","title":"func focusedSceneObject<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedsceneobject(_:)-4mxde"},{"type":"method","title":"func focusedSceneObject<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedsceneobject(_:)-8id43"},{"type":"method","title":"func focusedSceneValue<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedscenevalue(_:)"},{"type":"method","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedscenevalue(_:_:)-5ymgn"},{"type":"method","title":"func focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedscenevalue(_:_:)-8w54n"},{"type":"method","title":"func focusedValue<T>(T?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedvalue(_:)"},{"type":"method","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedvalue(_:_:)-5yrob"},{"type":"method","title":"func focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/focusedvalue(_:_:)-74in9"},{"type":"method","title":"func font(Font?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/font(_:)"},{"type":"method","title":"func fontDesign(Font.Design?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fontdesign(_:)"},{"type":"method","title":"func fontWeight(Font.Weight?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fontweight(_:)"},{"type":"method","title":"func fontWidth(Font.Width?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fontwidth(_:)"},{"type":"method","title":"func foregroundColor(Color?) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/foregroundcolor(_:)"},{"type":"method","title":"func foregroundStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/foregroundstyle(_:)"},{"type":"method","title":"func foregroundStyle<S1, S2>(S1, S2) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/foregroundstyle(_:_:)"},{"type":"method","title":"func foregroundStyle<S1, S2, S3>(S1, S2, S3) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/foregroundstyle(_:_:_:)"},{"type":"method","title":"func formStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/formstyle(_:)"},{"type":"method","title":"func frame() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/frame()"},{"type":"method","title":"func frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/frame(minwidth:idealwidth:maxwidth:minheight:idealheight:maxheight:alignment:)"},{"type":"method","title":"func frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/frame(width:height:alignment:)"},{"type":"method","title":"func fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fullscreencover(ispresented:ondismiss:content:)"},{"type":"method","title":"func fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/fullscreencover(item:ondismiss:content:)"},{"type":"method","title":"func gaugeStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gaugestyle(_:)"},{"type":"method","title":"func geometryGroup() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/geometrygroup()"},{"type":"method","title":"func gesture(some UIGestureRecognizerRepresentable) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gesture(_:)"},{"type":"method","title":"func gesture<T>(T, including: GestureMask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gesture(_:including:)"},{"type":"method","title":"func gesture<T>(T, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gesture(_:isenabled:)"},{"type":"method","title":"func gesture<T>(T, name: String, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gesture(_:name:isenabled:)"},{"type":"method","title":"func grayscale(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/grayscale(_:)"},{"type":"method","title":"func gridCellAnchor(UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gridcellanchor(_:)"},{"type":"method","title":"func gridCellColumns(Int) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gridcellcolumns(_:)"},{"type":"method","title":"func gridCellUnsizedAxes(Axis.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gridcellunsizedaxes(_:)"},{"type":"method","title":"func gridColumnAlignment(HorizontalAlignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/gridcolumnalignment(_:)"},{"type":"method","title":"func groupBoxStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/groupboxstyle(_:)"},{"type":"method","title":"func handGestureShortcut(HandGestureShortcut, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/handgestureshortcut(_:isenabled:)"},{"type":"method","title":"func handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/handlesexternalevents(preferring:allowing:)"},{"type":"method","title":"func headerProminence(Prominence) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/headerprominence(_:)"},{"type":"method","title":"func help<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/help(_:)-3ibs2"},{"type":"method","title":"func help(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/help(_:)-6eqo8"},{"type":"method","title":"func help(Text) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/help(_:)-cp30"},{"type":"method","title":"func hidden() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hidden()"},{"type":"method","title":"func highPriorityGesture<T>(T, including: GestureMask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/highprioritygesture(_:including:)"},{"type":"method","title":"func highPriorityGesture<T>(T, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/highprioritygesture(_:isenabled:)"},{"type":"method","title":"func highPriorityGesture<T>(T, name: String, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/highprioritygesture(_:name:isenabled:)"},{"type":"method","title":"func hoverEffect(HoverEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hovereffect(_:)"},{"type":"method","title":"func hoverEffect(some CustomHoverEffect, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hovereffect(_:isenabled:)-1ft9e"},{"type":"method","title":"func hoverEffect(HoverEffect, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hovereffect(_:isenabled:)-2h9g2"},{"type":"method","title":"func hoverEffectDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/hovereffectdisabled(_:)"},{"type":"method","title":"func hueRotation(Angle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/huerotation(_:)"},{"type":"method","title":"func id<ID>(ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/id(_:)"},{"type":"method","title":"func ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ignoressafearea(_:edges:)"},{"type":"method","title":"func imageScale(Image.Scale) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/imagescale(_:)"},{"type":"method","title":"func indexViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/indexviewstyle(_:)"},{"type":"method","title":"func inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/inspector(ispresented:content:)"},{"type":"method","title":"func inspectorColumnWidth(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/inspectorcolumnwidth(_:)"},{"type":"method","title":"func inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/inspectorcolumnwidth(min:ideal:max:)"},{"type":"method","title":"func interactionActivityTrackingTag(String) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/interactionactivitytrackingtag(_:)"},{"type":"method","title":"func interactiveDismissDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/interactivedismissdisabled(_:)"},{"type":"method","title":"func invalidatableContent(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/invalidatablecontent(_:)"},{"type":"method","title":"func italic(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/italic(_:)"},{"type":"method","title":"func itemProvider(Optional<() -> NSItemProvider?>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/itemprovider(_:)"},{"type":"method","title":"func kerning(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/kerning(_:)"},{"type":"method","title":"func keyboardShortcut(KeyboardShortcut?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardshortcut(_:)-40v5q"},{"type":"method","title":"func keyboardShortcut(KeyboardShortcut) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardshortcut(_:)-4abo9"},{"type":"method","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardshortcut(_:modifiers:)"},{"type":"method","title":"func keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardshortcut(_:modifiers:localization:)"},{"type":"method","title":"func keyboardType(UIKeyboardType) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyboardtype(_:)"},{"type":"method","title":"func keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyframeanimator(initialvalue:repeating:content:keyframes:)"},{"type":"method","title":"func keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<Self>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/keyframeanimator(initialvalue:trigger:content:keyframes:)"},{"type":"method","title":"func labelStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labelstyle(_:)"},{"type":"method","title":"func labeledContentStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labeledcontentstyle(_:)"},{"type":"method","title":"func labelsHidden() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labelshidden()"},{"type":"method","title":"func labelsVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/labelsvisibility(_:)"},{"type":"method","title":"func layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/layereffect(_:maxsampleoffset:isenabled:)"},{"type":"method","title":"func layoutDirectionBehavior(LayoutDirectionBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/layoutdirectionbehavior(_:)"},{"type":"method","title":"func layoutPriority(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/layoutpriority(_:)"},{"type":"method","title":"func layoutValue<K>(key: K.Type, value: K.Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/layoutvalue(key:value:)"},{"type":"method","title":"func lineLimit(Int?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/linelimit(_:)"},{"type":"method","title":"func lineLimit(Int, reservesSpace: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/linelimit(_:reservesspace:)"},{"type":"method","title":"func lineSpacing(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/linespacing(_:)"},{"type":"method","title":"func listItemTint(Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listitemtint(_:)-3z5a7"},{"type":"method","title":"func listItemTint(ListItemTint?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listitemtint(_:)-5fh2"},{"type":"method","title":"func listRowBackground<V>(V?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowbackground(_:)"},{"type":"method","title":"func listRowInsets(EdgeInsets?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowinsets(_:)"},{"type":"method","title":"func listRowSeparator(Visibility, edges: VerticalEdge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowseparator(_:edges:)"},{"type":"method","title":"func listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowseparatortint(_:edges:)"},{"type":"method","title":"func listRowSpacing(CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listrowspacing(_:)"},{"type":"method","title":"func listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionseparator(_:edges:)"},{"type":"method","title":"func listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionseparatortint(_:edges:)"},{"type":"method","title":"func listSectionSpacing(ListSectionSpacing) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionspacing(_:)-3y66y"},{"type":"method","title":"func listSectionSpacing(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/listsectionspacing(_:)-6iey5"},{"type":"method","title":"func listStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/liststyle(_:)"},{"type":"method","title":"func lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/lookaroundviewer(ispresented:initialscene:allowsnavigation:showsroadlabels:pointsofinterest:ondismiss:)"},{"type":"method","title":"func lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/lookaroundviewer(ispresented:scene:allowsnavigation:showsroadlabels:pointsofinterest:ondismiss:)"},{"type":"method","title":"func luminanceToAlpha() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/luminancetoalpha()"},{"type":"method","title":"func mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapcamerakeyframeanimator(trigger:keyframes:)"},{"type":"method","title":"func mapControlVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapcontrolvisibility(_:)"},{"type":"method","title":"func mapControls(() -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapcontrols(_:)"},{"type":"method","title":"func mapFeatureSelectionAccessory(MapItemDetailSelectionAccessoryStyle?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapfeatureselectionaccessory(_:)"},{"type":"method","title":"func mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapfeatureselectioncontent(content:)"},{"type":"method","title":"func mapFeatureSelectionDisabled((MapFeature) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapfeatureselectiondisabled(_:)"},{"type":"method","title":"func mapItemDetailPopover(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailpopover(ispresented:item:displaysmap:attachmentanchor:)"},{"type":"method","title":"func mapItemDetailPopover(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailpopover(ispresented:item:displaysmap:attachmentanchor:arrowedge:)"},{"type":"method","title":"func mapItemDetailPopover(item: Binding<MKMapItem?>, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailpopover(item:displaysmap:attachmentanchor:)"},{"type":"method","title":"func mapItemDetailPopover(item: Binding<MKMapItem?>, displaysMap: Bool, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailpopover(item:displaysmap:attachmentanchor:arrowedge:)"},{"type":"method","title":"func mapItemDetailSheet(isPresented: Binding<Bool>, item: MKMapItem?, displaysMap: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailsheet(ispresented:item:displaysmap:)"},{"type":"method","title":"func mapItemDetailSheet(item: Binding<MKMapItem?>, displaysMap: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapitemdetailsheet(item:displaysmap:)"},{"type":"method","title":"func mapScope(Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapscope(_:)"},{"type":"method","title":"func mapStyle(MapStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mapstyle(_:)"},{"type":"method","title":"func mask<Mask>(Mask) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mask(_:)"},{"type":"method","title":"func mask<Mask>(alignment: Alignment, () -> Mask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/mask(alignment:_:)"},{"type":"method","title":"func matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/matchedgeometryeffect(id:in:properties:anchor:issource:)"},{"type":"method","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/matchedtransitionsource(id:in:)"},{"type":"method","title":"func matchedTransitionSource(id: some Hashable, in: Namespace.ID, configuration: (EmptyMatchedTransitionSourceConfiguration) -> some MatchedTransitionSourceConfiguration) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/matchedtransitionsource(id:in:configuration:)"},{"type":"method","title":"func materialActiveAppearance(MaterialActiveAppearance) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/materialactiveappearance(_:)"},{"type":"method","title":"func menuActionDismissBehavior(MenuActionDismissBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/menuactiondismissbehavior(_:)"},{"type":"method","title":"func menuIndicator(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/menuindicator(_:)"},{"type":"method","title":"func menuOrder(MenuOrder) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/menuorder(_:)"},{"type":"method","title":"func menuStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/menustyle(_:)"},{"type":"method","title":"func minimumScaleFactor(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/minimumscalefactor(_:)"},{"type":"method","title":"func modifier<T>(T) -> ModifiedContent<Self, T>","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/modifier(_:)"},{"type":"method","title":"func monospaced(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/monospaced(_:)"},{"type":"method","title":"func monospacedDigit() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/monospaceddigit()"},{"type":"method","title":"func moveDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/movedisabled(_:)"},{"type":"method","title":"func multilineTextAlignment(TextAlignment) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/multilinetextalignment(_:)"},{"type":"method","title":"func navigationBarBackButtonHidden(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbarbackbuttonhidden(_:)"},{"type":"method","title":"func navigationBarHidden(Bool) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbarhidden(_:)"},{"type":"method","title":"func navigationBarItems<L>(leading: L) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbaritems(leading:)"},{"type":"method","title":"func navigationBarItems<L, T>(leading: L, trailing: T) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbaritems(leading:trailing:)"},{"type":"method","title":"func navigationBarItems<T>(trailing: T) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbaritems(trailing:)"},{"type":"method","title":"func navigationBarTitle(LocalizedStringKey) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:)-5eru6"},{"type":"method","title":"func navigationBarTitle(Text) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:)-7toiq"},{"type":"method","title":"func navigationBarTitle<S>(S) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:)-rhrt"},{"type":"method","title":"func navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:displaymode:)-244i3"},{"type":"method","title":"func navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:displaymode:)-8tr07"},{"type":"method","title":"func navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitle(_:displaymode:)-95vh2"},{"type":"method","title":"func navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationbartitledisplaymode(_:)"},{"type":"method","title":"func navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdestination(for:destination:)"},{"type":"method","title":"func navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdestination(ispresented:destination:)"},{"type":"method","title":"func navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdestination(item:destination:)"},{"type":"method","title":"func navigationDocument(URL) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:)-49mpp"},{"type":"method","title":"func navigationDocument<D>(D) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:)-4ix74"},{"type":"method","title":"func navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:preview:)-30dpi"},{"type":"method","title":"func navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:preview:)-4s1to"},{"type":"method","title":"func navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:preview:)-6ry9x"},{"type":"method","title":"func navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationdocument(_:preview:)-mu5p"},{"type":"method","title":"func navigationSplitViewColumnWidth(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsplitviewcolumnwidth(_:)"},{"type":"method","title":"func navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsplitviewcolumnwidth(min:ideal:max:)"},{"type":"method","title":"func navigationSplitViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationsplitviewstyle(_:)"},{"type":"method","title":"func navigationTitle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-2hy88"},{"type":"method","title":"func navigationTitle(Binding<String>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-5g5uw"},{"type":"method","title":"func navigationTitle(Text) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-5z1ey"},{"type":"method","title":"func navigationTitle(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-6io82"},{"type":"method","title":"func navigationTitle<V>(() -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtitle(_:)-87hgk"},{"type":"method","title":"func navigationTransition(some NavigationTransition) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationtransition(_:)"},{"type":"method","title":"func navigationViewStyle<S>(S) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/navigationviewstyle(_:)"},{"type":"method","title":"func offset(CGSize) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/offset(_:)"},{"type":"method","title":"func offset(x: CGFloat, y: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/offset(x:y:)"},{"type":"method","title":"func onAppear(perform: (() -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onappear(perform:)"},{"type":"method","title":"func onChange<V>(of: V, initial: Bool, () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onchange(of:initial:_:)-3d8f6"},{"type":"method","title":"func onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onchange(of:initial:_:)-4k62a"},{"type":"method","title":"func onChange<V>(of: V, perform: (V) -> Void) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onchange(of:perform:)"},{"type":"method","title":"func onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/oncontinueuseractivity(_:perform:)"},{"type":"method","title":"func onContinuousHover(coordinateSpace: some CoordinateSpaceProtocol, perform: (HoverPhase) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/oncontinuoushover(coordinatespace:perform:)-5ih1p"},{"type":"method","title":"func onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/oncontinuoushover(coordinatespace:perform:)-6ahkf"},{"type":"method","title":"func onDisappear(perform: (() -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondisappear(perform:)"},{"type":"method","title":"func onDrag(() -> NSItemProvider) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrag(_:)"},{"type":"method","title":"func onDrag<V>(() -> NSItemProvider, preview: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrag(_:preview:)"},{"type":"method","title":"func onDrop(of: [String], delegate: any DropDelegate) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:delegate:)-199zg"},{"type":"method","title":"func onDrop(of: [UTType], delegate: any DropDelegate) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:delegate:)-5mwga"},{"type":"method","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:istargeted:perform:)-1vu8y"},{"type":"method","title":"func onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:istargeted:perform:)-62dit"},{"type":"method","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:istargeted:perform:)-7wjky"},{"type":"method","title":"func onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ondrop(of:istargeted:perform:)-9f9nh"},{"type":"method","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ongeometrychange(for:of:action:)-2ysje"},{"type":"method","title":"func onGeometryChange<T>(for: T.Type, of: (GeometryProxy) -> T, action: (T, T) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ongeometrychange(for:of:action:)-4dv51"},{"type":"method","title":"func onHover(perform: (Bool) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onhover(perform:)"},{"type":"method","title":"func onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(_:action:)"},{"type":"method","title":"func onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(_:phases:action:)"},{"type":"method","title":"func onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(characters:phases:action:)"},{"type":"method","title":"func onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(keys:phases:action:)"},{"type":"method","title":"func onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onkeypress(phases:action:)"},{"type":"method","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onlongpressgesture(minimumduration:maximumdistance:perform:onpressingchanged:)"},{"type":"method","title":"func onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onlongpressgesture(minimumduration:maximumdistance:pressing:perform:)"},{"type":"method","title":"func onLongPressGesture(minimumDuration: Double, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onlongpressgesture(minimumduration:perform:onpressingchanged:)"},{"type":"method","title":"func onLongPressGesture(minimumDuration: Double, pressing: ((Bool) -> Void)?, perform: () -> Void) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onlongpressgesture(minimumduration:pressing:perform:)"},{"type":"method","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onmapcamerachange(frequency:_:)-8wbyw"},{"type":"method","title":"func onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onmapcamerachange(frequency:_:)-9dkuh"},{"type":"method","title":"func onOpenURL(perform: (URL) -> ()) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onopenurl(perform:)"},{"type":"method","title":"func onPencilDoubleTap(perform: (PencilDoubleTapGestureValue) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onpencildoubletap(perform:)"},{"type":"method","title":"func onPencilSqueeze(perform: (PencilSqueezeGesturePhase) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onpencilsqueeze(perform:)"},{"type":"method","title":"func onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onpreferencechange(_:perform:)"},{"type":"method","title":"func onReceive<P>(P, perform: (P.Output) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onreceive(_:perform:)"},{"type":"method","title":"func onScrollGeometryChange<T>(for: T.Type, of: (ScrollGeometry) -> T, action: (T, T) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrollgeometrychange(for:of:action:)"},{"type":"method","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase, ScrollPhaseChangeContext) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrollphasechange(_:)-9wpxx"},{"type":"method","title":"func onScrollPhaseChange((ScrollPhase, ScrollPhase) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrollphasechange(_:)-fmwd"},{"type":"method","title":"func onScrollTargetVisibilityChange<ID>(idType: ID.Type, threshold: Double, ([ID]) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrolltargetvisibilitychange(idtype:threshold:_:)"},{"type":"method","title":"func onScrollVisibilityChange(threshold: Double, (Bool) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onscrollvisibilitychange(threshold:_:)"},{"type":"method","title":"func onSubmit(of: SubmitTriggers, () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/onsubmit(of:_:)"},{"type":"method","title":"func onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ontapgesture(count:coordinatespace:perform:)-4ijz3"},{"type":"method","title":"func onTapGesture(count: Int, coordinateSpace: some CoordinateSpaceProtocol, perform: (CGPoint) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ontapgesture(count:coordinatespace:perform:)-53d3c"},{"type":"method","title":"func onTapGesture(count: Int, perform: () -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/ontapgesture(count:perform:)"},{"type":"method","title":"func opacity(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/opacity(_:)"},{"type":"method","title":"func overlay<Overlay>(Overlay, alignment: Alignment) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlay(_:alignment:)"},{"type":"method","title":"func overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlay(_:ignoressafeareaedges:)"},{"type":"method","title":"func overlay<S, T>(S, in: T, fillStyle: FillStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlay(_:in:fillstyle:)"},{"type":"method","title":"func overlay<V>(alignment: Alignment, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlay(alignment:content:)"},{"type":"method","title":"func overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlaypreferencevalue(_:_:)"},{"type":"method","title":"func overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/overlaypreferencevalue(_:alignment:_:)"},{"type":"method","title":"func padding(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/padding(_:)-7erqo"},{"type":"method","title":"func padding(EdgeInsets) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/padding(_:)-8511u"},{"type":"method","title":"func padding(Edge.Set, CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/padding(_:_:)"},{"type":"method","title":"func paletteSelectionEffect(PaletteSelectionEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/paletteselectioneffect(_:)"},{"type":"method","title":"func persistentSystemOverlays(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/persistentsystemoverlays(_:)"},{"type":"method","title":"func phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/phaseanimator(_:content:animation:)"},{"type":"method","title":"func phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<Self>, Phase) -> some View, animation: (Phase) -> Animation?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/phaseanimator(_:trigger:content:animation:)"},{"type":"method","title":"func pickerStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/pickerstyle(_:)"},{"type":"method","title":"func popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/popover(ispresented:attachmentanchor:arrowedge:content:)"},{"type":"method","title":"func popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge?, content: (Item) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/popover(item:attachmentanchor:arrowedge:content:)"},{"type":"method","title":"func popoverTip((any Tip)?, arrowEdge: Edge?, action: (Tips.Action) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/popovertip(_:arrowedge:action:)"},{"type":"method","title":"func position(CGPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/position(_:)"},{"type":"method","title":"func position(x: CGFloat, y: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/position(x:y:)"},{"type":"method","title":"func preference<K>(key: K.Type, value: K.Value) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/preference(key:value:)"},{"type":"method","title":"func preferredColorScheme(ColorScheme?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/preferredcolorscheme(_:)"},{"type":"method","title":"func presentationBackground<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationbackground(_:)"},{"type":"method","title":"func presentationBackground<V>(alignment: Alignment, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationbackground(alignment:content:)"},{"type":"method","title":"func presentationBackgroundInteraction(PresentationBackgroundInteraction) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationbackgroundinteraction(_:)"},{"type":"method","title":"func presentationCompactAdaptation(PresentationAdaptation) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationcompactadaptation(_:)"},{"type":"method","title":"func presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationcompactadaptation(horizontal:vertical:)"},{"type":"method","title":"func presentationContentInteraction(PresentationContentInteraction) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationcontentinteraction(_:)"},{"type":"method","title":"func presentationCornerRadius(CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationcornerradius(_:)"},{"type":"method","title":"func presentationDetents(Set<PresentationDetent>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationdetents(_:)"},{"type":"method","title":"func presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationdetents(_:selection:)"},{"type":"method","title":"func presentationDragIndicator(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationdragindicator(_:)"},{"type":"method","title":"func presentationSizing(some PresentationSizing) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/presentationsizing(_:)"},{"type":"method","title":"func previewContext<C>(C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewcontext(_:)"},{"type":"method","title":"func previewDevice(PreviewDevice?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewdevice(_:)"},{"type":"method","title":"func previewDisplayName(String?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewdisplayname(_:)"},{"type":"method","title":"func previewInterfaceOrientation(InterfaceOrientation) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewinterfaceorientation(_:)"},{"type":"method","title":"func previewLayout(PreviewLayout) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/previewlayout(_:)"},{"type":"method","title":"func privacySensitive(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/privacysensitive(_:)"},{"type":"method","title":"func progressViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/progressviewstyle(_:)"},{"type":"method","title":"func projectionEffect(ProjectionTransform) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/projectioneffect(_:)"},{"type":"method","title":"func redacted(reason: RedactionReasons) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/redacted(reason:)"},{"type":"method","title":"func refreshable(action: () async -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/refreshable(action:)"},{"type":"method","title":"func renameAction(FocusState<Bool>.Binding) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/renameaction(_:)-1vtsq"},{"type":"method","title":"func renameAction(() -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/renameaction(_:)-6jdf5"},{"type":"method","title":"func replaceDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/replacedisabled(_:)"},{"type":"method","title":"func rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/rotation3deffect(_:axis:anchor:anchorz:perspective:)"},{"type":"method","title":"func rotationEffect(Angle, anchor: UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/rotationeffect(_:anchor:)"},{"type":"method","title":"func safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareainset(edge:alignment:spacing:content:)-2aqqp"},{"type":"method","title":"func safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareainset(edge:alignment:spacing:content:)-5loq5"},{"type":"method","title":"func safeAreaPadding(EdgeInsets) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareapadding(_:)-14c67"},{"type":"method","title":"func safeAreaPadding(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareapadding(_:)-2td20"},{"type":"method","title":"func safeAreaPadding(Edge.Set, CGFloat?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/safeareapadding(_:_:)"},{"type":"method","title":"func saturation(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/saturation(_:)"},{"type":"method","title":"func scaleEffect(CGSize, anchor: UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaleeffect(_:anchor:)-1aiyp"},{"type":"method","title":"func scaleEffect(CGFloat, anchor: UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaleeffect(_:anchor:)-2q0v1"},{"type":"method","title":"func scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaleeffect(x:y:anchor:)"},{"type":"method","title":"func scaledToFill() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaledtofill()"},{"type":"method","title":"func scaledToFit() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scaledtofit()"},{"type":"method","title":"func scenePadding(Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scenepadding(_:)"},{"type":"method","title":"func scenePadding(ScenePadding, edges: Edge.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scenepadding(_:edges:)"},{"type":"method","title":"func scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollbouncebehavior(_:axes:)"},{"type":"method","title":"func scrollClipDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollclipdisabled(_:)"},{"type":"method","title":"func scrollContentBackground(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollcontentbackground(_:)"},{"type":"method","title":"func scrollDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolldisabled(_:)"},{"type":"method","title":"func scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolldismisseskeyboard(_:)"},{"type":"method","title":"func scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollindicators(_:axes:)"},{"type":"method","title":"func scrollIndicatorsFlash(onAppear: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollindicatorsflash(onappear:)"},{"type":"method","title":"func scrollIndicatorsFlash(trigger: some Equatable) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollindicatorsflash(trigger:)"},{"type":"method","title":"func scrollInputBehavior(ScrollInputBehavior, for: ScrollInputKind) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollinputbehavior(_:for:)"},{"type":"method","title":"func scrollPosition(Binding<ScrollPosition>, anchor: UnitPoint?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollposition(_:anchor:)"},{"type":"method","title":"func scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrollposition(id:anchor:)"},{"type":"method","title":"func scrollTargetBehavior(some ScrollTargetBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolltargetbehavior(_:)"},{"type":"method","title":"func scrollTargetLayout(isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolltargetlayout(isenabled:)"},{"type":"method","title":"func scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolltransition(_:axis:transition:)"},{"type":"method","title":"func scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/scrolltransition(topleading:bottomtrailing:axis:transition:)"},{"type":"method","title":"func searchCompletion(String) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchcompletion(_:)"},{"type":"method","title":"func searchDictationBehavior(TextInputDictationBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchdictationbehavior(_:)"},{"type":"method","title":"func searchFocused(FocusState<Bool>.Binding) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchfocused(_:)"},{"type":"method","title":"func searchFocused<V>(FocusState<V>.Binding, equals: V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchfocused(_:equals:)"},{"type":"method","title":"func searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchpresentationtoolbarbehavior(_:)"},{"type":"method","title":"func searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchscopes(_:activation:_:)"},{"type":"method","title":"func searchScopes<V, S>(Binding<V>, scopes: () -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchscopes(_:scopes:)"},{"type":"method","title":"func searchSuggestions<S>(() -> S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchsuggestions(_:)"},{"type":"method","title":"func searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchsuggestions(_:for:)"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-3h4x1"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-6ws93"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:ispresented:placement:prompt:token:)-8nm2p"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:placement:prompt:token:)-50wsw"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:placement:prompt:token:)-74oay"},{"type":"method","title":"func searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:editabletokens:placement:prompt:token:)-8aa0y"},{"type":"method","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:ispresented:placement:prompt:)-2if6w"},{"type":"method","title":"func searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:ispresented:placement:prompt:)-7crsq"},{"type":"method","title":"func searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:ispresented:placement:prompt:)-9or1c"},{"type":"method","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:)-1nooo"},{"type":"method","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:)-2qeug"},{"type":"method","title":"func searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:)-9o1wk"},{"type":"method","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:suggestions:)-3gfiu"},{"type":"method","title":"func searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:suggestions:)-77rj5"},{"type":"method","title":"func searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:placement:prompt:suggestions:)-uozv"},{"type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-2xfqn"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-6iiy0"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:ispresented:placement:prompt:token:)-89slp"},{"type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:placement:prompt:token:)-4glhk"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:placement:prompt:token:)-50h82"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:placement:prompt:token:)-58hjd"},{"type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-56ztg"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-6c5x7"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:ispresented:placement:prompt:token:)-9buih"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-37spg"},{"type":"method","title":"func searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-3agcl"},{"type":"method","title":"func searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/searchable(text:tokens:suggestedtokens:placement:prompt:token:)-751jj"},{"type":"method","title":"func sectionActions<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sectionactions(content:)"},{"type":"method","title":"func selectionDisabled(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/selectiondisabled(_:)"},{"type":"method","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sensoryfeedback(_:trigger:)"},{"type":"method","title":"func sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sensoryfeedback(_:trigger:condition:)"},{"type":"method","title":"func sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sensoryfeedback(trigger:_:)"},{"type":"method","title":"func shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/shadow(color:radius:x:y:)"},{"type":"method","title":"func sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sheet(ispresented:ondismiss:content:)"},{"type":"method","title":"func sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/sheet(item:ondismiss:content:)"},{"type":"method","title":"func simultaneousGesture<T>(T, including: GestureMask) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/simultaneousgesture(_:including:)"},{"type":"method","title":"func simultaneousGesture<T>(T, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/simultaneousgesture(_:isenabled:)"},{"type":"method","title":"func simultaneousGesture<T>(T, name: String, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/simultaneousgesture(_:name:isenabled:)"},{"type":"method","title":"func speechAdjustedPitch(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/speechadjustedpitch(_:)"},{"type":"method","title":"func speechAlwaysIncludesPunctuation(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/speechalwaysincludespunctuation(_:)"},{"type":"method","title":"func speechAnnouncementsQueued(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/speechannouncementsqueued(_:)"},{"type":"method","title":"func speechSpellsOutCharacters(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/speechspellsoutcharacters(_:)"},{"type":"method","title":"func springLoadingBehavior(SpringLoadingBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/springloadingbehavior(_:)"},{"type":"method","title":"func statusBar(hidden: Bool) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/statusbar(hidden:)"},{"type":"method","title":"func statusBarHidden(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/statusbarhidden(_:)"},{"type":"method","title":"func strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/strikethrough(_:pattern:color:)"},{"type":"method","title":"func submitLabel(SubmitLabel) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/submitlabel(_:)"},{"type":"method","title":"func submitScope(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/submitscope(_:)"},{"type":"method","title":"func swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/swipeactions(edge:allowsfullswipe:content:)"},{"type":"method","title":"func symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symboleffect(_:options:isactive:)"},{"type":"method","title":"func symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symboleffect(_:options:value:)"},{"type":"method","title":"func symbolEffectsRemoved(Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symboleffectsremoved(_:)"},{"type":"method","title":"func symbolRenderingMode(SymbolRenderingMode?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symbolrenderingmode(_:)"},{"type":"method","title":"func symbolVariant(SymbolVariants) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/symbolvariant(_:)"},{"type":"method","title":"func tabItem<V>(() -> V) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabitem(_:)"},{"type":"method","title":"func tabViewCustomization(Binding<TabViewCustomization>?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewcustomization(_:)"},{"type":"method","title":"func tabViewSidebarBottomBar<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewsidebarbottombar(content:)"},{"type":"method","title":"func tabViewSidebarFooter<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewsidebarfooter(content:)"},{"type":"method","title":"func tabViewSidebarHeader<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewsidebarheader(content:)"},{"type":"method","title":"func tabViewStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tabviewstyle(_:)"},{"type":"method","title":"func tableColumnHeaders(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tablecolumnheaders(_:)"},{"type":"method","title":"func tableStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tablestyle(_:)"},{"type":"method","title":"func tag<V>(V, includeOptional: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tag(_:includeoptional:)"},{"type":"method","title":"func task<T>(id: T, priority: TaskPriority, () async -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/task(id:priority:_:)"},{"type":"method","title":"func task(priority: TaskPriority, () async -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/task(priority:_:)"},{"type":"method","title":"func textCase(Text.Case?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textcase(_:)"},{"type":"method","title":"func textContentType(UITextContentType?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textcontenttype(_:)"},{"type":"method","title":"func textEditorStyle(some TextEditorStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/texteditorstyle(_:)"},{"type":"method","title":"func textFieldStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textfieldstyle(_:)"},{"type":"method","title":"func textInputAutocapitalization(TextInputAutocapitalization?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textinputautocapitalization(_:)"},{"type":"method","title":"func textRenderer<T>(T) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textrenderer(_:)"},{"type":"method","title":"func textScale(Text.Scale, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textscale(_:isenabled:)"},{"type":"method","title":"func textSelection<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textselection(_:)"},{"type":"method","title":"func textSelectionAffinity(TextSelectionAffinity) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/textselectionaffinity(_:)"},{"type":"method","title":"func tint(Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tint(_:)"},{"type":"method","title":"func tipBackground(some ShapeStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipbackground(_:)"},{"type":"method","title":"func tipCornerRadius(CGFloat, antialiased: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipcornerradius(_:antialiased:)"},{"type":"method","title":"func tipImageSize(CGSize) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipimagesize(_:)"},{"type":"method","title":"func tipImageStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipimagestyle(_:)"},{"type":"method","title":"func tipImageStyle<S1, S2>(S1, S2) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipimagestyle(_:_:)"},{"type":"method","title":"func tipImageStyle<S1, S2, S3>(S1, S2, S3) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipimagestyle(_:_:_:)"},{"type":"method","title":"func tipViewStyle(some TipViewStyle) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tipviewstyle(_:)"},{"type":"method","title":"func toggleStyle<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/togglestyle(_:)"},{"type":"method","title":"func toolbar(Visibility, for: ToolbarPlacement...) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(_:for:)"},{"type":"method","title":"func toolbar<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(content:)-5o1q6"},{"type":"method","title":"func toolbar<Content>(content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(content:)-9qgyz"},{"type":"method","title":"func toolbar<Content>(id: String, content: () -> Content) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(id:content:)"},{"type":"method","title":"func toolbar(removing: ToolbarDefaultItemKind?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbar(removing:)"},{"type":"method","title":"func toolbarBackground(Visibility, for: ToolbarPlacement...) -> some View","deprecated":true,"path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarbackground(_:for:)-1mbd"},{"type":"method","title":"func toolbarBackground<S>(S, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarbackground(_:for:)-kuj3"},{"type":"method","title":"func toolbarBackgroundVisibility(Visibility, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarbackgroundvisibility(_:for:)"},{"type":"method","title":"func toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarcolorscheme(_:for:)"},{"type":"method","title":"func toolbarForegroundStyle<S>(S, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarforegroundstyle(_:for:)"},{"type":"method","title":"func toolbarRole(ToolbarRole) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarrole(_:)"},{"type":"method","title":"func toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbartitledisplaymode(_:)"},{"type":"method","title":"func toolbarTitleMenu<C>(content: () -> C) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbartitlemenu(content:)"},{"type":"method","title":"func toolbarVisibility(Visibility, for: ToolbarPlacement...) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/toolbarvisibility(_:for:)"},{"type":"method","title":"func tracking(CGFloat) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/tracking(_:)"},{"type":"method","title":"func transaction((inout Transaction) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transaction(_:)"},{"type":"method","title":"func transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<Self>) -> V) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transaction(_:body:)"},{"type":"method","title":"func transaction(value: some Equatable, (inout Transaction) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transaction(value:_:)"},{"type":"method","title":"func transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transformanchorpreference(key:value:transform:)"},{"type":"method","title":"func transformEffect(CGAffineTransform) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transformeffect(_:)"},{"type":"method","title":"func transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transformenvironment(_:transform:)"},{"type":"method","title":"func transformPreference<K>(K.Type, (inout K.Value) -> Void) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transformpreference(_:_:)"},{"type":"method","title":"func transition(AnyTransition) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/transition(_:)"},{"type":"method","title":"func truncationMode(Text.TruncationMode) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/truncationmode(_:)"},{"type":"method","title":"func typeSelectEquivalent<S>(S) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typeselectequivalent(_:)-1brb2"},{"type":"method","title":"func typeSelectEquivalent(Text?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typeselectequivalent(_:)-5u7np"},{"type":"method","title":"func typeSelectEquivalent(LocalizedStringKey) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typeselectequivalent(_:)-6mu5m"},{"type":"method","title":"func typesettingLanguage(Locale.Language, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typesettinglanguage(_:isenabled:)-6j781"},{"type":"method","title":"func typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/typesettinglanguage(_:isenabled:)-77ne7"},{"type":"method","title":"func underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/underline(_:pattern:color:)"},{"type":"method","title":"func unredacted() -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/unredacted()"},{"type":"method","title":"func userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/useractivity(_:element:_:)"},{"type":"method","title":"func userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/useractivity(_:isactive:_:)"},{"type":"method","title":"func visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/visualeffect(_:)"},{"type":"method","title":"func windowToolbarFullScreenVisibility(WindowToolbarFullScreenVisibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/windowtoolbarfullscreenvisibility(_:)"},{"type":"method","title":"func writingToolsAffordanceVisibility(Visibility) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/writingtoolsaffordancevisibility(_:)"},{"type":"method","title":"func writingToolsBehavior(WritingToolsBehavior) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/writingtoolsbehavior(_:)"},{"type":"method","title":"func zIndex(Double) -> some View","path":"\/documentation\/tripkitui\/tkuidatetimepickerview\/zindex(_:)"}]}]},{"path":"\/documentation\/tripkitui\/tkuieventcallback","type":"struct","title":"TKUIEventCallback","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var handler: @MainActor (Event) -> Void","type":"property","path":"\/documentation\/tripkitui\/tkuieventcallback\/handler"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKUIEventCallback.Event","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/cardappeared(_:)","title":"case cardAppeared(TGCard)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/routesloaded(_:controller:)","title":"case routesLoaded(TripRequest, controller: TGCardViewController)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/screenappeared(name:controller:)","title":"case screenAppeared(name: String, controller: UIViewController)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/timetableselected(_:controller:)","title":"case timetableSelected(TKTimetable, controller: TGCardViewController)","type":"case"},{"path":"\/documentation\/tripkitui\/tkuieventcallback\/event\/tripselected(_:controller:_:)","title":"case tripSelected(Trip, controller: TGCardViewController, DisposeBag)","type":"case"}],"path":"\/documentation\/tripkitui\/tkuieventcallback\/event"}]},{"path":"\/documentation\/tripkitui\/tkuilocationinfo","type":"struct","title":"TKUILocationInfo","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let annotation: MKAnnotation","path":"\/documentation\/tripkitui\/tkuilocationinfo\/annotation"},{"type":"property","title":"let routeButton: RouteButton","path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.property"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case allowed","type":"case","path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.enum\/allowed"},{"title":"case notAllowed","type":"case","path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.enum\/notallowed"},{"title":"case replace(title: String, onTap: () -> Void)","type":"case","path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.enum\/replace(title:ontap:)"}],"title":"TKUILocationInfo.RouteButton","path":"\/documentation\/tripkitui\/tkuilocationinfo\/routebutton-swift.enum"}]},{"path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem","type":"struct","title":"TKUIRoutingResultsMapRouteItem","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let polyline: TKRoutePolyline","path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem\/polyline","type":"property"},{"title":"let selectionIdentifier: String","path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem\/selectionidentifier","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiroutingresultsmaprouteitem\/equatable-implementations","type":"symbol"}]},{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/==(_:_:)-1c1fc","type":"op","title":"func == (TKUIRoutingResultsMapRouteItem, TKUIRoutingResultsMapRouteItem) -> Bool"},{"path":"\/documentation\/tripkitui\/==(_:_:)-3iayo","type":"op","title":"func == (ItemPath, ItemPath) -> Bool"},{"path":"\/documentation\/tripkitui\/==(_:_:)-4emib","type":"op","title":"func == <V>(IdentifiableValue<V>, IdentifiableValue<V>) -> Bool"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkitui\/tklocationrealtime","type":"enum","title":"TKLocationRealTime","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkitui\/tklocationrealtime\/fetchlocationinfo(locationid:in:)","type":"method","title":"static func fetchLocationInfo(locationID: String, in: TKRegion) -> Single<TKAPI.LocationInfo>"},{"path":"\/documentation\/tripkitui\/tklocationrealtime\/streamrealtime(for:)","type":"method","title":"static func streamRealTime(for: TKNamedCoordinate) -> Observable<TKAPI.LocationInfo>"},{"path":"\/documentation\/tripkitui\/tklocationrealtime\/streamrealtime(for:fetchonlyon:)","type":"method","title":"static func streamRealTime(for: TKNamedCoordinate, fetchOnlyOn: Observable<Bool>) -> Observable<TKAPI.LocationInfo>"}]},{"path":"\/documentation\/tripkitui\/tkrealtimehelper","type":"enum","title":"TKRealTimeHelper","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func streamRealTime(for: Trip, pause: Observable<Bool>) -> Observable<Trip>","type":"method","path":"\/documentation\/tripkitui\/tkrealtimehelper\/streamrealtime(for:pause:)"}]},{"path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle","type":"enum","title":"TKUICardActionNormalStyle","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case fadedTint","type":"case","path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle\/fadedtint"},{"title":"case outline","type":"case","path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle\/outline"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitui\/tkuicardactionnormalstyle\/equatable-implementations"}]},{"path":"\/documentation\/tripkitui\/tkuicardactionstyle","type":"enum","title":"TKUICardActionStyle","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bold","path":"\/documentation\/tripkitui\/tkuicardactionstyle\/bold","type":"case"},{"title":"case destructive","path":"\/documentation\/tripkitui\/tkuicardactionstyle\/destructive","type":"case"},{"title":"case normal","path":"\/documentation\/tripkitui\/tkuicardactionstyle\/normal","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tkuicardactionstyle\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitui\/tkuicardactionstyle\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkitui\/tkuicardactionsviewfactory","type":"enum","title":"TKUICardActionsViewFactory","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tkuicardactionsviewfactory\/build(actions:card:model:container:padding:)","title":"static func build<C, M>(actions: [TKUICardAction<C, M>], card: C, model: M, container: UIView, padding: Edge.Set) -> UIView"}]},{"path":"\/documentation\/tripkitui\/tkuilocationhandleraction","type":"enum","title":"TKUILocationHandlerAction","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case push(TGCard)","type":"case","path":"\/documentation\/tripkitui\/tkuilocationhandleraction\/push(_:)"}]},{"path":"\/documentation\/tripkitui\/tkuisegmentmode","type":"enum","title":"TKUISegmentMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitui\/tkuisegmentmode\/book","type":"case","title":"case book"},{"path":"\/documentation\/tripkitui\/tkuisegmentmode\/getready","type":"case","title":"case getReady"},{"path":"\/documentation\/tripkitui\/tkuisegmentmode\/onsegment","type":"case","title":"case onSegment"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/tkuisegmentmode\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuisegmentmode\/!=(_:_:)"}]}]},{"path":"\/documentation\/tripkitui\/tkuiselectioncondition","type":"enum","title":"TKUISelectionCondition","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case ifSelectedOrNoSelection","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/ifselectedornoselection"},{"type":"case","title":"case onlyIfSelected","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/onlyifselected"},{"type":"case","title":"case onlyIfSomethingElseIsSelected","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/onlyifsomethingelseisselected"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkitui\/tkuiselectioncondition\/equatable-implementations"}]},{"path":"\/documentation\/tripkitui\/viewtransition","type":"enum","title":"ViewTransition","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkitui\/viewtransition\/animated","type":"case","title":"case animated"},{"path":"\/documentation\/tripkitui\/viewtransition\/reload","type":"case","title":"case reload"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkitui\/viewtransition\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkitui\/viewtransition\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Extended Modules"},{"path":"\/documentation\/tripkitui\/combine","type":"extension","title":"Combine","children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"CurrentValueSubject","path":"\/documentation\/tripkitui\/combine\/currentvaluesubject","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"AnyObserverConvertible Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func asAnyObserver() -> AnyObserver<Output>","type":"method","path":"\/documentation\/tripkitui\/combine\/currentvaluesubject\/asanyobserver()"}],"path":"\/documentation\/tripkitui\/combine\/currentvaluesubject\/anyobserverconvertible-implementations","type":"symbol"}],"type":"extension"},{"title":"PassthroughSubject","path":"\/documentation\/tripkitui\/combine\/passthroughsubject","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"AnyObserverConvertible Implementations","path":"\/documentation\/tripkitui\/combine\/passthroughsubject\/anyobserverconvertible-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func asAnyObserver() -> AnyObserver<Output>","type":"method","path":"\/documentation\/tripkitui\/combine\/passthroughsubject\/asanyobserver()"}]}],"type":"extension"},{"title":"Extended Protocols","type":"groupMarker"},{"title":"Publisher","path":"\/documentation\/tripkitui\/combine\/publisher","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/combine\/publisher\/asinfallible()","title":"func asInfallible() -> Infallible<Output>","type":"method"},{"path":"\/documentation\/tripkitui\/combine\/publisher\/asobservable()","title":"func asObservable() -> Observable<Output>","type":"method"}],"type":"extension"}]},{"path":"\/documentation\/tripkitui\/corelocation","type":"extension","title":"CoreLocation","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"CLLocationCoordinate2D","type":"extension","path":"\/documentation\/tripkitui\/corelocation\/cllocationcoordinate2d","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/corelocation\/cllocationcoordinate2d\/bearing(from:)","type":"method","title":"func bearing(from: CLLocationCoordinate2D) -> CLLocationDirection"}]}]},{"path":"\/documentation\/tripkitui\/foundation","type":"extension","title":"Foundation","children":[{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"NSNotification.Name","path":"\/documentation\/tripkitui\/foundation\/nsnotification\/name","type":"extension","children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/foundation\/nsnotification\/name\/tkuimapmanagerselectionchanged","title":"static let TKUIMapManagerSelectionChanged: Notification.Name","type":"property"},{"path":"\/documentation\/tripkitui\/foundation\/nsnotification\/name\/tkuiupdatedrealtimedata","title":"static let TKUIUpdatedRealTimeData: Notification.Name","type":"property"}]}],"title":"NSNotification","type":"extension","path":"\/documentation\/tripkitui\/foundation\/nsnotification"}]},{"path":"\/documentation\/tripkitui\/rxcocoa","type":"extension","title":"RxCocoa","children":[{"type":"groupMarker","title":"Extended Protocols"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func safeMap<T>(catchError: (Error) -> Void, (Element) async throws -> T?) -> SharedSequence<SharingStrategy, T>","path":"\/documentation\/tripkitui\/rxcocoa\/sharedsequenceconvertibletype\/safemap(catcherror:_:)-1o1yv","type":"method"},{"title":"func safeMap<T>(catchError: (Error) -> Void, (Element) throws -> T?) -> SharedSequence<SharingStrategy, T>","path":"\/documentation\/tripkitui\/rxcocoa\/sharedsequenceconvertibletype\/safemap(catcherror:_:)-8krkn","type":"method"}],"type":"extension","path":"\/documentation\/tripkitui\/rxcocoa\/sharedsequenceconvertibletype","title":"SharedSequenceConvertibleType"}]},{"path":"\/documentation\/tripkitui\/rxswift","type":"extension","title":"RxSwift","children":[{"type":"groupMarker","title":"Extended Protocols"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var publisher: AnyPublisher<Element, Swift.Error>","path":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/publisher"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func asPublisher() -> AnyPublisher<Element, Swift.Error>","path":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/aspublisher()"},{"type":"method","title":"func bind<S>(to: S) -> Disposable","path":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/bind(to:)"}],"type":"extension","path":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype","title":"ObservableConvertibleType"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/rxswift\/observabletype\/asyncmap(_:)-7qjd4","title":"func asyncMap<T>((Element) async throws -> T) -> Observable<T>"},{"type":"method","path":"\/documentation\/tripkitui\/rxswift\/observabletype\/asyncmap(_:)-7y3pu","title":"func asyncMap<T>((Element) async -> T) -> Observable<T>"}],"type":"extension","path":"\/documentation\/tripkitui\/rxswift\/observabletype","title":"ObservableType"},{"children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func create(() async throws -> Element) -> Single<Element>","path":"\/documentation\/tripkitui\/rxswift\/primitivesequencetype\/create(_:)-1favr"},{"type":"method","title":"static func create(() async -> Element) -> Single<Element>","path":"\/documentation\/tripkitui\/rxswift\/primitivesequencetype\/create(_:)-7xiz7"}],"type":"extension","path":"\/documentation\/tripkitui\/rxswift\/primitivesequencetype","title":"PrimitiveSequenceType"},{"type":"groupMarker","title":"Extended Structures"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var bikePod: Observable<TKAPI.BikePodInfo>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/bikepod","type":"property"},{"title":"var carPark: Observable<TKAPI.CarParkInfo>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/carpark","type":"property"},{"title":"var carPod: Observable<TKAPI.CarPodInfo>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/carpod","type":"property"},{"title":"var currentLocation: Observable<CLLocation>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/currentlocation","type":"property"},{"title":"var deviceHeading: Observable<CLHeading>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/deviceheading","type":"property"},{"title":"var trip: Infallible<Trip?>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/trip","type":"property"},{"title":"var vehicle: Observable<TKAPI.SharedVehicleInfo>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/vehicle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func fetchCurrentLocation(within: TimeInterval) -> Single<CLLocation>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchcurrentlocation(within:)","type":"method"},{"title":"func fetchObjects<E>(E.Type, sortDescriptors: [NSSortDescriptor], predicate: NSPredicate?, relationshipKeyPathsForPrefetching: [String]?) -> Observable<[E]>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchobjects(_:sortdescriptors:predicate:relationshipkeypathsforprefetching:)","type":"method"},{"title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, path: String, parameters: [String : Any], headers: [String : String], region: TKRegion?) -> Single<(Int?, [String : Any], Model)>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/hit(_:_:path:parameters:headers:region:)","type":"method"},{"title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, url: URL, parameters: [String : Any], decoderConfig: (JSONDecoder) -> Void) -> Single<(Int, [String : Any], Model)>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/hit(_:_:url:parameters:decoderconfig:)","type":"method"},{"title":"func hit(TKServer.HTTPMethod, path: String, parameters: [String : Any], headers: [String : String], region: TKRegion?) -> Single<(Int?, [String : Any], Data?)>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/hit(_:path:parameters:headers:region:)","type":"method"},{"title":"func hit(TKServer.HTTPMethod, url: URL, parameters: [String : Any]?) -> Single<(Int, [String : Any], Data)>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/hit(_:url:parameters:)","type":"method"},{"title":"func requireRegion(CLLocationCoordinate2D) -> Single<TKRegion>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/requireregion(_:)-1493","type":"method"},{"title":"func requireRegion(MKCoordinateRegion) -> Single<TKRegion>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/requireregion(_:)-f99k","type":"method"},{"title":"func requireRegions() -> Single<Void>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/requireregions()","type":"method"},{"title":"func start() -> Single<[MKMapItem]>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/start()","type":"method"},{"title":"func stream<Model>(Model.Type, TKServer.HTTPMethod, path: String, parameters: [String : Any], headers: [String : String], region: TKRegion?, repeatHandler: ((Int?, Model?) -> TKServer.RepeatHandler?)?) -> Observable<(Int?, [String : Any], Model?)>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/stream(_:_:path:parameters:headers:region:repeathandler:)","type":"method"},{"title":"func stream(TKServer.HTTPMethod, path: String, parameters: [String : Any], headers: [String : String], region: TKRegion?, repeatHandler: ((Int?, Data?) -> TKServer.RepeatHandler?)?) -> Observable<(Int?, [String : Any], Data?)>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/stream(_:path:parameters:headers:region:repeathandler:)","type":"method"},{"title":"func tryAuthorization() -> Single<Bool>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/tryauthorization()","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var hiddenModeIdentifiers: Observable<Set<String>>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/hiddenmodeidentifiers","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func downloadContent(of: Service, forEmbarkationDate: Date, in: TKRegion) -> Single<Void>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/downloadcontent(of:forembarkationdate:in:)","type":"method"},{"title":"static func downloadTrip(URL, identifier: String?, into: NSManagedObjectContext) -> Single<Trip>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/downloadtrip(_:identifier:into:)","type":"method"},{"title":"static func fetchBestTrip<C>(for: TripRequest, modes: C) -> Single<Trip>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchbesttrip(for:modes:)","type":"method"},{"title":"static func fetchTransitAlertMappings(forRegion: TKRegion) -> Single<[TKAPI.AlertMapping]>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchtransitalertmappings(forregion:)","type":"method"},{"title":"static func fetchTransitAlerts(forRegion: TKRegion) -> Single<[TKAPI.Alert]>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/fetchtransitalerts(forregion:)","type":"method"},{"title":"static func geocode(TKGeocodable, using: TKGeocoding, near: MKMapRect) -> Single<Void>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/geocode(_:using:near:)","type":"method"},{"title":"static func reportPlannedTrip(Trip, userInfo: [String : Any], includeUserID: Bool) -> Single<Bool>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/reportplannedtrip(_:userinfo:includeuserid:)","type":"method"},{"title":"static func streamUpdates(Trip, updateInterval: DispatchTimeInterval, active: Observable<Bool>) -> Observable<Trip>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/streamupdates(_:updateinterval:active:)","type":"method"},{"title":"static func update(Trip) -> Single<(Trip, didUpdate: Bool)>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/update(_:)","type":"method"},{"title":"static func update(Trip, url: URL?, aborter: ((URL) -> Bool)) -> Single<Bool>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/update(_:url:aborter:)","type":"method"},{"title":"static func update(tripGroups: [TripGroup]) -> Observable<TKRealTimeUpdateProgress<Void>>","path":"\/documentation\/tripkitui\/rxswift\/reactive\/update(tripgroups:)","type":"method"}],"type":"extension","path":"\/documentation\/tripkitui\/rxswift\/reactive","title":"Reactive"}]},{"path":"\/documentation\/tripkitui\/swift","type":"extension","title":"Swift","children":[{"title":"Extended Protocols","type":"groupMarker"},{"title":"BinaryInteger","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/swift\/binaryinteger\/identity","title":"var identity: Self"}],"path":"\/documentation\/tripkitui\/swift\/binaryinteger","type":"extension"},{"title":"FloatingPoint","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/swift\/floatingpoint\/identity","type":"property","title":"var identity: Self"}],"path":"\/documentation\/tripkitui\/swift\/floatingpoint","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"title":"Array","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func autocomplete(Observable<(String, forced: Bool)>, mapRect: Observable<MKMapRect>) -> Observable<[TKAutocompletionResult]>","type":"method","path":"\/documentation\/tripkitui\/swift\/array\/autocomplete(_:maprect:)"}],"path":"\/documentation\/tripkitui\/swift\/array","type":"extension"},{"title":"String","children":[{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/swift\/string\/identifiabletype-implementations","title":"IdentifiableType Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var identity: String","path":"\/documentation\/tripkitui\/swift\/string\/identity-swift.property"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"String.Identity","path":"\/documentation\/tripkitui\/swift\/string\/identity-swift.typealias"}],"type":"symbol"}],"path":"\/documentation\/tripkitui\/swift\/string","type":"extension"}]},{"path":"\/documentation\/tripkitui\/tgcardviewcontroller","type":"extension","title":"TGCardViewController","children":[{"title":"Extended Classes","type":"groupMarker"},{"type":"extension","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func present(UIViewController, inNavigator: Bool, includeClose: Bool, preferredStyle: UIModalPresentationStyle, sender: Any?)","path":"\/documentation\/tripkitui\/tgcardviewcontroller\/tgcardviewcontroller\/present(_:innavigator:includeclose:preferredstyle:sender:)","type":"method"},{"title":"func show(Error, title: String?)","path":"\/documentation\/tripkitui\/tgcardviewcontroller\/tgcardviewcontroller\/show(_:title:)","type":"method"}],"title":"TGCardViewController","path":"\/documentation\/tripkitui\/tgcardviewcontroller\/tgcardviewcontroller"}]},{"path":"\/documentation\/tripkitui\/tripkit","type":"extension","title":"TripKit","children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"Alert","path":"\/documentation\/tripkitui\/tripkit\/alert","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tripkit\/alert\/icon","type":"property","title":"var icon: TKImage?"},{"path":"\/documentation\/tripkitui\/tripkit\/alert\/iconurl","type":"property","title":"var iconURL: URL?"},{"path":"\/documentation\/tripkitui\/tripkit\/alert\/infourl","type":"property","title":"var infoURL: URL?"},{"path":"\/documentation\/tripkitui\/tripkit\/alert\/lastupdated","type":"property","title":"var lastUpdated: Date?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/tripkit\/alert\/iscritical()","type":"method","title":"func isCritical() -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/alert\/image","title":"var image: TKImage?","type":"property"}],"path":"\/documentation\/tripkitui\/tripkit\/alert\/tkuiimageannotation-implementations","type":"symbol","title":"TKUIImageAnnotation Implementations"}],"type":"extension"},{"title":"StopLocation","path":"\/documentation\/tripkitui\/tripkit\/stoplocation","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var clusterIdentifier: String?","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/clusteridentifier","type":"property"},{"title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/image","type":"property"},{"title":"var imageIsTemplate: Bool","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/imageistemplate","type":"property"},{"title":"var imageURL: URL?","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/imageurl","type":"property"},{"title":"var modeInfo: TKModeInfo?","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/modeinfo","type":"property"}],"title":"TKUIModeAnnotation Implementations","path":"\/documentation\/tripkitui\/tripkit\/stoplocation\/tkuimodeannotation-implementations"}],"type":"extension"},{"title":"StopVisits","path":"\/documentation\/tripkitui\/tripkit\/stopvisits","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"TKUIModeAnnotation Implementations","path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/tkuimodeannotation-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/clusteridentifier","type":"property","title":"var clusterIdentifier: String?"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/image","type":"property","title":"var image: TKImage?"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/imageistemplate","type":"property","title":"var imageIsTemplate: Bool"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/imageurl","type":"property","title":"var imageURL: URL?"},{"path":"\/documentation\/tripkitui\/tripkit\/stopvisits\/modeinfo","type":"property","title":"var modeInfo: TKModeInfo?"}]}],"type":"extension"},{"title":"TKDeparturesProvider","path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/downloaddepartures(for:fromdate:filters:limit:)","title":"class func downloadDepartures(for: [StopLocation], fromDate: Date, filters: [Filter], limit: Int) -> Single<Bool>","type":"method"},{"path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/downloaddepartures(for:fromdate:limit:)","title":"class func downloadDepartures(for: TKDLSTable, fromDate: Date, limit: Int) -> Single<Set<String>>","type":"method"},{"path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/fetchdepartures(for:fromdate:limit:)","title":"class func fetchDepartures(for: TKDLSTable, fromDate: Date, limit: Int) -> Single<TKAPI.Departures>","type":"method"},{"path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/fetchdepartures(forstopcodes:fromdate:filters:limit:in:)","title":"class func fetchDepartures(forStopCodes: [String], fromDate: Date, filters: [Filter], limit: Int, in: TKRegion) -> Single<TKAPI.Departures>","type":"method"},{"path":"\/documentation\/tripkitui\/tripkit\/tkdeparturesprovider\/streamdepartures(forstopcodes:limit:in:repeathandler:)","title":"class func streamDepartures(forStopCodes: [String], limit: Int, in: TKRegion, repeatHandler: ((Int?, TKAPI.Departures) -> TimeInterval?)?) -> Observable<TKAPI.Departures>","type":"method"}],"type":"extension"},{"title":"TKModeCoordinate","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"TKUIGlyphableAnnotation Implementations","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/tkuiglyphableannotation-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var glyphColor: TKColor?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/glyphcolor"},{"title":"var glyphImage: TKImage?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/glyphimage"},{"title":"var glyphImageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/glyphimageistemplate"},{"title":"var glyphImageURL: URL?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/glyphimageurl"}]},{"type":"symbol","title":"TKUIModeAnnotation Implementations","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/tkuimodeannotation-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var image: TKImage?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/image"},{"title":"var imageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/imageistemplate"},{"title":"var imageURL: URL?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/imageurl"},{"title":"var modeInfo: TKModeInfo?","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkmodecoordinate\/modeinfo"}]}],"type":"extension"},{"title":"TKNamedCoordinate","path":"\/documentation\/tripkitui\/tripkit\/tknamedcoordinate","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUIIdentifiableAnnotation Implementations","type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/tknamedcoordinate\/tkuiidentifiableannotation-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var identity: String?","path":"\/documentation\/tripkitui\/tripkit\/tknamedcoordinate\/identity","type":"property"}]}],"type":"extension"},{"title":"TKOnStreetParkingLocation","path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation","children":[{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/tkdisplayableroute-implementations","title":"TKDisplayableRoute Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/routecolor","type":"property","title":"var routeColor: TKColor?"},{"path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/routedashpattern","type":"property","title":"var routeDashPattern: [NSNumber]?"},{"path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/routeistravelled","type":"property","title":"var routeIsTravelled: Bool"},{"path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/routepath","type":"property","title":"var routePath: [Any]"},{"path":"\/documentation\/tripkitui\/tripkit\/tkonstreetparkinglocation\/selectionidentifier","type":"property","title":"var selectionIdentifier: String?"}],"type":"symbol"}],"type":"extension"},{"title":"TKRealTimeFetcher","path":"\/documentation\/tripkitui\/tripkit\/tkrealtimefetcher","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"ReactiveCompatible Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var rx: Reactive<Self>","path":"\/documentation\/tripkitui\/tripkit\/tkrealtimefetcher\/rx"}],"path":"\/documentation\/tripkitui\/tripkit\/tkrealtimefetcher\/reactivecompatible-implementations"}],"type":"extension"},{"title":"TKReporter","path":"\/documentation\/tripkitui\/tripkit\/tkreporter","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"ReactiveCompatible Implementations","type":"symbol","path":"\/documentation\/tripkitui\/tripkit\/tkreporter\/reactivecompatible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tripkit\/tkreporter\/rx","title":"var rx: Reactive<Self>"}]}],"type":"extension"},{"title":"TKSegment","path":"\/documentation\/tripkitui\/tripkit\/tksegment","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var canFlipImage: Bool","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/canflipimage"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"TKUIImageAnnotation Implementations","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/tkuiimageannotation-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var image: TKImage?","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/image","type":"property"}]},{"type":"symbol","title":"TKUIModeAnnotation Implementations","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/tkuimodeannotation-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var clusterIdentifier: String?","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/clusteridentifier","type":"property"},{"title":"var imageIsTemplate: Bool","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/imageistemplate","type":"property"},{"title":"var imageURL: URL?","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/imageurl","type":"property"}]},{"type":"symbol","title":"TKUISelectableOnMap Implementations","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/tkuiselectableonmap-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/selectioncondition","title":"var selectionCondition: TKUISelectionCondition"},{"type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/selectionidentifier","title":"var selectionIdentifier: String?"}]},{"type":"symbol","title":"TKUISemaphoreDisplayable Implementations","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/tkuisemaphoredisplayable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isTerminal: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/isterminal"},{"title":"var semaphoreMode: TKUISemaphoreView.Mode","type":"property","path":"\/documentation\/tripkitui\/tripkit\/tksegment\/semaphoremode"}]}],"type":"extension"},{"title":"Extended Protocols","type":"groupMarker"},{"title":"TKAutocompleting","path":"\/documentation\/tripkitui\/tripkit\/tkautocompleting","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkitui\/tripkit\/tkautocompleting\/annotation(for:)","title":"func annotation(for: TKAutocompletionResult) -> Single<MKAnnotation?>"},{"type":"method","path":"\/documentation\/tripkitui\/tripkit\/tkautocompleting\/autocomplete(_:near:)","title":"func autocomplete(String, near: MKMapRect) -> Single<[TKAutocompletionResult]>"},{"type":"method","path":"\/documentation\/tripkitui\/tripkit\/tkautocompleting\/triggeradditional(presenter:)","title":"func triggerAdditional(presenter: UIViewController) -> Single<Bool>"}],"type":"extension"},{"title":"TKGeocoding","path":"\/documentation\/tripkitui\/tripkit\/tkgeocoding","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func geocode(String, near: MKMapRect) -> Single<[TKNamedCoordinate]>","type":"method","path":"\/documentation\/tripkitui\/tripkit\/tkgeocoding\/geocode(_:near:)-5lv23"},{"title":"func geocode(TKGeocodable, near: MKMapRect) -> Single<Void>","type":"method","path":"\/documentation\/tripkitui\/tripkit\/tkgeocoding\/geocode(_:near:)-7a5uf"}],"type":"extension"},{"title":"Extended Enumerations","type":"groupMarker"},{"title":"TKBuzzInfoProvider","path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider\/fetchvehicleavailabilities(locationid:in:filter:)","title":"static func fetchVehicleAvailabilities(locationId: String, in: TKRegion, filter: Observable<(start: Date, end: Date?)>) -> Observable<[TKAPI.CarAvailability]>","type":"method"},{"path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider\/fetchvehicleavailabilities(locationid:in:start:end:)","title":"static func fetchVehicleAvailabilities(locationId: String, in: TKRegion, start: Date?, end: Date?) -> Single<[TKAPI.CarAvailability]>","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider\/reactivecompatible-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var rx: Reactive<Self>","path":"\/documentation\/tripkitui\/tripkit\/tkbuzzinfoprovider\/rx"}],"title":"ReactiveCompatible Implementations","type":"symbol"}],"type":"extension"},{"title":"TKPathFriendliness","path":"\/documentation\/tripkitui\/tripkit\/tkpathfriendliness","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func < (TKPathFriendliness, TKPathFriendliness) -> Bool","path":"\/documentation\/tripkitui\/tripkit\/tkpathfriendliness\/_(_:_:)","type":"op"}],"type":"extension"},{"title":"TKTripFetcher","path":"\/documentation\/tripkitui\/tripkit\/tktripfetcher","children":[{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var rx: Reactive<Self>","path":"\/documentation\/tripkitui\/tripkit\/tktripfetcher\/rx","type":"property"}],"path":"\/documentation\/tripkitui\/tripkit\/tktripfetcher\/reactivecompatible-implementations","title":"ReactiveCompatible Implementations","type":"symbol"}],"type":"extension"}]},{"path":"\/documentation\/tripkitui\/tripkitapi","type":"extension","title":"TripKitAPI","children":[{"title":"Extended Classes","type":"groupMarker"},{"title":"TKMapTiles","path":"\/documentation\/tripkitui\/tripkitapi\/tkmaptiles","type":"extension","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUIMapTiles Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmaptiles\/id","type":"property","title":"var id: String"}],"path":"\/documentation\/tripkitui\/tripkitapi\/tkmaptiles\/tkuimaptiles-implementations","type":"symbol"}]},{"title":"TKModeInfo","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo","type":"extension","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Comparable Implementations","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/comparable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'...(_:)-2ud47","type":"op","title":"static func ... (Self) -> PartialRangeFrom<Self>"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'...(_:)-3xz0b","type":"op","title":"static func ... (Self) -> PartialRangeThrough<Self>"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'...(_:_:)","type":"op","title":"static func ... (Self, Self) -> ClosedRange<Self>"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'.._(_:)","type":"op","title":"static func ..< (Self) -> PartialRangeUpTo<Self>"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/'.._(_:_:)","type":"op","title":"static func ..< (Self, Self) -> Range<Self>"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/_(_:_:)","type":"op","title":"static func < (TKModeInfo, TKModeInfo) -> Bool"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/_(_:_:)-3a08o","type":"op","title":"static func > (Self, Self) -> Bool"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/_=(_:_:)-427il","type":"op","title":"static func <= (Self, Self) -> Bool"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/_=(_:_:)-6m9l2","type":"op","title":"static func >= (Self, Self) -> Bool"}]},{"type":"symbol","title":"TKUIModePickerItem Implementations","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/tkuimodepickeritem-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var imageTextRepresentation: String","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/imagetextrepresentation"},{"title":"var imageURLIsBranding: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/imageurlisbranding"},{"title":"var imageURLIsTemplate: Bool","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkmodeinfo\/imageurlistemplate"}]}]},{"title":"TKRegionCity","path":"\/documentation\/tripkitui\/tripkitapi\/tkregioncity","type":"extension","children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var image: TKImage?","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkregioncity\/image"},{"title":"var imageURL: URL?","type":"property","path":"\/documentation\/tripkitui\/tripkitapi\/tkregioncity\/imageurl"}],"title":"TKUIImageAnnotation Implementations","path":"\/documentation\/tripkitui\/tripkitapi\/tkregioncity\/tkuiimageannotation-implementations","type":"symbol"}]},{"title":"TKServer","path":"\/documentation\/tripkitui\/tripkitapi\/tkserver","type":"extension","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"ReactiveCompatible Implementations","path":"\/documentation\/tripkitui\/tripkitapi\/tkserver\/reactivecompatible-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var rx: Reactive<Self>","path":"\/documentation\/tripkitui\/tripkitapi\/tkserver\/rx","type":"property"}]}]},{"title":"Extended Types","type":"groupMarker"},{"title":"TKAPI","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi","type":"extension","children":[{"type":"groupMarker","title":"Extended Types"},{"type":"extension","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert","title":"TKAPI.Alert","children":[{"title":"Extended Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert\/severity","title":"TKAPI.Alert.Severity","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var backgroundColor: UIColor","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert\/severity\/backgroundcolor","type":"property"},{"title":"var icon: UIImage","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert\/severity\/icon","type":"property"},{"title":"var textColor: UIColor","path":"\/documentation\/tripkitui\/tripkitapi\/tkapi\/alert\/severity\/textcolor","type":"property"}],"type":"extension"}]}]},{"title":"TKRegion","path":"\/documentation\/tripkitui\/tripkitapi\/tkregion","type":"extension","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"TKRegion.RoutingMode","path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode","type":"extension","children":[{"title":"Default Implementations","type":"groupMarker"},{"title":"TKUIModePickerItem Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode\/imagetextrepresentation","title":"var imageTextRepresentation: String","type":"property"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode\/imageurlisbranding","title":"var imageURLIsBranding: Bool","type":"property"},{"path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode\/imageurlistemplate","title":"var imageURLIsTemplate: Bool","type":"property"}],"path":"\/documentation\/tripkitui\/tripkitapi\/tkregion\/routingmode\/tkuimodepickeritem-implementations"}]}]}]},{"path":"\/documentation\/tripkitui\/uikit","type":"extension","title":"UIKit","children":[{"title":"Extended Classes","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/uikit\/uibutton","title":"UIButton","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkitui\/uikit\/uibutton\/setimage(with:astemplate:placeholder:for:completion:)","type":"method","title":"func setImage(with: URL?, asTemplate: Bool, placeholder: TKImage?, for: UIControl.State, completion: ((Bool) -> Void)?)"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview","title":"UICollectionView","children":[{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/sectionedviewtype-implementations","type":"symbol","title":"SectionedViewType Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func batchUpdates<Section>(Changeset<Section>, animationConfiguration: AnimationConfiguration)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/batchupdates(_:animationconfiguration:)","type":"method"},{"title":"func deleteItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/deleteitemsatindexpaths(_:animationstyle:)","type":"method"},{"title":"func deleteSections([Int], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/deletesections(_:animationstyle:)","type":"method"},{"title":"func insertItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/insertitemsatindexpaths(_:animationstyle:)","type":"method"},{"title":"func insertSections([Int], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/insertsections(_:animationstyle:)","type":"method"},{"title":"func moveItemAtIndexPath(IndexPath, to: IndexPath)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/moveitematindexpath(_:to:)","type":"method"},{"title":"func moveSection(Int, to: Int)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/movesection(_:to:)","type":"method"},{"title":"func reloadItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/reloaditemsatindexpaths(_:animationstyle:)","type":"method"},{"title":"func reloadSections([Int], animationStyle: UITableView.RowAnimation)","path":"\/documentation\/tripkitui\/uikit\/uicollectionview\/reloadsections(_:animationstyle:)","type":"method"}]}],"type":"extension"},{"path":"\/documentation\/tripkitui\/uikit\/uicolor","title":"UIColor","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var isDark: Bool","path":"\/documentation\/tripkitui\/uikit\/uicolor\/isdark","type":"property"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/uikit\/uiimage","title":"UIImage","children":[{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static let badgeCheck: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgecheck"},{"type":"property","title":"static let badgeHeart: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgeheart"},{"type":"property","title":"static let badgeLeaf: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgeleaf"},{"type":"property","title":"static let badgeLightning: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgelightning"},{"type":"property","title":"static let badgeLike: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgelike"},{"type":"property","title":"static let badgeMoney: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/badgemoney"},{"type":"property","title":"static let iconAlert: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconalert"},{"type":"property","title":"static let iconAlternative: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconalternative"},{"type":"property","title":"static let iconArrow: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconarrow"},{"type":"property","title":"static let iconArrowUp: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconarrowup"},{"type":"property","title":"static let iconChevronDown: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconchevrondown"},{"type":"property","title":"static let iconChevronTimetable: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconchevrontimetable"},{"type":"property","title":"static let iconCompass: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconcompass"},{"type":"property","title":"static let iconCross: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconcross"},{"type":"property","title":"static let iconHidePassword: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconhidepassword"},{"type":"property","title":"static let iconShare: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconshare"},{"type":"property","title":"static let iconShowPassword: UIImage","path":"\/documentation\/tripkitui\/uikit\/uiimage\/iconshowpassword"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/uikit\/uiimageview","title":"UIImageView","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/uikit\/uiimageview\/setimage(with:astemplate:placeholder:completion:)","title":"func setImage(with: URL?, asTemplate: Bool, placeholder: TKImage?, completion: ((Bool) -> Void)?)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/uikit\/uiimageview\/resetcaches()","title":"static func resetCaches()","type":"method"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview","title":"UITableView","children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/batchupdates(_:animationconfiguration:)","title":"func batchUpdates<Section>(Changeset<Section>, animationConfiguration: AnimationConfiguration)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/deleteitemsatindexpaths(_:animationstyle:)","title":"func deleteItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/deletesections(_:animationstyle:)","title":"func deleteSections([Int], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/insertitemsatindexpaths(_:animationstyle:)","title":"func insertItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/insertsections(_:animationstyle:)","title":"func insertSections([Int], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/moveitematindexpath(_:to:)","title":"func moveItemAtIndexPath(IndexPath, to: IndexPath)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/movesection(_:to:)","title":"func moveSection(Int, to: Int)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/reloaditemsatindexpaths(_:animationstyle:)","title":"func reloadItemsAtIndexPaths([IndexPath], animationStyle: UITableView.RowAnimation)","type":"method"},{"path":"\/documentation\/tripkitui\/uikit\/uitableview\/reloadsections(_:animationstyle:)","title":"func reloadSections([Int], animationStyle: UITableView.RowAnimation)","type":"method"}],"title":"SectionedViewType Implementations","type":"symbol","path":"\/documentation\/tripkitui\/uikit\/uitableview\/sectionedviewtype-implementations"}],"type":"extension"},{"path":"\/documentation\/tripkitui\/uikit\/uiviewcontroller","title":"UIViewController","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func showErrorAsAlert(Error, title: String?)","type":"method","path":"\/documentation\/tripkitui\/uikit\/uiviewcontroller\/showerrorasalert(_:title:)"}],"type":"extension"}]}],"title":"TripKitUI"},{"type":"module","path":"\/documentation\/tripkit","children":[{"title":"Setup & Configuration","type":"groupMarker"},{"title":"TKConfig","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkconfig\/appgroupname","title":"var appGroupName: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkconfig\/appurlscheme","title":"var appURLScheme: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkconfig\/attributionrequired","title":"var attributionRequired: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tkconfig\/betaserverbaseurl","title":"var betaServerBaseURL: String"},{"type":"property","path":"\/documentation\/tripkit\/tkconfig\/configuration","title":"let configuration: [String : AnyHashable]"},{"type":"property","path":"\/documentation\/tripkit\/tkconfig\/oauthcallbackurl","title":"var oauthCallbackURL: URL?"},{"type":"property","path":"\/documentation\/tripkit\/tkconfig\/shareurldomain","title":"var shareURLDomain: String?"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkconfig\/shared","title":"static let shared: TKConfig"}],"type":"class","path":"\/documentation\/tripkit\/tkconfig"},{"title":"TKRegion","children":[{"type":"groupMarker","title":"Structures"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/color","type":"property","title":"var color: TKColor?"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/identifier","type":"property","title":"let identifier: String"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/image","type":"property","title":"var image: TKImage?"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/imageurl","type":"property","title":"var imageURL: URL?"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/remoteimageisbranding","type":"property","title":"var remoteImageIsBranding: Bool"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/remoteimageistemplate","type":"property","title":"var remoteImageIsTemplate: Bool"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/subtitle","type":"property","title":"var subtitle: String?"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/title","type":"property","title":"let title: String"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/website","type":"property","title":"var website: URL?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkregion\/routingmode\/image(type:)","title":"func image(type: TKStyleModeIconType) -> TKImage?"},{"type":"method","path":"\/documentation\/tripkit\/tkregion\/routingmode\/imageurl(type:)","title":"func imageURL(type: TKStyleModeIconType) -> URL?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkregion\/routingmode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkregion\/routingmode\/equatable-implementations","title":"Equatable Implementations"}],"type":"struct","title":"TKRegion.RoutingMode","path":"\/documentation\/tripkit\/tkregion\/routingmode"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(asInternationalWithCode: String, modes: [String])","path":"\/documentation\/tripkit\/tkregion\/init(asinternationalwithcode:modes:)"},{"type":"init","title":"init(forTestingWithCode: String, modes: [String], cities: [TKRegion.City])","path":"\/documentation\/tripkit\/tkregion\/init(fortestingwithcode:modes:cities:)"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkregion\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let cities: [TKRegion.City]","path":"\/documentation\/tripkit\/tkregion\/cities"},{"type":"property","title":"let code: String","path":"\/documentation\/tripkit\/tkregion\/code"},{"type":"property","title":"var isInternational: Bool","path":"\/documentation\/tripkit\/tkregion\/isinternational"},{"type":"property","title":"let modeIdentifiers: [String]","path":"\/documentation\/tripkit\/tkregion\/modeidentifiers"},{"type":"property","title":"var name: String","path":"\/documentation\/tripkit\/tkregion\/name"},{"type":"property","title":"var polygon: MKPolygon","path":"\/documentation\/tripkit\/tkregion\/polygon"},{"type":"property","title":"var routingModes: [RoutingMode]","path":"\/documentation\/tripkit\/tkregion\/routingmodes"},{"type":"property","title":"let timeZone: TimeZone","path":"\/documentation\/tripkit\/tkregion\/timezone"},{"type":"property","title":"let urls: [URL]","path":"\/documentation\/tripkit\/tkregion\/urls"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func contains(CLLocationCoordinate2D) -> Bool","path":"\/documentation\/tripkit\/tkregion\/contains(_:)"},{"type":"method","title":"func contains(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Bool","path":"\/documentation\/tripkit\/tkregion\/contains(latitude:longitude:)"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkregion\/encode(to:)"},{"type":"method","title":"func intersects(MKMapRect) -> Bool","path":"\/documentation\/tripkit\/tkregion\/intersects(_:)"},{"type":"method","title":"func intersects(polygonPoints: [(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)]) -> Bool","path":"\/documentation\/tripkit\/tkregion\/intersects(polygonpoints:)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKRegion.City","path":"\/documentation\/tripkit\/tkregion\/city"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var international: TKInternationalRegion","path":"\/documentation\/tripkit\/tkregion\/international"}],"type":"class","path":"\/documentation\/tripkit\/tkregion"},{"title":"TKRegionManager","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hasRegions: Bool","path":"\/documentation\/tripkit\/tkregionmanager\/hasregions","type":"property"},{"title":"var regions: [TKRegion]","path":"\/documentation\/tripkit\/tkregionmanager\/regions","type":"property"},{"title":"var regionsHash: NSNumber?","path":"\/documentation\/tripkit\/tkregionmanager\/regionshash","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func city(nearestTo: CLLocationCoordinate2D) -> TKRegion.City?","path":"\/documentation\/tripkit\/tkregionmanager\/city(nearestto:)","type":"method"},{"title":"func color(forModeIdentifier: String) -> TKColor?","path":"\/documentation\/tripkit\/tkregionmanager\/color(formodeidentifier:)","type":"method"},{"title":"func coordinateIsPartOfAnyRegion(CLLocationCoordinate2D) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/coordinateispartofanyregion(_:)","type":"method"},{"title":"func coordinateIsPartOfAnyRegion(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/coordinateispartofanyregion(latitude:longitude:)","type":"method"},{"title":"func dependentModeIdentifier(forModeIdentifier: String) -> [String]","path":"\/documentation\/tripkit\/tkregionmanager\/dependentmodeidentifier(formodeidentifier:)","type":"method"},{"title":"func fetchRegions(forced: Bool) async throws","path":"\/documentation\/tripkit\/tkregionmanager\/fetchregions(forced:)","type":"method"},{"title":"func imageURL(forModeIdentifier: String?, iconType: TKStyleModeIconType) -> URL?","path":"\/documentation\/tripkit\/tkregionmanager\/imageurl(formodeidentifier:icontype:)","type":"method"},{"title":"func impliedModes(byModeIdentifer: String) -> [String]","path":"\/documentation\/tripkit\/tkregionmanager\/impliedmodes(bymodeidentifer:)","type":"method"},{"title":"func loadRegionsFromCache() async","path":"\/documentation\/tripkit\/tkregionmanager\/loadregionsfromcache()","type":"method"},{"title":"func localRegion(code: String) -> TKRegion?","path":"\/documentation\/tripkit\/tkregionmanager\/localregion(code:)","type":"method"},{"title":"func localRegion(named: String) -> TKRegion?","path":"\/documentation\/tripkit\/tkregionmanager\/localregion(named:)","type":"method"},{"title":"func localRegions(containing: CLLocationCoordinate2D) -> Set<TKRegion>","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(containing:)","type":"method"},{"title":"func localRegions(containingLatitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> Set<TKRegion>","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(containinglatitude:longitude:)","type":"method"},{"title":"func localRegions(overlapping: MKCoordinateRegion) -> [TKRegion]","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(overlapping:)","type":"method"},{"title":"func localRegions(start: (latitude: TKAPI.Degrees, longitude: TKAPI.Degrees), end: (latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)) -> [TKRegion]","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(start:end:)-4916t","type":"method"},{"title":"func localRegions(start: CLLocationCoordinate2D, end: CLLocationCoordinate2D) -> [TKRegion]","path":"\/documentation\/tripkit\/tkregionmanager\/localregions(start:end:)-p11e","type":"method"},{"title":"func mapRectIntersectsAnyRegion(MKMapRect) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/maprectintersectsanyregion(_:)","type":"method"},{"title":"func modeDetails(forModeIdentifier: String) -> TKAPI.ModeDetails?","path":"\/documentation\/tripkit\/tkregionmanager\/modedetails(formodeidentifier:)","type":"method"},{"title":"func modeIdentifierIsRequired(String) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/modeidentifierisrequired(_:)","type":"method"},{"title":"func region(containing: MKCoordinateRegion) -> TKRegion","path":"\/documentation\/tripkit\/tkregionmanager\/region(containing:)","type":"method"},{"title":"func region(containing: CLLocationCoordinate2D, CLLocationCoordinate2D) -> TKRegion","path":"\/documentation\/tripkit\/tkregionmanager\/region(containing:_:)","type":"method"},{"title":"func remoteImageIsBranding(forModeIdentifier: String) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/remoteimageisbranding(formodeidentifier:)","type":"method"},{"title":"func remoteImageIsTemplate(forModeIdentifier: String) -> Bool","path":"\/documentation\/tripkit\/tkregionmanager\/remoteimageistemplate(formodeidentifier:)","type":"method"},{"title":"func requireRegion(for: MKCoordinateRegion) async throws -> TKRegion","path":"\/documentation\/tripkit\/tkregionmanager\/requireregion(for:)-1pca3","type":"method"},{"title":"func requireRegion(for: CLLocationCoordinate2D) async throws -> TKRegion","path":"\/documentation\/tripkit\/tkregionmanager\/requireregion(for:)-8w8o4","type":"method"},{"title":"func requireRegions() async throws","path":"\/documentation\/tripkit\/tkregionmanager\/requireregions()","type":"method"},{"title":"func requireRegions(completion: (Result<Void, any Error>) -> Void)","path":"\/documentation\/tripkit\/tkregionmanager\/requireregions(completion:)","type":"method"},{"title":"func subtitle(forModeIdentifier: String) -> String?","path":"\/documentation\/tripkit\/tkregionmanager\/subtitle(formodeidentifier:)","type":"method"},{"title":"func timeZone(containingLatitude: TKAPI.Degrees, longitude: TKAPI.Degrees) -> TimeZone?","path":"\/documentation\/tripkit\/tkregionmanager\/timezone(containinglatitude:longitude:)","type":"method"},{"title":"func timeZone(for: CLLocationCoordinate2D) -> TimeZone?","path":"\/documentation\/tripkit\/tkregionmanager\/timezone(for:)","type":"method"},{"title":"func title(forModeIdentifier: String) -> String?","path":"\/documentation\/tripkit\/tkregionmanager\/title(formodeidentifier:)","type":"method"},{"title":"func updateRegions(forced: Bool)","path":"\/documentation\/tripkit\/tkregionmanager\/updateregions(forced:)","type":"method"},{"title":"func websiteURL(forModeIdentifier: String) -> URL?","path":"\/documentation\/tripkit\/tkregionmanager\/websiteurl(formodeidentifier:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var cacheURL: URL","path":"\/documentation\/tripkit\/tkregionmanager\/cacheurl","type":"property"},{"title":"static let shared: TKRegionManager","path":"\/documentation\/tripkit\/tkregionmanager\/shared","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func readLocalCache() -> Data?","path":"\/documentation\/tripkit\/tkregionmanager\/readlocalcache()","type":"method"},{"title":"static func saveToCache(Data)","path":"\/documentation\/tripkit\/tkregionmanager\/savetocache(_:)","type":"method"},{"title":"static func sortedModes(in: [TKRegion]) -> [TKRegion.RoutingMode]","path":"\/documentation\/tripkit\/tkregionmanager\/sortedmodes(in:)","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkregionmanager"},{"title":"TKServer","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkserver\/response","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var headers: [String : Any]","path":"\/documentation\/tripkit\/tkserver\/response\/headers","type":"property"},{"title":"var result: Result<T, any Error>","path":"\/documentation\/tripkit\/tkserver\/response\/result","type":"property"},{"title":"var statusCode: Int?","path":"\/documentation\/tripkit\/tkserver\/response\/statuscode","type":"property"}],"title":"TKServer.Response"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkserver\/apikey","type":"property","title":"var apiKey: String"},{"path":"\/documentation\/tripkit\/tkserver\/customheaders","type":"property","title":"var customHeaders: [String : String]?"},{"path":"\/documentation\/tripkit\/tkserver\/usertoken","type":"property","title":"var userToken: String?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkserver\/getrequestwithskedgohttpheaders(for:paras:)","type":"method","title":"func GETRequestWithSkedGoHTTPHeaders(for: URL, paras: [String : Any]?) throws -> URLRequest"},{"path":"\/documentation\/tripkit\/tkserver\/baseurls(for:)","type":"method","title":"func baseURLs(for: TKRegion?) -> [URL]"},{"path":"\/documentation\/tripkit\/tkserver\/deleteuserdataandsignout()","type":"method","title":"func deleteUserDataAndSignOut() async throws"},{"path":"\/documentation\/tripkit\/tkserver\/downloaduserdata()","type":"method","title":"func downloadUserData() async throws -> Data"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:path:input:headers:region:encoderconfig:decoderconfig:)","type":"method","title":"func hit<Input, Output>(Output.Type, TKServer.HTTPMethod, path: String, input: Input, headers: [String : String]?, region: TKRegion?, encoderConfig: (JSONEncoder) -> Void, decoderConfig: (JSONDecoder) -> Void) async throws -> TKServer.Response<Output>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:path:parameters:headers:region:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?) async -> TKServer.Response<Model>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:path:parameters:headers:region:callbackonmain:completion:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?, callbackOnMain: Bool, completion: (Int, [String : Any], Result<Model, any Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:url:parameters:headers:decoderconfig:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, decoderConfig: (JSONDecoder) -> Void) async -> TKServer.Response<Model>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:_:url:parameters:headers:decoderconfig:completion:)","type":"method","title":"func hit<Model>(Model.Type, TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, decoderConfig: (JSONDecoder) -> Void, completion: (Int, [String : Any], Result<Model, any Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:path:input:headers:region:encoderconfig:)","type":"method","title":"func hit<Input>(TKServer.HTTPMethod, path: String, input: Input, headers: [String : String]?, region: TKRegion?, encoderConfig: (JSONEncoder) -> Void) async throws -> TKServer.Response<Data?>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:path:parameters:headers:region:)","type":"method","title":"func hit(TKServer.HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?) async -> TKServer.Response<Data>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:path:parameters:headers:region:callbackonmain:completion:)","type":"method","title":"func hit(TKServer.HTTPMethod, path: String, parameters: [String : Any]?, headers: [String : String]?, region: TKRegion?, callbackOnMain: Bool, completion: (Int, [String : Any], Result<Data, any Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:url:parameters:headers:)","type":"method","title":"func hit(TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?) async -> TKServer.Response<Data>"},{"path":"\/documentation\/tripkit\/tkserver\/hit(_:url:parameters:headers:completion:)","type":"method","title":"func hit(TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, headers: [String : String]?, completion: (Int, [String : Any], Result<Data, any Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkserver\/hitsync(_:url:parameters:timeout:)","type":"method","title":"func hitSync(TKServer.HTTPMethod, url: URL, parameters: [String : Any]?, timeout: DispatchTimeInterval) throws -> Data"},{"path":"\/documentation\/tripkit\/tkserver\/removeimage()","type":"method","title":"func removeImage() async -> Int?"},{"path":"\/documentation\/tripkit\/tkserver\/signin(withcloudkitid:)","type":"method","title":"func signIn(withCloudKitID: String) async throws -> String"},{"path":"\/documentation\/tripkit\/tkserver\/signin(withuuid:)","type":"method","title":"func signIn(withUUID: String) async throws -> String"},{"path":"\/documentation\/tripkit\/tkserver\/upload(imagedata:contenttype:)","type":"method","title":"func upload(imageData: Data, contentType: String) async throws"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkserver\/custombaseurl","type":"property","title":"static var customBaseURL: String?"},{"path":"\/documentation\/tripkit\/tkserver\/fallbackbaseurl","type":"property","title":"static var fallbackBaseURL: URL"},{"path":"\/documentation\/tripkit\/tkserver\/shared","type":"property","title":"static let shared: TKServer"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tkserver\/imageurl(iconfilenamepart:icontype:)","type":"method","title":"static func imageURL(iconFileNamePart: String?, iconType: TKStyleModeIconType?) -> URL?"},{"path":"\/documentation\/tripkit\/tkserver\/xtripgoversion()","type":"method","title":"static func xTripGoVersion() -> String?"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/delete","title":"case DELETE","type":"case"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/get","title":"case GET","type":"case"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/post","title":"case POST","type":"case"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/put","title":"case PUT","type":"case"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"path":"\/documentation\/tripkit\/tkserver\/httpmethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkserver\/httpmethod\/hash(into:)"}]}],"title":"TKServer.HTTPMethod"},{"path":"\/documentation\/tripkit\/tkserver\/repeathandler","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case repeatIn(TimeInterval)","path":"\/documentation\/tripkit\/tkserver\/repeathandler\/repeatin(_:)"},{"type":"case","title":"case repeatWithNewParameters(TimeInterval, [String : Any])","path":"\/documentation\/tripkit\/tkserver\/repeathandler\/repeatwithnewparameters(_:_:)"}],"title":"TKServer.RepeatHandler"},{"path":"\/documentation\/tripkit\/tkserver\/requesterror","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkserver\/requesterror\/invalidurl","title":"case invalidURL","type":"case"},{"path":"\/documentation\/tripkit\/tkserver\/requesterror\/nobaseurls","title":"case noBaseURLs","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkserver\/requesterror\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkserver\/requesterror\/!=(_:_:)","type":"op"}],"type":"symbol"},{"path":"\/documentation\/tripkit\/tkserver\/requesterror\/error-implementations","title":"Error Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/tripkit\/tkserver\/requesterror\/localizeddescription"}],"type":"symbol"}],"title":"TKServer.RequestError"},{"path":"\/documentation\/tripkit\/tkserver\/servererror","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case noData","path":"\/documentation\/tripkit\/tkserver\/servererror\/nodata","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkserver\/servererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkserver\/servererror\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/tripkit\/tkserver\/servererror\/localizeddescription"}],"title":"Error Implementations","path":"\/documentation\/tripkit\/tkserver\/servererror\/error-implementations","type":"symbol"}],"title":"TKServer.ServerError"}],"type":"class","path":"\/documentation\/tripkit\/tkserver"},{"title":"TKSettings","children":[{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkit\/tksettings\/config-swift.typealias","title":"TKSettings.Config","type":"typealias"},{"path":"\/documentation\/tripkit\/tksettings\/speed","title":"TKSettings.Speed","type":"typealias"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tksettings\/config-swift.type.property","title":"static var config: [String : Any]","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/cyclingspeed","title":"static var cyclingSpeed: TKAPIConfig.Speed","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/disabledsharedvehiclemodes","title":"class var disabledSharedVehicleModes: [Data]","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/dislikedtransitmodes","title":"static var dislikedTransitModes: Set<String>","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/hiddenmodeidentifiers","title":"static var hiddenModeIdentifiers: Set<String>","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/hiddenmodespickedmanually","title":"static var hiddenModesPickedManually: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/includecosttoreturncarhirevehicle","title":"static var includeCostToReturnCarHireVehicle: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/maximumwalkingduration","title":"static var maximumWalkingDuration: TimeInterval?","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/minimumtransferminutes","title":"static var minimumTransferMinutes: Double?","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/minimumtransfertime","title":"static var minimumTransferTime: TimeInterval?","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/notificationtimetoleaveheadway","title":"static var notificationTimeToLeaveHeadway: Int","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/parserjsonversion","title":"static var parserJsonVersion: Int","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/showwheelchairinformation","title":"class var showWheelchairInformation: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/sortorder","title":"static var sortOrder: TKTripCostType","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/transportemissions","title":"class var transportEmissions: [String : Double]","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/useconcessionpricing","title":"class var useConcessionPricing: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tksettings\/walkingspeed","title":"static var walkingSpeed: TKAPIConfig.Speed","type":"property"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tksettings\/clearemissions()","title":"class func clearEmissions()","type":"method"},{"path":"\/documentation\/tripkit\/tksettings\/enabledmodeidentifiers(_:)","title":"static func enabledModeIdentifiers([String]) -> Set<String>","type":"method"},{"path":"\/documentation\/tripkit\/tksettings\/modeidentifierishidden(_:)","title":"static func modeIdentifierIsHidden(String) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tksettings\/orderedenabledmodeidentifiersforavailablemodeidentifiers(_:)","title":"static func orderedEnabledModeIdentifiersForAvailableModeIdentifiers([String]) -> [String]","type":"method"},{"path":"\/documentation\/tripkit\/tksettings\/setemissions(gramsco2perkm:modeidentifier:)","title":"class func setEmissions(gramsCO2PerKm: Double, modeIdentifier: String)","type":"method"},{"path":"\/documentation\/tripkit\/tksettings\/setmodeidentifier(_:tohidden:)","title":"static func setModeIdentifier(String, toHidden: Bool)","type":"method"},{"path":"\/documentation\/tripkit\/tksettings\/settransitmode(_:asdisliked:)","title":"static func setTransitMode(String, asDisliked: Bool)","type":"method"},{"path":"\/documentation\/tripkit\/tksettings\/update(pickedmodes:allmodes:)","title":"class func update(pickedModes: Set<TKModeInfo>, allModes: Set<TKModeInfo>)","type":"method"},{"path":"\/documentation\/tripkit\/tksettings\/updatetransportmodeswithenabledorder(_:hidden:)","title":"static func updateTransportModesWithEnabledOrder([String]?, hidden: Set<String>?)","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/bookingsusesandbox","type":"case","title":"case bookingsUseSandbox"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/concessionpricing","type":"case","title":"case concessionPricing"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/cyclingspeed","type":"case","title":"case cyclingSpeed"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/disabled","type":"case","title":"case disabled"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/disliked","type":"case","title":"case disliked"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/hidden","type":"case","title":"case hidden"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/includecosttoreturncarhirevehicle","type":"case","title":"case includeCostToReturnCarHireVehicle"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/maximumwalkduration","type":"case","title":"case maximumWalkDuration"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/minimumtransfertime","type":"case","title":"case minimumTransferTime"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/onwheelchair","type":"case","title":"case onWheelchair"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/sortindex","type":"case","title":"case sortIndex"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/sortedenabled","type":"case","title":"case sortedEnabled"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/timetoleaveheadway","type":"case","title":"case timeToLeaveHeadway"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/transportemissions","type":"case","title":"case transportEmissions"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/walkingspeed","type":"case","title":"case walkingSpeed"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/!=(_:_:)"}],"title":"Equatable Implementations"},{"path":"\/documentation\/tripkit\/tksettings\/defaultskey\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tksettings\/defaultskey\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"path":"\/documentation\/tripkit\/tksettings\/defaultskey","title":"TKSettings.DefaultsKey","type":"enum"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tksettings\/weight\/carbon","title":"case carbon"},{"type":"case","path":"\/documentation\/tripkit\/tksettings\/weight\/exercise","title":"case exercise"},{"type":"case","path":"\/documentation\/tripkit\/tksettings\/weight\/hassle","title":"case hassle"},{"type":"case","path":"\/documentation\/tripkit\/tksettings\/weight\/money","title":"case money"},{"type":"case","path":"\/documentation\/tripkit\/tksettings\/weight\/time","title":"case time"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tksettings\/weight\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tksettings\/weight\/defaultskey","title":"var defaultsKey: String"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksettings\/weight\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tksettings\/weight\/equatable-implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tksettings\/weight\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tksettings\/weight\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkit\/tksettings\/weight","title":"TKSettings.Weight","type":"enum"},{"type":"groupMarker","title":"Type Subscripts"},{"path":"\/documentation\/tripkit\/tksettings\/subscript(_:)","title":"static subscript(TKSettings.Weight) -> Double","type":"subscript"}],"type":"class","path":"\/documentation\/tripkit\/tksettings"},{"title":"Trip Planning","type":"groupMarker"},{"title":"TKRouter","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(config: TKAPIConfig)","path":"\/documentation\/tripkit\/tkrouter\/init(config:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var config: TKAPIConfig","path":"\/documentation\/tripkit\/tkrouter\/config"},{"type":"property","title":"var failOnAnyError: Bool","path":"\/documentation\/tripkit\/tkrouter\/failonanyerror"},{"type":"property","title":"var finishedWorkers: UInt","path":"\/documentation\/tripkit\/tkrouter\/finishedworkers"},{"type":"property","title":"var isActive: Bool","path":"\/documentation\/tripkit\/tkrouter\/isactive"},{"type":"property","title":"var lastWorkerError: (any Error)?","path":"\/documentation\/tripkit\/tkrouter\/lastworkererror"},{"type":"property","title":"var modeIdentifiers: Set<String>","path":"\/documentation\/tripkit\/tkrouter\/modeidentifiers"},{"type":"property","title":"var server: TKServer?","path":"\/documentation\/tripkit\/tkrouter\/server"},{"type":"property","title":"var workerQueue: DispatchQueue?","path":"\/documentation\/tripkit\/tkrouter\/workerqueue"},{"path":"\/documentation\/tripkit\/tkrouter\/workers","title":"var workers: [Set<String> : TKRouter]","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkrouter\/cancelrequests()","title":"func cancelRequests()","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/cancelrequestsworker()","title":"func cancelRequestsWorker()","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/fetchbesttrip(for:completion:)","title":"func fetchBestTrip(for: TKRouterRequestable, completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/fetchtrips(for:additional:visibility:callbackqueue:completion:)","title":"func fetchTrips(for: TripRequest, additional: Set<URLQueryItem>?, visibility: TripGroup.Visibility, callbackQueue: DispatchQueue, completion: (Result<Void, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/fetchtrips(for:completion:)","title":"func fetchTrips(for: TKRoutingQuery<NSManagedObjectContext>, completion: (Result<TripRequest, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/multifetchtrips(for:classifier:)","title":"func multiFetchTrips(for: TKRoutingQuery<NSManagedObjectContext>, classifier: TKTripClassifier?) async throws -> TripRequest","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/multifetchtrips(for:classifier:progress:completion:)","title":"func multiFetchTrips(for: TKRoutingQuery<NSManagedObjectContext>, classifier: TKTripClassifier?, progress: ((UInt) -> Void)?, completion: (Result<TripRequest, Error>) -> Void) -> UInt","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/multifetchtrips(for:modes:classifier:progress:completion:)","title":"func multiFetchTrips(for: TripRequest, modes: Set<String>?, classifier: TKTripClassifier?, progress: ((UInt) -> Void)?, completion: (Result<Void, Error>) -> Void) -> UInt","type":"method"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkrouter\/defaultparameters","title":"static var defaultParameters: [URLQueryItem]?","type":"property"},{"path":"\/documentation\/tripkit\/tkrouter\/modestogroupinrequest","title":"static var modesToGroupInRequest: [String]?","type":"property"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tkrouter\/fetchtripsresponse(for:modeidentifiers:bestonly:additional:config:server:)","title":"static func fetchTripsResponse<C>(for: TKRoutingQuery<C>, modeIdentifiers: Set<String>?, bestOnly: Bool, additional: Set<URLQueryItem>?, config: TKAPIConfig, server: TKServer?) async throws -> TKAPI.RoutingResponse","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/multifetchtripresponses(request:config:server:)","title":"static func multiFetchTripResponses<C>(request: TKRoutingQuery<C>, config: TKAPIConfig, server: TKServer?) async throws -> [TKAPI.RoutingResponse]","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/requestparameters(for:modeidentifiers:additional:config:bestonly:includeaddress:)","title":"static func requestParameters(for: TKRouterRequestable, modeIdentifiers: Set<String>?, additional: Set<URLQueryItem>?, config: TKAPIConfig?, bestOnly: Bool, includeAddress: Bool) -> [String : Any]","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/requestparameters(request:modeidentifiers:additional:config:bestonly:includeaddress:)","title":"static func requestParameters<C>(request: TKRoutingQuery<C>, modeIdentifiers: Set<String>?, additional: Set<URLQueryItem>?, config: TKAPIConfig, bestOnly: Bool, includeAddress: Bool) -> [String : Any]","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/routingrequesturl(for:modes:includeaddress:)","title":"static func routingRequestURL(for: TKRouterRequestable, modes: Set<String>?, includeAddress: Bool) -> String?","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/routingrequesturl(request:modes:includeaddress:config:)","title":"static func routingRequestURL<C>(request: TKRoutingQuery<C>, modes: Set<String>?, includeAddress: Bool, config: TKAPIConfig) -> String?","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/urlrequest(for:modes:includeaddress:)","title":"static func urlRequest(for: TKRouterRequestable, modes: Set<String>?, includeAddress: Bool) throws -> URLRequest","type":"method"},{"path":"\/documentation\/tripkit\/tkrouter\/urlrequest(request:modes:includeaddress:config:)","title":"static func urlRequest<C>(request: TKRoutingQuery<C>, modes: Set<String>?, includeAddress: Bool, config: TKAPIConfig) throws -> URLRequest","type":"method"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkrouter\/routingerror","title":"TKRouter.RoutingError","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/endlocationnotdetermined","title":"case endLocationNotDetermined"},{"type":"case","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/invalidrequest(_:)","title":"case invalidRequest(String)"},{"type":"case","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/notripfound","title":"case noTripFound"},{"type":"case","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/routingnotsupported","title":"case routingNotSupported"},{"type":"case","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/startlocationnotdetermined","title":"case startLocationNotDetermined"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/localizeddescription"}],"title":"Error Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/localizederror-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/errordescription","title":"var errorDescription: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/failurereason","title":"var failureReason: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/helpanchor","title":"var helpAnchor: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkrouter\/routingerror\/recoverysuggestion","title":"var recoverySuggestion: String?"}],"title":"LocalizedError Implementations"}]}],"type":"class","path":"\/documentation\/tripkit\/tkrouter"},{"title":"TKRealTimeFetcher","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func update(Set<DLSEntry>, in: TKRegion, completion: (Result<Set<DLSEntry>, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkrealtimefetcher\/update(_:in:completion:)-4e3mv"},{"title":"static func update(Set<Service>, in: TKRegion, completion: (Result<Set<Service>, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkrealtimefetcher\/update(_:in:completion:)-5827n"},{"title":"static func update(Set<StopVisits>, in: TKRegion, completion: (Result<Set<StopVisits>, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkrealtimefetcher\/update(_:in:completion:)-629lg"}],"type":"class","path":"\/documentation\/tripkit\/tkrealtimefetcher"},{"title":"TKWaypointRouter","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkwaypointrouter\/input\/init(from:)","type":"init"}],"path":"\/documentation\/tripkit\/tkwaypointrouter\/input","title":"TKWaypointRouter.Input","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/decodable-implementations","title":"Decodable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/init(from:)","title":"init(from: Decoder) throws","type":"init"}]},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/encodable-implementations","title":"Encodable Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/encode(to:)"}]},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkwaypointrouter\/segment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}],"path":"\/documentation\/tripkit\/tkwaypointrouter\/segment","title":"TKWaypointRouter.Segment","type":"struct"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchnexttrip(after:usingprivatevehicles:completion:)","title":"static func fetchNextTrip(after: Trip, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(addingstopover:to:usingprivatevehicles:)","title":"static func fetchTrip(addingStopOver: CLLocationCoordinate2D, to: Trip, usingPrivateVehicles: [TKVehicular]) async throws -> Trip","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(addingstopover:to:usingprivatevehicles:completion:)","title":"static func fetchTrip(addingStopOver: CLLocationCoordinate2D, to: Trip, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(bymoving:to:usingprivatevehicles:completion:)","title":"static func fetchTrip(byMoving: TKSegment, to: TKModeCoordinate, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(input:region:into:completion:)","title":"static func fetchTrip(input: TKWaypointRouter.Input, region: TKRegion?, into: NSManagedObjectContext, completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(moving:to:atstart:usingprivatevehicles:completion:)","title":"static func fetchTrip(moving: TKSegment, to: StopVisits, atStart: Bool, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(pattern:departure:usingprivatevehicles:into:in:completion:)","title":"static func fetchTrip(pattern: [TKSegmentPattern], departure: Date, usingPrivateVehicles: [TKVehicular], into: NSManagedObjectContext, in: TKRegion, completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/fetchtrip(replacing:with:usingprivatevehicles:completion:)","title":"static func fetchTrip(replacing: TKSegment, with: DLSEntry, usingPrivateVehicles: [TKVehicular], completion: (Result<Trip, Error>) -> Void)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case builderIsMissingRequiredInput(String)","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/builderismissingrequiredinput(_:)","type":"case"},{"title":"case cannotMoveToFrequencyBasedVisit","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/cannotmovetofrequencybasedvisit","type":"case"},{"title":"case couldNotFindRegionForTrip","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/couldnotfindregionfortrip","type":"case"},{"title":"case fetchedResultsButGotNoTrip","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/fetchedresultsbutgotnotrip","type":"case"},{"title":"case segmentNotEligible","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/segmentnoteligible","type":"case"},{"title":"case serverFailedWithUnknownError","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/serverfailedwithunknownerror","type":"case"},{"title":"case timetabledVisitIsMissingTimes","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/timetabledvisitismissingtimes","type":"case"},{"title":"case tripGotDisassociatedFromCoreData","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/tripgotdisassociatedfromcoredata","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"type":"symbol"}],"path":"\/documentation\/tripkit\/tkwaypointrouter\/waypointerror","title":"TKWaypointRouter.WaypointError","type":"enum"}],"type":"enum","path":"\/documentation\/tripkit\/tkwaypointrouter"},{"title":"TKTripClassifier","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func classification(of: TripGroup) -> String?","path":"\/documentation\/tripkit\/tktripclassifier\/classification(of:)","type":"method"},{"title":"func prepareForClassification(of: Set<TripGroup>)","path":"\/documentation\/tripkit\/tktripclassifier\/prepareforclassification(of:)","type":"method"}],"type":"protocol","path":"\/documentation\/tripkit\/tktripclassifier"},{"title":"TKMetricClassifier","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification(for:)","title":"static func classification(for: TripGroup) -> Classification?"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cheapest","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/cheapest","type":"case"},{"title":"case easiest","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/easiest","type":"case"},{"title":"case fastest","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/fastest","type":"case"},{"title":"case greenest","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/greenest","type":"case"},{"title":"case healthiest","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/healthiest","type":"case"},{"title":"case recommended","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/recommended","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkmetricclassifier\/classification\/hash(into:)","title":"func hash(into: inout Hasher)"}],"type":"symbol"}],"path":"\/documentation\/tripkit\/tkmetricclassifier\/classification","title":"TKMetricClassifier.Classification"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmetricclassifier\/classification(of:)","title":"func classification(of: TripGroup) -> String?","type":"method"},{"path":"\/documentation\/tripkit\/tkmetricclassifier\/prepareforclassification(of:)","title":"func prepareForClassification(of: Set<TripGroup>)","type":"method"}],"path":"\/documentation\/tripkit\/tkmetricclassifier\/tktripclassifier-implementations","title":"TKTripClassifier Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkmetricclassifier"},{"title":"Search & Geocoding","type":"groupMarker"},{"title":"TKAppleGeocoder","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","path":"\/documentation\/tripkit\/tkapplegeocoder\/init()","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var pointsOfInterestsToExclude: [MKPointOfInterestCategory]","path":"\/documentation\/tripkit\/tkapplegeocoder\/pointsofintereststoexclude","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKAutocompleting Implementations","path":"\/documentation\/tripkit\/tkapplegeocoder\/tkautocompleting-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","path":"\/documentation\/tripkit\/tkapplegeocoder\/allowlocationinfobutton","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","path":"\/documentation\/tripkit\/tkapplegeocoder\/additionalactiontitle()","type":"method"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","path":"\/documentation\/tripkit\/tkapplegeocoder\/annotation(for:completion:)","type":"method"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","path":"\/documentation\/tripkit\/tkapplegeocoder\/autocomplete(_:near:completion:)","type":"method"},{"title":"func cancelAutocompletion()","path":"\/documentation\/tripkit\/tkapplegeocoder\/cancelautocompletion()","type":"method"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","path":"\/documentation\/tripkit\/tkapplegeocoder\/triggeradditional(presenter:completion:)","type":"method"}],"type":"symbol"},{"title":"TKGeocoding Implementations","path":"\/documentation\/tripkit\/tkapplegeocoder\/tkgeocoding-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func geocode(TKGeocodable, near: MKMapRect) async throws","path":"\/documentation\/tripkit\/tkapplegeocoder\/geocode(_:near:)-36d9o"},{"type":"method","title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tkapplegeocoder\/geocode(_:near:)-6pan9"},{"type":"method","title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","path":"\/documentation\/tripkit\/tkapplegeocoder\/geocode(_:near:completion:)"}],"type":"symbol"}],"type":"class","path":"\/documentation\/tripkit\/tkapplegeocoder"},{"title":"TKCalendarManager","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var eventStore: EKEventStore","path":"\/documentation\/tripkit\/tkcalendarmanager\/eventstore"},{"type":"property","title":"var openSettingsHandler: (() -> Void)?","path":"\/documentation\/tripkit\/tkcalendarmanager\/opensettingshandler"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func fetchEvents(matching: String) -> [EKEvent]","path":"\/documentation\/tripkit\/tkcalendarmanager\/fetchevents(matching:)"},{"type":"method","title":"func fetchEvents(start: Date, end: Date, from: [EKCalendar]?) -> [EKEvent]","path":"\/documentation\/tripkit\/tkcalendarmanager\/fetchevents(start:end:from:)"},{"type":"method","title":"func fetchUpcomingEvents(from: [EKCalendar]?) -> [EKEvent]","path":"\/documentation\/tripkit\/tkcalendarmanager\/fetchupcomingevents(from:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: TKCalendarManager","path":"\/documentation\/tripkit\/tkcalendarmanager\/shared"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func title(for: EKEvent) -> String","path":"\/documentation\/tripkit\/tkcalendarmanager\/title(for:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"TKAutocompleting Implementations","path":"\/documentation\/tripkit\/tkcalendarmanager\/tkautocompleting-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var allowLocationInfoButton: Bool","path":"\/documentation\/tripkit\/tkcalendarmanager\/allowlocationinfobutton"},{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func additionalActionTitle() -> String?","path":"\/documentation\/tripkit\/tkcalendarmanager\/additionalactiontitle()"},{"type":"method","title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","path":"\/documentation\/tripkit\/tkcalendarmanager\/annotation(for:completion:)"},{"type":"method","title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","path":"\/documentation\/tripkit\/tkcalendarmanager\/autocomplete(_:near:completion:)"},{"type":"method","title":"func cancelAutocompletion()","path":"\/documentation\/tripkit\/tkcalendarmanager\/cancelautocompletion()"},{"type":"method","title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","path":"\/documentation\/tripkit\/tkcalendarmanager\/triggeradditional(presenter:completion:)"}]},{"type":"symbol","title":"TKPermissionManager Implementations","path":"\/documentation\/tripkit\/tkcalendarmanager\/tkpermissionmanager-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/authorizationalerttext","title":"var authorizationAlertText: String","type":"property"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/authorizationrestrictionsapply","title":"var authorizationRestrictionsApply: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/authorizationstatus","title":"var authorizationStatus: TKAuthorizationStatus","type":"property"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/featureisavailable","title":"var featureIsAvailable: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/isauthorized","title":"var isAuthorized: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/askforpermission(_:)","title":"func askForPermission((Bool) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/showauthorizationalert(sender:in:)","title":"func showAuthorizationAlert(sender: Any?, in: UIViewController)","type":"method"},{"path":"\/documentation\/tripkit\/tkcalendarmanager\/tryauthorization(sender:in:completion:)","title":"func tryAuthorization(sender: Any?, in: UIViewController, completion: (Bool) -> Void)","type":"method"}]}],"type":"class","path":"\/documentation\/tripkit\/tkcalendarmanager"},{"title":"TKContactsManager","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress","title":"TKContactsManager.ContactAddress","type":"struct","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/address","title":"let address: String","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/image","title":"let image: TKImage?","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/kind","title":"let kind: AddressKind?","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/postaladdress","title":"let postalAddress: CNPostalAddress","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/contactaddress\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/authorizationalerttext","title":"var authorizationAlertText: String","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/authorizationstatus","title":"var authorizationStatus: TKAuthorizationStatus","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/opensettingshandler","title":"var openSettingsHandler: (() -> Void)?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/askforpermission(_:)","title":"func askForPermission((Bool) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/fetchcontacts(searchstring:kind:)","title":"func fetchContacts(searchString: String, kind: AddressKind?) throws -> [ContactAddress]","type":"method"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/fetchmylocations(limitto:)","title":"func fetchMyLocations(limitTo: AddressKind?) throws -> [ContactAddress]","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/shared","title":"static let shared: TKContactsManager","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind","title":"TKContactsManager.AddressKind","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case home","path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/home","type":"case"},{"title":"case work","path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/work","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(label: String?)","path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/init(label:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkcontactsmanager\/addresskind\/equatable-implementations","type":"symbol"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/tkautocompleting-implementations","title":"TKAutocompleting Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","type":"property","path":"\/documentation\/tripkit\/tkcontactsmanager\/allowlocationinfobutton"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/additionalactiontitle()"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/annotation(for:completion:)"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/autocomplete(_:near:completion:)"},{"title":"func cancelAutocompletion()","type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/cancelautocompletion()"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkcontactsmanager\/triggeradditional(presenter:completion:)"}]},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/tkgeocoding-implementations","title":"TKGeocoding Implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tkcontactsmanager\/geocode(_:near:)-1gso4","type":"method"},{"title":"func geocode(TKGeocodable, near: MKMapRect) async throws","path":"\/documentation\/tripkit\/tkcontactsmanager\/geocode(_:near:)-jkx","type":"method"},{"title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","path":"\/documentation\/tripkit\/tkcontactsmanager\/geocode(_:near:completion:)","type":"method"}]},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/tkpermissionmanager-implementations","title":"TKPermissionManager Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/authorizationrestrictionsapply","title":"var authorizationRestrictionsApply: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/featureisavailable","title":"var featureIsAvailable: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/isauthorized","title":"var isAuthorized: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/showauthorizationalert(sender:in:)","title":"func showAuthorizationAlert(sender: Any?, in: UIViewController)","type":"method"},{"path":"\/documentation\/tripkit\/tkcontactsmanager\/tryauthorization(sender:in:completion:)","title":"func tryAuthorization(sender: Any?, in: UIViewController, completion: (Bool) -> Void)","type":"method"}]}],"type":"class","path":"\/documentation\/tripkit\/tkcontactsmanager"},{"title":"TKPeliasGeocoder","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/init()"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKAutocompleting Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/tkautocompleting-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","type":"property","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/allowlocationinfobutton"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","type":"method","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/additionalactiontitle()"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/annotation(for:completion:)"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/autocomplete(_:near:completion:)"},{"title":"func cancelAutocompletion()","type":"method","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/cancelautocompletion()"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/triggeradditional(presenter:completion:)"}]},{"title":"TKGeocoding Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkpeliasgeocoder\/tkgeocoding-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkpeliasgeocoder\/geocode(_:near:)-4s43e","type":"method","title":"func geocode(TKGeocodable, near: MKMapRect) async throws"},{"path":"\/documentation\/tripkit\/tkpeliasgeocoder\/geocode(_:near:)-5k4tv","type":"method","title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]"},{"path":"\/documentation\/tripkit\/tkpeliasgeocoder\/geocode(_:near:completion:)","type":"method","title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)"}]}],"type":"class","path":"\/documentation\/tripkit\/tkpeliasgeocoder"},{"title":"TKRegionAutocompleter","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/tripkit\/tkregionautocompleter\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","type":"property","path":"\/documentation\/tripkit\/tkregionautocompleter\/allowlocationinfobutton"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkregionautocompleter\/annotation(for:completion:)"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkregionautocompleter\/autocomplete(_:near:completion:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKAutocompleting Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkregionautocompleter\/additionalactiontitle()","title":"func additionalActionTitle() -> String?","type":"method"},{"path":"\/documentation\/tripkit\/tkregionautocompleter\/cancelautocompletion()","title":"func cancelAutocompletion()","type":"method"},{"path":"\/documentation\/tripkit\/tkregionautocompleter\/triggeradditional(presenter:completion:)","title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkit\/tkregionautocompleter\/tkautocompleting-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkregionautocompleter"},{"title":"TKRouteAutocompleter","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkrouteautocompleter\/init()","type":"init","title":"init()"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkrouteautocompleter\/allowlocationinfobutton","type":"property","title":"let allowLocationInfoButton: Bool"},{"path":"\/documentation\/tripkit\/tkrouteautocompleter\/modes","type":"property","title":"var modes: [String]"},{"path":"\/documentation\/tripkit\/tkrouteautocompleter\/operatorid","type":"property","title":"var operatorID: String?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkrouteautocompleter\/annotation(for:completion:)","type":"method","title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tkrouteautocompleter\/autocomplete(_:near:completion:)","type":"method","title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","path":"\/documentation\/tripkit\/tkrouteautocompleter\/additionalactiontitle()","type":"method"},{"title":"func cancelAutocompletion()","path":"\/documentation\/tripkit\/tkrouteautocompleter\/cancelautocompletion()","type":"method"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","path":"\/documentation\/tripkit\/tkrouteautocompleter\/triggeradditional(presenter:completion:)","type":"method"}],"path":"\/documentation\/tripkit\/tkrouteautocompleter\/tkautocompleting-implementations","type":"symbol","title":"TKAutocompleting Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkrouteautocompleter"},{"title":"TKTripGoGeocoder","children":[{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tktripgogeocoder\/tkautocompleting-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/allowlocationinfobutton","type":"property","title":"var allowLocationInfoButton: Bool"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/additionalactiontitle()","type":"method","title":"func additionalActionTitle() -> String?"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/annotation(for:completion:)","type":"method","title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/autocomplete(_:near:completion:)","type":"method","title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/cancelautocompletion()","type":"method","title":"func cancelAutocompletion()"},{"path":"\/documentation\/tripkit\/tktripgogeocoder\/triggeradditional(presenter:completion:)","type":"method","title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)"}],"title":"TKAutocompleting Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tktripgogeocoder\/tkgeocoding-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func geocode(TKGeocodable, near: MKMapRect) async throws","path":"\/documentation\/tripkit\/tktripgogeocoder\/geocode(_:near:)-7sqbk","type":"method"},{"title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tktripgogeocoder\/geocode(_:near:)-7xmxy","type":"method"},{"title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","path":"\/documentation\/tripkit\/tktripgogeocoder\/geocode(_:near:completion:)","type":"method"}],"title":"TKGeocoding Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tktripgogeocoder"},{"title":"TKAggregateGeocoder","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(geocoders: [TKGeocoding])","type":"init","path":"\/documentation\/tripkit\/tkaggregategeocoder\/init(geocoders:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let geocoders: [TKGeocoding]","type":"property","path":"\/documentation\/tripkit\/tkaggregategeocoder\/geocoders"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkaggregategeocoder\/geocode(_:near:)-32f5l","type":"method","title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]"},{"path":"\/documentation\/tripkit\/tkaggregategeocoder\/geocode(_:near:)-37icq","type":"method","title":"func geocode(TKGeocodable, near: MKMapRect) async throws"},{"path":"\/documentation\/tripkit\/tkaggregategeocoder\/geocode(_:near:completion:)","type":"method","title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)"}],"title":"TKGeocoding Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkaggregategeocoder\/tkgeocoding-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkaggregategeocoder"},{"title":"Data Providers","type":"groupMarker"},{"title":"TKBuzzInfoProvider","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/alertstransitresponse\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alerts: [TKAPI.AlertMapping]","path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/alertstransitresponse\/alerts","type":"property"}],"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/alertstransitresponse","title":"TKBuzzInfoProvider.AlertsTransitResponse","type":"struct"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/addcontent(from:to:)","title":"static func addContent(from: TKAPI.ServiceResponse, to: Service) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/downloadcontent(of:embarkationdate:region:completion:)","title":"static func downloadContent(of: Service, embarkationDate: Date, region: TKRegion?, completion: (Service, Bool) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchlocationinformation(_:for:)-4of3y","title":"static func fetchLocationInformation(CLLocationCoordinate2D, for: TKRegion) async throws -> TKAPI.LocationInfo","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchlocationinformation(_:for:)-6wihz","title":"static func fetchLocationInformation(MKAnnotation, for: TKRegion) async throws -> TKAPI.LocationInfo","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchlocationinformation(locationid:for:)","title":"static func fetchLocationInformation(locationID: String, for: TKRegion) async throws -> TKAPI.LocationInfo","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchparatransitinformation(for:)","title":"static func fetchParatransitInformation(for: TKRegion) async -> TKAPI.Paratransit?","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchparatransitinformation(forregion:)","title":"static func fetchParatransitInformation(forRegion: TKRegion) async -> TKAPI.Paratransit?","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchpublictransportmodes(for:)","title":"static func fetchPublicTransportModes(for: TKRegion) async -> [TKModeInfo]?","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchpublictransportmodes(forregion:)","title":"static func fetchPublicTransportModes(forRegion: TKRegion) async throws -> [TKModeInfo]?","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchregioninformation(for:)","title":"static func fetchRegionInformation(for: TKRegion) async -> TKAPI.RegionInfo?","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchregioninformation(forregion:)","title":"static func fetchRegionInformation(forRegion: TKRegion) async -> TKAPI.RegionInfo?","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchroutedetails(routeid:operatorid:region:)","title":"static func fetchRouteDetails(routeID: String, operatorID: String, region: TKRegion) async throws -> TKAPI.Route","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchroutes(forregion:query:modes:operatorid:)","title":"static func fetchRoutes(forRegion: TKRegion, query: String?, modes: [String], operatorID: String?) async throws -> [TKAPI.Route]","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchtransitalerts(for:)","title":"static func fetchTransitAlerts(for: TKRegion) async throws -> [TKAPI.AlertMapping]","type":"method"},{"path":"\/documentation\/tripkit\/tkbuzzinfoprovider\/fetchtransitalerts(forregion:)","title":"static func fetchTransitAlerts(forRegion: TKRegion) async throws -> [TKAPI.AlertMapping]","type":"method"}],"type":"enum","path":"\/documentation\/tripkit\/tkbuzzinfoprovider"},{"title":"TKDeparturesProvider","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/init(from:)"},{"type":"init","title":"init(operatorID: String, routeID: String?, directionID: String?)","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/init(operatorid:routeid:directionid:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let directionID: String?","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/directionid"},{"type":"property","title":"let operatorID: String","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/operatorid"},{"type":"property","title":"let routeID: String?","path":"\/documentation\/tripkit\/tkdeparturesprovider\/filter\/routeid"}],"title":"TKDeparturesProvider.Filter"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/adddepartures(_:into:)","type":"method","title":"static func addDepartures(TKAPI.Departures, into: NSManagedObjectContext) -> Set<String>"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/adddepartures(_:to:)","type":"method","title":"static func addDepartures(TKAPI.Departures, to: [StopLocation]) -> Bool"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/downloaddepartures(for:fromdate:filters:limit:)","type":"method","title":"static func downloadDepartures(for: [StopLocation], fromDate: Date, filters: [Filter], limit: Int) async throws -> Bool"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/downloaddepartures(for:fromdate:limit:)","type":"method","title":"static func downloadDepartures(for: TKDLSTable, fromDate: Date, limit: Int) async throws -> Set<String>"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/fetchdepartures(for:fromdate:limit:)","type":"method","title":"static func fetchDepartures(for: TKDLSTable, fromDate: Date, limit: Int) async throws -> TKAPI.Departures"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/fetchdepartures(stopcodes:fromdate:filters:limit:in:)","type":"method","title":"static func fetchDepartures(stopCodes: [String], fromDate: Date, filters: [Filter], limit: Int, in: TKRegion) async throws -> TKAPI.Departures"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/queryparameters(for:fromdate:limit:)","type":"method","title":"static func queryParameters(for: TKDLSTable, fromDate: Date, limit: Int) -> [String : Any]"},{"type":"groupMarker","title":"Enumerations"},{"title":"TKDeparturesProvider.InputError","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case emptyField(String)","path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror\/emptyfield(_:)","type":"case"},{"title":"case missingField(String)","path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror\/missingfield(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror\/localizeddescription","type":"property","title":"var localizedDescription: String"}],"title":"Error Implementations","path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror\/error-implementations","type":"symbol"}],"type":"enum","path":"\/documentation\/tripkit\/tkdeparturesprovider\/inputerror"},{"title":"TKDeparturesProvider.OutputError","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case couldNotFetchRegions","type":"case","path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/couldnotfetchregions"},{"title":"case stopSinceDeleted","type":"case","path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/stopsincedeleted"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/localizeddescription","type":"property"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror\/error-implementations"}],"type":"enum","path":"\/documentation\/tripkit\/tkdeparturesprovider\/outputerror"}],"type":"class","path":"\/documentation\/tripkit\/tkdeparturesprovider"},{"title":"Classes","type":"groupMarker"},{"title":"Alert","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var action: NSDictionary?","type":"property","path":"\/documentation\/tripkit\/alert\/action"},{"title":"var alertSeverity: TKAlertSeverity","type":"property","path":"\/documentation\/tripkit\/alert\/alertseverity"},{"title":"var endTime: Date?","type":"property","path":"\/documentation\/tripkit\/alert\/endtime"},{"title":"var hashCode: Int32","type":"property","path":"\/documentation\/tripkit\/alert\/hashcode"},{"title":"var idService: String?","type":"property","path":"\/documentation\/tripkit\/alert\/idservice"},{"title":"var idStopCode: String?","type":"property","path":"\/documentation\/tripkit\/alert\/idstopcode"},{"title":"var imageURL: URL?","type":"property","path":"\/documentation\/tripkit\/alert\/imageurl"},{"title":"var infoIconType: TKInfoIconType","type":"property","path":"\/documentation\/tripkit\/alert\/infoicontype"},{"title":"var location: TKNamedCoordinate?","type":"property","path":"\/documentation\/tripkit\/alert\/location"},{"title":"var remoteIcon: String?","type":"property","path":"\/documentation\/tripkit\/alert\/remoteicon"},{"title":"var severity: Int16","type":"property","path":"\/documentation\/tripkit\/alert\/severity"},{"title":"var startTime: Date?","type":"property","path":"\/documentation\/tripkit\/alert\/starttime"},{"title":"var stopsExcludedFromRouting: [String]","type":"property","path":"\/documentation\/tripkit\/alert\/stopsexcludedfromrouting"},{"title":"var text: String?","type":"property","path":"\/documentation\/tripkit\/alert\/text"},{"title":"var url: String?","type":"property","path":"\/documentation\/tripkit\/alert\/url"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func fetch(hashCode: NSNumber, in: NSManagedObjectContext) -> Alert?","type":"method","path":"\/documentation\/tripkit\/alert\/fetch(hashcode:in:)"},{"title":"class func fetchRequest() -> NSFetchRequest<Alert>","type":"method","path":"\/documentation\/tripkit\/alert\/fetchrequest()"},{"title":"Enumerations","type":"groupMarker"},{"title":"Alert.ActionTypeIdentifier","type":"enum","path":"\/documentation\/tripkit\/alert\/actiontypeidentifier"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","type":"method","path":"\/documentation\/tripkit\/alert\/tk_valid(geocoder:)"}],"title":"MKAnnotation Implementations","type":"symbol","path":"\/documentation\/tripkit\/alert\/mkannotation-implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/alert\/tk_valid(geocoder:)"}],"title":"MKAnnotation Implementations","type":"symbol","path":"\/documentation\/tripkit\/alert\/mkannotation-implementations"}],"type":"class","path":"\/documentation\/tripkit\/alert"},{"title":"DLSEntry","children":[{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var arrivalPlatform: String?","path":"\/documentation\/tripkit\/dlsentry\/arrivalplatform"},{"type":"property","title":"var endPlatform: String?","path":"\/documentation\/tripkit\/dlsentry\/endplatform"},{"type":"property","title":"var endStop: StopLocation","path":"\/documentation\/tripkit\/dlsentry\/endstop"},{"type":"property","title":"var timetableEndPlatform: String?","path":"\/documentation\/tripkit\/dlsentry\/timetableendplatform"},{"type":"property","title":"var wantsRealTimeUpdates: Bool","path":"\/documentation\/tripkit\/dlsentry\/wantsrealtimeupdates"},{"title":"Type Methods","type":"groupMarker"},{"type":"method","title":"static func clearAllEntries(in: NSManagedObjectContext)","path":"\/documentation\/tripkit\/dlsentry\/clearallentries(in:)"},{"type":"method","title":"static func departuresPredicate(pairs: Set<String>, from: Date, filter: String) -> NSPredicate","path":"\/documentation\/tripkit\/dlsentry\/departurespredicate(pairs:from:filter:)"},{"type":"method","title":"static func fetchDLSEntries(pairs: Set<String>, from: Date, limit: Int, in: NSManagedObjectContext) -> [DLSEntry]","path":"\/documentation\/tripkit\/dlsentry\/fetchdlsentries(pairs:from:limit:in:)"},{"type":"method","title":"class func fetchRequest() -> NSFetchRequest<DLSEntry>","path":"\/documentation\/tripkit\/dlsentry\/fetchrequest()"}],"type":"class","path":"\/documentation\/tripkit\/dlsentry"},{"title":"Loc","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var ActionGo: String","path":"\/documentation\/tripkit\/loc\/actiongo"},{"type":"property","title":"static var ActionStart: String","path":"\/documentation\/tripkit\/loc\/actionstart"},{"type":"property","title":"static var Alert: String","path":"\/documentation\/tripkit\/loc\/alert"},{"type":"property","title":"static var AlertMe: String","path":"\/documentation\/tripkit\/loc\/alertme"},{"type":"property","title":"static var Alerts: String","path":"\/documentation\/tripkit\/loc\/alerts"},{"type":"property","title":"static var AllDay: String","path":"\/documentation\/tripkit\/loc\/allday"},{"type":"property","title":"static var AlreadyHaveAnAccount: String","path":"\/documentation\/tripkit\/loc\/alreadyhaveanaccount"},{"type":"property","title":"static var Alternatives: String","path":"\/documentation\/tripkit\/loc\/alternatives"},{"type":"property","title":"static var AppleMaps: String","path":"\/documentation\/tripkit\/loc\/applemaps"},{"type":"property","title":"static var ArriveBy: String","path":"\/documentation\/tripkit\/loc\/arriveby"},{"path":"\/documentation\/tripkit\/loc\/attempttochangepasswordwithoutemailverified","title":"static var AttemptToChangePasswordWithoutEmailVerified: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/authorizationneeded","title":"static var AuthorizationNeeded: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/authorizationneededdescription","title":"static var AuthorizationNeededDescription: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/back","title":"static var Back: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/badgecheapest","title":"static var BadgeCheapest: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/badgeeasiest","title":"static var BadgeEasiest: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/badgefastest","title":"static var BadgeFastest: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/badgegreenest","title":"static var BadgeGreenest: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/badgehealthiest","title":"static var BadgeHealthiest: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/badgerecommended","title":"static var BadgeRecommended: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/bicycleaccessible","title":"static var BicycleAccessible: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/book","title":"static var Book: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/call","title":"static var Call: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/cancel","title":"static var Cancel: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/cancelled","title":"static var Cancelled: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/change","title":"static var Change: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/changeroute","title":"static var ChangeRoute: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/checkmark","title":"static var Checkmark: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/close","title":"static var Close: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/collapse","title":"static var Collapse: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/confirm","title":"static var Confirm: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/confirmpassword","title":"static var ConfirmPassword: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/contactsupport","title":"static var ContactSupport: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/contactsauthorizationalerttext","title":"static var ContactsAuthorizationAlertText: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/couldnotfetchcurrentlocationrecovery","title":"static var CouldNotFetchCurrentLocationRecovery: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/couldnotfetchcurrentlocationtitle","title":"static var CouldNotFetchCurrentLocationTitle: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/currentlocation","title":"static var CurrentLocation: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/customizehome","title":"static var CustomizeHome: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/dataerror","title":"static var DataError: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/dataproviders","title":"static var DataProviders: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/datetimeselectionabove","title":"static var DateTimeSelectionAbove: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/datetimeselectionbelow","title":"static var DateTimeSelectionBelow: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/delete","title":"static var Delete: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/direction","title":"static var Direction: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/disabled","title":"static var Disabled: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/disconnect","title":"static var Disconnect: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/dismiss","title":"static var Dismiss: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/dismount","title":"static var Dismount: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/distance","title":"static var Distance: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/done","title":"static var Done: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/donthaveanaccount","title":"static var DontHaveAnAccount: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/editaccount","title":"static var EditAccount: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/enabled","title":"static var Enabled: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/endhere","title":"static var EndHere: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/endlocation","title":"static var EndLocation: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/enternewpassword","title":"static var EnterNewPassword: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/error","title":"static var Error: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/examplemail","title":"static var ExampleMail: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/expand","title":"static var Expand: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/extendbooking","title":"static var ExtendBooking: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/failedtosend","title":"static var FailedToSend: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/firstname","title":"static var FirstName: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/forwhentoleave","title":"static var ForWhenToLeave: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/forgotpassword","title":"static var ForgotPassword: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/friendlypath","title":"static var FriendlyPath: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/getapp","title":"static var GetApp: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/getdirections","title":"static var GetDirections: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/getreadytoleave","title":"static var GetReadyToLeave: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/googlemaps","title":"static var GoogleMaps: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/instantresults","title":"static var InstantResults: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/invalidcredentials","title":"static var InvalidCredentials: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/johnappleseed","title":"static var JohnAppleseed: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/lastname","title":"static var LastName: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/later","title":"static var Later: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/leaveat","title":"static var LeaveAt: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/leavenow","title":"static var LeaveNow: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/less","title":"static var Less: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/livetraffic","title":"static var LiveTraffic: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/loadingdotdotdot","title":"static var LoadingDotDotDot: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/localizationpermissionsmissing","title":"static var LocalizationPermissionsMissing: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/location","title":"static var Location: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/mail","title":"static var Mail: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/minutesbeforetrip","title":"static var MinutesBeforeTrip: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/missingusertoken","title":"static var MissingUserToken: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/more","title":"static var More: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/moreresults","title":"static var MoreResults: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/mute","title":"static var Mute: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/name","title":"static var Name: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/nearme","title":"static var NearMe: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/never","title":"static var Never: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/next","title":"static var Next: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/norealtimeavailable","title":"static var NoRealTimeAvailable: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/noroutesfound","title":"static var NoRoutesFound: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/now","title":"static var Now: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/ok","title":"static var OK: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/ontime","title":"static var OnTime: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/onewayonly","title":"static var OneWayOnly: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/openapp","title":"static var OpenApp: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/openindotdotdot","title":"static var OpenInDotDotDot: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/openinsafari","title":"static var OpenInSafari: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/opensettings","title":"static var OpenSettings: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/openinghours","title":"static var OpeningHours: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/optionalreferralcode","title":"static var OptionalReferralCode: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/password","title":"static var Password: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/passwordisempty","title":"static var PasswordIsEmpty: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/passwordresetinstructionsentbyemail","title":"static var PasswordResetInstructionSentByEmail: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/phone","title":"static var Phone: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/pickerdatetitle","title":"static var PickerDateTitle: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/pickertimetitle","title":"static var PickerTimeTitle: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/plananewtrip","title":"static var PlanANewTrip: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/plantrip","title":"static var PlanTrip: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/pleaseentercurrentpasswordforyoursecurity","title":"static var PleaseEnterCurrentPasswordForYourSecurity: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/pleaseenteryourregisteredemailtoresetpassword","title":"static var PleaseEnterYourRegisteredEmailToResetPassword: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/pleaseselectalocation","title":"static var PleaseSelectALocation: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/pleaseverifythelocation","title":"static var PleaseVerifyTheLocation: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/poweredby","title":"static var PoweredBy: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/primaryemailnotset","title":"static var PrimaryEmailNotSet: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/publicholiday","title":"static var PublicHoliday: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/realtime","title":"static var RealTime: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/reminder","title":"static var Reminder: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/reportproblem","title":"static var ReportProblem: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/requestsupport","title":"static var RequestSupport: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/resetpassword","title":"static var ResetPassword: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/responsecontainsnodata","title":"static var ResponseContainsNoData: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/retry","title":"static var Retry: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/route","title":"static var Route: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/routingbetweentheselocationsisnotyetsupported","title":"static var RoutingBetweenTheseLocationsIsNotYetSupported: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/scheduled","title":"static var Scheduled: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/score","title":"static var Score: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/search","title":"static var Search: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/searchfordestination","title":"static var SearchForDestination: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/searchresults","title":"static var SearchResults: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/securepasswordareatleastfivecharaterslongandincludenumbersandsymbols","title":"static var SecurePasswordAreAtLeastFiveCharatersLongAndIncludeNumbersAndSymbols: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/select","title":"static var Select: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/selectreturndate","title":"static var SelectReturnDate: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/selecttime","title":"static var SelectTime: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/sendsms","title":"static var SendSMS: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/sent","title":"static var Sent: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/servererror","title":"static var ServerError: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/service","title":"static var Service: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/servicehasbeenchancelled","title":"static var ServiceHasBeenChancelled: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/settime","title":"static var SetTime: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/setup","title":"static var Setup: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/showtimetable","title":"static var ShowTimetable: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/showwebsite","title":"static var ShowWebsite: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/signin","title":"static var SignIn: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/signout","title":"static var SignOut: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/signup","title":"static var SignUp: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/starthere","title":"static var StartHere: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/startlocation","title":"static var StartLocation: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/taptochangestartandendlocations","title":"static var TapToChangeStartAndEndLocations: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/taptolearnlocationinfo","title":"static var TapToLearnLocationInfo: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/taptoselectaddress","title":"static var TapToSelectAddress: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/taptoselectcurrentlocation","title":"static var TapToSelectCurrentLocation: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/taptosetlocation","title":"static var TapToSetLocation: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/timetable","title":"static var Timetable: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/transport","title":"static var Transport: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/trip","title":"static var Trip: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/tripnotifications","title":"static var TripNotifications: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/tripnotificationsarrivingatstop","title":"static var TripNotificationsArrivingAtStop: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/tripnotificationsnextstop","title":"static var TripNotificationsNextStop: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/tripnotificationssubtitle","title":"static var TripNotificationsSubtitle: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/tripnotificationstripend","title":"static var TripNotificationsTripEnd: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/tripnotificationstripstart","title":"static var TripNotificationsTripStart: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/tripnotificationsvehicleapproaching","title":"static var TripNotificationsVehicleApproaching: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/trips","title":"static var Trips: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/unfriendlypath","title":"static var UnfriendlyPath: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/unknown","title":"static var Unknown: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/unlock","title":"static var Unlock: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/update","title":"static var Update: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/updatingtrip","title":"static var UpdatingTrip: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicle","title":"static var Vehicle: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicletypebicycle","title":"static var VehicleTypeBicycle: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicletypecar","title":"static var VehicleTypeCar: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicletypeebike","title":"static var VehicleTypeEBike: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicletypekickscooter","title":"static var VehicleTypeKickScooter: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicletypemotoscooter","title":"static var VehicleTypeMotoScooter: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicletypemotorbike","title":"static var VehicleTypeMotorbike: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicletypesuv","title":"static var VehicleTypeSUV: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/vehicles","title":"static var Vehicles: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/verify","title":"static var Verify: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/verifypassword","title":"static var VerifyPassword: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/wewillkeepyouupdated","title":"static var WeWillKeepYouUpdated: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/what3wordsaddress","title":"static var What3wordsAddress: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/wheelchairaccessibilityunknown","title":"static var WheelchairAccessibilityUnknown: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/wheelchairaccessible","title":"static var WheelchairAccessible: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/wheelchairnotaccessible","title":"static var WheelchairNotAccessible: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/wouldyouliketoreportaproblem","title":"static var WouldYouLikeToReportAProblem: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/youmightnotmakethistransfer","title":"static var YouMightNotMakeThisTransfer: String","type":"property"},{"path":"\/documentation\/tripkit\/loc\/resendverificationemail","title":"static var resendVerificationEmail: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/loc\/add(location:)","title":"static func Add(location: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/ago(duration:)","title":"static func Ago(duration: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/alerts(_:)","title":"static func Alerts(Int) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/alongstreet(named:)","title":"static func AlongStreet(named: String?) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/arriveatlocation(_:at:)","title":"static func ArriveAtLocation(String?, at: String?) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/arrivenearlocation(_:)","title":"static func ArriveNearLocation(String?) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/arrives(attime:capitalize:)","title":"static func Arrives(atTime: String, capitalize: Bool) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/at(time:)","title":"static func At(time: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/at(what:time:)","title":"static func At(what: String, time: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/bookwith(service:)","title":"static func BookWith(service: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/call(service:)","title":"static func Call(service: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/confirmopen(appname:)","title":"static func ConfirmOpen(appName: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/dataprovided(by:)","title":"static func DataProvided(by: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/departs(attime:capitalize:)","title":"static func Departs(atTime: String, capitalize: Bool) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/durationwithouttraffic(_:)","title":"static func DurationWithoutTraffic(String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/earlyservice(minutes:service:)","title":"static func EarlyService(minutes: Int, service: String?) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/every(daystring:)","title":"static func Every(dayString: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/every(prefix:repetition:)","title":"static func Every(prefix: String?, repetition: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/from(date:)","title":"static func From(date: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/from(location:)","title":"static func From(location: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/get(appname:)","title":"static func Get(appName: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/getonservice(to:)","title":"static func GetOnService(To: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/in(duration:)","title":"static func In(duration: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/inthemeantimekeepexploring(appname:)","title":"static func InTheMeantimeKeepExploring(appName: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/lastupdated(date:)","title":"static func LastUpdated(date: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/lateservice(minutes:service:)","title":"static func LateService(minutes: Int, service: String?) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/leavefromlocation(_:at:)","title":"static func LeaveFromLocation(String?, at: String?) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/leavenearlocation(_:)","title":"static func LeaveNearLocation(String?) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/mapby(_:)","title":"static func MapBy(String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/more(count:)","title":"static func More(count: Int) -> String?","type":"method"},{"path":"\/documentation\/tripkit\/loc\/morelocationinfo(_:)","title":"static func MoreLocationInfo(String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/open(appname:)","title":"static func Open(appName: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/percentcyclefriendly(_:)","title":"static func PercentCycleFriendly(String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/percentwheelchairfriendly(_:)","title":"static func PercentWheelchairFriendly(String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/personshome(name:)","title":"static func PersonsHome(name: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/personsplace(name:)","title":"static func PersonsPlace(name: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/personswork(name:)","title":"static func PersonsWork(name: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/poweredby(_:)","title":"static func PoweredBy(String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/recurrences(_:)","title":"static func Recurrences(Int) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/routingfrom(_:toisnotyetsupported:)","title":"static func RoutingFrom(String, toIsNotYetSupported: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/searchingfor(_:)","title":"static func SearchingFor(String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/showing(_:oftransportmodes:)","title":"static func Showing(Int, ofTransportModes: Int) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/somethingat(time:)","title":"static func SomethingAt(time: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/somethingfor(duration:)","title":"static func SomethingFor(duration: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/stops(_:)","title":"static func Stops(Int) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/timetoleave(destination:time:)","title":"static func TimeToLeave(destination: String?, time: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/to(date:)","title":"static func To(date: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/to(location:)","title":"static func To(location: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/trip(index:)","title":"static func Trip(index: Int?) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/updatedago(duration:)","title":"static func UpdatedAgo(duration: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/loc\/fromtime(_:totime:)","title":"static func fromTime(String, toTime: String) -> String","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/loc"},{"title":"ObjcTripKit","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var tripKitContext: NSManagedObjectContext","path":"\/documentation\/tripkit\/objctripkit\/tripkitcontext","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: ObjcTripKit","path":"\/documentation\/tripkit\/objctripkit\/shared","type":"property"}],"type":"class","path":"\/documentation\/tripkit\/objctripkit"},{"title":"Service","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var bicycleAccessibility: TKBicycleAccessibility","path":"\/documentation\/tripkit\/service\/bicycleaccessibility","type":"property"},{"title":"var code: String","path":"\/documentation\/tripkit\/service\/code","type":"property"},{"title":"var color: TKColor?","path":"\/documentation\/tripkit\/service\/color","type":"property"},{"title":"var continuation: Service?","path":"\/documentation\/tripkit\/service\/continuation","type":"property"},{"title":"var direction: String?","path":"\/documentation\/tripkit\/service\/direction","type":"property"},{"title":"var frequency: NSNumber?","path":"\/documentation\/tripkit\/service\/frequency","type":"property"},{"title":"var hasServiceData: Bool","path":"\/documentation\/tripkit\/service\/hasservicedata","type":"property"},{"title":"var isBicycleAccessible: Bool","path":"\/documentation\/tripkit\/service\/isbicycleaccessible","type":"property"},{"title":"var isCanceled: Bool","path":"\/documentation\/tripkit\/service\/iscanceled","type":"property"},{"title":"var isFrequencyBased: Bool","path":"\/documentation\/tripkit\/service\/isfrequencybased","type":"property"},{"title":"var isRealTime: Bool","path":"\/documentation\/tripkit\/service\/isrealtime","type":"property"},{"title":"var isRealTimeCapable: Bool","path":"\/documentation\/tripkit\/service\/isrealtimecapable","type":"property"},{"title":"var lineName: String?","path":"\/documentation\/tripkit\/service\/linename","type":"property"},{"title":"var modeImageIsTemplate: Bool","path":"\/documentation\/tripkit\/service\/modeimageistemplate","type":"property"},{"title":"var modeInfo: TKModeInfo?","path":"\/documentation\/tripkit\/service\/modeinfo","type":"property"},{"title":"var modeTitle: String?","path":"\/documentation\/tripkit\/service\/modetitle","type":"property"},{"title":"var name: String?","path":"\/documentation\/tripkit\/service\/name","type":"property"},{"title":"var number: String?","path":"\/documentation\/tripkit\/service\/number","type":"property"},{"title":"var operatorID: String?","path":"\/documentation\/tripkit\/service\/operatorid","type":"property"},{"title":"var operatorName: String?","path":"\/documentation\/tripkit\/service\/operatorname","type":"property"},{"title":"var progenitor: Service?","path":"\/documentation\/tripkit\/service\/progenitor","type":"property"},{"title":"var region: TKRegion?","path":"\/documentation\/tripkit\/service\/region","type":"property"},{"title":"var shape: Shape?","path":"\/documentation\/tripkit\/service\/shape","type":"property"},{"title":"var shortIdentifier: String?","path":"\/documentation\/tripkit\/service\/shortidentifier","type":"property"},{"title":"var sortedVisits: [StopVisits]","path":"\/documentation\/tripkit\/service\/sortedvisits","type":"property"},{"title":"var title: String","path":"\/documentation\/tripkit\/service\/title","type":"property"},{"title":"var vehicle: Vehicle?","path":"\/documentation\/tripkit\/service\/vehicle","type":"property"},{"title":"var vehicleAlternatives: Set<Vehicle>?","path":"\/documentation\/tripkit\/service\/vehiclealternatives","type":"property"},{"title":"var visits: Set<StopVisits>?","path":"\/documentation\/tripkit\/service\/visits","type":"property"},{"title":"var wheelchairAccessibility: TKWheelchairAccessibility","path":"\/documentation\/tripkit\/service\/wheelchairaccessibility","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func allAlerts() -> [Alert]","path":"\/documentation\/tripkit\/service\/allalerts()","type":"method"},{"title":"func findModeInfo() -> TKModeInfo?","path":"\/documentation\/tripkit\/service\/findmodeinfo()","type":"method"},{"title":"func modeImage(for: TKStyleModeIconType) -> TKImage?","path":"\/documentation\/tripkit\/service\/modeimage(for:)","type":"method"},{"title":"func modeImageURL(for: TKStyleModeIconType) -> URL?","path":"\/documentation\/tripkit\/service\/modeimageurl(for:)","type":"method"},{"title":"func shapes(embarkation: StopVisits?, disembarkation: StopVisits?) -> [TKDisplayableRoute]","path":"\/documentation\/tripkit\/service\/shapes(embarkation:disembarkation:)","type":"method"},{"title":"func visit(for: String) -> StopVisits?","path":"\/documentation\/tripkit\/service\/visit(for:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func fetchOrInsert(code: String, in: NSManagedObjectContext) -> Service","path":"\/documentation\/tripkit\/service\/fetchorinsert(code:in:)","type":"method"},{"title":"class func fetchRequest() -> NSFetchRequest<Service>","path":"\/documentation\/tripkit\/service\/fetchrequest()","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKRealTimeUpdatable Implementations","path":"\/documentation\/tripkit\/service\/tkrealtimeupdatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var wantsRealTimeUpdates: Bool","path":"\/documentation\/tripkit\/service\/wantsrealtimeupdates"}]}],"type":"class","path":"\/documentation\/tripkit\/service"},{"title":"Shape","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/shape\/cyclingnetwork","type":"property","title":"var cyclingNetwork: String?"},{"path":"\/documentation\/tripkit\/shape\/encodedwaypoints","type":"property","title":"var encodedWaypoints: String?"},{"path":"\/documentation\/tripkit\/shape\/end","type":"property","title":"var end: MKAnnotation?"},{"path":"\/documentation\/tripkit\/shape\/friendliness","type":"property","title":"var friendliness: TKPathFriendliness"},{"path":"\/documentation\/tripkit\/shape\/index","type":"property","title":"var index: Int16"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.property","type":"property","title":"var instruction: Instruction?"},{"path":"\/documentation\/tripkit\/shape\/isdismount","type":"property","title":"var isDismount: Bool"},{"path":"\/documentation\/tripkit\/shape\/ishop","type":"property","title":"var isHop: Bool"},{"path":"\/documentation\/tripkit\/shape\/issafe","type":"property","title":"var isSafe: Bool?"},{"path":"\/documentation\/tripkit\/shape\/metres","type":"property","title":"var metres: NSNumber?"},{"path":"\/documentation\/tripkit\/shape\/roadtags","type":"property","title":"var roadTags: [TKAPI.RoadTag]?"},{"path":"\/documentation\/tripkit\/shape\/segment","type":"property","title":"var segment: TKSegment?"},{"path":"\/documentation\/tripkit\/shape\/services","type":"property","title":"var services: Set<Service>?"},{"path":"\/documentation\/tripkit\/shape\/sortedcoordinates","type":"property","title":"var sortedCoordinates: [TKNamedCoordinate]?"},{"path":"\/documentation\/tripkit\/shape\/start","type":"property","title":"var start: MKAnnotation?"},{"path":"\/documentation\/tripkit\/shape\/title","type":"property","title":"var title: String?"},{"path":"\/documentation\/tripkit\/shape\/travelled","type":"property","title":"var travelled: Bool"},{"path":"\/documentation\/tripkit\/shape\/visits","type":"property","title":"var visits: Set<StopVisits>?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/shape\/didturnintofault()","type":"method","title":"func didTurnIntoFault()"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/shape\/fetchrequest()","type":"method","title":"class func fetchRequest() -> NSFetchRequest<Shape>"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/shape\/instruction-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"type":"case","title":"case continueStraight","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/continuestraight"},{"type":"case","title":"case headTowards","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/headtowards"},{"type":"case","title":"case turnLeft","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnleft"},{"type":"case","title":"case turnRight","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnright"},{"type":"case","title":"case turnSharplyLeft","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnsharplyleft"},{"type":"case","title":"case turnSharplyRight","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnsharplyright"},{"type":"case","title":"case turnSlightlyRight","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnslightlyright"},{"type":"case","title":"case turnSlightyLeft","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/turnslightyleft"},{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init?(rawValue: Int16)","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/equatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/shape\/instruction-swift.enum\/rawrepresentable-implementations"}],"title":"Shape.Instruction"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/shape\/tkdisplayableroute-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/shape\/routecolor","title":"var routeColor: TKColor?"},{"type":"property","path":"\/documentation\/tripkit\/shape\/routedashpattern","title":"var routeDashPattern: [NSNumber]?"},{"type":"property","path":"\/documentation\/tripkit\/shape\/routeistravelled","title":"var routeIsTravelled: Bool"},{"type":"property","path":"\/documentation\/tripkit\/shape\/routepath","title":"var routePath: [Any]"},{"type":"property","path":"\/documentation\/tripkit\/shape\/selectionidentifier","title":"var selectionIdentifier: String?"}],"title":"TKDisplayableRoute Implementations"}],"type":"class","path":"\/documentation\/tripkit\/shape"},{"title":"StopLocation","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var alertHashCodes: Array<NSNumber>?","path":"\/documentation\/tripkit\/stoplocation\/alerthashcodes","type":"property"},{"title":"var children: Set<StopLocation>?","path":"\/documentation\/tripkit\/stoplocation\/children","type":"property"},{"title":"var endVisits: Set<StopVisits>?","path":"\/documentation\/tripkit\/stoplocation\/endvisits","type":"property"},{"title":"var filter: String?","path":"\/documentation\/tripkit\/stoplocation\/filter","type":"property"},{"title":"var location: TKNamedCoordinate?","path":"\/documentation\/tripkit\/stoplocation\/location","type":"property"},{"title":"var modeTitle: String","path":"\/documentation\/tripkit\/stoplocation\/modetitle","type":"property"},{"title":"var name: String?","path":"\/documentation\/tripkit\/stoplocation\/name","type":"property"},{"title":"var parent: StopLocation?","path":"\/documentation\/tripkit\/stoplocation\/parent","type":"property"},{"title":"var region: TKRegion?","path":"\/documentation\/tripkit\/stoplocation\/region","type":"property"},{"title":"var regionName: String?","path":"\/documentation\/tripkit\/stoplocation\/regionname","type":"property"},{"title":"var shortName: String?","path":"\/documentation\/tripkit\/stoplocation\/shortname","type":"property"},{"title":"var sortScore: NSNumber?","path":"\/documentation\/tripkit\/stoplocation\/sortscore","type":"property"},{"title":"var stopCode: String","path":"\/documentation\/tripkit\/stoplocation\/stopcode","type":"property"},{"title":"var stopModeInfo: TKModeInfo?","path":"\/documentation\/tripkit\/stoplocation\/stopmodeinfo","type":"property"},{"title":"var timeZone: TimeZone?","path":"\/documentation\/tripkit\/stoplocation\/timezone","type":"property"},{"title":"var visits: Set<StopVisits>?","path":"\/documentation\/tripkit\/stoplocation\/visits","type":"property"},{"title":"var wheelchairAccessibility: TKWheelchairAccessibility","path":"\/documentation\/tripkit\/stoplocation\/wheelchairaccessibility","type":"property"},{"title":"var wheelchairAccessible: NSNumber?","path":"\/documentation\/tripkit\/stoplocation\/wheelchairaccessible","type":"property"},{"title":"var zoneID: String?","path":"\/documentation\/tripkit\/stoplocation\/zoneid","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func clearVisits()","path":"\/documentation\/tripkit\/stoplocation\/clearvisits()","type":"method"},{"title":"func stopsToMatchTo() -> [StopLocation]","path":"\/documentation\/tripkit\/stoplocation\/stopstomatchto()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func fetchOrInsertStop(stopCode: String, modeInfo: TKModeInfo?, at: TKNamedCoordinate?, in: NSManagedObjectContext) -> StopLocation","path":"\/documentation\/tripkit\/stoplocation\/fetchorinsertstop(stopcode:modeinfo:at:in:)","type":"method"},{"title":"class func fetchRequest() -> NSFetchRequest<StopLocation>","path":"\/documentation\/tripkit\/stoplocation\/fetchrequest()","type":"method"},{"title":"static func fetchStop(stopCode: String, inRegion: String?, requireCoordinate: Bool, in: NSManagedObjectContext) -> StopLocation?","path":"\/documentation\/tripkit\/stoplocation\/fetchstop(stopcode:inregion:requirecoordinate:in:)","type":"method"},{"title":"static func insertStop(stopCode: String, modeInfo: TKModeInfo?, at: TKNamedCoordinate?, in: NSManagedObjectContext) -> StopLocation","path":"\/documentation\/tripkit\/stoplocation\/insertstop(stopcode:modeinfo:at:in:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/stoplocation\/mkannotation-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/stoplocation\/tk_valid(geocoder:)"}]},{"title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/stoplocation\/mkannotation-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/stoplocation\/tk_valid(geocoder:)","type":"method"}]},{"title":"TKURLShareable Implementations","path":"\/documentation\/tripkit\/stoplocation\/tkurlshareable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var shareURL: URL?","path":"\/documentation\/tripkit\/stoplocation\/shareurl","type":"property"}]},{"title":"UIActivityItemSource Implementations","path":"\/documentation\/tripkit\/stoplocation\/uiactivityitemsource-implementations","type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func activityViewController(UIActivityViewController, itemForActivityType: UIActivity.ActivityType?) -> Any?","path":"\/documentation\/tripkit\/stoplocation\/activityviewcontroller(_:itemforactivitytype:)","type":"method"},{"title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","path":"\/documentation\/tripkit\/stoplocation\/activityviewcontrollerplaceholderitem(_:)","type":"method"}]}],"type":"class","path":"\/documentation\/tripkit\/stoplocation"},{"title":"StopVisits","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var bearing: NSNumber?","path":"\/documentation\/tripkit\/stopvisits\/bearing"},{"type":"property","title":"var departure: Date?","path":"\/documentation\/tripkit\/stopvisits\/departure"},{"type":"property","title":"var departurePlatform: String?","path":"\/documentation\/tripkit\/stopvisits\/departureplatform"},{"type":"property","title":"var frequency: NSNumber?","path":"\/documentation\/tripkit\/stopvisits\/frequency"},{"type":"property","title":"var index: Int16","path":"\/documentation\/tripkit\/stopvisits\/index"},{"type":"property","title":"var isActive: Bool","path":"\/documentation\/tripkit\/stopvisits\/isactive"},{"type":"property","title":"var originalTime: Date?","path":"\/documentation\/tripkit\/stopvisits\/originaltime"},{"type":"property","title":"var realTimeStatus: RealTime","path":"\/documentation\/tripkit\/stopvisits\/realtimestatus"},{"type":"property","title":"var regionDay: Date?","path":"\/documentation\/tripkit\/stopvisits\/regionday"},{"type":"property","title":"var searchString: String?","path":"\/documentation\/tripkit\/stopvisits\/searchstring"},{"type":"property","title":"var service: Service!","path":"\/documentation\/tripkit\/stopvisits\/service"},{"type":"property","title":"var shapes: Set<Shape>?","path":"\/documentation\/tripkit\/stopvisits\/shapes"},{"type":"property","title":"var smsString: String?","path":"\/documentation\/tripkit\/stopvisits\/smsstring"},{"type":"property","title":"var startPlatform: String?","path":"\/documentation\/tripkit\/stopvisits\/startplatform"},{"type":"property","title":"var stop: StopLocation!","path":"\/documentation\/tripkit\/stopvisits\/stop"},{"type":"property","title":"var timeForServerRequests: Date","path":"\/documentation\/tripkit\/stopvisits\/timeforserverrequests"},{"type":"property","title":"var timeZone: TimeZone","path":"\/documentation\/tripkit\/stopvisits\/timezone"},{"type":"property","title":"var timetableStartPlatform: String?","path":"\/documentation\/tripkit\/stopvisits\/timetablestartplatform"},{"type":"property","title":"var timing: TKServiceTiming","path":"\/documentation\/tripkit\/stopvisits\/timing"},{"type":"property","title":"var wheelchairAccessibility: TKWheelchairAccessibility","path":"\/documentation\/tripkit\/stopvisits\/wheelchairaccessibility"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func accessibilityDescription(includeRealTime: Bool) -> String","path":"\/documentation\/tripkit\/stopvisits\/accessibilitydescription(includerealtime:)"},{"type":"method","title":"func realTimeInformation(withOriginalTime: Bool) -> String","path":"\/documentation\/tripkit\/stopvisits\/realtimeinformation(withoriginaltime:)"},{"type":"method","title":"func triggerRealTimeKVO()","path":"\/documentation\/tripkit\/stopvisits\/triggerrealtimekvo()"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var defaultSortDescriptors: [NSSortDescriptor]","path":"\/documentation\/tripkit\/stopvisits\/defaultsortdescriptors"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func departuresPredicate(stops: [StopLocation], from: Date, filter: String) -> NSPredicate","path":"\/documentation\/tripkit\/stopvisits\/departurespredicate(stops:from:filter:)"},{"type":"method","title":"class func fetchRequest() -> NSFetchRequest<StopVisits>","path":"\/documentation\/tripkit\/stopvisits\/fetchrequest()"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case canceled","path":"\/documentation\/tripkit\/stopvisits\/realtime\/canceled","type":"case"},{"title":"case early(minutes: Int, before: Date)","path":"\/documentation\/tripkit\/stopvisits\/realtime\/early(minutes:before:)","type":"case"},{"title":"case late(minutes: Int, after: Date)","path":"\/documentation\/tripkit\/stopvisits\/realtime\/late(minutes:after:)","type":"case"},{"title":"case notApplicable","path":"\/documentation\/tripkit\/stopvisits\/realtime\/notapplicable","type":"case"},{"title":"case notAvailable","path":"\/documentation\/tripkit\/stopvisits\/realtime\/notavailable","type":"case"},{"title":"case onTime","path":"\/documentation\/tripkit\/stopvisits\/realtime\/ontime","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/stopvisits\/realtime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/stopvisits\/realtime\/equatable-implementations","type":"symbol"}],"title":"StopVisits.RealTime","path":"\/documentation\/tripkit\/stopvisits\/realtime"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op","path":"\/documentation\/tripkit\/stopvisits\/'...(_:)-1c0i8"},{"title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op","path":"\/documentation\/tripkit\/stopvisits\/'...(_:)-8gkvw"},{"title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op","path":"\/documentation\/tripkit\/stopvisits\/'...(_:_:)"},{"title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op","path":"\/documentation\/tripkit\/stopvisits\/'.._(_:)"},{"title":"static func ..< (Self, Self) -> Range<Self>","type":"op","path":"\/documentation\/tripkit\/stopvisits\/'.._(_:_:)"},{"title":"static func < (StopVisits, StopVisits) -> Bool","type":"op","path":"\/documentation\/tripkit\/stopvisits\/_(_:_:)"},{"title":"static func > (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/stopvisits\/_(_:_:)-7kgr5"},{"title":"static func >= (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/stopvisits\/_=(_:_:)-1o0ex"},{"title":"static func <= (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/stopvisits\/_=(_:_:)-1xg3e"}],"title":"Comparable Implementations","path":"\/documentation\/tripkit\/stopvisits\/comparable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/stopvisits\/tk_valid(geocoder:)","type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation"}],"title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/stopvisits\/mkannotation-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/stopvisits\/tk_valid(geocoder:)","type":"method"}],"title":"MKAnnotation Implementations","path":"\/documentation\/tripkit\/stopvisits\/mkannotation-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/stopvisits\/wantsrealtimeupdates","type":"property","title":"var wantsRealTimeUpdates: Bool"}],"title":"TKRealTimeUpdatable Implementations","path":"\/documentation\/tripkit\/stopvisits\/tkrealtimeupdatable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/stopvisits\/shareurl","type":"property","title":"var shareURL: URL?"}],"title":"TKURLShareable Implementations","path":"\/documentation\/tripkit\/stopvisits\/tkurlshareable-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"type":"method","title":"func activityViewController(UIActivityViewController, itemForActivityType: UIActivity.ActivityType?) -> Any?","path":"\/documentation\/tripkit\/stopvisits\/activityviewcontroller(_:itemforactivitytype:)"},{"type":"method","title":"func activityViewController(UIActivityViewController, subjectForActivityType: UIActivity.ActivityType?) -> String","path":"\/documentation\/tripkit\/stopvisits\/activityviewcontroller(_:subjectforactivitytype:)"},{"type":"method","title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","path":"\/documentation\/tripkit\/stopvisits\/activityviewcontrollerplaceholderitem(_:)"}],"title":"UIActivityItemSource Implementations","path":"\/documentation\/tripkit\/stopvisits\/uiactivityitemsource-implementations"}],"type":"class","path":"\/documentation\/tripkit\/stopvisits"},{"title":"TKAPIToCoreDataConverter","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapitocoredataconverter\/updatevehicles(for:primaryvehicle:alternativevehicles:)","title":"static func updateVehicles(for: Service, primaryVehicle: [String : Any]?, alternativeVehicles: [[String : Any]]?)","type":"method"},{"path":"\/documentation\/tripkit\/tkapitocoredataconverter\/vehiclesmodel(for:)","title":"static func vehiclesModel(for: [TKVehicular]) -> [TKAPI.PrivateVehicle]","type":"method"},{"path":"\/documentation\/tripkit\/tkapitocoredataconverter\/vehiclespayload(for:)","title":"static func vehiclesPayload(for: [TKVehicular]) -> [[String : Any]]","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkapitocoredataconverter"},{"title":"TKAddressFormatter","children":[{"title":"Type Methods","type":"groupMarker"},{"type":"method","title":"static func singleLineAddress(for: CLPlacemark) -> String?","path":"\/documentation\/tripkit\/tkaddressformatter\/singlelineaddress(for:)-5oq09"},{"type":"method","title":"static func singleLineAddress(for: CNPostalAddress) -> String","path":"\/documentation\/tripkit\/tkaddressformatter\/singlelineaddress(for:)-9x7q3"}],"type":"class","path":"\/documentation\/tripkit\/tkaddressformatter"},{"title":"TKBikePodLocation","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbikepodlocation\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/tripkit\/tkbikepodlocation\/init(from:)","type":"init","title":"init(from: Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbikepodlocation\/bikepod","type":"property","title":"var bikePod: TKAPI.BikePodInfo"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkbikepodlocation\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"},{"path":"\/documentation\/tripkit\/tkbikepodlocation\/encode(with:)","type":"method","title":"func encode(with: NSCoder)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkbikepodlocation\/supportssecurecoding","type":"property","title":"class var supportsSecureCoding: Bool"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbikepodlocation\/tkdeeplinkable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var deepLink: URL?","path":"\/documentation\/tripkit\/tkbikepodlocation\/deeplink","type":"property"},{"title":"var downloadLink: URL?","path":"\/documentation\/tripkit\/tkbikepodlocation\/downloadlink","type":"property"}],"title":"TKDeepLinkable Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkbikepodlocation"},{"title":"TKCarParkLocation","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(coder: NSCoder)","path":"\/documentation\/tripkit\/tkcarparklocation\/init(coder:)"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkcarparklocation\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var carPark: TKAPI.CarParkInfo","path":"\/documentation\/tripkit\/tkcarparklocation\/carpark"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkit\/tkcarparklocation\/encode(to:)"},{"type":"method","title":"func encode(with: NSCoder)","path":"\/documentation\/tripkit\/tkcarparklocation\/encode(with:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"class var supportsSecureCoding: Bool","path":"\/documentation\/tripkit\/tkcarparklocation\/supportssecurecoding"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"TKDeepLinkable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var deepLink: URL?","path":"\/documentation\/tripkit\/tkcarparklocation\/deeplink"},{"type":"property","title":"var downloadLink: URL?","path":"\/documentation\/tripkit\/tkcarparklocation\/downloadlink"}],"path":"\/documentation\/tripkit\/tkcarparklocation\/tkdeeplinkable-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkcarparklocation"},{"title":"TKCarPodLocation","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/tripkit\/tkcarpodlocation\/init(coder:)"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkcarpodlocation\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var carPod: TKAPI.CarPodInfo","type":"property","path":"\/documentation\/tripkit\/tkcarpodlocation\/carpod"},{"title":"var supportsVehicleAvailability: Bool","type":"property","path":"\/documentation\/tripkit\/tkcarpodlocation\/supportsvehicleavailability"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkcarpodlocation\/encode(to:)"},{"title":"func encode(with: NSCoder)","type":"method","path":"\/documentation\/tripkit\/tkcarpodlocation\/encode(with:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"class var supportsSecureCoding: Bool","type":"property","path":"\/documentation\/tripkit\/tkcarpodlocation\/supportssecurecoding"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKDeepLinkable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/deeplink","title":"var deepLink: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkcarpodlocation\/downloadlink","title":"var downloadLink: URL?","type":"property"}],"path":"\/documentation\/tripkit\/tkcarpodlocation\/tkdeeplinkable-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkcarpodlocation"},{"title":"TKCarRentalLocation","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/init(from:)","type":"init","title":"init(from: Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/carrental","type":"property","title":"let carRental: TKAPI.CarRentalInfo"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/encode(with:)","type":"method","title":"func encode(with: NSCoder)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/supportssecurecoding","type":"property","title":"class var supportsSecureCoding: Bool"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkcarrentallocation\/tkdeeplinkable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkcarrentallocation\/deeplink","title":"var deepLink: URL?"},{"type":"property","path":"\/documentation\/tripkit\/tkcarrentallocation\/downloadlink","title":"var downloadLink: URL?"}],"type":"symbol","title":"TKDeepLinkable Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkcarrentallocation"},{"title":"TKCodableCache","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkcodablecache\/read(_:directory:subdirectory:)","title":"static func read(String, directory: TKFileCacheDirectory, subdirectory: String?) -> Content?"},{"type":"method","path":"\/documentation\/tripkit\/tkcodablecache\/save(_:content:directory:subdirectory:)","title":"static func save(String, content: Codable, directory: TKFileCacheDirectory, subdirectory: String?)"}],"type":"class","path":"\/documentation\/tripkit\/tkcodablecache"},{"title":"TKColoredRoute","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(path: [MKAnnotation], color: TKColor?, dashPattern: [NSNumber]?, isTravelled: Bool, identifier: String?)","type":"init","path":"\/documentation\/tripkit\/tkcoloredroute\/init(path:color:dashpattern:istravelled:identifier:)"},{"title":"init(path: [MKAnnotation], from: Int, to: Int, color: TKColor?, dashPattern: [NSNumber]?, isTravelled: Bool)","type":"init","path":"\/documentation\/tripkit\/tkcoloredroute\/init(path:from:to:color:dashpattern:istravelled:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var path: [MKAnnotation]","type":"property","path":"\/documentation\/tripkit\/tkcoloredroute\/path"},{"title":"let routeColor: TKColor?","type":"property","path":"\/documentation\/tripkit\/tkcoloredroute\/routecolor"},{"title":"let routeDashPattern: [NSNumber]?","type":"property","path":"\/documentation\/tripkit\/tkcoloredroute\/routedashpattern"},{"title":"let routeIsTravelled: Bool","type":"property","path":"\/documentation\/tripkit\/tkcoloredroute\/routeistravelled"},{"title":"let selectionIdentifier: String?","type":"property","path":"\/documentation\/tripkit\/tkcoloredroute\/selectionidentifier"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func append([MKAnnotation])","type":"method","path":"\/documentation\/tripkit\/tkcoloredroute\/append(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkcoloredroute\/routepath","title":"var routePath: [Any]"}],"title":"TKDisplayableRoute Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkcoloredroute\/tkdisplayableroute-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkcoloredroute"},{"title":"TKConsoleLogger","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkconsolelogger\/init(level:subsystem:)","type":"init","title":"init(level: TKLog.LogLevel, subsystem: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkconsolelogger\/level","type":"property","title":"let level: TKLog.LogLevel"},{"path":"\/documentation\/tripkit\/tkconsolelogger\/subsystem","type":"property","title":"let subsystem: String"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkconsolelogger\/output(_:identifier:message:)","type":"method","title":"func output(TKLog.LogLevel, identifier: String, message: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkconsolelogger\/tklogger-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func log(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkit\/tkconsolelogger\/log(_:identifier:message:)","type":"method"},{"title":"func log(identifier: String, request: TKLog.ServerRequest)","path":"\/documentation\/tripkit\/tkconsolelogger\/log(identifier:request:)","type":"method"},{"title":"func log(identifier: String, response: TKLog.ServerResponse)","path":"\/documentation\/tripkit\/tkconsolelogger\/log(identifier:response:)","type":"method"}],"type":"symbol","title":"TKLogger Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkconsolelogger"},{"title":"TKDLSTable","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkdlstable\/init(for:)","type":"init","title":"init?(for: TKSegment)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkdlstable\/endregion","type":"property","title":"let endRegion: TKRegion"},{"path":"\/documentation\/tripkit\/tkdlstable\/endstopcode","type":"property","title":"let endStopCode: String"},{"path":"\/documentation\/tripkit\/tkdlstable\/pairidentifiers","type":"property","title":"var pairIdentifiers: Set<String>?"},{"path":"\/documentation\/tripkit\/tkdlstable\/startregion","type":"property","title":"let startRegion: TKRegion"},{"path":"\/documentation\/tripkit\/tkdlstable\/startstopcode","type":"property","title":"let startStopCode: String"},{"path":"\/documentation\/tripkit\/tkdlstable\/tripkitcontext","type":"property","title":"let tripKitContext: NSManagedObjectContext"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkdlstable\/addpairidentifiers(_:)","type":"method","title":"func addPairIdentifiers(Set<String>)"}],"type":"class","path":"\/documentation\/tripkit\/tkdlstable"},{"title":"TKError","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var details: TKAPI.ServerError?","path":"\/documentation\/tripkit\/tkerror\/details","type":"property"},{"title":"var isUserError: Bool","path":"\/documentation\/tripkit\/tkerror\/isusererror","type":"property"},{"title":"var title: String?","path":"\/documentation\/tripkit\/tkerror\/title","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func error(from: Data, domain: String) -> TKError?","path":"\/documentation\/tripkit\/tkerror\/error(from:domain:)","type":"method"},{"title":"class func error(from: Data?, statusCode: Int) -> TKError?","path":"\/documentation\/tripkit\/tkerror\/error(from:statuscode:)","type":"method"},{"title":"class func error(withCode: Int, userInfo: [String : Any]?) -> TKError","path":"\/documentation\/tripkit\/tkerror\/error(withcode:userinfo:)","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkerror"},{"title":"TKFacilityLocation","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkit\/tkfacilitylocation\/init(coder:)","type":"init"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkfacilitylocation\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var facilityType: String","path":"\/documentation\/tripkit\/tkfacilitylocation\/facilitytype","type":"property"},{"title":"var primaryType: String?","path":"\/documentation\/tripkit\/tkfacilitylocation\/primarytype","type":"property"},{"title":"var secondaryType: String?","path":"\/documentation\/tripkit\/tkfacilitylocation\/secondarytype","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkit\/tkfacilitylocation\/encode(to:)","type":"method"},{"title":"func encode(with: NSCoder)","path":"\/documentation\/tripkit\/tkfacilitylocation\/encode(with:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"class var supportsSecureCoding: Bool","path":"\/documentation\/tripkit\/tkfacilitylocation\/supportssecurecoding","type":"property"}],"type":"class","path":"\/documentation\/tripkit\/tkfacilitylocation"},{"title":"TKFileCache","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func read(String, directory: TKFileCacheDirectory, subdirectory: String?) -> Data?","type":"method","path":"\/documentation\/tripkit\/tkfilecache\/read(_:directory:subdirectory:)"},{"title":"static func remove(String, directory: TKFileCacheDirectory, subdirectory: String?)","type":"method","path":"\/documentation\/tripkit\/tkfilecache\/remove(_:directory:subdirectory:)"},{"title":"static func remove(directory: TKFileCacheDirectory, subdirectory: String)","type":"method","path":"\/documentation\/tripkit\/tkfilecache\/remove(directory:subdirectory:)"},{"title":"static func save(String, data: Data, directory: TKFileCacheDirectory, subdirectory: String?)","type":"method","path":"\/documentation\/tripkit\/tkfilecache\/save(_:data:directory:subdirectory:)"}],"type":"class","path":"\/documentation\/tripkit\/tkfilecache"},{"title":"TKFreeFloatingVehicleLocation","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/init(coder:)","title":"init?(coder: NSCoder)"},{"type":"init","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/init(from:)","title":"init(from: Decoder) throws"},{"type":"init","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/init(vehicle:modeinfo:coordinate:)","title":"init(vehicle: TKAPI.SharedVehicleInfo, modeInfo: TKModeInfo, coordinate: CLLocationCoordinate2D)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/vehicle","title":"var vehicle: TKAPI.SharedVehicleInfo"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/encode(to:)","title":"func encode(to: Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/encode(with:)","title":"func encode(with: NSCoder)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/supportssecurecoding","title":"class var supportsSecureCoding: Bool"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var deepLink: URL?","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/deeplink","type":"property"},{"title":"var downloadLink: URL?","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/downloadlink","type":"property"}],"path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation\/tkdeeplinkable-implementations","title":"TKDeepLinkable Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkfreefloatingvehiclelocation"},{"title":"TKGeocoderHelper","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var preferredGeocoder: TKGeocoding","path":"\/documentation\/tripkit\/tkgeocoderhelper\/preferredgeocoder"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func errorForNoLocationFound(forInput: String) -> Error","path":"\/documentation\/tripkit\/tkgeocoderhelper\/errorfornolocationfound(forinput:)"},{"type":"method","title":"class func geocode(TKGeocodable, using: TKGeocoding, near: MKMapRect) async throws","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocode(_:using:near:)"},{"type":"method","title":"class func geocode(TKGeocodable, using: TKGeocoding, near: MKMapRect, completion: (Result<Void, Error>) -> Void)","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocode(_:using:near:completion:)"},{"type":"method","title":"class func mergedAndPruned([TKNamedCoordinate], withMaximum: Int) -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tkgeocoderhelper\/mergedandpruned(_:withmaximum:)"},{"type":"method","title":"class func pickBest(from: [MKAnnotation]) -> MKAnnotation?","path":"\/documentation\/tripkit\/tkgeocoderhelper\/pickbest(from:)"},{"type":"method","title":"class func pruned([TKAutocompletionResult], withMaximum: Int) -> [TKAutocompletionResult]","path":"\/documentation\/tripkit\/tkgeocoderhelper\/pruned(_:withmaximum:)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case missingAddress","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/missingaddress","type":"case"},{"title":"case outdatedResult","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/outdatedresult","type":"case"},{"title":"case serverFoundNoMatch(String)","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/serverfoundnomatch(_:)","type":"case"},{"title":"case unknownServerError(String)","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/unknownservererror(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror\/localizeddescription"}],"type":"symbol"}],"title":"TKGeocoderHelper.GeocodingError","path":"\/documentation\/tripkit\/tkgeocoderhelper\/geocodingerror"}],"type":"class","path":"\/documentation\/tripkit\/tkgeocoderhelper"},{"title":"TKInfoIcon","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkinfoicon\/image(for:usage:)","title":"static func image(for: TKInfoIconType, usage: TKInfoIconUsage) -> TKImage?","type":"method"},{"path":"\/documentation\/tripkit\/tkinfoicon\/imagename(for:usage:)","title":"static func imageName(for: TKInfoIconType, usage: TKInfoIconUsage) -> String?","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkinfoicon"},{"title":"TKInternationalRegion","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkinternationalregion\/init(from:)"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func contains(CLLocationCoordinate2D) -> Bool","type":"method","path":"\/documentation\/tripkit\/tkinternationalregion\/contains(_:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: TKInternationalRegion","type":"property","path":"\/documentation\/tripkit\/tkinternationalregion\/shared"}],"type":"class","path":"\/documentation\/tripkit\/tkinternationalregion"},{"title":"TKJSONCache","children":[{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func read(String, directory: TKFileCacheDirectory) -> [String : Any]?","path":"\/documentation\/tripkit\/tkjsoncache\/read(_:directory:)"},{"type":"method","title":"static func read(String, directory: TKFileCacheDirectory, subdirectory: String?) -> [String : Any]?","path":"\/documentation\/tripkit\/tkjsoncache\/read(_:directory:subdirectory:)"},{"type":"method","title":"static func save(String, dictionary: [String : Any], directory: TKFileCacheDirectory)","path":"\/documentation\/tripkit\/tkjsoncache\/save(_:dictionary:directory:)"},{"type":"method","title":"static func save(String, dictionary: [String : Any], directory: TKFileCacheDirectory, subdirectory: String?)","path":"\/documentation\/tripkit\/tkjsoncache\/save(_:dictionary:directory:subdirectory:)"}],"type":"class","path":"\/documentation\/tripkit\/tkjsoncache"},{"title":"TKLocalCost","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tklocalcost\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/accuracy","title":"let accuracy: TKLocalCostAccuracy"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/cost","title":"let cost: Double"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/currency","title":"let currency: String"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/maxcost","title":"let maxCost: Double?"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcost\/mincost","title":"let minCost: Double?"}],"type":"class","path":"\/documentation\/tripkit\/tklocalcost"},{"title":"TKLocationManager","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var currentLocation: MKAnnotation","path":"\/documentation\/tripkit\/tklocationmanager\/currentlocation"},{"type":"property","title":"var lastKnownUserLocation: CLLocation?","path":"\/documentation\/tripkit\/tklocationmanager\/lastknownuserlocation"},{"type":"property","title":"var openSettingsHandler: (() -> Void)?","path":"\/documentation\/tripkit\/tklocationmanager\/opensettingshandler"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func annotationIsCurrentLocation(MKAnnotation, orCloseEnough: Bool) -> Bool","path":"\/documentation\/tripkit\/tklocationmanager\/annotationiscurrentlocation(_:orcloseenough:)"},{"type":"method","title":"func fetch(within: TimeInterval, completion: (Result<CLLocation, Error>) -> Void)","path":"\/documentation\/tripkit\/tklocationmanager\/fetch(within:completion:)"},{"type":"method","title":"func subscribe(id: AnyHashable, onUpdate: (CLLocation) -> Void)","path":"\/documentation\/tripkit\/tklocationmanager\/subscribe(id:onupdate:)"},{"type":"method","title":"func unsubscribe(id: AnyHashable)","path":"\/documentation\/tripkit\/tklocationmanager\/unsubscribe(id:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: TKLocationManager","path":"\/documentation\/tripkit\/tklocationmanager\/shared"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKLocationManager.LocalizationError","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case authorizationDenied","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/authorizationdenied","type":"case"},{"title":"case featureNotAvailable","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/featurenotavailable","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/equatable-implementations","type":"symbol"},{"title":"Error Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/localizeddescription","title":"var localizedDescription: String"}],"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/error-implementations","type":"symbol"},{"title":"LocalizedError Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/errordescription","type":"property","title":"var errorDescription: String?"},{"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/failurereason","type":"property","title":"var failureReason: String?"},{"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/helpanchor","type":"property","title":"var helpAnchor: String?"},{"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/recoverysuggestion","type":"property","title":"var recoverySuggestion: String?"}],"path":"\/documentation\/tripkit\/tklocationmanager\/localizationerror\/localizederror-implementations","type":"symbol"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"CLLocationManagerDelegate Implementations","path":"\/documentation\/tripkit\/tklocationmanager\/cllocationmanagerdelegate-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func locationManager(CLLocationManager, didChangeAuthorization: CLAuthorizationStatus)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/locationmanager(_:didchangeauthorization:)"},{"title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/locationmanager(_:didupdatelocations:)"},{"title":"func locationManagerDidChangeAuthorization(CLLocationManager)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/locationmanagerdidchangeauthorization(_:)"}]},{"type":"symbol","title":"TKPermissionManager Implementations","path":"\/documentation\/tripkit\/tklocationmanager\/tkpermissionmanager-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var authorizationAlertText: String","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/authorizationalerttext"},{"title":"var authorizationRestrictionsApply: Bool","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/authorizationrestrictionsapply"},{"title":"var authorizationStatus: TKAuthorizationStatus","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/authorizationstatus"},{"title":"var featureIsAvailable: Bool","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/featureisavailable"},{"title":"var isAuthorized: Bool","type":"property","path":"\/documentation\/tripkit\/tklocationmanager\/isauthorized"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func askForPermission((Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/askforpermission(_:)"},{"title":"func showAuthorizationAlert(sender: Any?, in: UIViewController)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/showauthorizationalert(sender:in:)"},{"title":"func tryAuthorization(sender: Any?, in: UIViewController, completion: (Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tklocationmanager\/tryauthorization(sender:in:completion:)"}]}],"type":"class","path":"\/documentation\/tripkit\/tklocationmanager"},{"title":"TKLog","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tklog\/serverrequest","type":"struct","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tklog\/serverrequest\/==(_:_:)","title":"static func == (TKLog.ServerRequest, TKLog.ServerRequest) -> Bool"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tklog\/serverrequest\/id","title":"let id: String"},{"type":"property","path":"\/documentation\/tripkit\/tklog\/serverrequest\/request","title":"let request: URLRequest"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tklog\/serverrequest\/hash(into:)","title":"func hash(into: inout Hasher)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tklog\/serverrequest\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tklog\/serverrequest\/!=(_:_:)"}],"title":"Equatable Implementations"}],"title":"TKLog.ServerRequest"},{"path":"\/documentation\/tripkit\/tklog\/serverresponse","type":"struct","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tklog\/serverresponse\/==(_:_:)","title":"static func == (TKLog.ServerResponse, TKLog.ServerResponse) -> Bool"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tklog\/serverresponse\/request","title":"let request: TKLog.ServerRequest"},{"type":"property","path":"\/documentation\/tripkit\/tklog\/serverresponse\/result","title":"let result: TKLog.ServerResult"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tklog\/serverresponse\/hash(into:)","title":"func hash(into: inout Hasher)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tklog\/serverresponse\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tklog\/serverresponse\/equatable-implementations","title":"Equatable Implementations"}],"title":"TKLog.ServerResponse"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkit\/tklog\/serverresult","type":"typealias","title":"TKLog.ServerResult"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tklog\/loggers","type":"property","title":"static var loggers: [any TKLogger]"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tklog\/debug(_:text:)","type":"method","title":"class func debug(String, text: @autoclosure () -> String)"},{"path":"\/documentation\/tripkit\/tklog\/debug(identifier:_:file:)","type":"method","title":"class func debug(identifier: String?, @autoclosure () -> String, file: StaticString)"},{"path":"\/documentation\/tripkit\/tklog\/error(_:text:)","type":"method","title":"class func error(String, text: String)"},{"title":"class func error(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkit\/tklog\/error(identifier:_:file:)","type":"method"},{"title":"class func format(response: URLResponse, data: Data?, for: TKLog.ServerRequest, detailed: Bool) -> String","path":"\/documentation\/tripkit\/tklog\/format(response:data:for:detailed:)","type":"method"},{"title":"class func formatForVCCode(request: TKLog.ServerRequest) -> String","path":"\/documentation\/tripkit\/tklog\/formatforvccode(request:)","type":"method"},{"title":"class func info(String, text: @autoclosure () -> String)","path":"\/documentation\/tripkit\/tklog\/info(_:text:)","type":"method"},{"title":"class func info(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkit\/tklog\/info(identifier:_:file:)","type":"method"},{"title":"class func log(String, request: URLRequest, uuid: UUID)","path":"\/documentation\/tripkit\/tklog\/log(_:request:uuid:)","type":"method"},{"title":"class func log(String, response: URLResponse?, data: Data?, orError: (any Error)?, for: URLRequest, uuid: UUID)","path":"\/documentation\/tripkit\/tklog\/log(_:response:data:orerror:for:uuid:)","type":"method"},{"title":"class func verbose(String, text: @autoclosure () -> String)","path":"\/documentation\/tripkit\/tklog\/verbose(_:text:)","type":"method"},{"title":"class func verbose(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkit\/tklog\/verbose(identifier:_:file:)","type":"method"},{"title":"class func warn(String, text: String)","path":"\/documentation\/tripkit\/tklog\/warn(_:text:)","type":"method"},{"title":"class func warn(identifier: String?, @autoclosure () -> String, file: StaticString)","path":"\/documentation\/tripkit\/tklog\/warn(identifier:_:file:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKLog.LogLevel","path":"\/documentation\/tripkit\/tklog\/loglevel","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/debug","title":"case debug"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/error","title":"case error"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/info","title":"case info"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/verbose","title":"case verbose"},{"type":"case","path":"\/documentation\/tripkit\/tklog\/loglevel\/warning","title":"case warning"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tklog\/loglevel\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tklog\/loglevel\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tklog\/loglevel\/!=(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tklog\/loglevel\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tklog\/loglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tklog\/loglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations"}]}],"type":"class","path":"\/documentation\/tripkit\/tklog"},{"title":"TKMapTiles","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkmaptiles\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkmaptiles\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkit\/tkmaptiles\/sources","type":"property","title":"let sources: [TKAPI.DataAttribution]"},{"path":"\/documentation\/tripkit\/tkmaptiles\/urltemplates","type":"property","title":"let urlTemplates: [String]"}],"type":"class","path":"\/documentation\/tripkit\/tkmaptiles"},{"title":"TKMiniInstruction","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","type":"init","path":"\/documentation\/tripkit\/tkminiinstruction\/init(coder:)"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkminiinstruction\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let detail: String?","type":"property","path":"\/documentation\/tripkit\/tkminiinstruction\/detail"},{"title":"let instruction: String","type":"property","path":"\/documentation\/tripkit\/tkminiinstruction\/instruction"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(with: NSCoder)","type":"method","path":"\/documentation\/tripkit\/tkminiinstruction\/encode(with:)"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var supportsSecureCoding: Bool","type":"property","path":"\/documentation\/tripkit\/tkminiinstruction\/supportssecurecoding"}],"type":"class","path":"\/documentation\/tripkit\/tkminiinstruction"},{"title":"TKModeCoordinate","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodecoordinate\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkit\/tkmodecoordinate\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/tripkit\/tkmodecoordinate\/init(modeinfo:coordinate:)","title":"init(modeInfo: TKModeInfo, coordinate: CLLocationCoordinate2D)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodecoordinate\/stopmodeinfo","title":"var stopModeInfo: TKModeInfo","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodecoordinate\/supportssecurecoding","title":"class var supportsSecureCoding: Bool","type":"property"}],"type":"class","path":"\/documentation\/tripkit\/tkmodecoordinate"},{"title":"TKModeHelper","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func modesContain(Set<String>, Set<String>) -> Bool","path":"\/documentation\/tripkit\/tkmodehelper\/modescontain(_:_:)","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkmodehelper"},{"title":"TKModeImageFactory","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func image(for: TKModeInfo) -> TKImage?","path":"\/documentation\/tripkit\/tkmodeimagefactory\/image(for:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let shared: TKModeImageFactory","path":"\/documentation\/tripkit\/tkmodeimagefactory\/shared"}],"type":"class","path":"\/documentation\/tripkit\/tkmodeimagefactory"},{"title":"TKModeInfo","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/init(coder:)","title":"init?(coder: NSCoder)","type":"init"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/alt","title":"let alt: String","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/color","title":"var color: TKColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/descriptor","title":"let descriptor: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/glyphcolor","title":"var glyphColor: TKColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/hash","title":"var hash: Int","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/identifier","title":"let identifier: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/image","title":"var image: TKImage?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/imageurl","title":"var imageURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/isenabled","title":"var isEnabled: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/localimagename","title":"let localImageName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/remoteimageisbranding","title":"var remoteImageIsBranding: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/remoteimageistemplate","title":"var remoteImageIsTemplate: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/remoteimagename","title":"let remoteImageName: String?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/encode(with:)","title":"func encode(with: NSCoder)","type":"method"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/image(type:)","title":"func image(type: TKStyleModeIconType) -> TKImage?","type":"method"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/imageurl(type:)","title":"func imageURL(type: TKStyleModeIconType) -> URL?","type":"method"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/isequal(_:)","title":"func isEqual(Any?) -> Bool","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/supportssecurecoding","title":"static var supportsSecureCoding: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/unknown","title":"static var unknown: TKModeInfo","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkmodeinfo\/modeinfo(for:)","title":"class func modeInfo(for: [String : Any]?) -> TKModeInfo?","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkmodeinfo"},{"title":"TKNamedCoordinate","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/init(_:)-44ct5","type":"init","title":"init(TKAPI.Location)"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/init(_:)-djaa","type":"init","title":"init?(EKEvent)"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/init(coder:)","type":"init","title":"init?(coder: NSCoder)"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/init(coordinate:)","type":"init","title":"init(coordinate: CLLocationCoordinate2D)"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/init(from:)","type":"init","title":"init(from: Decoder) throws"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/init(latitude:longitude:name:address:)","type":"init","title":"init(latitude: CLLocationDegrees, longitude: CLLocationDegrees, name: String?, address: String?)"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/init(name:address:)","type":"init","title":"init(name: String?, address: String?)"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/init(placemark:)","type":"init","title":"init(placemark: CLPlacemark)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/address","type":"property","title":"var address: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/attributionisverified","type":"property","title":"var attributionIsVerified: NSNumber?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/clusteridentifier","type":"property","title":"var clusterIdentifier: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/coordinate","type":"property","title":"var coordinate: CLLocationCoordinate2D"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/data","type":"property","title":"var data: [String : Any]"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/datasources","type":"property","title":"var dataSources: [TKAPI.DataAttribution]"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/eventendtime","type":"property","title":"var eventEndTime: Date?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/eventstarttime","type":"property","title":"var eventStartTime: Date?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/isdraggable","type":"property","title":"var isDraggable: Bool"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/isdropped","type":"property","title":"var isDropped: Bool"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/issuburb","type":"property","title":"var isSuburb: Bool"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/klass","type":"property","title":"var klass: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/locationid","type":"property","title":"var locationID: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/modeidentifiers","type":"property","title":"var modeIdentifiers: [String]?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/name","type":"property","title":"var name: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/phone","type":"property","title":"var phone: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/placemark","type":"property","title":"var placemark: CLPlacemark?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/priority","type":"property","title":"var priority: Float?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/regions","type":"property","title":"var regions: Set<TKRegion>"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/timezone","type":"property","title":"var timeZone: TimeZone?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/timezoneid","type":"property","title":"var timeZoneID: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/url","type":"property","title":"var url: URL?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/what3words","type":"property","title":"var what3words: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/what3wordsinfourl","type":"property","title":"var what3wordsInfoURL: String?"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/assignplacemark(_:includename:)","type":"method","title":"func assignPlacemark(CLPlacemark, includeName: Bool)"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/encode(to:)","type":"method","title":"func encode(to: Encoder) throws"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/encode(with:)","type":"method","title":"func encode(with: NSCoder)"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/enablereversegeocodingaddress","type":"property","title":"static var enableReverseGeocodingAddress: Bool"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/supportssecurecoding","type":"property","title":"class var supportsSecureCoding: Bool"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/namedcoordinate(for:)","type":"method","title":"static func namedCoordinate(for: MKAnnotation) -> TKNamedCoordinate"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/mkannotation-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var subtitle: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/subtitle"},{"type":"property","title":"var title: String?","path":"\/documentation\/tripkit\/tknamedcoordinate\/title"}],"title":"MKAnnotation Implementations"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/mkannotation-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/subtitle","type":"property","title":"var subtitle: String?"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/title","type":"property","title":"var title: String?"}],"title":"MKAnnotation Implementations"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/tkgeocodable-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var addressForGeocoding: String?","type":"property","path":"\/documentation\/tripkit\/tknamedcoordinate\/addressforgeocoding"},{"title":"var needsForwardGeocoding: Bool","type":"property","path":"\/documentation\/tripkit\/tknamedcoordinate\/needsforwardgeocoding"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func assign(CLLocationCoordinate2D, forAddress: String)","type":"method","path":"\/documentation\/tripkit\/tknamedcoordinate\/assign(_:foraddress:)"}],"title":"TKGeocodable Implementations"},{"path":"\/documentation\/tripkit\/tknamedcoordinate\/tksortableannotation-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var sortScore: Int","path":"\/documentation\/tripkit\/tknamedcoordinate\/sortscore","type":"property"}],"title":"TKSortableAnnotation Implementations"}],"type":"class","path":"\/documentation\/tripkit\/tknamedcoordinate"},{"title":"TKNamedCoordinateValueTransformer","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tknamedcoordinatevaluetransformer\/allowedtoplevelclasses","title":"static var allowedTopLevelClasses: [AnyClass]"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","path":"\/documentation\/tripkit\/tknamedcoordinatevaluetransformer\/register()","title":"static func register()"}],"type":"class","path":"\/documentation\/tripkit\/tknamedcoordinatevaluetransformer"},{"title":"TKOnStreetParkingLocation","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(coder: NSCoder)","path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/init(coder:)","type":"init"},{"title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var parking: TKAPI.OnStreetParkingInfo","path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/parking","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: Encoder) throws","path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/encode(to:)","type":"method"},{"title":"func encode(with: NSCoder)","path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/encode(with:)","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"title":"class var supportsSecureCoding: Bool","path":"\/documentation\/tripkit\/tkonstreetparkinglocation\/supportssecurecoding","type":"property"}],"type":"class","path":"\/documentation\/tripkit\/tkonstreetparkinglocation"},{"title":"TKOneOffLocationManager","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init()","type":"init","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/init()"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var canAsk: Bool","type":"property","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/canask"},{"title":"var currentLocation: CLLocation?","type":"property","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/currentlocation"},{"title":"var hasAccess: Bool","type":"property","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/hasaccess"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func ask(forBackground: Bool) async -> Bool","type":"method","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/ask(forbackground:)"},{"title":"func ask(forBackground: Bool, (Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/ask(forbackground:_:)"},{"title":"func fetchCurrentLocation() async throws -> CLLocation","type":"method","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/fetchcurrentlocation()"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKOneOffLocationManager.LocationFetchError","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case accessNotProvided","type":"case","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/accessnotprovided"},{"title":"case locationInaccurate(CLLocation)","type":"case","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/locationinaccurate(_:)"},{"title":"case noLocationFetchedInTime","type":"case","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/nolocationfetchedintime"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/error-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror\/localizeddescription"}]}],"type":"enum","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationfetcherror"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CLLocationManagerDelegate Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func locationManager(CLLocationManager, didFailWithError: Error)","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationmanager(_:didfailwitherror:)"},{"type":"method","title":"func locationManager(CLLocationManager, didUpdateLocations: [CLLocation])","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationmanager(_:didupdatelocations:)"},{"type":"method","title":"func locationManagerDidChangeAuthorization(CLLocationManager)","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/locationmanagerdidchangeauthorization(_:)"}],"type":"symbol","path":"\/documentation\/tripkit\/tkoneofflocationmanager\/cllocationmanagerdelegate-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkoneofflocationmanager"},{"title":"TKRegionCity","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkregioncity\/init(from:)"},{"title":"init(title: String, coordinate: CLLocationCoordinate2D)","type":"init","path":"\/documentation\/tripkit\/tkregioncity\/init(title:coordinate:)"},{"title":"init(title: String, latitude: TKAPI.Degrees, longitude: TKAPI.Degrees)","type":"init","path":"\/documentation\/tripkit\/tkregioncity\/init(title:latitude:longitude:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var centerBiasedMapRect: MKMapRect","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/centerbiasedmaprect"},{"title":"let latitude: TKAPI.Degrees","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/latitude"},{"title":"let longitude: TKAPI.Degrees","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/longitude"},{"title":"let name: String?","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/name"},{"title":"var orderInRegion: Int?","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/orderinregion"},{"title":"var region: TKRegion?","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/region"},{"title":"Default Implementations","type":"groupMarker"},{"title":"MKAnnotation Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var coordinate: CLLocationCoordinate2D","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/coordinate"},{"title":"var subtitle: String?","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/subtitle"},{"title":"var title: String?","type":"property","path":"\/documentation\/tripkit\/tkregioncity\/title"}],"path":"\/documentation\/tripkit\/tkregioncity\/mkannotation-implementations"},{"title":"MKAnnotation Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var coordinate: CLLocationCoordinate2D","path":"\/documentation\/tripkit\/tkregioncity\/coordinate","type":"property"},{"title":"var subtitle: String?","path":"\/documentation\/tripkit\/tkregioncity\/subtitle","type":"property"},{"title":"var title: String?","path":"\/documentation\/tripkit\/tkregioncity\/title","type":"property"}],"path":"\/documentation\/tripkit\/tkregioncity\/mkannotation-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tkregioncity"},{"title":"TKReporter","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func reportPlannedTrip(Trip, userInfo: [String : Any], includeUserID: Bool, isCurrent: (() -> Bool)?, completion: ((Bool) -> Void)?)","path":"\/documentation\/tripkit\/tkreporter\/reportplannedtrip(_:userinfo:includeuserid:iscurrent:completion:)","type":"method"},{"title":"static func reportProgress(for: Trip, locations: [CLLocation])","path":"\/documentation\/tripkit\/tkreporter\/reportprogress(for:locations:)","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkreporter"},{"title":"TKRoutePolyline","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(route: TKDisplayableRoute)","path":"\/documentation\/tripkit\/tkroutepolyline\/init(route:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var route: TKDisplayableRoute!","path":"\/documentation\/tripkit\/tkroutepolyline\/route","type":"property"},{"title":"var selectionIdentifier: String?","path":"\/documentation\/tripkit\/tkroutepolyline\/selectionidentifier","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func geodesicPolyline(annotations: [MKAnnotation]) -> MKGeodesicPolyline?","path":"\/documentation\/tripkit\/tkroutepolyline\/geodesicpolyline(annotations:)","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkroutepolyline"},{"title":"TKRoutingParser","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkroutingparser\/add(_:into:completion:)","title":"static func add(TKAPI.RoutingResponse, into: NSManagedObjectContext, completion: (Result<TripRequest, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkroutingparser\/add(groups:templates:alerts:into:completion:)","title":"static func add<Key>(groups: [Key : [TKAPI.TripGroup]], templates: [TKAPI.SegmentTemplate], alerts: [TKAPI.Alert], into: NSManagedObjectContext, completion: (Result<[Key : [Trip]], Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tkroutingparser\/matchingsegment(in:order:first:)","title":"static func matchingSegment(in: Trip, order: TKSegmentOrdering, first: Bool) -> TKSegment","type":"method"},{"path":"\/documentation\/tripkit\/tkroutingparser\/populate(_:start:end:leaveafter:arriveby:)","title":"static func populate(TripRequest, start: MKAnnotation?, end: MKAnnotation?, leaveAfter: Date?, arriveBy: Date?) -> Bool","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkroutingparser"},{"title":"TKRoutingServer","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(baseURL: URL?, apiKey: String?)","path":"\/documentation\/tripkit\/tkroutingserver\/init(baseurl:apikey:)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func baseURLs(for: TKRegion?) -> [URL]","path":"\/documentation\/tripkit\/tkroutingserver\/baseurls(for:)","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkroutingserver"},{"title":"TKSegment","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(order: TKSegmentOrdering, location: MKAnnotation, trip: Trip)","type":"init","path":"\/documentation\/tripkit\/tksegment\/init(order:location:trip:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var activeIndexQuickBooking: Int?","type":"property","path":"\/documentation\/tripkit\/tksegment\/activeindexquickbooking"},{"title":"var alerts: [Alert]","type":"property","path":"\/documentation\/tripkit\/tksegment\/alerts"},{"title":"var alertsWithAction: [Alert]","type":"property","path":"\/documentation\/tripkit\/tksegment\/alertswithaction"},{"title":"var alertsWithContent: [Alert]","type":"property","path":"\/documentation\/tripkit\/tksegment\/alertswithcontent"},{"title":"var alertsWithLocation: [Alert]","type":"property","path":"\/documentation\/tripkit\/tksegment\/alertswithlocation"},{"title":"var arrivalTime: Date","type":"property","path":"\/documentation\/tripkit\/tksegment\/arrivaltime"},{"title":"var bearing: NSNumber?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bearing"},{"title":"var bicycleAccessibility: TKBicycleAccessibility?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bicycleaccessibility"},{"title":"var bookingAccessibilityLabel: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bookingaccessibilitylabel"},{"title":"var bookingConfirmation: TKBooking.Confirmation?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bookingconfirmation"},{"title":"var bookingExternalActions: [String]?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bookingexternalactions"},{"title":"var bookingInternalURL: URL?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bookinginternalurl"},{"title":"var bookingQuickInternalURL: URL?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bookingquickinternalurl"},{"title":"var bookingTitle: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bookingtitle"},{"title":"var bookingVirtualURL: URL?","type":"property","path":"\/documentation\/tripkit\/tksegment\/bookingvirtualurl"},{"title":"var canShowPathFriendliness: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/canshowpathfriendliness"},{"title":"var color: TKColor","type":"property","path":"\/documentation\/tripkit\/tksegment\/color"},{"title":"var departureTime: Date","type":"property","path":"\/documentation\/tripkit\/tksegment\/departuretime"},{"title":"var disembarkation: StopVisits?","type":"property","path":"\/documentation\/tripkit\/tksegment\/disembarkation"},{"title":"var distanceByRoadTags: [TKAPI.RoadTag : Double]?","type":"property","path":"\/documentation\/tripkit\/tksegment\/distancebyroadtags"},{"title":"var distanceInMetres: NSNumber?","type":"property","path":"\/documentation\/tripkit\/tksegment\/distanceinmetres"},{"title":"var distanceInMetresDismount: NSNumber?","type":"property","path":"\/documentation\/tripkit\/tksegment\/distanceinmetresdismount"},{"title":"var distanceInMetresFriendly: NSNumber?","type":"property","path":"\/documentation\/tripkit\/tksegment\/distanceinmetresfriendly"},{"title":"var distanceInMetresUnfriendly: NSNumber?","type":"property","path":"\/documentation\/tripkit\/tksegment\/distanceinmetresunfriendly"},{"title":"var durationWithoutTraffic: TimeInterval","type":"property","path":"\/documentation\/tripkit\/tksegment\/durationwithouttraffic"},{"title":"var embarkation: StopVisits?","type":"property","path":"\/documentation\/tripkit\/tksegment\/embarkation"},{"title":"let end: MKAnnotation!","type":"property","path":"\/documentation\/tripkit\/tksegment\/end"},{"title":"var endRegion: TKRegion?","type":"property","path":"\/documentation\/tripkit\/tksegment\/endregion"},{"title":"var frequency: NSNumber?","type":"property","path":"\/documentation\/tripkit\/tksegment\/frequency"},{"title":"var hasCarParks: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/hascarparks"},{"title":"var index: Int","type":"property","path":"\/documentation\/tripkit\/tksegment\/index"},{"title":"var isAffectedByTraffic: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/isaffectedbytraffic"},{"title":"var isCanceled: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/iscanceled"},{"title":"var isContinuation: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/iscontinuation"},{"title":"var isCycling: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/iscycling"},{"title":"var isDriving: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/isdriving"},{"title":"var isFlight: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/isflight"},{"title":"var isImpossible: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/isimpossible"},{"title":"var isPlane: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/isplane"},{"title":"var isPublicTransport: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/ispublictransport"},{"title":"var isSelfNavigating: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/isselfnavigating"},{"title":"var isSharedVehicle: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/issharedvehicle"},{"title":"var isStationary: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/isstationary"},{"title":"var isWalking: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/iswalking"},{"title":"var isWheelchair: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/iswheelchair"},{"title":"var mapTiles: TKMapTiles?","type":"property","path":"\/documentation\/tripkit\/tksegment\/maptiles"},{"title":"var modeIdentifier: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/modeidentifier"},{"title":"var modeInfo: TKModeInfo?","type":"property","path":"\/documentation\/tripkit\/tksegment\/modeinfo"},{"title":"var next: TKSegment?","type":"property","path":"\/documentation\/tripkit\/tksegment\/next"},{"title":"var notes: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/notes"},{"title":"var notesWithoutPlatforms: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/noteswithoutplatforms"},{"title":"var notifications: [TKAPI.TripNotification]","type":"property","path":"\/documentation\/tripkit\/tksegment\/notifications"},{"title":"var operatorInfo: TKAPI.CompanyInfo?","type":"property","path":"\/documentation\/tripkit\/tksegment\/operatorinfo"},{"title":"let order: TKSegmentOrdering","type":"property","path":"\/documentation\/tripkit\/tksegment\/order"},{"title":"var previous: TKSegment?","type":"property","path":"\/documentation\/tripkit\/tksegment\/previous"},{"title":"var privateVehicleType: TKVehicleType","type":"property","path":"\/documentation\/tripkit\/tksegment\/privatevehicletype"},{"title":"var realTimeAlternativeVehicles: [Vehicle]","type":"property","path":"\/documentation\/tripkit\/tksegment\/realtimealternativevehicles"},{"title":"var realTimeVehicle: Vehicle?","type":"property","path":"\/documentation\/tripkit\/tksegment\/realtimevehicle"},{"title":"var reroutingAlert: Alert?","type":"property","path":"\/documentation\/tripkit\/tksegment\/reroutingalert"},{"title":"var scheduledEndPlatform: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledendplatform"},{"title":"var scheduledEndStopCode: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledendstopcode"},{"title":"var scheduledServiceCode: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledservicecode"},{"title":"var scheduledServiceNumber: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledservicenumber"},{"title":"var scheduledServiceStops: Int","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledservicestops"},{"title":"var scheduledStartPlatform: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledstartplatform"},{"title":"var scheduledStartStopCode: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledstartstopcode"},{"title":"var scheduledTimetableEndTime: Date?","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledtimetableendtime"},{"title":"var scheduledTimetableStartTime: Date?","type":"property","path":"\/documentation\/tripkit\/tksegment\/scheduledtimetablestarttime"},{"title":"var service: Service?","type":"property","path":"\/documentation\/tripkit\/tksegment\/service"},{"title":"var shapes: [Shape]","type":"property","path":"\/documentation\/tripkit\/tksegment\/shapes"},{"title":"var sharedVehicle: TKAPI.SharedVehicleInfo?","type":"property","path":"\/documentation\/tripkit\/tksegment\/sharedvehicle"},{"title":"var singleLineInstruction: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/singlelineinstruction"},{"title":"var singleLineInstructionWithoutTime: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/singlelineinstructionwithouttime"},{"title":"let start: MKAnnotation!","type":"property","path":"\/documentation\/tripkit\/tksegment\/start"},{"title":"var startRegion: TKRegion?","type":"property","path":"\/documentation\/tripkit\/tksegment\/startregion"},{"title":"var stationaryType: StationaryType?","type":"property","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.property"},{"title":"var storedQuickBookings: [TKQuickBooking]?","type":"property","path":"\/documentation\/tripkit\/tksegment\/storedquickbookings"},{"title":"var templateHashCode: Int","type":"property","path":"\/documentation\/tripkit\/tksegment\/templatehashcode"},{"title":"var ticket: TKAPI.Ticket?","type":"property","path":"\/documentation\/tripkit\/tksegment\/ticket"},{"title":"var ticketWebsiteURLString: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/ticketwebsiteurlstring"},{"title":"var timeZone: TimeZone","type":"property","path":"\/documentation\/tripkit\/tksegment\/timezone"},{"title":"var timesAreRealTime: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/timesarerealtime"},{"title":"var title: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/title"},{"title":"var titleWithoutTime: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/titlewithouttime"},{"title":"var trip: Trip!","type":"property","path":"\/documentation\/tripkit\/tksegment\/trip"},{"title":"var tripSegmentAccessibilityLabel: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentaccessibilitylabel"},{"title":"var tripSegmentBicycleAccessibility: TKBicycleAccessibility?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentbicycleaccessibility"},{"title":"var tripSegmentDetail: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentdetail"},{"title":"var tripSegmentFixedDepartureTime: Date?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentfixeddeparturetime"},{"title":"var tripSegmentInstruction: String","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentinstruction"},{"title":"var tripSegmentModeColor: TKColor?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodecolor"},{"title":"var tripSegmentModeImage: TKImage?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeimage"},{"title":"var tripSegmentModeImageIsBranding: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeimageisbranding"},{"title":"var tripSegmentModeImageIsTemplate: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeimageistemplate"},{"title":"var tripSegmentModeImageURL: URL?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeimageurl"},{"title":"var tripSegmentModeInfoIconType: TKInfoIconType","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodeinfoicontype"},{"title":"var tripSegmentModeSubtitle: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodesubtitle"},{"title":"var tripSegmentModeTitle: String?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentmodetitle"},{"title":"var tripSegmentSubtitleIconType: TKInfoIconType","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentsubtitleicontype"},{"title":"var tripSegmentTimeZone: TimeZone?","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmenttimezone"},{"title":"var tripSegmentTimesAreRealTime: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmenttimesarerealtime"},{"title":"var tripSegmentWheelchairAccessibility: TKWheelchairAccessibility","type":"property","path":"\/documentation\/tripkit\/tksegment\/tripsegmentwheelchairaccessibility"},{"title":"var turnByTurnMode: TKTurnByTurnMode?","type":"property","path":"\/documentation\/tripkit\/tksegment\/turnbyturnmode"},{"title":"var type: TKSegmentType?","type":"property","path":"\/documentation\/tripkit\/tksegment\/type"},{"title":"var usesVehicle: Bool","type":"property","path":"\/documentation\/tripkit\/tksegment\/usesvehicle"},{"title":"var wheelchairAccessibility: TKWheelchairAccessibility?","type":"property","path":"\/documentation\/tripkit\/tksegment\/wheelchairaccessibility"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func assign(TKVehicular?)","type":"method","path":"\/documentation\/tripkit\/tksegment\/assign(_:)"},{"title":"func duration(includingContinuation: Bool) -> TimeInterval","type":"method","path":"\/documentation\/tripkit\/tksegment\/duration(includingcontinuation:)"},{"title":"func finalSegmentIncludingContinuation() -> TKSegment","type":"method","path":"\/documentation\/tripkit\/tksegment\/finalsegmentincludingcontinuation()"},{"title":"func hasVisibility(TKTripSegmentVisibility) -> Bool","type":"method","path":"\/documentation\/tripkit\/tksegment\/hasvisibility(_:)"},{"title":"func matches(StopVisits) -> Bool","type":"method","path":"\/documentation\/tripkit\/tksegment\/matches(_:)"},{"title":"func matchesQuery() -> Bool","type":"method","path":"\/documentation\/tripkit\/tksegment\/matchesquery()"},{"title":"func originalSegmentIncludingContinuation() -> TKSegment","type":"method","path":"\/documentation\/tripkit\/tksegment\/originalsegmentincludingcontinuation()"},{"title":"func passesNear(CLLocationCoordinate2D, maximumMeters: CLLocationDistance) -> Bool","type":"method","path":"\/documentation\/tripkit\/tksegment\/passesnear(_:maximummeters:)"},{"title":"func shouldShow(StopVisits) -> Bool","type":"method","path":"\/documentation\/tripkit\/tksegment\/shouldshow(_:)"},{"title":"func startsAndEnds(inEncodedPolygon: String) -> Bool","type":"method","path":"\/documentation\/tripkit\/tksegment\/startsandends(inencodedpolygon:)"},{"title":"func storeQuickBookings([TKQuickBooking])","type":"method","path":"\/documentation\/tripkit\/tksegment\/storequickbookings(_:)"},{"title":"func triggerRealTimeKVO()","type":"method","path":"\/documentation\/tripkit\/tksegment\/triggerrealtimekvo()"},{"title":"func uses(StopVisits) -> Bool","type":"method","path":"\/documentation\/tripkit\/tksegment\/uses(_:)"},{"title":"func usesVisit(where: (StopVisits) -> Bool) -> Bool?","type":"method","path":"\/documentation\/tripkit\/tksegment\/usesvisit(where:)"},{"title":"func validate() -> Bool","type":"method","path":"\/documentation\/tripkit\/tksegment\/validate()"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case airportCheckIn","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/airportcheckin"},{"type":"case","title":"case airportCheckOut","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/airportcheckout"},{"type":"case","title":"case airportTransfer","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/airporttransfer"},{"type":"case","title":"case parkingOffStreet","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/parkingoffstreet"},{"type":"case","title":"case parkingOnStreet","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/parkingonstreet"},{"type":"case","title":"case transfer","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/transfer"},{"type":"case","title":"case vehicleCollect","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/vehiclecollect"},{"type":"case","title":"case vehicleReturn","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/vehiclereturn"},{"type":"case","title":"case wait","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/wait"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"TKSegment.StationaryType","type":"enum","path":"\/documentation\/tripkit\/tksegment\/stationarytype-swift.enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tksegment\/coordinate","title":"var coordinate: CLLocationCoordinate2D"},{"type":"property","path":"\/documentation\/tripkit\/tksegment\/subtitle","title":"var subtitle: String?"}],"title":"MKAnnotation Implementations","type":"symbol","path":"\/documentation\/tripkit\/tksegment\/mkannotation-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tksegment\/coordinate","title":"var coordinate: CLLocationCoordinate2D"},{"type":"property","path":"\/documentation\/tripkit\/tksegment\/subtitle","title":"var subtitle: String?"}],"title":"MKAnnotation Implementations","type":"symbol","path":"\/documentation\/tripkit\/tksegment\/mkannotation-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksegment\/shareurl","title":"var shareURL: URL?","type":"property"}],"title":"TKURLShareable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tksegment\/tkurlshareable-implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func activityViewController(UIActivityViewController, itemForActivityType: UIActivity.ActivityType?) -> Any?","path":"\/documentation\/tripkit\/tksegment\/activityviewcontroller(_:itemforactivitytype:)","type":"method"},{"title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","path":"\/documentation\/tripkit\/tksegment\/activityviewcontrollerplaceholderitem(_:)","type":"method"}],"title":"UIActivityItemSource Implementations","type":"symbol","path":"\/documentation\/tripkit\/tksegment\/uiactivityitemsource-implementations"}],"type":"class","path":"\/documentation\/tripkit\/tksegment"},{"title":"TKServerError","type":"class","path":"\/documentation\/tripkit\/tkservererror"},{"title":"TKShareHelper","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tksharehelper\/servicedetails","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tksharehelper\/servicedetails\/init(region:stopcode:serviceid:)","title":"init(region: String, stopCode: String, serviceID: String)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tksharehelper\/servicedetails\/region","title":"let region: String"},{"type":"property","path":"\/documentation\/tripkit\/tksharehelper\/servicedetails\/serviceid","title":"let serviceID: String"},{"type":"property","path":"\/documentation\/tripkit\/tksharehelper\/servicedetails\/stopcode","title":"let stopCode: String"}],"type":"struct","title":"TKShareHelper.ServiceDetails"},{"path":"\/documentation\/tripkit\/tksharehelper\/stopdetails","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tksharehelper\/stopdetails\/init(region:code:filter:)","type":"init","title":"init(region: String, code: String, filter: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksharehelper\/stopdetails\/code","type":"property","title":"let code: String"},{"path":"\/documentation\/tripkit\/tksharehelper\/stopdetails\/filter","type":"property","title":"let filter: String?"},{"path":"\/documentation\/tripkit\/tksharehelper\/stopdetails\/region","type":"property","title":"let region: String"}],"type":"struct","title":"TKShareHelper.StopDetails"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tksharehelper\/baseurl","type":"property","title":"static var baseURL: String?"},{"path":"\/documentation\/tripkit\/tksharehelper\/enablesharingofurls","type":"property","title":"static var enableSharingOfURLs: Bool"},{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tksharehelper\/createmeeturl(coordinate:at:)","type":"method","title":"static func createMeetURL(coordinate: CLLocationCoordinate2D, at: Date) -> URL?"},{"path":"\/documentation\/tripkit\/tksharehelper\/createqueryurl(start:end:timetype:time:)","type":"method","title":"static func createQueryURL(start: CLLocationCoordinate2D, end: CLLocationCoordinate2D, timeType: TKTimeType, time: Date?) -> URL?"},{"path":"\/documentation\/tripkit\/tksharehelper\/createserviceurl(serviceid:atstopcode:inregionnamed:)","type":"method","title":"static func createServiceURL(serviceID: String, atStopCode: String, inRegionNamed: String) -> URL?"},{"path":"\/documentation\/tripkit\/tksharehelper\/createserviceurl(serviceid:stopcode:regioncode:)","type":"method","title":"static func createServiceURL(serviceID: String, stopCode: String, regionCode: String) -> URL?"},{"path":"\/documentation\/tripkit\/tksharehelper\/createstopurl(stopcode:inregionnamed:filter:)","type":"method","title":"static func createStopURL(stopCode: String, inRegionNamed: String, filter: String?) -> URL?"},{"path":"\/documentation\/tripkit\/tksharehelper\/createstopurl(stopcode:regioncode:filter:)","type":"method","title":"static func createStopURL(stopCode: String, regionCode: String, filter: String?) -> URL?"},{"path":"\/documentation\/tripkit\/tksharehelper\/ismeeturl(_:)","type":"method","title":"static func isMeetURL(URL) -> Bool"},{"path":"\/documentation\/tripkit\/tksharehelper\/isqueryurl(_:)","type":"method","title":"static func isQueryURL(URL) -> Bool"},{"path":"\/documentation\/tripkit\/tksharehelper\/isserviceurl(_:)","type":"method","title":"static func isServiceURL(URL) -> Bool"},{"path":"\/documentation\/tripkit\/tksharehelper\/isstopurl(_:)","type":"method","title":"static func isStopURL(URL) -> Bool"},{"path":"\/documentation\/tripkit\/tksharehelper\/meetingdetails(for:using:)","type":"method","title":"static func meetingDetails(for: URL, using: TKGeocoding) async throws -> TKRoutingQuery<Never>"},{"path":"\/documentation\/tripkit\/tksharehelper\/querydetails(for:using:)","type":"method","title":"static func queryDetails(for: URL, using: TKGeocoding) async throws -> TKRoutingQuery<Never>"},{"path":"\/documentation\/tripkit\/tksharehelper\/servicedetails(for:)","type":"method","title":"static func serviceDetails(for: URL) throws -> ServiceDetails"},{"path":"\/documentation\/tripkit\/tksharehelper\/stopdetails(for:)","type":"method","title":"static func stopDetails(for: URL) throws -> StopDetails"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case invalidURL","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/invalidurl"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"Error Implementations","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/error-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/localizeddescription","type":"property"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tksharehelper\/extractionerror\/hash(into:)"}]}],"type":"enum","title":"TKShareHelper.ExtractionError"}],"type":"class","path":"\/documentation\/tripkit\/tksharehelper"},{"title":"TKShareURLProvider","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var item: Any","type":"property","path":"\/documentation\/tripkit\/tkshareurlprovider\/item"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","type":"method","path":"\/documentation\/tripkit\/tkshareurlprovider\/activityviewcontrollerplaceholderitem(_:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func getShareURL(for: TKURLShareable, allowLongURL: Bool) async throws -> URL","type":"method","path":"\/documentation\/tripkit\/tkshareurlprovider\/getshareurl(for:allowlongurl:)"},{"title":"class func getShareURL(for: TKURLShareable, allowLongURL: Bool, allowBlocking: Bool) -> URL?","type":"method","path":"\/documentation\/tripkit\/tkshareurlprovider\/getshareurl(for:allowlongurl:allowblocking:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKShareURLProvider.ShareError","type":"enum","path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case missingSaveURL","path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/missingsaveurl","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"Error Implementations","path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/error-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var localizedDescription: String","type":"property","path":"\/documentation\/tripkit\/tkshareurlprovider\/shareerror\/localizeddescription"}]}]}],"type":"class","path":"\/documentation\/tripkit\/tkshareurlprovider"},{"title":"TKStopCoordinate","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkstopcoordinate\/init(_:)","title":"init(TKAPI.Stop)"},{"type":"init","path":"\/documentation\/tripkit\/tkstopcoordinate\/init(coder:)","title":"init?(coder: NSCoder)"},{"type":"init","path":"\/documentation\/tripkit\/tkstopcoordinate\/init(from:)","title":"init(from: Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkstopcoordinate\/operators","title":"var operators: [TKAPI.Operator]?"},{"type":"property","path":"\/documentation\/tripkit\/tkstopcoordinate\/routes","title":"var routes: [TKAPI.Route]?"},{"type":"property","path":"\/documentation\/tripkit\/tkstopcoordinate\/services","title":"var services: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkstopcoordinate\/stopcode","title":"var stopCode: String"},{"type":"property","path":"\/documentation\/tripkit\/tkstopcoordinate\/subtitle","title":"var subtitle: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkstopcoordinate\/wheelchairaccessibility","title":"var wheelchairAccessibility: TKWheelchairAccessibility"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkstopcoordinate\/supportssecurecoding","title":"class var supportsSecureCoding: Bool"}],"type":"class","path":"\/documentation\/tripkit\/tkstopcoordinate"},{"title":"TKStore","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstore\/tripkitcontext","title":"var tripKitContext: NSManagedObjectContext","type":"property"},{"path":"\/documentation\/tripkit\/tkstore\/viewcontext","title":"var viewContext: NSManagedObjectContext","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstore\/reset()","title":"func reset()","type":"method"}],"type":"class","path":"\/documentation\/tripkit\/tkstore"},{"title":"TKStyleManager","children":[{"title":"Type Properties","type":"groupMarker"},{"type":"property","title":"static var globalAccentColor: TKColor","path":"\/documentation\/tripkit\/tkstylemanager\/globalaccentcolor"},{"type":"property","title":"static var globalBarTintColor: TKColor","path":"\/documentation\/tripkit\/tkstylemanager\/globalbartintcolor"},{"type":"property","title":"static var globalSecondaryBarTintColor: TKColor","path":"\/documentation\/tripkit\/tkstylemanager\/globalsecondarybartintcolor"},{"type":"property","title":"static var globalTintColor: TKColor","path":"\/documentation\/tripkit\/tkstylemanager\/globaltintcolor"},{"title":"Type Methods","type":"groupMarker"},{"type":"method","title":"static func activityImage(String) -> TKImage","path":"\/documentation\/tripkit\/tkstylemanager\/activityimage(_:)"},{"type":"method","title":"static func addDefaultOutline(to: UIView)","path":"\/documentation\/tripkit\/tkstylemanager\/adddefaultoutline(to:)"},{"type":"method","title":"static func addDefaultShadow(to: UIView)","path":"\/documentation\/tripkit\/tkstylemanager\/adddefaultshadow(to:)"},{"type":"method","title":"static func boldCustomFont(forTextStyle: UIFont.TextStyle) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/boldcustomfont(fortextstyle:)"},{"type":"method","title":"static func boldSystemFont(size: Double) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/boldsystemfont(size:)"},{"type":"method","title":"static func customFont(forTextStyle: UIFont.TextStyle) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/customfont(fortextstyle:)"},{"type":"method","title":"static func dateString(Date, for: TimeZone?) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/datestring(_:for:)"},{"type":"method","title":"static func exerciseString(calories: Double) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/exercisestring(calories:)"},{"type":"method","title":"static func font(size: Double, weight: FontWeight) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/font(size:weight:)"},{"type":"method","title":"static func font(textStyle: TKFont.TextStyle, weight: FontWeight) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/font(textstyle:weight:)"},{"type":"method","title":"static func format(Date, for: TimeZone?, forceFormat: String?, forceStyle: DateFormatter.Style) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/format(_:for:forceformat:forcestyle:)"},{"type":"method","title":"static func format(Date, for: TimeZone?, showDate: Bool, showTime: Bool) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/format(_:for:showdate:showtime:)"},{"type":"method","title":"static func image(forModeImageName: String?, of: TKStyleModeIconType) -> TKImage?","path":"\/documentation\/tripkit\/tkstylemanager\/image(formodeimagename:of:)"},{"type":"method","title":"static func image(named: String) -> TKImage","path":"\/documentation\/tripkit\/tkstylemanager\/image(named:)"},{"type":"method","title":"static func image(systemName: String) -> TKImage?","path":"\/documentation\/tripkit\/tkstylemanager\/image(systemname:)"},{"type":"method","title":"static func mediumCustomFont(forTextStyle: UIFont.TextStyle) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/mediumcustomfont(fortextstyle:)"},{"type":"method","title":"static func mediumSystemFont(size: Double) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/mediumsystemfont(size:)"},{"type":"method","title":"static func optionalImage(named: String) -> TKImage?","path":"\/documentation\/tripkit\/tkstylemanager\/optionalimage(named:)"},{"type":"method","title":"static func semiboldCustomFont(forTextStyle: UIFont.TextStyle) -> UIFont","path":"\/documentation\/tripkit\/tkstylemanager\/semiboldcustomfont(fortextstyle:)"},{"type":"method","title":"static func semiboldSystemFont(size: Double) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/semiboldsystemfont(size:)"},{"type":"method","title":"static func string(for: Date, for: TimeZone?, showDate: Bool, showTime: Bool) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/string(for:for:showdate:showtime:)"},{"type":"method","title":"static func style(UISearchBar, includingBackground: Bool)","path":"\/documentation\/tripkit\/tkstylemanager\/style(_:includingbackground:)"},{"type":"method","title":"static func style(UISearchBar, includingBackground: Bool, styler: (UITextField) -> Void)","path":"\/documentation\/tripkit\/tkstylemanager\/style(_:includingbackground:styler:)"},{"type":"method","title":"static func systemFont(size: Double) -> TKFont","path":"\/documentation\/tripkit\/tkstylemanager\/systemfont(size:)"},{"type":"method","title":"static func timeString(Date, for: TimeZone?, relativeTo: TimeZone?) -> String","path":"\/documentation\/tripkit\/tkstylemanager\/timestring(_:for:relativeto:)"},{"title":"Enumerations","type":"groupMarker"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bold","path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/bold","type":"case"},{"title":"case medium","path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/medium","type":"case"},{"title":"case regular","path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/regular","type":"case"},{"title":"case semibold","path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/semibold","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkstylemanager\/fontweight\/equatable-implementations","type":"symbol"}],"title":"TKStyleManager.FontWeight","path":"\/documentation\/tripkit\/tkstylemanager\/fontweight"}],"type":"class","path":"\/documentation\/tripkit\/tkstylemanager"},{"title":"TKUserError","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkusererror\/isusererror","title":"var isUserError: Bool","type":"property"}],"type":"class","path":"\/documentation\/tripkit\/tkusererror"},{"title":"Trip","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var accessibilityLabel: String?","type":"property","path":"\/documentation\/tripkit\/trip\/accessibilitylabel"},{"title":"var allPublicTransport: [TKSegment]","type":"property","path":"\/documentation\/tripkit\/trip\/allpublictransport"},{"title":"var arrivalTime: Date!","type":"property","path":"\/documentation\/tripkit\/trip\/arrivaltime"},{"title":"var arrivalTimeZone: TimeZone?","type":"property","path":"\/documentation\/tripkit\/trip\/arrivaltimezone"},{"title":"var availabilityInfo: String?","type":"property","path":"\/documentation\/tripkit\/trip\/availabilityinfo"},{"title":"var budgetPoints: NSNumber?","type":"property","path":"\/documentation\/tripkit\/trip\/budgetpoints"},{"title":"var bundleId: String?","type":"property","path":"\/documentation\/tripkit\/trip\/bundleid"},{"title":"var costValues: [TKTripCostType : String]","type":"property","path":"\/documentation\/tripkit\/trip\/costvalues"},{"title":"var currencyCode: String?","type":"property","path":"\/documentation\/tripkit\/trip\/currencycode"},{"title":"var debugString: String","type":"property","path":"\/documentation\/tripkit\/trip\/debugstring"},{"title":"var departureTime: Date!","type":"property","path":"\/documentation\/tripkit\/trip\/departuretime"},{"title":"var departureTimeIsFixed: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/departuretimeisfixed"},{"title":"var departureTimeZone: TimeZone","type":"property","path":"\/documentation\/tripkit\/trip\/departuretimezone"},{"title":"var hasReminder: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/hasreminder"},{"title":"var hideExactTimes: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/hideexacttimes"},{"title":"var isArriveBefore: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/isarrivebefore"},{"title":"var isCanceled: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/iscanceled"},{"title":"var isImpossible: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/isimpossible"},{"title":"var logURLString: String?","type":"property","path":"\/documentation\/tripkit\/trip\/logurlstring"},{"title":"var mainSegment: TKSegment","type":"property","path":"\/documentation\/tripkit\/trip\/mainsegment"},{"title":"var minutes: Int16","type":"property","path":"\/documentation\/tripkit\/trip\/minutes"},{"title":"var missedBookingWindow: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/missedbookingwindow"},{"title":"var plannedURLString: String?","type":"property","path":"\/documentation\/tripkit\/trip\/plannedurlstring"},{"title":"var primaryAlert: Alert?","type":"property","path":"\/documentation\/tripkit\/trip\/primaryalert"},{"title":"var progressURLString: String?","type":"property","path":"\/documentation\/tripkit\/trip\/progressurlstring"},{"title":"var request: TripRequest!","type":"property","path":"\/documentation\/tripkit\/trip\/request"},{"title":"var segments: [TKSegment]","type":"property","path":"\/documentation\/tripkit\/trip\/segments"},{"title":"var showNoVehicleUUIDAsLift: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/shownovehicleuuidaslift"},{"title":"var subscribeURL: URL?","type":"property","path":"\/documentation\/tripkit\/trip\/subscribeurl"},{"title":"var temporaryURLString: String?","type":"property","path":"\/documentation\/tripkit\/trip\/temporaryurlstring"},{"title":"var timesAreRealTime: Bool","type":"property","path":"\/documentation\/tripkit\/trip\/timesarerealtime"},{"title":"var totalCalories: Float","type":"property","path":"\/documentation\/tripkit\/trip\/totalcalories"},{"title":"var totalCarbon: Float","type":"property","path":"\/documentation\/tripkit\/trip\/totalcarbon"},{"title":"var totalHassle: Float","type":"property","path":"\/documentation\/tripkit\/trip\/totalhassle"},{"title":"var totalPrice: NSNumber?","type":"property","path":"\/documentation\/tripkit\/trip\/totalprice"},{"title":"var totalPriceUSD: NSNumber?","type":"property","path":"\/documentation\/tripkit\/trip\/totalpriceusd"},{"title":"var totalScore: Float","type":"property","path":"\/documentation\/tripkit\/trip\/totalscore"},{"title":"var totalWalking: Float","type":"property","path":"\/documentation\/tripkit\/trip\/totalwalking"},{"title":"var tripGroup: TripGroup","type":"property","path":"\/documentation\/tripkit\/trip\/tripgroup"},{"title":"var tripId: String?","type":"property","path":"\/documentation\/tripkit\/trip\/tripid"},{"title":"var tripURL: URL","type":"property","path":"\/documentation\/tripkit\/trip\/tripurl"},{"title":"var unsubscribeURL: URL?","type":"property","path":"\/documentation\/tripkit\/trip\/unsubscribeurl"},{"title":"var updateURLString: String?","type":"property","path":"\/documentation\/tripkit\/trip\/updateurlstring"},{"title":"var usedModeIdentifiers: Set<String>","type":"property","path":"\/documentation\/tripkit\/trip\/usedmodeidentifiers"},{"title":"var usedPrivateVehicleType: TKVehicleType","type":"property","path":"\/documentation\/tripkit\/trip\/usedprivatevehicletype"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func assign(TKVehicular?)","type":"method","path":"\/documentation\/tripkit\/trip\/assign(_:)"},{"title":"func calculateOffset() -> TimeInterval","type":"method","path":"\/documentation\/tripkit\/trip\/calculateoffset()"},{"title":"func constructPlainText() -> String","type":"method","path":"\/documentation\/tripkit\/trip\/constructplaintext()"},{"title":"func didTurnIntoFault()","type":"method","path":"\/documentation\/tripkit\/trip\/didturnintofault()"},{"title":"func isMixedModal(ignoreWalking: Bool) -> Bool","type":"method","path":"\/documentation\/tripkit\/trip\/ismixedmodal(ignorewalking:)"},{"title":"func notifications(includeTimeToLeaveNotification: Bool) -> Set<TKAPI.TripNotification>","type":"method","path":"\/documentation\/tripkit\/trip\/notifications(includetimetoleavenotification:)"},{"title":"func segments(with: TKTripSegmentVisibility) -> [TKSegment]","type":"method","path":"\/documentation\/tripkit\/trip\/segments(with:)"},{"title":"func setAsPreferredTrip()","type":"method","path":"\/documentation\/tripkit\/trip\/setaspreferredtrip()"},{"title":"func shouldShow(StopVisits) -> Bool","type":"method","path":"\/documentation\/tripkit\/trip\/shouldshow(_:)"},{"title":"func uses(StopVisits) -> Bool","type":"method","path":"\/documentation\/tripkit\/trip\/uses(_:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func fetchRequest() -> NSFetchRequest<Trip>","type":"method","path":"\/documentation\/tripkit\/trip\/fetchrequest()"},{"title":"static func find(tripURL: URL, in: NSManagedObjectContext) -> Trip?","type":"method","path":"\/documentation\/tripkit\/trip\/find(tripurl:in:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func ... (Self) -> PartialRangeThrough<Self>","path":"\/documentation\/tripkit\/trip\/'...(_:)-5bx3y"},{"type":"op","title":"static func ... (Self) -> PartialRangeFrom<Self>","path":"\/documentation\/tripkit\/trip\/'...(_:)-7qp5y"},{"type":"op","title":"static func ... (Self, Self) -> ClosedRange<Self>","path":"\/documentation\/tripkit\/trip\/'...(_:_:)"},{"type":"op","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","path":"\/documentation\/tripkit\/trip\/'.._(_:)"},{"type":"op","title":"static func ..< (Self, Self) -> Range<Self>","path":"\/documentation\/tripkit\/trip\/'.._(_:_:)"},{"type":"op","title":"static func < (Trip, Trip) -> Bool","path":"\/documentation\/tripkit\/trip\/_(_:_:)"},{"type":"op","title":"static func > (Self, Self) -> Bool","path":"\/documentation\/tripkit\/trip\/_(_:_:)-9ehmz"},{"type":"op","title":"static func <= (Self, Self) -> Bool","path":"\/documentation\/tripkit\/trip\/_=(_:_:)-4jsm1"},{"type":"op","title":"static func >= (Self, Self) -> Bool","path":"\/documentation\/tripkit\/trip\/_=(_:_:)-5kf4h"}],"title":"Comparable Implementations","type":"symbol","path":"\/documentation\/tripkit\/trip\/comparable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var wantsRealTimeUpdates: Bool","path":"\/documentation\/tripkit\/trip\/wantsrealtimeupdates","type":"property"}],"title":"TKRealTimeUpdatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/trip\/tkrealtimeupdatable-implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/trip\/saveurl","title":"var saveURL: URL?"}],"title":"TKURLSavable Implementations","type":"symbol","path":"\/documentation\/tripkit\/trip\/tkurlsavable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var shareURL: URL?","type":"property","path":"\/documentation\/tripkit\/trip\/shareurl"}],"title":"TKURLShareable Implementations","type":"symbol","path":"\/documentation\/tripkit\/trip\/tkurlshareable-implementations"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func activityViewController(UIActivityViewController, itemForActivityType: UIActivity.ActivityType?) -> Any?","path":"\/documentation\/tripkit\/trip\/activityviewcontroller(_:itemforactivitytype:)","type":"method"},{"title":"func activityViewController(UIActivityViewController, subjectForActivityType: UIActivity.ActivityType?) -> String","path":"\/documentation\/tripkit\/trip\/activityviewcontroller(_:subjectforactivitytype:)","type":"method"},{"title":"func activityViewControllerPlaceholderItem(UIActivityViewController) -> Any","path":"\/documentation\/tripkit\/trip\/activityviewcontrollerplaceholderitem(_:)","type":"method"}],"title":"UIActivityItemSource Implementations","type":"symbol","path":"\/documentation\/tripkit\/trip\/uiactivityitemsource-implementations"}],"type":"class","path":"\/documentation\/tripkit\/trip"},{"title":"TripGroup","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tripgroup\/accessibilitylabel","title":"var accessibilityLabel: String?","type":"property"},{"path":"\/documentation\/tripkit\/tripgroup\/classification","title":"var classification: String?","type":"property"},{"path":"\/documentation\/tripkit\/tripgroup\/debugstring","title":"var debugString: String","type":"property"},{"path":"\/documentation\/tripkit\/tripgroup\/frequency","title":"var frequency: NSNumber?","type":"property"},{"path":"\/documentation\/tripkit\/tripgroup\/request","title":"var request: TripRequest!","type":"property"},{"path":"\/documentation\/tripkit\/tripgroup\/sources","title":"var sources: [TKAPI.DataAttribution]","type":"property"},{"path":"\/documentation\/tripkit\/tripgroup\/trips","title":"var trips: Set<Trip>!","type":"property"},{"path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.property","title":"var visibility: Visibility","type":"property"},{"path":"\/documentation\/tripkit\/tripgroup\/visibletrip","title":"var visibleTrip: Trip?","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tripgroup\/fetchrequest()","title":"class func fetchRequest() -> NSFetchRequest<TripGroup>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum","title":"TripGroup.Visibility","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case full","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/full"},{"type":"case","title":"case hidden","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/hidden"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int16)","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/equatable-implementations"},{"type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tripgroup\/visibility-swift.enum\/rawrepresentable-implementations"}]}],"type":"class","path":"\/documentation\/tripkit\/tripgroup"},{"title":"TripRequest","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var applicableModeIdentifiers: [String]","path":"\/documentation\/tripkit\/triprequest\/applicablemodeidentifiers","type":"property"},{"title":"var arrivalTime: Date?","path":"\/documentation\/tripkit\/triprequest\/arrivaltime","type":"property"},{"title":"var arrivalTimeZone: TimeZone?","path":"\/documentation\/tripkit\/triprequest\/arrivaltimezone","type":"property"},{"title":"var debugString: String","path":"\/documentation\/tripkit\/triprequest\/debugstring","type":"property"},{"title":"var departureTime: Date?","path":"\/documentation\/tripkit\/triprequest\/departuretime","type":"property"},{"title":"var departureTimeZone: TimeZone?","path":"\/documentation\/tripkit\/triprequest\/departuretimezone","type":"property"},{"title":"var endRegion: TKRegion?","path":"\/documentation\/tripkit\/triprequest\/endregion","type":"property"},{"title":"var excludedStops: [String]?","path":"\/documentation\/tripkit\/triprequest\/excludedstops","type":"property"},{"title":"var expandForFavorite: Bool","path":"\/documentation\/tripkit\/triprequest\/expandforfavorite","type":"property"},{"title":"var fromLocation: TKNamedCoordinate!","path":"\/documentation\/tripkit\/triprequest\/fromlocation","type":"property"},{"title":"var hasTrips: Bool","path":"\/documentation\/tripkit\/triprequest\/hastrips","type":"property"},{"title":"var preferredGroup: TripGroup?","path":"\/documentation\/tripkit\/triprequest\/preferredgroup","type":"property"},{"title":"var purpose: String?","path":"\/documentation\/tripkit\/triprequest\/purpose","type":"property"},{"title":"var spanningRegion: TKRegion","path":"\/documentation\/tripkit\/triprequest\/spanningregion","type":"property"},{"title":"var startRegion: TKRegion?","path":"\/documentation\/tripkit\/triprequest\/startregion","type":"property"},{"title":"var time: Date?","path":"\/documentation\/tripkit\/triprequest\/time","type":"property"},{"title":"var timeCreated: Date?","path":"\/documentation\/tripkit\/triprequest\/timecreated","type":"property"},{"title":"var toLocation: TKNamedCoordinate!","path":"\/documentation\/tripkit\/triprequest\/tolocation","type":"property"},{"title":"var tripGroups: Set<TripGroup>","path":"\/documentation\/tripkit\/triprequest\/tripgroups","type":"property"},{"title":"var trips: Set<Trip>","path":"\/documentation\/tripkit\/triprequest\/trips","type":"property"},{"title":"var type: TKTimeType","path":"\/documentation\/tripkit\/triprequest\/type","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func didTurnIntoFault()","path":"\/documentation\/tripkit\/triprequest\/didturnintofault()","type":"method"},{"title":"func setTime(Date?, for: TKTimeType)","path":"\/documentation\/tripkit\/triprequest\/settime(_:for:)","type":"method"},{"title":"func sortDescriptors(withPrimary: TKTripCostType) -> [NSSortDescriptor]","path":"\/documentation\/tripkit\/triprequest\/sortdescriptors(withprimary:)","type":"method"},{"title":"func sortedVisibleTrips() -> [Trip]","path":"\/documentation\/tripkit\/triprequest\/sortedvisibletrips()","type":"method"},{"title":"func tripTimeSortDescriptors() -> [NSSortDescriptor]","path":"\/documentation\/tripkit\/triprequest\/triptimesortdescriptors()","type":"method"},{"title":"func updateTripGroupClassifications(using: TKTripClassifier)","path":"\/documentation\/tripkit\/triprequest\/updatetripgroupclassifications(using:)","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"title":"class func fetchRequest() -> NSFetchRequest<TripRequest>","path":"\/documentation\/tripkit\/triprequest\/fetchrequest()","type":"method"},{"title":"static func insert(from: MKAnnotation, to: MKAnnotation, for: Date?, timeType: TKTimeType, into: NSManagedObjectContext) -> TripRequest","path":"\/documentation\/tripkit\/triprequest\/insert(from:to:for:timetype:into:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"TKRouterRequestable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var additional: Set<URLQueryItem>","path":"\/documentation\/tripkit\/triprequest\/additional"},{"type":"property","title":"var at: TKRoutingQueryTime","path":"\/documentation\/tripkit\/triprequest\/at"},{"type":"property","title":"var context: NSManagedObjectContext?","path":"\/documentation\/tripkit\/triprequest\/context"},{"type":"property","title":"var from: TKAPI.Location","path":"\/documentation\/tripkit\/triprequest\/from"},{"type":"property","title":"var modes: Set<String>","path":"\/documentation\/tripkit\/triprequest\/modes"},{"type":"property","title":"var to: TKAPI.Location","path":"\/documentation\/tripkit\/triprequest\/to"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func toTripRequest() -> TripRequest","path":"\/documentation\/tripkit\/triprequest\/totriprequest()"}],"path":"\/documentation\/tripkit\/triprequest\/tkrouterrequestable-implementations","type":"symbol"},{"title":"TKURLShareable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var shareURL: URL?","type":"property","path":"\/documentation\/tripkit\/triprequest\/shareurl"}],"path":"\/documentation\/tripkit\/triprequest\/tkurlshareable-implementations","type":"symbol"}],"type":"class","path":"\/documentation\/tripkit\/triprequest"},{"title":"Vehicle","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: TKAPI.Vehicle, into: NSManagedObjectContext)","path":"\/documentation\/tripkit\/vehicle\/init(from:into:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var ageFactor: Double","path":"\/documentation\/tripkit\/vehicle\/agefactor","type":"property"},{"title":"var averageOccupancy: (TKAPI.VehicleOccupancy, title: String)?","path":"\/documentation\/tripkit\/vehicle\/averageoccupancy","type":"property"},{"title":"var bearing: NSNumber?","path":"\/documentation\/tripkit\/vehicle\/bearing","type":"property"},{"title":"var components: [[TKAPI.VehicleComponents]]?","path":"\/documentation\/tripkit\/vehicle\/components","type":"property"},{"title":"var componentsData: Data?","path":"\/documentation\/tripkit\/vehicle\/componentsdata","type":"property"},{"title":"var icon: String?","path":"\/documentation\/tripkit\/vehicle\/icon","type":"property"},{"title":"var identifier: String?","path":"\/documentation\/tripkit\/vehicle\/identifier","type":"property"},{"title":"var label: String?","path":"\/documentation\/tripkit\/vehicle\/label","type":"property"},{"title":"var lastUpdate: Date?","path":"\/documentation\/tripkit\/vehicle\/lastupdate","type":"property"},{"title":"var latitude: Double","path":"\/documentation\/tripkit\/vehicle\/latitude","type":"property"},{"title":"var longitude: Double","path":"\/documentation\/tripkit\/vehicle\/longitude","type":"property"},{"title":"var service: Service?","path":"\/documentation\/tripkit\/vehicle\/service","type":"property"},{"title":"var serviceAlternatives: Set<Service>?","path":"\/documentation\/tripkit\/vehicle\/servicealternatives","type":"property"},{"title":"var serviceColor: TKColor?","path":"\/documentation\/tripkit\/vehicle\/servicecolor","type":"property"},{"title":"var serviceNumber: String?","path":"\/documentation\/tripkit\/vehicle\/servicenumber","type":"property"},{"title":"var subtitle: String?","path":"\/documentation\/tripkit\/vehicle\/subtitle","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func setCoordinate(CLLocationCoordinate2D)","path":"\/documentation\/tripkit\/vehicle\/setcoordinate(_:)","type":"method"},{"title":"func triggerRealTimeKVO()","path":"\/documentation\/tripkit\/vehicle\/triggerrealtimekvo()","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/vehicle\/components(from:)","title":"static func components(from: Data) -> [[TKAPI.VehicleComponents]]?","type":"method"},{"path":"\/documentation\/tripkit\/vehicle\/fetchrequest()","title":"class func fetchRequest() -> NSFetchRequest<Vehicle>","type":"method"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/vehicle\/tk_valid(geocoder:)"}],"path":"\/documentation\/tripkit\/vehicle\/mkannotation-implementations","title":"MKAnnotation Implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation","path":"\/documentation\/tripkit\/vehicle\/tk_valid(geocoder:)"}],"path":"\/documentation\/tripkit\/vehicle\/mkannotation-implementations","title":"MKAnnotation Implementations","type":"symbol"}],"type":"class","path":"\/documentation\/tripkit\/vehicle"},{"type":"groupMarker","title":"Protocols"},{"path":"\/documentation\/tripkit\/boolcodablestrategy","type":"protocol","title":"BoolCodableStrategy"},{"path":"\/documentation\/tripkit\/defaultcodablestrategy","type":"protocol","title":"DefaultCodableStrategy","children":[{"type":"groupMarker","title":"Associated Types"},{"path":"\/documentation\/tripkit\/defaultcodablestrategy\/defaultvalue-swift.associatedtype","title":"DefaultValue","type":"associatedtype"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/defaultcodablestrategy\/defaultvalue-swift.type.property","title":"static var defaultValue: Self.DefaultValue","type":"property"}]},{"path":"\/documentation\/tripkit\/tkautocompleting","type":"protocol","title":"TKAutocompleting","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var allowLocationInfoButton: Bool","children":[{"children":[{"title":"var allowLocationInfoButton: Bool","path":"\/documentation\/tripkit\/tkautocompleting\/allowlocationinfobutton-5y8gj","type":"property"}],"title":"TKAutocompleting Implementations","type":"groupMarker"}],"path":"\/documentation\/tripkit\/tkautocompleting\/allowlocationinfobutton","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func additionalActionTitle() -> String?","children":[{"type":"groupMarker","children":[{"path":"\/documentation\/tripkit\/tkautocompleting\/additionalactiontitle()-4xrqs","title":"func additionalActionTitle() -> String?","type":"method"}],"title":"TKAutocompleting Implementations"}],"path":"\/documentation\/tripkit\/tkautocompleting\/additionalactiontitle()","type":"method"},{"title":"func annotation(for: TKAutocompletionResult, completion: (Result<MKAnnotation?, Error>) -> Void)","path":"\/documentation\/tripkit\/tkautocompleting\/annotation(for:completion:)","type":"method"},{"title":"func autocomplete(String, near: MKMapRect, completion: (Result<[TKAutocompletionResult], Error>) -> Void)","path":"\/documentation\/tripkit\/tkautocompleting\/autocomplete(_:near:completion:)","type":"method"},{"title":"func cancelAutocompletion()","children":[{"title":"TKAutocompleting Implementations","type":"groupMarker","children":[{"type":"method","title":"func cancelAutocompletion()","path":"\/documentation\/tripkit\/tkautocompleting\/cancelautocompletion()-7qgtk"}]}],"path":"\/documentation\/tripkit\/tkautocompleting\/cancelautocompletion()","type":"method"},{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","children":[{"children":[{"title":"func triggerAdditional(presenter: UIViewController, completion: (Bool) -> Void)","type":"method","path":"\/documentation\/tripkit\/tkautocompleting\/triggeradditional(presenter:completion:)-6z7xe"}],"title":"TKAutocompleting Implementations","type":"groupMarker"}],"path":"\/documentation\/tripkit\/tkautocompleting\/triggeradditional(presenter:completion:)","type":"method"}]},{"path":"\/documentation\/tripkit\/tkdeeplinkable","type":"protocol","title":"TKDeepLinkable","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkdeeplinkable\/deeplink","type":"property","title":"var deepLink: URL?","children":[{"type":"groupMarker","title":"TKDeepLinkable Implementations","children":[{"title":"var deepLink: URL?","path":"\/documentation\/tripkit\/tkdeeplinkable\/deeplink-86xvv","type":"property"}]}]},{"path":"\/documentation\/tripkit\/tkdeeplinkable\/downloadlink","type":"property","title":"var downloadLink: URL?","children":[{"type":"groupMarker","children":[{"type":"property","title":"var downloadLink: URL?","path":"\/documentation\/tripkit\/tkdeeplinkable\/downloadlink-6b5ku"}],"title":"TKDeepLinkable Implementations"}]}]},{"path":"\/documentation\/tripkit\/tkdisplayableroute","type":"protocol","title":"TKDisplayableRoute","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var routeColor: TKColor?","path":"\/documentation\/tripkit\/tkdisplayableroute\/routecolor","children":[{"title":"TKDisplayableRoute Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkit\/tkdisplayableroute\/routecolor-36dut","title":"var routeColor: TKColor?","type":"property"}]}],"type":"property"},{"title":"var routeDashPattern: [NSNumber]?","path":"\/documentation\/tripkit\/tkdisplayableroute\/routedashpattern","children":[{"title":"TKDisplayableRoute Implementations","type":"groupMarker","children":[{"type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/routedashpattern-o4qy","title":"var routeDashPattern: [NSNumber]?"}]}],"type":"property"},{"title":"var routeIsTravelled: Bool","path":"\/documentation\/tripkit\/tkdisplayableroute\/routeistravelled","children":[{"title":"TKDisplayableRoute Implementations","children":[{"title":"var routeIsTravelled: Bool","type":"property","path":"\/documentation\/tripkit\/tkdisplayableroute\/routeistravelled-8u36c"}],"type":"groupMarker"}],"type":"property"},{"title":"var routePath: [Any]","path":"\/documentation\/tripkit\/tkdisplayableroute\/routepath","type":"property"},{"title":"var selectionIdentifier: String?","path":"\/documentation\/tripkit\/tkdisplayableroute\/selectionidentifier","type":"property"}]},{"path":"\/documentation\/tripkit\/tkgeocodable","type":"protocol","title":"TKGeocodable","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var addressForGeocoding: String?","path":"\/documentation\/tripkit\/tkgeocodable\/addressforgeocoding","type":"property"},{"title":"var needsForwardGeocoding: Bool","path":"\/documentation\/tripkit\/tkgeocodable\/needsforwardgeocoding","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func assign(CLLocationCoordinate2D, forAddress: String)","path":"\/documentation\/tripkit\/tkgeocodable\/assign(_:foraddress:)","type":"method"}]},{"path":"\/documentation\/tripkit\/tkgeocoding","type":"protocol","title":"TKGeocoding","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func geocode(String, near: MKMapRect) async throws -> [TKNamedCoordinate]","type":"method","path":"\/documentation\/tripkit\/tkgeocoding\/geocode(_:near:)-3lsvd"},{"title":"func geocode(TKGeocodable, near: MKMapRect) async throws","type":"method","path":"\/documentation\/tripkit\/tkgeocoding\/geocode(_:near:)-9nyq3"},{"title":"func geocode(String, near: MKMapRect, completion: (Result<[TKNamedCoordinate], Error>) -> Void)","type":"method","children":[{"title":"TKGeocoding Implementations","type":"groupMarker","children":[{"type":"method","path":"\/documentation\/tripkit\/tkgeocoding\/geocode(_:near:completion:)-pg4i","title":"func geocode(TKGeocodable, near: MKMapRect, completion: (Result<Void, Error>) -> Void)"}]}],"path":"\/documentation\/tripkit\/tkgeocoding\/geocode(_:near:completion:)"}]},{"path":"\/documentation\/tripkit\/tklogger","type":"protocol","title":"TKLogger","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var level: TKLog.LogLevel","path":"\/documentation\/tripkit\/tklogger\/level"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func log(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkit\/tklogger\/log(_:identifier:message:)"},{"type":"method","title":"func log(identifier: String, request: TKLog.ServerRequest)","path":"\/documentation\/tripkit\/tklogger\/log(identifier:request:)","children":[{"type":"groupMarker","title":"TKLogger Implementations","children":[{"path":"\/documentation\/tripkit\/tklogger\/log(identifier:request:)-4twvi","type":"method","title":"func log(identifier: String, request: TKLog.ServerRequest)"}]}]},{"type":"method","title":"func log(identifier: String, response: TKLog.ServerResponse)","path":"\/documentation\/tripkit\/tklogger\/log(identifier:response:)","children":[{"title":"TKLogger Implementations","type":"groupMarker","children":[{"type":"method","title":"func log(identifier: String, response: TKLog.ServerResponse)","path":"\/documentation\/tripkit\/tklogger\/log(identifier:response:)-6xrpe"}]}]},{"type":"method","title":"func output(TKLog.LogLevel, identifier: String, message: String)","path":"\/documentation\/tripkit\/tklogger\/output(_:identifier:message:)"}]},{"path":"\/documentation\/tripkit\/tkpermissionmanager","type":"protocol","title":"TKPermissionManager","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkpermissionmanager\/authorizationalerttext","title":"var authorizationAlertText: String"},{"type":"property","path":"\/documentation\/tripkit\/tkpermissionmanager\/authorizationrestrictionsapply","children":[{"title":"TKPermissionManager Implementations","type":"groupMarker","children":[{"type":"property","title":"var authorizationRestrictionsApply: Bool","path":"\/documentation\/tripkit\/tkpermissionmanager\/authorizationrestrictionsapply-1ca25"}]}],"title":"var authorizationRestrictionsApply: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tkpermissionmanager\/authorizationstatus","title":"var authorizationStatus: TKAuthorizationStatus"},{"type":"property","path":"\/documentation\/tripkit\/tkpermissionmanager\/featureisavailable","children":[{"title":"TKPermissionManager Implementations","type":"groupMarker","children":[{"path":"\/documentation\/tripkit\/tkpermissionmanager\/featureisavailable-91ycn","type":"property","title":"var featureIsAvailable: Bool"}]}],"title":"var featureIsAvailable: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tkpermissionmanager\/isauthorized","title":"var isAuthorized: Bool"},{"type":"property","path":"\/documentation\/tripkit\/tkpermissionmanager\/opensettingshandler","title":"var openSettingsHandler: (() -> Void)?"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkpermissionmanager\/askforpermission(_:)","title":"func askForPermission((Bool) -> Void)"},{"type":"method","path":"\/documentation\/tripkit\/tkpermissionmanager\/showauthorizationalert(sender:in:)","title":"func showAuthorizationAlert(sender: Any?, in: UIViewController)"},{"type":"method","path":"\/documentation\/tripkit\/tkpermissionmanager\/tryauthorization(sender:in:completion:)","title":"func tryAuthorization(sender: Any?, in: UIViewController, completion: (Bool) -> Void)"}]},{"path":"\/documentation\/tripkit\/tkrealtimeupdatable","type":"protocol","title":"TKRealTimeUpdatable","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var wantsRealTimeUpdates: Bool","path":"\/documentation\/tripkit\/tkrealtimeupdatable\/wantsrealtimeupdates"}]},{"path":"\/documentation\/tripkit\/tkrouterrequestable","type":"protocol","title":"TKRouterRequestable","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var additional: Set<URLQueryItem>","path":"\/documentation\/tripkit\/tkrouterrequestable\/additional"},{"type":"property","title":"var at: TKRoutingQueryTime","path":"\/documentation\/tripkit\/tkrouterrequestable\/at"},{"type":"property","title":"var context: NSManagedObjectContext?","path":"\/documentation\/tripkit\/tkrouterrequestable\/context"},{"type":"property","title":"var from: TKAPI.Location","path":"\/documentation\/tripkit\/tkrouterrequestable\/from"},{"type":"property","title":"var modes: Set<String>","path":"\/documentation\/tripkit\/tkrouterrequestable\/modes"},{"type":"property","title":"var to: TKAPI.Location","path":"\/documentation\/tripkit\/tkrouterrequestable\/to"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func toTripRequest() -> TripRequest","path":"\/documentation\/tripkit\/tkrouterrequestable\/totriprequest()"}]},{"path":"\/documentation\/tripkit\/tksortableannotation","type":"protocol","title":"TKSortableAnnotation","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tksortableannotation\/sortscore","title":"var sortScore: Int","type":"property"}]},{"path":"\/documentation\/tripkit\/tkurlsavable","type":"protocol","title":"TKURLSavable","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkurlsavable\/saveurl","type":"property","title":"var saveURL: URL?"},{"path":"\/documentation\/tripkit\/tkurlsavable\/shareurl","type":"property","title":"var shareURL: URL?"}]},{"path":"\/documentation\/tripkit\/tkurlshareable","type":"protocol","title":"TKURLShareable","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkurlshareable\/shareurl","type":"property","title":"var shareURL: URL?"}]},{"path":"\/documentation\/tripkit\/tkvehicular","type":"protocol","title":"TKVehicular","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var garage: MKAnnotation?","path":"\/documentation\/tripkit\/tkvehicular\/garage","type":"property"},{"title":"var icon: TKImage?","path":"\/documentation\/tripkit\/tkvehicular\/icon","type":"property"},{"title":"var isCarPooling: Bool","path":"\/documentation\/tripkit\/tkvehicular\/iscarpooling","type":"property"},{"title":"var name: String?","path":"\/documentation\/tripkit\/tkvehicular\/name","type":"property"},{"title":"var title: String","path":"\/documentation\/tripkit\/tkvehicular\/title","type":"property"},{"title":"var vehicleID: UUID?","path":"\/documentation\/tripkit\/tkvehicular\/vehicleid","type":"property"},{"title":"var vehicleType: TKVehicleType","path":"\/documentation\/tripkit\/tkvehicular\/vehicletype","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func toModel() -> TKAPI.PrivateVehicle","path":"\/documentation\/tripkit\/tkvehicular\/tomodel()","type":"method"}]},{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/defaultcodable","type":"struct","title":"DefaultCodable","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(wrappedValue: Default.DefaultValue)","path":"\/documentation\/tripkit\/defaultcodable\/init(wrappedvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var wrappedValue: Default.DefaultValue","path":"\/documentation\/tripkit\/defaultcodable\/wrappedvalue"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/defaultcodable\/init(from:)"}],"title":"Decodable Implementations","path":"\/documentation\/tripkit\/defaultcodable\/decodable-implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/defaultcodable\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"}],"title":"Encodable Implementations","path":"\/documentation\/tripkit\/defaultcodable\/encodable-implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/defaultcodable\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/defaultcodable\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/defaultemptyarraystrategy","type":"struct","title":"DefaultEmptyArrayStrategy","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/defaultemptyarraystrategy\/defaultvalue","type":"property","title":"static var defaultValue: [T]"}]},{"path":"\/documentation\/tripkit\/defaultfalsestrategy","type":"struct","title":"DefaultFalseStrategy","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/defaultfalsestrategy\/defaultvalue","title":"static var defaultValue: Bool"}]},{"path":"\/documentation\/tripkit\/defaultlossyarray","type":"struct","title":"DefaultLossyArray","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: LossyArray<T>","path":"\/documentation\/tripkit\/defaultlossyarray\/defaultvalue","type":"property"}]},{"path":"\/documentation\/tripkit\/defaulttruestrategy","type":"struct","title":"DefaultTrueStrategy","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/defaulttruestrategy\/defaultvalue","type":"property","title":"static var defaultValue: Bool"}]},{"path":"\/documentation\/tripkit\/iso8601","type":"struct","title":"ISO8601","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: Date)","path":"\/documentation\/tripkit\/iso8601\/init(wrappedvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: Date","path":"\/documentation\/tripkit\/iso8601\/wrappedvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/iso8601\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"title":"Decodable Implementations","path":"\/documentation\/tripkit\/iso8601\/decodable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/iso8601\/encode(to:)"}],"title":"Encodable Implementations","path":"\/documentation\/tripkit\/iso8601\/encodable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/iso8601\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/iso8601\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970","type":"struct","title":"ISO8601OrSecondsSince1970","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/init(wrappedvalue:)","type":"init","title":"init(wrappedValue: Date)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/wrappedvalue","type":"property","title":"var wrappedValue: Date"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/decodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"title":"Decodable Implementations"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/encodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"}],"title":"Encodable Implementations"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/iso8601orsecondssince1970\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/lossyarray","type":"struct","title":"LossyArray","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(wrappedValue: [T])","path":"\/documentation\/tripkit\/lossyarray\/init(wrappedvalue:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"var wrappedValue: [T]","path":"\/documentation\/tripkit\/lossyarray\/wrappedvalue"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/lossyarray\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"title":"Decodable Implementations","path":"\/documentation\/tripkit\/lossyarray\/decodable-implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/lossyarray\/encode(to:)","type":"method"}],"title":"Encodable Implementations","path":"\/documentation\/tripkit\/lossyarray\/encodable-implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/lossyarray\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/lossyarray\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/optionaliso8601","type":"struct","title":"OptionalISO8601","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: Date?)","path":"\/documentation\/tripkit\/optionaliso8601\/init(wrappedvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: Date?","path":"\/documentation\/tripkit\/optionaliso8601\/wrappedvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkit\/optionaliso8601\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/optionaliso8601\/init(from:)","type":"init"}]},{"title":"Encodable Implementations","path":"\/documentation\/tripkit\/optionaliso8601\/encodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/optionaliso8601\/encode(to:)"}]},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/optionaliso8601\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/optionaliso8601\/!=(_:_:)"}]}]},{"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970","type":"struct","title":"OptionalISO8601OrSecondsSince1970","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(wrappedValue: Date?)","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/init(wrappedvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var wrappedValue: Date?","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/wrappedvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/init(from:)","type":"init"}],"title":"Decodable Implementations","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/decodable-implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/encode(to:)","type":"method"}],"title":"Encodable Implementations","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/encodable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/optionaliso8601orsecondssince1970\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/point","type":"struct","title":"Point","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(latitude: Double, longitude: Double)","path":"\/documentation\/tripkit\/point\/init(latitude:longitude:)"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func decodePolyline(String) -> [Point]","path":"\/documentation\/tripkit\/point\/decodepolyline(_:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/point\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/point\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/polygon","type":"struct","title":"Polygon","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/polygon\/init(points:)","title":"init(points: [Point])"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/polygon\/contains(_:online:)","title":"func contains(Point, onLine: Bool) -> Bool"}]},{"path":"\/documentation\/tripkit\/tkapi","type":"struct","title":"TKAPI","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/alert","title":"TKAPI.Alert","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/text","type":"property","title":"let text: String"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/type","type":"property","title":"let type: TKAPI.Alert.Action.ActionType"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/actiontype","type":"enum","title":"TKAPI.Alert.Action.ActionType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/actiontype\/reroute(_:)","title":"case reroute([String])"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/actiontype\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/actiontype\/equatable-implementations","title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/decodable-implementations","type":"symbol","title":"Decodable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/init(from:)","type":"init","title":"init(from: any Decoder) throws"}]},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/encodable-implementations","type":"symbol","title":"Encodable Implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"}]},{"path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct\/!=(_:_:)"}]}],"title":"TKAPI.Alert.Action","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.struct"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/alert\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let action: TKAPI.Alert.Action?","path":"\/documentation\/tripkit\/tkapi\/alert\/action-swift.property"},{"type":"property","title":"let fromDate: Date?","path":"\/documentation\/tripkit\/tkapi\/alert\/fromdate"},{"type":"property","title":"let hashCode: Int","path":"\/documentation\/tripkit\/tkapi\/alert\/hashcode"},{"type":"property","title":"let lastUpdated: Date?","path":"\/documentation\/tripkit\/tkapi\/alert\/lastupdated"},{"type":"property","title":"let location: TKAPI.Location?","path":"\/documentation\/tripkit\/tkapi\/alert\/location"},{"type":"property","title":"let remoteIcon: URL?","path":"\/documentation\/tripkit\/tkapi\/alert\/remoteicon"},{"type":"property","title":"let serviceTripID: String?","path":"\/documentation\/tripkit\/tkapi\/alert\/servicetripid"},{"type":"property","title":"let severity: TKAPI.Alert.Severity","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.property"},{"type":"property","title":"let text: String?","path":"\/documentation\/tripkit\/tkapi\/alert\/text"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkit\/tkapi\/alert\/title"},{"type":"property","title":"let toDate: Date?","path":"\/documentation\/tripkit\/tkapi\/alert\/todate"},{"type":"property","title":"let url: URL?","path":"\/documentation\/tripkit\/tkapi\/alert\/url"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case alert","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/alert"},{"type":"case","title":"case info","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/info"},{"type":"case","title":"case warning","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/warning"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum\/hash(into:)"}]}],"title":"TKAPI.Alert.Severity","path":"\/documentation\/tripkit\/tkapi\/alert\/severity-swift.enum"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/alert\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/alert\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/alertmapping","title":"TKAPI.AlertMapping","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/alert","title":"let alert: TKAPI.Alert"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/modeinfo","title":"let modeInfo: TKModeInfo?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/operators","title":"let operators: [String]?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/routes","title":"let routes: [TKAPI.AlertRouteMapping]?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/servicetripids","title":"let serviceTripIDs: [String]?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/stopcodes","title":"let stopCodes: [String]?"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/alertmapping\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/alertmapping\/equatable-implementations","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping","title":"TKAPI.AlertRouteMapping","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/color","title":"var color: TKColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/modeinfo","title":"let modeInfo: TKModeInfo","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/number","title":"let number: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/alertroutemapping\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/appinfo","title":"TKAPI.AppInfo","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/deeplink","title":"let deepLink: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/downloadurl","title":"let downloadURL: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/name","title":"let name: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case deepLink","type":"case","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/deeplink"},{"title":"case downloadURL","type":"case","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/downloadurl"},{"title":"case name","type":"case","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/name"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","type":"init","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/init(intvalue:)"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/init(rawvalue:)"},{"title":"init?(stringValue: String)","type":"init","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/init(stringvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/codingkey-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/debugdescription"},{"type":"property","title":"var description: String","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/description"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/appinfo\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)"}]}],"title":"TKAPI.AppInfo.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/appinfo\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/appinfo\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo","title":"TKAPI.BikePodInfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/availablebikes","title":"let availableBikes: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/availablespaces","title":"var availableSpaces: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/deeplink","title":"let deepLink: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/hasrealtime","title":"var hasRealTime: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/inservice","title":"let inService: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/lastupdate","title":"let lastUpdate: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/operatorinfo","title":"let operatorInfo: TKAPI.CompanyInfo","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/source","title":"let source: TKAPI.DataAttribution?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/totalspaces","title":"let totalSpaces: Int?","type":"property"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/bikepodinfo\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability","title":"TKAPI.BookingAvailability","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var end: Date?","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/end","type":"property"},{"title":"var start: Date?","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/start","type":"property"},{"title":"let status: Status","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/status","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/interval\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"title":"TKAPI.BookingAvailability.Interval"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/intervals","type":"property","title":"let intervals: [Interval]"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/lastupdated","type":"property","title":"var lastUpdated: Date"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/getavailability(at:)","type":"method","title":"func getAvailability(at: Date) -> TKAPI.BookingAvailability.Interval?"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/getstatus(start:end:)","type":"method","title":"func getStatus(start: Date, end: Date) -> TKAPI.BookingAvailability.Status"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/available","type":"case","title":"case available"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/notavailable","type":"case","title":"case notAvailable"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/unknown","type":"case","title":"case unknown"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/!=(_:_:)"}],"title":"Equatable Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/status\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations"}],"title":"TKAPI.BookingAvailability.Status"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/bookingavailability\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/caravailability","title":"TKAPI.CarAvailability","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/caravailability\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let appInfo: AppInfo?","path":"\/documentation\/tripkit\/tkapi\/caravailability\/appinfo"},{"type":"property","title":"let availability: BookingAvailability?","path":"\/documentation\/tripkit\/tkapi\/caravailability\/availability"},{"type":"property","title":"let bookInApp: Bool?","path":"\/documentation\/tripkit\/tkapi\/caravailability\/bookinapp"},{"type":"property","title":"let bookingURL: URL?","path":"\/documentation\/tripkit\/tkapi\/caravailability\/bookingurl"},{"type":"property","title":"let car: SharedVehicleInfo","path":"\/documentation\/tripkit\/tkapi\/caravailability\/car"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/caravailability\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/caravailability\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo","title":"TKAPI.CarParkInfo","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance","title":"TKAPI.CarParkInfo.Entrance","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/address","title":"let address: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/lat","title":"let lat: Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/lng","title":"let lng: Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/type","title":"let type: EntranceType"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrance\/equatable-implementations","title":"Equatable Implementations"}]},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/availablespaces","title":"let availableSpaces: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/deeplink","title":"let deepLink: URL?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/encodedparkingarea","title":"let encodedParkingArea: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrances","title":"let entrances: [Entrance]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/hasrealtime","title":"var hasRealTime: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/info","title":"let info: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/lastupdate","title":"let lastUpdate: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/openinghours","title":"let openingHours: TKAPI.OpeningHours?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/operatorinfo","title":"let operatorInfo: TKAPI.CompanyInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/pricingtables","title":"let pricingTables: [TKAPI.PricingTable]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/source","title":"let source: TKAPI.DataAttribution?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/totalspaces","title":"let totalSpaces: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype","title":"TKAPI.CarParkInfo.EntranceType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/disabledpedestrian","title":"case disabledPedestrian"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/entranceandexit","title":"case entranceAndExit"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/entranceonly","title":"case entranceOnly"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/exitonly","title":"case exitOnly"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/pedestrian","title":"case pedestrian"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/permit","title":"case permit"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/entrancetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/carparkinfo\/!=(_:_:)"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo","title":"TKAPI.CarPodInfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availabilities","type":"property","title":"let availabilities: [TKAPI.CarAvailability]?"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availabilitymode","type":"property","title":"let availabilityMode: TKAPI.AvailabilityMode?"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availablechargingspaces","type":"property","title":"let availableChargingSpaces: Int?"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availablespaces","type":"property","title":"var availableSpaces: Int?"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/availablevehicles","type":"property","title":"let availableVehicles: Int?"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/deeplink","type":"property","title":"let deepLink: URL?"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/hasrealtime","type":"property","title":"var hasRealTime: Bool"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/identifier","type":"property","title":"let identifier: String"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/inservice","type":"property","title":"let inService: Bool?"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/lastupdate","type":"property","title":"let lastUpdate: Date?"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/operatorinfo","type":"property","title":"let operatorInfo: TKAPI.CompanyInfo"},{"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/totalspaces","type":"property","title":"let totalSpaces: Int?"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/carpodinfo\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/carrentalinfo","title":"TKAPI.CarRentalInfo","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let company: TKAPI.CompanyInfo","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/company"},{"type":"property","title":"var hasRealTime: Bool","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/hasrealtime"},{"type":"property","title":"let identifier: String","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/identifier"},{"type":"property","title":"let openingHours: TKAPI.OpeningHours?","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/openinghours"},{"type":"property","title":"let source: TKAPI.DataAttribution?","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/source"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/carrentalinfo\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo","title":"TKAPI.CompanyInfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/init(name:website:phone:remoteicon:remotedarkicon:color:appinfo:)","type":"init","title":"init(name: String, website: URL?, phone: String?, remoteIcon: String?, remoteDarkIcon: String?, color: TKAPI.RGBColor?, appInfo: TKAPI.AppInfo?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/appinfo","type":"property","title":"let appInfo: TKAPI.AppInfo?"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/color","type":"property","title":"let color: TKAPI.RGBColor?"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/phone","type":"property","title":"let phone: String?"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/remotedarkicon","type":"property","title":"let remoteDarkIcon: String?"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/remotedarkiconurl","type":"property","title":"var remoteDarkIconURL: URL?"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/remoteicon","type":"property","title":"let remoteIcon: String?"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/remoteiconurl","type":"property","title":"var remoteIconURL: URL?"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/website","type":"property","title":"let website: URL?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/companyinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution","title":"TKAPI.DataAttribution","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/init(provider:disclaimer:)","type":"init","title":"init(provider: TKAPI.CompanyInfo, disclaimer: String?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/disclaimer","type":"property","title":"let disclaimer: String?"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/provider","type":"property","title":"let provider: TKAPI.CompanyInfo"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/dataattribution\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/dataattribution\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/departure","title":"TKAPI.Departure","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/departure\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alertHashCodes: [Int]","path":"\/documentation\/tripkit\/tkapi\/departure\/alerthashcodes","type":"property"},{"title":"var alternativeVehicles: [TKAPI.Vehicle]","path":"\/documentation\/tripkit\/tkapi\/departure\/alternativevehicles","type":"property"},{"title":"let bicycleAccessible: Bool?","path":"\/documentation\/tripkit\/tkapi\/departure\/bicycleaccessible","type":"property"},{"title":"let color: TKAPI.RGBColor?","path":"\/documentation\/tripkit\/tkapi\/departure\/color","type":"property"},{"title":"let direction: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/direction","type":"property"},{"title":"let endPlatform: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/endplatform","type":"property"},{"title":"let endStopCode: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/endstopcode","type":"property"},{"title":"var endTime: Date?","path":"\/documentation\/tripkit\/tkapi\/departure\/endtime","type":"property"},{"title":"let frequency: Int?","path":"\/documentation\/tripkit\/tkapi\/departure\/frequency","type":"property"},{"title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkit\/tkapi\/departure\/modeinfo","type":"property"},{"title":"let name: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/name","type":"property"},{"title":"let number: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/number","type":"property"},{"title":"let operatorID: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/operatorid","type":"property"},{"title":"let operatorName: String","path":"\/documentation\/tripkit\/tkapi\/departure\/operatorname","type":"property"},{"title":"let primaryVehicle: TKAPI.Vehicle?","path":"\/documentation\/tripkit\/tkapi\/departure\/primaryvehicle","type":"property"},{"title":"var realTimeArrival: Date?","path":"\/documentation\/tripkit\/tkapi\/departure\/realtimearrival","type":"property"},{"title":"var realTimeDeparture: Date?","path":"\/documentation\/tripkit\/tkapi\/departure\/realtimedeparture","type":"property"},{"title":"let realTimeStatus: TKAPI.RealTimeStatus?","path":"\/documentation\/tripkit\/tkapi\/departure\/realtimestatus","type":"property"},{"title":"let routeID: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/routeid","type":"property"},{"title":"let searchString: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/searchstring","type":"property"},{"title":"let serviceTripID: String","path":"\/documentation\/tripkit\/tkapi\/departure\/servicetripid","type":"property"},{"title":"let startPlatform: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/startplatform","type":"property"},{"title":"var startTime: Date?","path":"\/documentation\/tripkit\/tkapi\/departure\/starttime","type":"property"},{"title":"let timetableEndPlatform: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/timetableendplatform","type":"property"},{"title":"let timetableStartPlatform: String?","path":"\/documentation\/tripkit\/tkapi\/departure\/timetablestartplatform","type":"property"},{"title":"let wheelchairAccessible: Bool?","path":"\/documentation\/tripkit\/tkapi\/departure\/wheelchairaccessible","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/departure\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/departure\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/departures","title":"TKAPI.Departures","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.Departures.Embarkations","type":"struct","path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let services: [TKAPI.Departure]","path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/services"},{"type":"property","title":"let stopCode: String","path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/stopcode"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/departures\/embarkations\/equatable-implementations"}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/departures\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alerts: [TKAPI.Alert]?","type":"property","path":"\/documentation\/tripkit\/tkapi\/departures\/alerts"},{"title":"let embarkationStops: [TKAPI.Departures.Embarkations]","type":"property","path":"\/documentation\/tripkit\/tkapi\/departures\/embarkationstops"},{"title":"let parentStops: [TKAPI.Stop]?","type":"property","path":"\/documentation\/tripkit\/tkapi\/departures\/parentstops"},{"title":"let stops: [TKAPI.Stop]?","type":"property","path":"\/documentation\/tripkit\/tkapi\/departures\/stops"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/departures\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/departures\/!=(_:_:)"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/directionstop","title":"TKAPI.DirectionStop","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/directionstop\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let isCommon: Bool","path":"\/documentation\/tripkit\/tkapi\/directionstop\/iscommon","type":"property"},{"title":"let latitude: Double","path":"\/documentation\/tripkit\/tkapi\/directionstop\/latitude","type":"property"},{"title":"let longitude: Double","path":"\/documentation\/tripkit\/tkapi\/directionstop\/longitude","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkit\/tkapi\/directionstop\/name","type":"property"},{"title":"let stopCode: String","path":"\/documentation\/tripkit\/tkapi\/directionstop\/stopcode","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/directionstop\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/directionstop\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/email","title":"TKAPI.Email","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(address: String, validated: Bool, primary: Bool)","path":"\/documentation\/tripkit\/tkapi\/email\/init(address:validated:primary:)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/email\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let address: String","path":"\/documentation\/tripkit\/tkapi\/email\/address","type":"property"},{"title":"let primary: Bool","path":"\/documentation\/tripkit\/tkapi\/email\/primary","type":"property"},{"title":"let verified: Bool","path":"\/documentation\/tripkit\/tkapi\/email\/verified","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/email\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/email\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse","title":"TKAPI.EventsResponse","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/description","title":"let description: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/displayimage","title":"let displayImage: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/endtime","title":"let endTime: Date?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/icon","title":"let icon: TKAPI.EventsResponse.Icon?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/id","title":"let id: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/location","title":"let location: TKAPI.EventsResponse.Location"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/starttime","title":"let startTime: Date?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/title","title":"let title: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/url","title":"let url: URL?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/event\/!=(_:_:)"}]}],"title":"TKAPI.EventsResponse.Event"},{"type":"struct","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/remoteicon","title":"let remoteIcon: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/remoteiconistemplate","title":"let remoteIconIsTemplate: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/icon\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}],"title":"TKAPI.EventsResponse.Icon"},{"type":"struct","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/lat","title":"let lat: Double"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/lng","title":"let lng: Double"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/location\/equatable-implementations","title":"Equatable Implementations"}],"title":"TKAPI.EventsResponse.Location"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/events","title":"let events: [TKAPI.EventsResponse.Event]"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/empty","title":"static let empty: TKAPI.EventsResponse"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/eventsresponse\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/genericmodedetails","title":"TKAPI.GenericModeDetails","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var lockedModes: [TKAPI.SpecificModeDetails]","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/lockedmodes"},{"type":"property","title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/modeinfo"},{"type":"property","title":"var specificModes: [TKAPI.SpecificModeDetails]","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/specificmodes"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/title"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/genericmodedetails\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/latestresponse","title":"TKAPI.LatestResponse","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/latestresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/latestresponse\/services","title":"let services: [TKAPI.LatestService]","type":"property"}]},{"path":"\/documentation\/tripkit\/tkapi\/latestservice","title":"TKAPI.LatestService","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/latestservice\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/latestservice\/alerts","title":"var alerts: [TKAPI.Alert]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/latestservice\/alternativevehicles","title":"var alternativeVehicles: [TKAPI.Vehicle]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/latestservice\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/latestservice\/endtime","title":"var endTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/latestservice\/primaryvehicle","title":"let primaryVehicle: TKAPI.Vehicle?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/latestservice\/starttime","title":"var startTime: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/latestservice\/stops","title":"var stops: [TKAPI.LatestStop]","type":"property"}]},{"path":"\/documentation\/tripkit\/tkapi\/lateststop","title":"TKAPI.LatestStop","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/lateststop\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/lateststop\/arrival","type":"property","title":"var arrival: Date?"},{"path":"\/documentation\/tripkit\/tkapi\/lateststop\/departure","type":"property","title":"var departure: Date?"},{"path":"\/documentation\/tripkit\/tkapi\/lateststop\/stopcode","type":"property","title":"let stopCode: String"}]},{"path":"\/documentation\/tripkit\/tkapi\/location","title":"TKAPI.Location","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/location\/init(annotation:)","title":"init(annotation: MKAnnotation)","type":"init"},{"path":"\/documentation\/tripkit\/tkapi\/location\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/tripkit\/tkapi\/location\/init(latitude:longitude:bearing:name:address:)","title":"init(latitude: TKAPI.Degrees, longitude: TKAPI.Degrees, bearing: TKAPI.Direction?, name: String?, address: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/location\/address","title":"var address: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/location\/bearing","title":"var bearing: TKAPI.Direction?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/location\/isvalid","title":"var isValid: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/location\/latitude","title":"let latitude: TKAPI.Degrees","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/location\/longitude","title":"let longitude: TKAPI.Degrees","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/location\/name","title":"var name: String?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/address","type":"case","title":"case address"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/bearing","type":"case","title":"case bearing"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/latitude","type":"case","title":"case latitude"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/longitude","type":"case","title":"case longitude"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/name","type":"case","title":"case name"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/init(intvalue:)","type":"init","title":"init?(intValue: Int)"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/init(stringvalue:)","type":"init","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/codingkey-implementations","type":"symbol","title":"CodingKey Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/description","title":"var description: String","type":"property"}]},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys\/hash(into:)"}]}],"path":"\/documentation\/tripkit\/tkapi\/location\/codingkeys","title":"TKAPI.Location.CodingKeys","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/location\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/locationinfo","title":"TKAPI.LocationInfo","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let w3w: String?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/w3w","type":"property"},{"title":"let w3wInfoURL: URL?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/w3winfourl","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct\/!=(_:_:)","type":"op"}]}],"title":"TKAPI.LocationInfo.Details","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.struct","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let alerts: [Alert]?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/alerts","type":"property"},{"title":"let bikePod: TKAPI.BikePodInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/bikepod","type":"property"},{"title":"let carPark: TKAPI.CarParkInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/carpark","type":"property"},{"title":"let carPod: TKAPI.CarPodInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/carpod","type":"property"},{"title":"let carRental: TKAPI.CarRentalInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/carrental","type":"property"},{"title":"let details: Details?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/details-swift.property","type":"property"},{"title":"let freeFloating: TKAPI.SharedVehicleInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/freefloating","type":"property"},{"title":"var hasRealTime: Bool","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/hasrealtime","type":"property"},{"title":"let onStreetParking: TKAPI.OnStreetParkingInfo?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/onstreetparking","type":"property"},{"title":"let stop: TKStopCoordinate?","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/stop","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/locationinfo\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse","title":"TKAPI.LocationsResponse","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var all: [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/all","type":"property"},{"title":"var bikePods: [TKBikePodLocation]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/bikepods","type":"property"},{"title":"var carParks: [TKCarParkLocation]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/carparks","type":"property"},{"title":"var carPods: [TKCarPodLocation]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/carpods","type":"property"},{"title":"var carRentals: [TKCarRentalLocation]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/carrentals","type":"property"},{"title":"var facilities: [TKFacilityLocation]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/facilities","type":"property"},{"title":"var freeFloating: [TKFreeFloatingVehicleLocation]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/freefloating","type":"property"},{"title":"let hashCode: Int","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/hashcode","type":"property"},{"title":"let key: String","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/key","type":"property"},{"title":"var onStreetParking: [TKOnStreetParkingLocation]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/onstreetparking","type":"property"},{"title":"var stops: [TKStopCoordinate]","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/stops","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/group\/!=(_:_:)"}],"type":"symbol"}],"type":"struct","title":"TKAPI.LocationsResponse.Group"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/groups","type":"property","title":"let groups: [Group]"},{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/empty","type":"property","title":"static let empty: LocationsResponse"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/locationsresponse\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/modedetails","title":"TKAPI.ModeDetails","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/implies","title":"let implies: [String]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/isbranding","title":"let isBranding: Bool?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/istemplate","title":"let isTemplate: Bool?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/required","title":"let required: Bool?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/rgbcolor","title":"let rgbColor: TKAPI.RGBColor","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/subtitle","title":"let subtitle: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/title","title":"let title: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/vehicleicon","title":"let vehicleIcon: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/modedetails\/websiteurl","title":"let websiteURL: URL?","type":"property"}]},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo","title":"TKAPI.OnStreetParkingInfo","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction","title":"TKAPI.OnStreetParkingInfo.Restriction","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let color: String","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/color","type":"property"},{"title":"let daysAndTimes: OpeningHours","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/daysandtimes","type":"property"},{"title":"let maximumParkingMinutes: Int","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/maximumparkingminutes","type":"property"},{"title":"let parkingSymbol: String","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/parkingsymbol","type":"property"},{"title":"let type: String","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restriction\/equatable-implementations","type":"symbol"}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/actualrate","title":"let actualRate: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.property","title":"let availableContent: [AvailableContent]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablespaces","title":"let availableSpaces: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/description","title":"let description: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/encodedpolygon","title":"let encodedPolygon: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/encodedpolyline","title":"let encodedPolyline: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/hasrealtime","title":"var hasRealTime: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/identifier","title":"let identifier: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/lastupdate","title":"let lastUpdate: Date?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/occupiedspaces","title":"let occupiedSpaces: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/parkingvacancy","title":"let parkingVacancy: Vacancy?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttypes","title":"let paymentTypes: [PaymentType]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/restrictions","title":"let restrictions: [Restriction]?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/source","title":"let source: TKAPI.DataAttribution?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/totalspaces","title":"let totalSpaces: Int?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum","title":"TKAPI.OnStreetParkingInfo.AvailableContent","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case actualRate","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/actualrate"},{"type":"case","title":"case availableSpaces","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/availablespaces"},{"type":"case","title":"case paymentTypes","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/paymenttypes"},{"type":"case","title":"case restrictions","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/restrictions"},{"type":"case","title":"case totalSpaces","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/totalspaces"},{"type":"case","title":"case unknown","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/unknown"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/init(from:)"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/init(rawvalue:)"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/!=(_:_:)","type":"op"}],"type":"symbol"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/init(from:)-2waf8","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/availablecontent-swift.enum\/hash(into:)","type":"method"}],"type":"symbol"}],"type":"enum"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype","title":"TKAPI.OnStreetParkingInfo.PaymentType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case app","type":"case","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/app"},{"title":"case coins","type":"case","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/coins"},{"title":"case creditCard","type":"case","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/creditcard"},{"title":"case meter","type":"case","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/meter"},{"title":"case phone","type":"case","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/phone"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/paymenttype\/rawrepresentable-implementations"}],"type":"enum"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy","title":"TKAPI.OnStreetParkingInfo.Vacancy","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/full","title":"case full","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/limited","title":"case limited","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/plenty","title":"case plenty","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/vacancy\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/onstreetparkinginfo\/!=(_:_:)"}],"type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/openinghours","title":"TKAPI.OpeningHours","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/closes","title":"let closes: TimeInterval"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/opens","title":"let opens: TimeInterval"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time\/!=(_:_:)","type":"op"}]}],"title":"TKAPI.OpeningHours.Day.Time","type":"struct","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/time"},{"title":"Initializers","type":"groupMarker"},{"title":"init(day: TKAPI.OpeningHours.Day.DayOfWeek, times: [TKAPI.OpeningHours.Day.Time])","type":"init","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/init(day:times:)"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let day: TKAPI.OpeningHours.Day.DayOfWeek","type":"property","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/day"},{"title":"let times: [TKAPI.OpeningHours.Day.Time]","type":"property","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/times"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func contains(Date, in: TimeZone) -> Bool","type":"method","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/contains(_:in:)"},{"title":"func isOpen(at: Date, in: TimeZone) -> Bool","type":"method","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/isopen(at:in:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.OpeningHours.Day.DayOfWeek","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case friday","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/friday"},{"type":"case","title":"case monday","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/monday"},{"type":"case","title":"case publicHoliday","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/publicholiday"},{"type":"case","title":"case saturday","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/saturday"},{"type":"case","title":"case sunday","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/sunday"},{"type":"case","title":"case thursday","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/thursday"},{"type":"case","title":"case tuesday","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/tuesday"},{"type":"case","title":"case wednesday","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/wednesday"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/init(rawvalue:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var weekday: Int?","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/weekday"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let weekdays: [TKAPI.OpeningHours.Day.DayOfWeek]","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/weekdays"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/!=(_:_:)","type":"op"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/dayofweek\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/openinghours\/day\/!=(_:_:)"}]}],"title":"TKAPI.OpeningHours.Day"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/days","type":"property","title":"let days: [TKAPI.OpeningHours.Day]"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/timezone","type":"property","title":"let timeZone: TimeZone"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/isopen(at:)","type":"method","title":"func isOpen(at: Date) -> Bool"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/openinghours\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/openinghours\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/operator","title":"TKAPI.Operator","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/operator\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/operator\/id","type":"property","title":"let id: String?"},{"path":"\/documentation\/tripkit\/tkapi\/operator\/name","type":"property","title":"let name: String?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/operator\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/operator\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/paratransit","title":"TKAPI.Paratransit","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/paratransit\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/paratransit\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkit\/tkapi\/paratransit\/number","type":"property","title":"let number: String"},{"path":"\/documentation\/tripkit\/tkapi\/paratransit\/url","type":"property","title":"let url: URL"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/paratransit\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/paratransit\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/phone","title":"TKAPI.Phone","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/phone\/init(from:)","type":"init"},{"title":"init(number: String, countryCode: String?, validated: Bool, type: String?, id: String?)","path":"\/documentation\/tripkit\/tkapi\/phone\/init(number:countrycode:validated:type:id:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let countryCode: String?","path":"\/documentation\/tripkit\/tkapi\/phone\/countrycode","type":"property"},{"title":"let id: String?","path":"\/documentation\/tripkit\/tkapi\/phone\/id","type":"property"},{"title":"let number: String","path":"\/documentation\/tripkit\/tkapi\/phone\/number","type":"property"},{"title":"let type: String?","path":"\/documentation\/tripkit\/tkapi\/phone\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/phone\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/phone\/!=(_:_:)"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/pricingtable","title":"TKAPI.PricingTable","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"TKAPI.PricingTable.Entry","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let label: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/label"},{"title":"let maxDurationInMinutes: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/maxdurationinminutes"},{"title":"let price: Float","type":"property","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/price"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry\/equatable-implementations"}],"path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entry"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let currency: String","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/currency"},{"type":"property","title":"let entries: [TKAPI.PricingTable.Entry]","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/entries"},{"type":"property","title":"let subtitle: String?","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/subtitle"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/title"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/pricingtable\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/pricingtable\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicle","title":"TKAPI.PrivateVehicle","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/init(from:)","type":"init"},{"title":"init(type: TKAPI.PrivateVehicleType, UUID: String?, name: String?, garage: TKAPI.Location?)","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/init(type:uuid:name:garage:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let UUID: String?","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/uuid","type":"property"},{"title":"let garage: TKAPI.Location?","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/garage","type":"property"},{"title":"let name: String?","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/name","type":"property"},{"title":"let type: TKAPI.PrivateVehicleType","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/type","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/privatevehicle\/!=(_:_:)"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/query","title":"TKAPI.Query","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/query\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/query\/arrive","type":"property","title":"var arrive: Date?"},{"path":"\/documentation\/tripkit\/tkapi\/query\/depart","type":"property","title":"var depart: Date?"},{"path":"\/documentation\/tripkit\/tkapi\/query\/from","type":"property","title":"let from: TKAPI.Location"},{"path":"\/documentation\/tripkit\/tkapi\/query\/to","type":"property","title":"let to: TKAPI.Location"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/query\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/query\/!=(_:_:)","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/rgbcolor","title":"TKAPI.RGBColor","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init?(for: TKColor?)","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/init(for:)","type":"init"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/color","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/rgbcolor\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo","title":"TKAPI.RegionInfo","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/modes","title":"let modes: [String : TKAPI.GenericModeDetails]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/paratransit","title":"let paratransit: TKAPI.Paratransit?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/streetbicyclepaths","title":"let streetBicyclePaths: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/streetwheelchairaccessibility","title":"let streetWheelchairAccessibility: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/transitbicycleaccessibility","title":"let transitBicycleAccessibility: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/transitconcessionpricing","title":"let transitConcessionPricing: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/transitmodes","title":"let transitModes: [TKModeInfo]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/transitwheelchairaccessibility","title":"let transitWheelchairAccessibility: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/specificmodedetails(for:)","title":"func specificModeDetails(for: String) -> TKAPI.SpecificModeDetails?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/regioninfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/regionsresponse","title":"TKAPI.RegionsResponse","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/regionsresponse\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let hashCode: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/regionsresponse\/hashcode"},{"title":"let modes: [String : TKAPI.ModeDetails]?","type":"property","path":"\/documentation\/tripkit\/tkapi\/regionsresponse\/modes"},{"title":"let regions: [TKRegion]?","type":"property","path":"\/documentation\/tripkit\/tkapi\/regionsresponse\/regions"}]},{"path":"\/documentation\/tripkit\/tkapi\/route","title":"TKAPI.Route","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/route\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var color: TKColor?","path":"\/documentation\/tripkit\/tkapi\/route\/color"},{"type":"property","title":"var directions: [TKAPI.RouteDirection]","path":"\/documentation\/tripkit\/tkapi\/route\/directions"},{"type":"property","title":"let id: String","path":"\/documentation\/tripkit\/tkapi\/route\/id"},{"type":"property","title":"let modeInfo: TKModeInfo","path":"\/documentation\/tripkit\/tkapi\/route\/modeinfo"},{"type":"property","title":"var name: String?","path":"\/documentation\/tripkit\/tkapi\/route\/name"},{"type":"property","title":"var number: String?","path":"\/documentation\/tripkit\/tkapi\/route\/number"},{"type":"property","title":"let operatorID: String","path":"\/documentation\/tripkit\/tkapi\/route\/operatorid"},{"type":"property","title":"let operatorName: String?","path":"\/documentation\/tripkit\/tkapi\/route\/operatorname"},{"type":"property","title":"let regionCode: String","path":"\/documentation\/tripkit\/tkapi\/route\/regioncode"},{"type":"property","title":"var routeColor: TKColor?","path":"\/documentation\/tripkit\/tkapi\/route\/routecolor"},{"type":"property","title":"let routeDescription: String?","path":"\/documentation\/tripkit\/tkapi\/route\/routedescription"},{"type":"property","title":"let routeName: String?","path":"\/documentation\/tripkit\/tkapi\/route\/routename"},{"type":"property","title":"let shortName: String?","path":"\/documentation\/tripkit\/tkapi\/route\/shortname"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/route\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/route\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/routedirection","title":"TKAPI.RouteDirection","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/routedirection\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/routedirection\/encodedshape","title":"let encodedShape: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/routedirection\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/routedirection\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/routedirection\/shapeisdetailed","title":"let shapeIsDetailed: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/routedirection\/stops","title":"let stops: [TKAPI.DirectionStop]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/routedirection\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/routedirection\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/routingresponse","title":"TKAPI.RoutingResponse","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alerts: [TKAPI.Alert]","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/alerts","type":"property"},{"title":"let error: String?","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/error","type":"property"},{"title":"let groups: [TKAPI.TripGroup]?","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/groups","type":"property"},{"title":"let query: TKAPI.Query?","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/query","type":"property"},{"title":"var segmentTemplates: [TKAPI.SegmentTemplate]?","path":"\/documentation\/tripkit\/tkapi\/routingresponse\/segmenttemplates","type":"property"}]},{"path":"\/documentation\/tripkit\/tkapi\/segmentreference","title":"TKAPI.SegmentReference","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alertHashCodes: [Int]","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/alerthashcodes"},{"title":"var bicycleAccessible: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/bicycleaccessible"},{"title":"var booking: TKBookingData?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/booking"},{"title":"var bookingHashCode: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/bookinghashcode"},{"title":"var direction: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/direction"},{"title":"var endPlatform: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/endplatform"},{"title":"var endTime: Date","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/endtime"},{"title":"var frequency: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/frequency"},{"title":"var lineName: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/linename"},{"title":"var number: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/number"},{"title":"var realTimeStatus: TKAPI.RealTimeStatus?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/realtimestatus"},{"title":"var realTimeVehicle: TKAPI.Vehicle?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/realtimevehicle"},{"title":"var realTimeVehicleAlternatives: [TKAPI.Vehicle]","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/realtimevehiclealternatives"},{"title":"let segmentTemplateHashCode: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/segmenttemplatehashcode"},{"title":"var serviceColor: TKAPI.RGBColor?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/servicecolor"},{"title":"var serviceStops: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/servicestops"},{"title":"var serviceTripID: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/servicetripid"},{"title":"var sharedVehicle: TKAPI.SharedVehicleInfo?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/sharedvehicle"},{"title":"var startPlatform: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/startplatform"},{"title":"var startTime: Date","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/starttime"},{"title":"var ticket: TKAPI.Ticket?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/ticket"},{"title":"var ticketWebsite: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/ticketwebsite"},{"title":"var timesAreRealTime: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/timesarerealtime"},{"title":"var timetableEndTime: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/timetableendtime"},{"title":"var timetableStartTime: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/timetablestarttime"},{"title":"var vehicleUUID: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/vehicleuuid"},{"title":"var wheelchairAccessible: Bool?","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/wheelchairaccessible"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/segmentreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/segmentreference\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape","title":"TKAPI.SegmentShape","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/bicycleaccessible","title":"var bicycleAccessible: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/cyclingnetwork","title":"var cyclingNetwork: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/direction","title":"var direction: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/dismount","title":"var dismount: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/encodedwaypoints","title":"let encodedWaypoints: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/frequency","title":"var frequency: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/hop","title":"var hop: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/instruction","title":"var instruction: TKAPI.ShapeInstruction?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/linename","title":"var lineName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/metres","title":"var metres: TKAPI.Distance?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/modeinfo","title":"var modeInfo: TKModeInfo?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/name","title":"var name: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/number","title":"var number: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/operatorid","title":"var operatorID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/operatorname","title":"var operatorName: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/roadtags","title":"var roadTags: [TKAPI.RoadTag]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/routeid","title":"var routeID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/safe","title":"var safe: Bool?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/servicecolor","title":"var serviceColor: TKAPI.RGBColor?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/servicetripid","title":"var serviceTripID: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/stops","title":"var stops: [TKAPI.ShapeStop]","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/travelled","title":"var travelled: Bool","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/wheelchairaccessible","title":"var wheelchairAccessible: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentshape\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate","title":"TKAPI.SegmentTemplate","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let action: String?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/action","type":"property"},{"title":"var bearing: Int?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/bearing","type":"property"},{"title":"var durationWithoutTraffic: TimeInterval?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/durationwithouttraffic","type":"property"},{"title":"var endStopCode: String?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/endstopcode","type":"property"},{"title":"var from: TKAPI.Location?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/from","type":"property"},{"title":"var hasCarParks: Bool","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/hascarparks","type":"property"},{"title":"let hashCode: Int","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/hashcode","type":"property"},{"title":"var hideExactTimes: Bool","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/hideexacttimes","type":"property"},{"title":"var isContinuation: Bool","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/iscontinuation","type":"property"},{"title":"var localCost: TKLocalCost?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/localcost","type":"property"},{"title":"var location: TKAPI.Location?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/location","type":"property"},{"title":"var mapTiles: TKMapTiles?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/maptiles","type":"property"},{"title":"var metres: TKAPI.Distance?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/metres","type":"property"},{"title":"var metresDismount: TKAPI.Distance?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/metresdismount","type":"property"},{"title":"var metresSafe: TKAPI.Distance?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/metressafe","type":"property"},{"title":"var metresUnsafe: TKAPI.Distance?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/metresunsafe","type":"property"},{"title":"var mini: TKMiniInstruction?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/mini","type":"property"},{"title":"let modeIdentifier: String?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/modeidentifier","type":"property"},{"title":"let modeInfo: TKModeInfo?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/modeinfo","type":"property"},{"title":"var notes: String?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/notes","type":"property"},{"title":"var notifications: [TKAPI.TripNotification]","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/notifications","type":"property"},{"title":"var operatorID: String?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/operatorid","type":"property"},{"title":"let operatorInfo: TKAPI.CompanyInfo?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/operatorinfo","type":"property"},{"title":"var operatorName: String?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/operatorname","type":"property"},{"title":"var shapes: [TKAPI.SegmentShape]?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/shapes","type":"property"},{"title":"var stopCode: String?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/stopcode","type":"property"},{"title":"var streets: [TKAPI.SegmentShape]?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/streets","type":"property"},{"title":"var to: TKAPI.Location?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/to","type":"property"},{"title":"var turnByTurn: TKTurnByTurnMode?","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/turnbyturn","type":"property"},{"title":"let type: TKAPI.SegmentType","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/type","type":"property"},{"title":"let visibility: TKAPI.SegmentVisibility","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/visibility","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/segmenttemplate\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/servererror","title":"TKAPI.ServerError","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/servererror\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let errorCode: Int?","path":"\/documentation\/tripkit\/tkapi\/servererror\/errorcode","type":"property"},{"title":"let errorMessage: String?","path":"\/documentation\/tripkit\/tkapi\/servererror\/errormessage","type":"property"},{"title":"let isUserError: Bool","path":"\/documentation\/tripkit\/tkapi\/servererror\/isusererror","type":"property"},{"title":"let option: TKAPI.ServerError.Option?","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.property","type":"property"},{"title":"let recovery: String?","path":"\/documentation\/tripkit\/tkapi\/servererror\/recovery","type":"property"},{"title":"let title: String?","path":"\/documentation\/tripkit\/tkapi\/servererror\/title","type":"property"},{"title":"let url: URL?","path":"\/documentation\/tripkit\/tkapi\/servererror\/url","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.ServerError.Option","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case abort","type":"case","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/abort"},{"title":"case back","type":"case","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/back"},{"title":"case retry","type":"case","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/retry"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/!=(_:_:)"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/servererror\/option-swift.enum\/rawrepresentable-implementations"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/serviceresponse","title":"TKAPI.ServiceResponse","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var alerts: [TKAPI.Alert]","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/alerts","type":"property"},{"title":"var alternativeVehicles: [TKAPI.Vehicle]","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/alternativevehicles","type":"property"},{"title":"let error: String?","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/error","type":"property"},{"title":"let modeInfo: TKModeInfo?","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/modeinfo","type":"property"},{"title":"let primaryVehicle: TKAPI.Vehicle?","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/primaryvehicle","type":"property"},{"title":"let realTimeStatus: TKAPI.RealTimeStatus?","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/realtimestatus","type":"property"},{"title":"let shapes: [TKAPI.SegmentShape]?","path":"\/documentation\/tripkit\/tkapi\/serviceresponse\/shapes","type":"property"}]},{"path":"\/documentation\/tripkit\/tkapi\/shapestop","title":"TKAPI.ShapeStop","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/shapestop\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/arrival","title":"var arrival: Date?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/bearing","title":"var bearing: Int?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/code","title":"let code: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/departure","title":"var departure: Date?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/lat","title":"let lat: TKAPI.Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/lng","title":"let lng: TKAPI.Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/name","title":"let name: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/relativearrival","title":"var relativeArrival: TimeInterval?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/relativedeparture","title":"var relativeDeparture: TimeInterval?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/shortname","title":"let shortName: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapestop\/wheelchairaccessible","title":"let wheelchairAccessible: Bool?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/shapestop\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/shapestop\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo","title":"TKAPI.SharedVehicleInfo","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var batteryImage: TKImage?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/batteryimage"},{"type":"property","title":"let batteryLevel: Int?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/batterylevel"},{"type":"property","title":"var batteryText: String?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/batterytext"},{"type":"property","title":"let currentRange: TKAPI.Distance?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/currentrange"},{"type":"property","title":"let deepLink: URL?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/deeplink"},{"type":"property","title":"let details: String?","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/details"},{"type":"property","title":"var hasRealTime: Bool","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/hasrealtime"},{"type":"property","title":"let identifier: String","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/identifier"},{"title":"let imageURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/imageurl"},{"title":"var isAvailable: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/isavailable"},{"title":"let isDisabled: Bool","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/isdisabled"},{"title":"let isReserved: Bool?","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/isreserved"},{"title":"let lastReported: Date?","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/lastreported"},{"title":"let licensePlate: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/licenseplate"},{"title":"let name: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/name"},{"title":"let operatorInfo: TKAPI.CompanyInfo","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/operatorinfo"},{"title":"let source: TKAPI.DataAttribution?","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/source"},{"title":"let vehicleType: TKAPI.VehicleTypeInfo","type":"property","path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/vehicletype"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/sharedvehicleinfo\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/specificmodedetails","title":"TKAPI.SpecificModeDetails","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/identifier","title":"var identifier: String"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/integrations","title":"var integrations: [TKAPI.Integrations]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/minimumlocalcostformembership","title":"let minimumLocalCostForMembership: Decimal?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/modeimagenames","title":"var modeImageNames: [String]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/modeinfo","title":"let modeInfo: TKModeInfo"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/operators","title":"var operators: [String]"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/title","title":"let title: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/url","title":"let url: URL?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/specificmodedetails\/equatable-implementations","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/stop","title":"TKAPI.Stop","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/stop\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let address: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/address"},{"title":"var alertHashCodes: [Int]","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/alerthashcodes"},{"title":"let availableRoutes: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/availableroutes"},{"title":"var children: [TKAPI.Stop]","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/children"},{"title":"let code: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/code"},{"title":"let lat: TKAPI.Degrees","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/lat"},{"title":"let lng: TKAPI.Degrees","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/lng"},{"title":"let modeInfo: TKModeInfo","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/modeinfo"},{"title":"let name: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/name"},{"title":"let operators: [TKAPI.Operator]?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/operators"},{"title":"let popularity: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/popularity"},{"title":"let routes: [TKAPI.Route]?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/routes"},{"title":"let services: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/services"},{"title":"let shortName: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/shortname"},{"title":"let timeZoneName: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/timezonename"},{"title":"let wheelchairAccessible: Bool?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/wheelchairaccessible"},{"title":"let zoneID: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/stop\/zoneid"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/stop\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/stop\/!=(_:_:)"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/ticket","title":"TKAPI.Ticket","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/ticket\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let cost: Decimal?","path":"\/documentation\/tripkit\/tkapi\/ticket\/cost","type":"property"},{"title":"let fareID: String?","path":"\/documentation\/tripkit\/tkapi\/ticket\/fareid","type":"property"},{"title":"let name: String","path":"\/documentation\/tripkit\/tkapi\/ticket\/name","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/ticket\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/ticket\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/trip","title":"TKAPI.Trip","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/trip\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var arrive: Date","path":"\/documentation\/tripkit\/tkapi\/trip\/arrive","type":"property"},{"title":"var availability: TKAPI.TripAvailability?","path":"\/documentation\/tripkit\/tkapi\/trip\/availability","type":"property"},{"title":"var availabilityInfo: String?","path":"\/documentation\/tripkit\/tkapi\/trip\/availabilityinfo","type":"property"},{"title":"var budgetPoints: Double?","path":"\/documentation\/tripkit\/tkapi\/trip\/budgetpoints","type":"property"},{"title":"var bundleId: String?","path":"\/documentation\/tripkit\/tkapi\/trip\/bundleid","type":"property"},{"title":"let caloriesCost: Double","path":"\/documentation\/tripkit\/tkapi\/trip\/caloriescost","type":"property"},{"title":"let carbonCost: Double","path":"\/documentation\/tripkit\/tkapi\/trip\/carboncost","type":"property"},{"title":"var currency: String?","path":"\/documentation\/tripkit\/tkapi\/trip\/currency","type":"property"},{"title":"var depart: Date","path":"\/documentation\/tripkit\/tkapi\/trip\/depart","type":"property"},{"title":"let hassleCost: Double","path":"\/documentation\/tripkit\/tkapi\/trip\/hasslecost","type":"property"},{"title":"var hideExactTimes: Bool","path":"\/documentation\/tripkit\/tkapi\/trip\/hideexacttimes","type":"property"},{"title":"var id: String?","path":"\/documentation\/tripkit\/tkapi\/trip\/id","type":"property"},{"title":"var logURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/logurl","type":"property"},{"title":"let mainSegmentHashCode: Int","path":"\/documentation\/tripkit\/tkapi\/trip\/mainsegmenthashcode","type":"property"},{"title":"var moneyCost: Double?","path":"\/documentation\/tripkit\/tkapi\/trip\/moneycost","type":"property"},{"title":"var moneyCostUSD: Double?","path":"\/documentation\/tripkit\/tkapi\/trip\/moneycostusd","type":"property"},{"title":"var plannedURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/plannedurl","type":"property"},{"title":"var progressURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/progressurl","type":"property"},{"title":"var saveURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/saveurl","type":"property"},{"title":"let segments: [TKAPI.SegmentReference]","path":"\/documentation\/tripkit\/tkapi\/trip\/segments","type":"property"},{"title":"var shareURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/shareurl","type":"property"},{"title":"var subscribeURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/subscribeurl","type":"property"},{"title":"var temporaryURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/temporaryurl","type":"property"},{"title":"var unsubscribeURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/unsubscribeurl","type":"property"},{"title":"var updateURL: URL?","path":"\/documentation\/tripkit\/tkapi\/trip\/updateurl","type":"property"},{"title":"let weightedScore: Double","path":"\/documentation\/tripkit\/tkapi\/trip\/weightedscore","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/trip\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/trip\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/tripgroup","title":"TKAPI.TripGroup","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var frequency: Int?","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/frequency","type":"property"},{"title":"var sources: [TKAPI.DataAttribution]","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/sources","type":"property"},{"title":"var trips: [TKAPI.Trip]","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/trips","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripgroup\/!=(_:_:)","type":"op"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification","title":"TKAPI.TripNotification","type":"struct","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPI.TripNotification.Coordinate","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/latitude","title":"let latitude: TKAPI.Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/longitude","title":"let longitude: TKAPI.Degrees"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case latitude","type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/latitude"},{"title":"case longitude","type":"case","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/longitude"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(intvalue:)"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(rawvalue:)"},{"title":"init?(stringValue: String)","type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/init(stringvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"CodingKey Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/debugdescription"},{"title":"var description: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/description"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/codingkey-implementations"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys\/rawrepresentable-implementations"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/codingkeys","title":"TKAPI.TripNotification.Coordinate.CodingKeys"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/coordinate\/equatable-implementations","title":"Equatable Implementations"}],"type":"struct"},{"title":"Initializers","type":"groupMarker"},{"title":"init(id: String, kind: TKAPI.TripNotification.Kind, messageKind: TKAPI.TripNotification.MessageKind, messageTitle: String, messageBody: String)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/init(id:kind:messagekind:messagetitle:messagebody:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let id: String","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/id","type":"property"},{"title":"let kind: TKAPI.TripNotification.Kind","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.property","type":"property"},{"title":"var messageBody: String","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagebody","type":"property"},{"title":"let messageKind: TKAPI.TripNotification.MessageKind","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.property","type":"property"},{"title":"var messageTitle: String","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagetitle","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPI.TripNotification.CodingKeys","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/center","type":"case","title":"case center"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/id","type":"case","title":"case id"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/kind","type":"case","title":"case kind"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/messagebody","type":"case","title":"case messageBody"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/messagekind","type":"case","title":"case messageKind"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/messagetitle","type":"case","title":"case messageTitle"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/radius","type":"case","title":"case radius"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/time","type":"case","title":"case time"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/trigger","type":"case","title":"case trigger"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/init(intvalue:)","type":"init","title":"init?(intValue: Int)"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/init(stringvalue:)","type":"init","title":"init?(stringValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/codingkey-implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/debugdescription"},{"title":"var description: String","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/description"}],"title":"CodingKey Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations"}],"type":"enum"},{"title":"TKAPI.TripNotification.Kind","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/==(_:_:)","title":"static func == (TKAPI.TripNotification.Kind, TKAPI.TripNotification.Kind) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/circle(center:radius:trigger:)","title":"case circle(center: TKAPI.TripNotification.Coordinate, radius: TKAPI.Distance, trigger: TKAPI.TripNotification.Trigger)","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/pushnotification","title":"case pushNotification","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/time(_:)","title":"case time(Date)","type":"case"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/kind-swift.enum\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol"}],"type":"enum"},{"title":"TKAPI.TripNotification.MessageKind","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/arrivingatyourstop","title":"case arrivingAtYourStop","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/nextstopisyours","title":"case nextStopIsYours","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/tripend","title":"case tripEnd","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/tripstart","title":"case tripStart","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/vehicleisapproaching","title":"case vehicleIsApproaching","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/messagekind-swift.enum\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"type":"enum"},{"title":"TKAPI.TripNotification.Trigger","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case onEnter","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/onenter","type":"case"},{"title":"case onExit","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/onexit","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/trigger\/rawrepresentable-implementations","type":"symbol"}],"type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/init(from:)","type":"init"}],"type":"symbol"},{"title":"Encodable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/encodable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/encode(to:)"}],"type":"symbol"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripnotification\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/tripnotification\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/user","title":"TKAPI.User","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/user\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/user\/address1","type":"property","title":"let address1: String?"},{"path":"\/documentation\/tripkit\/tkapi\/user\/address2","type":"property","title":"let address2: String?"},{"path":"\/documentation\/tripkit\/tkapi\/user\/appdata","type":"property","title":"var appData: [String : Any]?"},{"path":"\/documentation\/tripkit\/tkapi\/user\/emails","type":"property","title":"var emails: [TKAPI.Email]?"},{"path":"\/documentation\/tripkit\/tkapi\/user\/familyname","type":"property","title":"let familyName: String?"},{"path":"\/documentation\/tripkit\/tkapi\/user\/givenname","type":"property","title":"let givenName: String?"},{"path":"\/documentation\/tripkit\/tkapi\/user\/highresprofilepictureurl","type":"property","title":"let highResProfilePictureURL: URL?"},{"path":"\/documentation\/tripkit\/tkapi\/user\/lowresprofilepictureurl","type":"property","title":"let lowResProfilePictureURL: URL?"},{"title":"let name: String?","path":"\/documentation\/tripkit\/tkapi\/user\/name","type":"property"},{"title":"let phone: String?","path":"\/documentation\/tripkit\/tkapi\/user\/phone","type":"property"},{"title":"let phones: [TKAPI.Phone]?","path":"\/documentation\/tripkit\/tkapi\/user\/phones","type":"property"},{"title":"let postCode: String?","path":"\/documentation\/tripkit\/tkapi\/user\/postcode","type":"property"},{"title":"var userId: String?","path":"\/documentation\/tripkit\/tkapi\/user\/userid","type":"property"},{"title":"let userType: String?","path":"\/documentation\/tripkit\/tkapi\/user\/usertype","type":"property"}]},{"path":"\/documentation\/tripkit\/tkapi\/vehicle","title":"TKAPI.Vehicle","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/components","type":"property","title":"let components: [[TKAPI.VehicleComponents]]?"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/icon","type":"property","title":"let icon: URL?"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/id","type":"property","title":"let id: String?"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/label","type":"property","title":"let label: String?"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/lastupdate","type":"property","title":"let lastUpdate: TimeInterval?"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/location","type":"property","title":"let location: TKAPI.Location"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapi\/vehicle\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/vehicle\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents","title":"TKAPI.VehicleComponents","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let airConditioned: Bool?","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/airconditioned"},{"title":"let model: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/model"},{"title":"let occupancy: TKAPI.VehicleOccupancy?","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/occupancy"},{"title":"let occupancyText: String?","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/occupancytext"},{"title":"let wheelchairAccessible: Bool?","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/wheelchairaccessible"},{"title":"let wheelchairSeats: Int?","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/wheelchairseats"},{"title":"let wifi: Bool?","type":"property","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/wifi"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclecomponents\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo","title":"TKAPI.VehicleTypeInfo","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/formfactor","title":"let formFactor: TKAPI.VehicleFormFactor","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/image","title":"var image: TKImage?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/localized","title":"var localized: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/maxrangemeters","title":"let maxRangeMeters: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/propulsiontype","title":"let propulsionType: TKAPI.VehiclePropulsionType?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/vehicletypeinfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}]},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/degrees","title":"TKAPI.Degrees","type":"typealias"},{"path":"\/documentation\/tripkit\/tkapi\/direction","title":"TKAPI.Direction","type":"typealias"},{"path":"\/documentation\/tripkit\/tkapi\/distance","title":"TKAPI.Distance","type":"typealias"},{"path":"\/documentation\/tripkit\/tkapi\/speed","title":"TKAPI.Speed","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/availabilitymode","title":"TKAPI.AvailabilityMode","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case current","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/current","type":"case"},{"title":"case future","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/future","type":"case"},{"title":"case none","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/!=(_:_:)"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/availabilitymode\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/integrations","title":"TKAPI.Integrations","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bookings","path":"\/documentation\/tripkit\/tkapi\/integrations\/bookings","type":"case"},{"title":"case payments","path":"\/documentation\/tripkit\/tkapi\/integrations\/payments","type":"case"},{"title":"case realTime","path":"\/documentation\/tripkit\/tkapi\/integrations\/realtime","type":"case"},{"title":"case routing","path":"\/documentation\/tripkit\/tkapi\/integrations\/routing","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/integrations\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/integrations\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkapi\/integrations\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/tripkit\/tkapi\/integrations\/rawrepresentable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/privatevehicletype","title":"TKAPI.PrivateVehicleType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/suv","title":"case SUV"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/bicycle","title":"case bicycle"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/car","title":"case car"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/motorbike","title":"case motorbike"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/!=(_:_:)"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/privatevehicletype\/hash(into:)"}],"title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/realtimestatus","title":"TKAPI.RealTimeStatus","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/canceled","title":"case canceled","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/capable","title":"case capable","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/incapable","title":"case incapable","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/isrealtime","title":"case isRealTime","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkit\/tkapi\/realtimestatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/roadsafety","title":"TKAPI.RoadSafety","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case designated","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/designated","type":"case"},{"title":"case hostile","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/hostile","type":"case"},{"title":"case neutral","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/neutral","type":"case"},{"title":"case safe","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/safe","type":"case"},{"title":"case unknown","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/unknown","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: UIColor","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/color","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Comparable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'...(_:)-5r4wj","title":"static func ... (Self) -> PartialRangeFrom<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'...(_:)-7rqdb","title":"static func ... (Self) -> PartialRangeThrough<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/_(_:_:)","title":"static func > (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/_=(_:_:)-6dmo9","title":"static func >= (Self, Self) -> Bool"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/_=(_:_:)-8l8lg","title":"static func <= (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkapi\/roadsafety\/comparable-implementations","type":"symbol"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/roadsafety\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/roadsafety\/equatable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/roadtag","title":"TKAPI.RoadTag","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case CCTVCamera","path":"\/documentation\/tripkit\/tkapi\/roadtag\/cctvcamera","type":"case"},{"title":"case bicycleBoulevard","path":"\/documentation\/tripkit\/tkapi\/roadtag\/bicycleboulevard","type":"case"},{"title":"case bicycleDesignated","path":"\/documentation\/tripkit\/tkapi\/roadtag\/bicycledesignated","type":"case"},{"title":"case cycleLane","path":"\/documentation\/tripkit\/tkapi\/roadtag\/cyclelane","type":"case"},{"title":"case cycleNetwork","path":"\/documentation\/tripkit\/tkapi\/roadtag\/cyclenetwork","type":"case"},{"title":"case cycleTrack","path":"\/documentation\/tripkit\/tkapi\/roadtag\/cycletrack","type":"case"},{"title":"case litRoute","path":"\/documentation\/tripkit\/tkapi\/roadtag\/litroute","type":"case"},{"title":"case mainRoad","path":"\/documentation\/tripkit\/tkapi\/roadtag\/mainroad","type":"case"},{"title":"case other","path":"\/documentation\/tripkit\/tkapi\/roadtag\/other","type":"case"},{"title":"case sharedRoad","path":"\/documentation\/tripkit\/tkapi\/roadtag\/sharedroad","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/roadtag\/sideroad","title":"case sideRoad","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/roadtag\/sidewalk","title":"case sideWalk","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/roadtag\/streetlight","title":"case streetLight","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/roadtag\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/roadtag\/localized","title":"var localized: String","type":"property"},{"path":"\/documentation\/tripkit\/tkapi\/roadtag\/safety","title":"var safety: TKAPI.RoadSafety","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/roadtag\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/roadtag\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkapi\/roadtag\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/roadtag\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/roadtag\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/roadtag\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/roadtag\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/segmenttype","title":"TKAPI.SegmentType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case scheduled","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/scheduled"},{"type":"case","title":"case stationary","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/stationary"},{"type":"case","title":"case unscheduled","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/unscheduled"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/segmenttype\/hash(into:)","type":"method"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility","title":"TKAPI.SegmentVisibility","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/hidden","title":"case hidden","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/indetails","title":"case inDetails","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/insummary","title":"case inSummary","type":"case"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/onmap","title":"case onMap","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/segmentvisibility\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/shapeinstruction","title":"TKAPI.ShapeInstruction","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/continuestraight","title":"case continueStraight"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/headtowards","title":"case headTowards"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnleft","title":"case turnLeft"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnright","title":"case turnRight"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnsharplyleft","title":"case turnSharplyLeft"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnsharplyright","title":"case turnSharplyRight"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnslightlyright","title":"case turnSlightlyRight"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/turnslightyleft","title":"case turnSlightyLeft"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkit\/tkapi\/shapeinstruction\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/tripavailability","title":"TKAPI.TripAvailability","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case canceled","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/canceled"},{"type":"case","title":"case missedPrebookingWindow","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/missedprebookingwindow"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/equatable-implementations"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/tripavailability\/rawrepresentable-implementations"}]},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor","title":"TKAPI.VehicleFormFactor","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/bicycle","title":"case bicycle"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/car","title":"case car"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/moped","title":"case moped"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/other","title":"case other"},{"type":"case","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/scooter","title":"case scooter"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tkapi\/vehicleformfactor\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy","title":"TKAPI.VehicleOccupancy","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case crushedStandingRoomOnly","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/crushedstandingroomonly"},{"type":"case","title":"case empty","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/empty"},{"type":"case","title":"case fewSeatsAvailable","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/fewseatsavailable"},{"type":"case","title":"case full","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/full"},{"type":"case","title":"case manySeatsAvailable","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/manyseatsavailable"},{"type":"case","title":"case notAcceptingPassengers","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/notacceptingpassengers"},{"type":"case","title":"case standingRoomOnly","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/standingroomonly"},{"type":"case","title":"case unknown","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/unknown"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(intValue: Int)","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/init(intvalue:)"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/init(rawvalue:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor?","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/color","type":"property"},{"title":"var intValue: Int","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/intvalue","type":"property"},{"title":"var localizedTitle: String","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/localizedtitle","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func average(in: [[TKAPI.VehicleComponents]]?) -> (TKAPI.VehicleOccupancy, title: String)?","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/average(in:)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/hash(into:)"}],"path":"\/documentation\/tripkit\/tkapi\/vehicleoccupancy\/rawrepresentable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype","title":"TKAPI.VehiclePropulsionType","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case combustion","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/combustion"},{"type":"case","title":"case electric","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/electric"},{"type":"case","title":"case electricAssist","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/electricassist"},{"type":"case","title":"case human","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/human"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/equatable-implementations"},{"type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkapi\/vehiclepropulsiontype\/rawrepresentable-implementations"}]}]},{"path":"\/documentation\/tripkit\/tkapiconfig","type":"struct","title":"TKAPIConfig","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAPIConfig.Weights","path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct","type":"struct","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/carbon","type":"property","title":"var carbon: Double"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/exercise","type":"property","title":"var exercise: Double"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/hassle","type":"property","title":"var hassle: Double"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/money","type":"property","title":"var money: Double"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/time","type":"property","title":"var time: Double"},{"type":"groupMarker","title":"Subscripts"},{"path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/subscript(_:)","type":"subscript","title":"subscript(TKSettings.Weight) -> Double"},{"type":"groupMarker","title":"Default Implementations"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"title":"Instance Properties","type":"groupMarker"},{"title":"var avoidModes: [String]","path":"\/documentation\/tripkit\/tkapiconfig\/avoidmodes","type":"property"},{"title":"var bookingSandbox: Bool","path":"\/documentation\/tripkit\/tkapiconfig\/bookingsandbox","type":"property"},{"title":"var concession: Bool","path":"\/documentation\/tripkit\/tkapiconfig\/concession","type":"property"},{"title":"var cyclingSpeed: TKAPIConfig.Speed","path":"\/documentation\/tripkit\/tkapiconfig\/cyclingspeed","type":"property"},{"title":"var distanceUnit: TKAPIConfig.DistanceUnit","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.property","type":"property"},{"title":"var emissions: [String : Double]","path":"\/documentation\/tripkit\/tkapiconfig\/emissions","type":"property"},{"title":"var maximumWalkingMinutes: Double?","path":"\/documentation\/tripkit\/tkapiconfig\/maximumwalkingminutes","type":"property"},{"title":"var minimumTransferMinutes: Double?","path":"\/documentation\/tripkit\/tkapiconfig\/minimumtransferminutes","type":"property"},{"title":"var paras: [String : Any]","path":"\/documentation\/tripkit\/tkapiconfig\/paras","type":"property"},{"title":"var twoWayHireCostIncludesReturn: Bool","path":"\/documentation\/tripkit\/tkapiconfig\/twowayhirecostincludesreturn","type":"property"},{"title":"let version: Int","path":"\/documentation\/tripkit\/tkapiconfig\/version","type":"property"},{"title":"var walkingSpeed: TKAPIConfig.Speed","path":"\/documentation\/tripkit\/tkapiconfig\/walkingspeed","type":"property"},{"title":"var weights: TKAPIConfig.Weights","path":"\/documentation\/tripkit\/tkapiconfig\/weights-swift.property","type":"property"},{"title":"var wheelchair: Bool","path":"\/documentation\/tripkit\/tkapiconfig\/wheelchair","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"title":"static let parserJsonVersion: Int","path":"\/documentation\/tripkit\/tkapiconfig\/parserjsonversion","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func defaultValues() -> TKAPIConfig","path":"\/documentation\/tripkit\/tkapiconfig\/defaultvalues()","type":"method"},{"title":"static func userSettings() -> TKAPIConfig","path":"\/documentation\/tripkit\/tkapiconfig\/usersettings()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAPIConfig.DistanceUnit","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum","type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case auto","type":"case","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/auto"},{"title":"case imperial","type":"case","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/imperial"},{"title":"case metric","type":"case","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/metric"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/tripkit\/tkapiconfig\/distanceunit-swift.enum\/rawrepresentable-implementations"}]},{"title":"TKAPIConfig.Speed","path":"\/documentation\/tripkit\/tkapiconfig\/speed","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/custom(_:)","type":"case","title":"case custom(TKAPI.Speed)"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/fast","type":"case","title":"case fast"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/impaired","type":"case","title":"case impaired"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/medium","type":"case","title":"case medium"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/slow","type":"case","title":"case slow"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/init(apivalue:)","type":"init","title":"init?(apiValue: Any?)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/apivalue","type":"property","title":"var apiValue: Any"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/decodable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkapiconfig\/speed\/init(from:)"}],"type":"symbol","title":"Decodable Implementations"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/encodable-implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"type":"symbol","title":"Encodable Implementations"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkapiconfig\/speed\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkit\/tkapiconfig\/decodable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkapiconfig\/init(from:)"}]},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkapiconfig\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkapiconfig\/!=(_:_:)","type":"op"}]}]},{"path":"\/documentation\/tripkit\/tkautocompletionresult","type":"struct","title":"TKAutocompletionResult","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKAutocompletionResult.Score","type":"struct","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(integerLiteral: IntegerLiteralType)","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct\/init(integerliteral:)","type":"init"},{"title":"init(score: Int, ranges: [NSRange])","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct\/init(score:ranges:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var ranges: [NSRange]","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct\/ranges","type":"property"},{"title":"let score: Int","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.struct\/score","type":"property"}]},{"title":"TKAutocompletionResult.ScoreHighlights","type":"struct","path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights\/init(score:titlehighlight:subtitlehighlight:)","type":"init","title":"init(score: Int, titleHighlight: [NSRange], subtitleHighlight: [NSRange])"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights\/score","type":"property","title":"let score: Int"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights\/subtitlehighlight","type":"property","title":"var subtitleHighlight: [NSRange]"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/scorehighlights\/titlehighlight","type":"property","title":"var titleHighlight: [NSRange]"}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(object: AnyHashable, title: String, titleHighlightRanges: [NSRange], subtitle: String?, subtitleHighlightRanges: [NSRange], image: TKImage, accessoryButtonImage: TKImage?, accessoryAccessibilityLabel: String?, score: Int, isInSupportedRegion: Bool)","type":"init","path":"\/documentation\/tripkit\/tkautocompletionresult\/init(object:title:titlehighlightranges:subtitle:subtitlehighlightranges:image:accessorybuttonimage:accessoryaccessibilitylabel:score:isinsupportedregion:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var accessoryAccessibilityLabel: String?","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/accessoryaccessibilitylabel"},{"title":"var accessoryButtonImage: TKImage?","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/accessorybuttonimage"},{"title":"let image: TKImage","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/image"},{"title":"var isInSupportedRegion: Bool","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/isinsupportedregion"},{"title":"let object: AnyHashable","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/object"},{"title":"var provider: AnyObject?","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/provider"},{"title":"var score: Int","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/score-swift.property"},{"title":"var subtitle: String?","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/subtitle"},{"title":"var subtitleHighlightRanges: [NSRange]","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/subtitlehighlightranges"},{"title":"let title: String","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/title"},{"title":"var titleHighlightRanges: [NSRange]","type":"property","path":"\/documentation\/tripkit\/tkautocompletionresult\/titlehighlightranges"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func distanceScore(from: CLLocationCoordinate2D, to: MKCoordinateRegion, longDistance: Bool) -> Int","type":"method","path":"\/documentation\/tripkit\/tkautocompletionresult\/distancescore(from:to:longdistance:)"},{"title":"static func image(for: Icon) -> TKImage","type":"method","path":"\/documentation\/tripkit\/tkautocompletionresult\/image(for:)"},{"title":"static func nameScore(searchTerm: String, candidate: String) -> Score","type":"method","path":"\/documentation\/tripkit\/tkautocompletionresult\/namescore(searchterm:candidate:)"},{"title":"static func rangedScore(for: Int, min: Int, max: Int) -> Int","type":"method","path":"\/documentation\/tripkit\/tkautocompletionresult\/rangedscore(for:min:max:)"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKAutocompletionResult.Icon","type":"enum","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/calendar","title":"case calendar","type":"case"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/city","title":"case city","type":"case"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/contact","title":"case contact","type":"case"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/currentlocation","title":"case currentLocation","type":"case"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/favorite","title":"case favorite","type":"case"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/history","title":"case history","type":"case"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/pin","title":"case pin","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkautocompletionresult\/icon\/hash(into:)","type":"method"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Comparable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkautocompletionresult\/comparable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func ... (Self) -> PartialRangeThrough<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'...(_:)-6lku6"},{"type":"op","title":"static func ... (Self) -> PartialRangeFrom<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'...(_:)-6r838"},{"type":"op","title":"static func ... (Self, Self) -> ClosedRange<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'...(_:_:)"},{"type":"op","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'.._(_:)"},{"type":"op","title":"static func ..< (Self, Self) -> Range<Self>","path":"\/documentation\/tripkit\/tkautocompletionresult\/'.._(_:_:)"},{"type":"op","title":"static func < (TKAutocompletionResult, TKAutocompletionResult) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/_(_:_:)"},{"type":"op","title":"static func > (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/_(_:_:)-95vy1"},{"type":"op","title":"static func <= (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/_=(_:_:)-9pkzl"},{"type":"op","title":"static func >= (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkautocompletionresult\/_=(_:_:)-q0qf"}]},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkautocompletionresult\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkautocompletionresult\/!=(_:_:)"},{"title":"static func == (TKAutocompletionResult, TKAutocompletionResult) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkautocompletionresult\/==(_:_:)"}]},{"title":"Hashable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkautocompletionresult\/hashable-implementations","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkautocompletionresult\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}]},{"path":"\/documentation\/tripkit\/tkbookingdata","type":"struct","title":"TKBookingData","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbookingdata\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let accessibilityLabel: String?","path":"\/documentation\/tripkit\/tkbookingdata\/accessibilitylabel"},{"type":"property","title":"var confirmation: TKBooking.Confirmation?","path":"\/documentation\/tripkit\/tkbookingdata\/confirmation"},{"type":"property","title":"let externalActions: [String]?","path":"\/documentation\/tripkit\/tkbookingdata\/externalactions"},{"type":"property","title":"let quickBookingsUrl: URL?","path":"\/documentation\/tripkit\/tkbookingdata\/quickbookingsurl"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkit\/tkbookingdata\/title"},{"type":"property","title":"let url: URL?","path":"\/documentation\/tripkit\/tkbookingdata\/url"},{"type":"property","title":"let virtualBookingUrl: URL?","path":"\/documentation\/tripkit\/tkbookingdata\/virtualbookingurl"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbookingdata\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbookingdata\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkquickbooking","type":"struct","title":"TKQuickBooking","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"TKQuickBooking.AvailableOption","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var bookingResponseKind: BookingResponseKind","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/bookingresponsekind","type":"property"},{"title":"let bookingTitle: String","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/bookingtitle","type":"property"},{"title":"let bookingURL: URL","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/bookingurl","type":"property"},{"title":"var fareGroups: [TKBooking.FareGroup]","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/faregroups","type":"property"},{"title":"var fares: [TKBooking.Fare]","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/fares","type":"property"},{"title":"var singleFareOnly: Bool","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/singlefareonly","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/title","type":"property"},{"title":"let warningMessage: String?","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/warningmessage","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkquickbooking\/availableoption\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"struct","title":"TKQuickBooking.UnavailableOption","path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let bookingTitle: String","path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/bookingtitle"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/title"},{"type":"property","title":"let warningMessage: String","path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/warningmessage"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkquickbooking\/unavailableoption\/equatable-implementations"}]},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkquickbooking\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var bookingResponseKind: BookingResponseKind","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.property"},{"type":"property","title":"let bookingTitle: String","path":"\/documentation\/tripkit\/tkquickbooking\/bookingtitle"},{"type":"property","title":"let bookingURL: URL","path":"\/documentation\/tripkit\/tkquickbooking\/bookingurl"},{"type":"property","title":"let eta: TimeInterval?","path":"\/documentation\/tripkit\/tkquickbooking\/eta"},{"type":"property","title":"var fares: [TKBooking.Fare]","path":"\/documentation\/tripkit\/tkquickbooking\/fares"},{"type":"property","title":"let imageURL: URL?","path":"\/documentation\/tripkit\/tkquickbooking\/imageurl"},{"type":"property","title":"var input: [TKBooking.BookingInput]","path":"\/documentation\/tripkit\/tkquickbooking\/input"},{"type":"property","title":"var price: TKQuickBookingPrice?","path":"\/documentation\/tripkit\/tkquickbooking\/price"},{"type":"property","title":"let priceString: String?","path":"\/documentation\/tripkit\/tkquickbooking\/pricestring"},{"type":"property","title":"var rider: TKBooking.Rider?","path":"\/documentation\/tripkit\/tkquickbooking\/rider"},{"type":"property","title":"var riders: [TKBooking.Rider]","path":"\/documentation\/tripkit\/tkquickbooking\/riders"},{"type":"property","title":"let secondaryBookingTitle: String?","path":"\/documentation\/tripkit\/tkquickbooking\/secondarybookingtitle"},{"type":"property","title":"let secondaryBookingURL: URL?","path":"\/documentation\/tripkit\/tkquickbooking\/secondarybookingurl"},{"type":"property","title":"let subtitle: String?","path":"\/documentation\/tripkit\/tkquickbooking\/subtitle"},{"type":"property","title":"let surgeImageURL: URL?","path":"\/documentation\/tripkit\/tkquickbooking\/surgeimageurl"},{"type":"property","title":"let surgeString: String?","path":"\/documentation\/tripkit\/tkquickbooking\/surgestring"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkit\/tkquickbooking\/title"},{"type":"property","title":"let tripUpdateURL: URL?","path":"\/documentation\/tripkit\/tkquickbooking\/tripupdateurl"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKQuickBooking.BookingResponseKind","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case bookingOptions","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/bookingoptions","type":"case"},{"title":"case confirmation","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/confirmation","type":"case"},{"title":"case external","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/external","type":"case"},{"title":"case paymentOptions","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/paymentoptions","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/init(rawvalue:)","type":"init"},{"title":"Type Properties","type":"groupMarker"},{"title":"static var defaultValue: TKQuickBooking.BookingResponseKind","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/defaultvalue","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/!=(_:_:)","type":"op"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/rawrepresentable-implementations","type":"symbol","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","type":"method","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/encode(to:)"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkquickbooking\/bookingresponsekind-swift.enum\/hash(into:)"}]}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkquickbooking\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkquickbooking\/!=(_:_:)"}]}]},{"path":"\/documentation\/tripkit\/tkquickbookingprice","type":"struct","title":"TKQuickBookingPrice","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let USDCost: Float","path":"\/documentation\/tripkit\/tkquickbookingprice\/usdcost"},{"type":"property","title":"let localCost: Float","path":"\/documentation\/tripkit\/tkquickbookingprice\/localcost"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkquickbookingprice\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkquickbookingprice\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"path":"\/documentation\/tripkit\/tkroutingquery","type":"struct","title":"TKRoutingQuery","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkroutingquery\/init(from:to:at:modes:additional:)","title":"init(from: TKAPI.Location, to: TKAPI.Location, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>)","type":"init"},{"path":"\/documentation\/tripkit\/tkroutingquery\/init(from:to:at:modes:additional:context:)-4oxz7","title":"init(from: TKAPI.Location, to: TKAPI.Location, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>, context: Context?)","type":"init"},{"path":"\/documentation\/tripkit\/tkroutingquery\/init(from:to:at:modes:additional:context:)-8xgy9","title":"init(from: MKAnnotation, to: MKAnnotation, at: TKRoutingQueryTime, modes: Set<String>, additional: Set<URLQueryItem>, context: Context?)","type":"init"},{"path":"\/documentation\/tripkit\/tkroutingquery\/init(url:)","title":"init?(url: URL)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkroutingquery\/additional","title":"var additional: Set<URLQueryItem>","type":"property"},{"path":"\/documentation\/tripkit\/tkroutingquery\/at","title":"var at: TKRoutingQueryTime","type":"property"},{"path":"\/documentation\/tripkit\/tkroutingquery\/context","title":"var context: Context?","type":"property"},{"path":"\/documentation\/tripkit\/tkroutingquery\/from","title":"var from: TKAPI.Location","type":"property"},{"path":"\/documentation\/tripkit\/tkroutingquery\/modes","title":"var modes: Set<String>","type":"property"},{"path":"\/documentation\/tripkit\/tkroutingquery\/to","title":"var to: TKAPI.Location","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkroutingquery\/totriprequest(in:)","title":"func toTripRequest(in: NSManagedObjectContext) -> TripRequest","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkroutingquery\/parsedate(_:)","title":"static func parseDate(Any?) -> Date?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkroutingquery\/totriprequest()","type":"method","title":"func toTripRequest() -> TripRequest"}],"path":"\/documentation\/tripkit\/tkroutingquery\/tkrouterrequestable-implementations","title":"TKRouterRequestable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tktimetable","type":"struct","title":"TKTimetable","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(title: String?, type: TKTimetable.TimetableType, region: TKRegion)","type":"init","path":"\/documentation\/tripkit\/tktimetable\/init(title:type:region:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let region: TKRegion","type":"property","path":"\/documentation\/tripkit\/tktimetable\/region"},{"title":"let title: String?","type":"property","path":"\/documentation\/tripkit\/tktimetable\/title"},{"title":"let type: TimetableType","type":"property","path":"\/documentation\/tripkit\/tktimetable\/type"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tktimetable\/timetabletype\/departures(stopcode:stop:)","title":"case departures(stopCode: String, stop: MKAnnotation?)"},{"type":"case","path":"\/documentation\/tripkit\/tktimetable\/timetabletype\/multipledepartures(stopcodes:)","title":"case multipleDepartures(stopCodes: [String])"},{"type":"case","path":"\/documentation\/tripkit\/tktimetable\/timetabletype\/stoptostop(startstopcode:endstopcode:endregion:)","title":"case stopToStop(startStopCode: String, endStopCode: String, endRegion: TKRegion)"}],"title":"TKTimetable.TimetableType","type":"enum","path":"\/documentation\/tripkit\/tktimetable\/timetabletype"}]},{"path":"\/documentation\/tripkit\/unknownnilstrategy","type":"struct","title":"UnknownNilStrategy","children":[{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static var defaultValue: T?","path":"\/documentation\/tripkit\/unknownnilstrategy\/defaultvalue"}]},{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/==(_:_:)","type":"op","title":"func == (Point, Point) -> Bool"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/tripkit\/defaultemptyarray","type":"typealias","title":"DefaultEmptyArray"},{"path":"\/documentation\/tripkit\/defaultfalse","type":"typealias","title":"DefaultFalse"},{"path":"\/documentation\/tripkit\/defaulttrue","type":"typealias","title":"DefaultTrue"},{"path":"\/documentation\/tripkit\/emptylossyarray","type":"typealias","title":"EmptyLossyArray"},{"path":"\/documentation\/tripkit\/tkcolor","type":"typealias","title":"TKColor"},{"path":"\/documentation\/tripkit\/tkfont","type":"typealias","title":"TKFont"},{"path":"\/documentation\/tripkit\/tkimage","type":"typealias","title":"TKImage"},{"path":"\/documentation\/tripkit\/tksegmentpattern","type":"typealias","title":"TKSegmentPattern"},{"path":"\/documentation\/tripkit\/unknownnil","type":"typealias","title":"UnknownNil"},{"type":"groupMarker","title":"Enumerations"},{"path":"\/documentation\/tripkit\/tkalertseverity","type":"enum","title":"TKAlertSeverity","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case alert","path":"\/documentation\/tripkit\/tkalertseverity\/alert","type":"case"},{"title":"case info","path":"\/documentation\/tripkit\/tkalertseverity\/info","type":"case"},{"title":"case warning","path":"\/documentation\/tripkit\/tkalertseverity\/warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tkalertseverity\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkalertseverity\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkalertseverity\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkalertseverity\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkalertseverity\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkalertseverity\/rawrepresentable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkauthorizationstatus","type":"enum","title":"TKAuthorizationStatus","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/authorized","type":"case","title":"case authorized"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/denied","type":"case","title":"case denied"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/notdetermined","type":"case","title":"case notDetermined"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/restricted","type":"case","title":"case restricted"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkauthorizationstatus\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tkautocompletionselection","type":"enum","title":"TKAutocompletionSelection","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkautocompletionselection\/annotation(_:)","type":"case","title":"case annotation(MKAnnotation)"},{"path":"\/documentation\/tripkit\/tkautocompletionselection\/result(_:)","type":"case","title":"case result(TKAutocompletionResult)"}]},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility","type":"enum","title":"TKBicycleAccessibility","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/accessible","type":"case","title":"case accessible"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/unknown","type":"case","title":"case unknown"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/init(bool:)","type":"init","title":"init(bool: Bool?)"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/title","type":"property","title":"var title: String?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"path":"\/documentation\/tripkit\/tkbicycleaccessibility\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkbicycleaccessibility\/hash(into:)"}],"title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tkbooking","type":"enum","title":"TKBooking","children":[{"title":"Structures","type":"groupMarker"},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/action","title":"TKBooking.Action","children":[{"title":"Structures","type":"groupMarker"},{"title":"TKBooking.Action.ActionInput","type":"struct","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput","children":[{"title":"Initializers","type":"groupMarker"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"type":"property","title":"let field: String","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/field"},{"type":"property","title":"var value: String?","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/value"},{"title":"Default Implementations","type":"groupMarker"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/action\/actioninput\/equatable-implementations"}]},{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkbooking\/action\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let confirmation: TKBooking.ActionConfirmation?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/action\/confirmation"},{"title":"let confirmationMessage: String?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/action\/confirmationmessage"},{"title":"let externalAction: String?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/action\/externalaction"},{"title":"var input: [TKBooking.Action.ActionInput]?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/action\/input"},{"title":"let internalURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/action\/internalurl"},{"title":"let isDestructive: Bool","type":"property","path":"\/documentation\/tripkit\/tkbooking\/action\/isdestructive"},{"title":"let title: String","type":"property","path":"\/documentation\/tripkit\/tkbooking\/action\/title"},{"title":"let type: TKBooking.Action.ActionType?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/action\/type"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKBooking.Action.ActionType","type":"enum","path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/activatetickets","type":"case","title":"case activateTickets"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/cancel","type":"case","title":"case cancel"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/lock","type":"case","title":"case lock"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/plannext","type":"case","title":"case planNext"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/showtickets","type":"case","title":"case showTickets"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/showtrip","type":"case","title":"case showTrip"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/unknown","type":"case","title":"case unknown"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/unlock","type":"case","title":"case unlock"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/!=(_:_:)"}]},{"path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/init(from:)-14sjg","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkbooking\/action\/actiontype\/hash(into:)","type":"method"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkbooking\/action\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/action\/!=(_:_:)"}]}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation","title":"TKBooking.ActionConfirmation","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/abortactiontitle","title":"let abortActionTitle: String","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/confirmactiontitle","title":"let confirmActionTitle: String","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/message","title":"let message: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkbooking\/actionconfirmation\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/bookinginput","title":"TKBooking.BookingInput","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","title":"TKBooking.BookingInput.InputOption","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/id","title":"let id: TKBooking.BookingInput.InputOptionId"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/title","title":"let title: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoption\/equatable-implementations","title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let id: String","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/id"},{"type":"property","title":"var longText: String?","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/longtext"},{"type":"property","title":"var multipleSelections: [String]?","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/multipleselections"},{"type":"property","title":"let options: [TKBooking.BookingInput.InputOption]?","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/options"},{"type":"property","title":"let required: Bool","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/required"},{"type":"property","title":"var singleSelection: String?","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/singleselection"},{"type":"property","title":"let title: String","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/title"},{"type":"property","title":"var type: TKBooking.BookingInput.InputType","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/type"},{"type":"property","title":"var value: TKBooking.BookingInput.InputValue","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/value"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func displayTitle(for: InputOptionId) -> String?","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/displaytitle(for:)"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/encode(to:)"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","title":"TKBooking.BookingInput.InputOptionId","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputoptionid"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","title":"TKBooking.BookingInput.InputType","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case longText","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/longtext"},{"title":"case multipleSelections","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/multipleselections"},{"title":"case number","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/number"},{"title":"case requestReturnTrip","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/requestreturntrip"},{"title":"case singleSelection","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/singleselection"},{"title":"case terms","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/terms"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","type":"init","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputtype\/hash(into:)"}]}]},{"type":"enum","title":"TKBooking.BookingInput.InputValue","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case longText(String)","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/longtext(_:)"},{"title":"case multipleSelections([TKBooking.BookingInput.InputOptionId])","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/multipleselections(_:)"},{"title":"case number(Int, min: Int?, max: Int?)","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/number(_:min:max:)"},{"title":"case returnTripDate(TKBooking.BookingInput.ReturnTripDateValue)","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/returntripdate(_:)"},{"title":"case singleSelection(TKBooking.BookingInput.InputOptionId)","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/singleselection(_:)"},{"title":"case terms(URL, accepted: Bool)","type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/terms(_:accepted:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/inputvalue\/equatable-implementations"}]},{"type":"enum","title":"TKBooking.BookingInput.ReturnTripDateValue","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/date(_:)","title":"case date(Date)"},{"type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/onewaytrip","title":"case oneWayTrip"},{"type":"case","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/unspecified","title":"case unspecified"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/tojsonstring()","title":"func toJSONString() -> String"},{"type":"method","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/tostring(forjsonencoding:timezone:)","title":"func toString(forJSONEncoding: Bool, timeZone: TimeZone) -> String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/returntripdatevalue\/equatable-implementations","title":"Equatable Implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkbooking\/bookinginput\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/bookingnote","title":"TKBooking.BookingNote","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"let provider: String","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/provider"},{"type":"property","title":"let text: String","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/text"},{"type":"property","title":"var timestamp: Date","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/timestamp"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/bookingnote\/equatable-implementations"}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/confirmation","title":"TKBooking.Confirmation","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/actions","type":"property","title":"let actions: [TKBooking.Action]?"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/input","type":"property","title":"let input: [TKBooking.BookingInput]?"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/notes","type":"property","title":"let notes: [TKBooking.BookingNote]?"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/provider","type":"property","title":"let provider: TKBooking.Detail?"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/purchase","type":"property","title":"let purchase: TKBooking.Purchase?"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/purchasedtickets","type":"property","title":"var purchasedTickets: [TKBooking.PurchasedTicket]"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/status","type":"property","title":"let status: TKBooking.Detail"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/vehicle","type":"property","title":"let vehicle: TKBooking.Detail?"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbooking\/confirmation\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/confirmation\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/detail","title":"TKBooking.Detail","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/detail\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let imageURL: URL?","path":"\/documentation\/tripkit\/tkbooking\/detail\/imageurl","type":"property"},{"title":"let subtitle: String?","path":"\/documentation\/tripkit\/tkbooking\/detail\/subtitle","type":"property"},{"title":"let title: String","path":"\/documentation\/tripkit\/tkbooking\/detail\/title","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/detail\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tkbooking\/detail\/equatable-implementations","type":"symbol"}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/fare","title":"TKBooking.Fare","children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/amount","title":"var amount: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/currencycode","title":"let currencyCode: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/details","title":"let details: String?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/groupids","title":"var groupIDs: [TKBooking.FareGroup.ID]","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/id-swift.property","title":"let id: TKBooking.Fare.ID","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/max","title":"var max: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/price","title":"let price: Int?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/rider","title":"var rider: TKBooking.Rider?","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/riders","title":"var riders: [TKBooking.Rider]","type":"property"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.property","title":"let status: TKBooking.Fare.Status?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/noamount()","title":"func noAmount() -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/pricevalue(locale:)","title":"func priceValue(locale: Locale) -> String?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/id-swift.typealias","title":"TKBooking.Fare.ID","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case amount","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/amount","type":"case"},{"title":"case currencyCode","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/currencycode","type":"case"},{"title":"case details","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/details","type":"case"},{"title":"case groupIDs","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/groupids","type":"case"},{"title":"case id","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/id","type":"case"},{"title":"case max","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/max","type":"case"},{"title":"case name","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/name","type":"case"},{"title":"case price","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/price","type":"case"},{"title":"case riders","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/riders","type":"case"},{"title":"case status","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/status","type":"case"},{"title":"case type","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/type","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/init(intvalue:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/init(rawvalue:)","type":"init"},{"title":"init?(stringValue: String)","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/init(stringvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/debugdescription"},{"type":"property","title":"var description: String","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/description"}],"title":"CodingKey Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/codingkey-implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/equatable-implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/hash(into:)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/codingkeys\/rawrepresentable-implementations","type":"symbol"}],"title":"TKBooking.Fare.CodingKeys","type":"enum"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue\/amount(_:)","title":"case amount(Int)","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue\/selection(_:)","title":"case selection(TKBooking.Fare.ID)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/inputvalue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"type":"symbol"}],"title":"TKBooking.Fare.InputValue","type":"enum"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case multiple","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/multiple"},{"type":"case","title":"case single","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/single"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/!=(_:_:)"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/encode(to:)","type":"method","title":"func encode(to: any Encoder) throws"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/ridetype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}]}],"title":"TKBooking.Fare.RideType","type":"enum"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/activated","type":"case","title":"case activated"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/activeonanotherdevice","type":"case","title":"case activeOnAnotherDevice"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/expired","type":"case","title":"case expired"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/farecapped","type":"case","title":"case fareCapped"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/inactive","type":"case","title":"case inactive"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/invalid","type":"case","title":"case invalid"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/refunded","type":"case","title":"case refunded"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/stale","type":"case","title":"case stale"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/unused","type":"case","title":"case unused"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/init(rawvalue:)","type":"init","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkbooking\/fare\/status-swift.enum\/hash(into:)"}]}],"title":"TKBooking.Fare.Status","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/fare\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/fare\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol"}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/faregroup","title":"TKBooking.FareGroup","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/id","type":"property","title":"let id: String"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/name","type":"property","title":"let name: String"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/selected","type":"property","title":"var selected: Bool"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkbooking\/faregroup\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/location","title":"TKBooking.Location","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkbooking\/location\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/location\/address","title":"let address: String?"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/location\/latitude","title":"let latitude: TKAPI.Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/location\/longitude","title":"let longitude: TKAPI.Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkbooking\/location\/name","title":"let name: String?"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case address","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/address","type":"case"},{"title":"case latitude","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/latitude","type":"case"},{"title":"case longitude","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/longitude","type":"case"},{"title":"case name","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/name","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(intValue: Int)","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/init(intvalue:)","type":"init"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/init(rawvalue:)","type":"init"},{"title":"init?(stringValue: String)","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/init(stringvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var debugDescription: String","type":"property","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/debugdescription"},{"title":"var description: String","type":"property","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/description"}],"title":"CodingKey Implementations","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/codingkey-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys\/rawrepresentable-implementations","type":"symbol"}],"path":"\/documentation\/tripkit\/tkbooking\/location\/codingkeys","title":"TKBooking.Location.CodingKeys"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkbooking\/location\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"path":"\/documentation\/tripkit\/tkbooking\/location\/equatable-implementations","title":"Equatable Implementations"}]},{"type":"struct","path":"\/documentation\/tripkit\/tkbooking\/purchase","title":"TKBooking.Purchase","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/init(from:)","type":"init","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/attribution","type":"property","title":"let attribution: TKAPI.DataAttribution?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/branding","type":"property","title":"let branding: TKBooking.TSPBranding?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/budgetpoints","type":"property","title":"let budgetPoints: Int?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/currency","type":"property","title":"let currency: String?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/id","type":"property","title":"let id: String"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/isvalid","type":"property","title":"var isValid: Bool"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/paymentdate","type":"property","title":"var paymentDate: Date?"},{"path":"\/documentation\/tripkit\/tkbooking\/purchase\/price","type":"property","title":"var price: NSDecimalNumber?"},{"title":"let productName: String?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/productname"},{"title":"let productType: String?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/producttype"},{"title":"let validFor: TimeInterval?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/validfor"},{"title":"var validFrom: Date?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/validfrom"},{"title":"var validTo: Date?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/validto"},{"title":"let waitTime: Int?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchase\/waittime"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/purchase\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkbooking\/purchase\/equatable-implementations"}]},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var actions: [TKBooking.Action]","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/actions"},{"title":"let fare: TKBooking.Fare","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/fare"},{"title":"let id: TKBooking.PurchasedTicket.ID","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/id-swift.property"},{"title":"var purchased: Date?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/purchased"},{"title":"let qrCode: String?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/qrcode"},{"title":"let status: TKBooking.PurchasedTicket.Status?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/status-swift.property"},{"title":"var ticketExpiration: Date?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/ticketexpiration"},{"title":"let ticketURL: URL?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/ticketurl"},{"title":"var validFrom: Date?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/validfrom"},{"title":"var validUntil: Date?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/validuntil"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKBooking.PurchasedTicket.ID","type":"typealias","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/id-swift.typealias"},{"title":"TKBooking.PurchasedTicket.Status","type":"typealias","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/status-swift.typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKBooking.PurchasedTicket.CodingKeys","type":"enum","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/actions","title":"case actions","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/fare","title":"case fare","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/id","title":"case id","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/purchased","title":"case purchased","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/qrcode","title":"case qrCode","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/status","title":"case status","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/ticketexpiration","title":"case ticketExpiration","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/ticketurl","title":"case ticketURL","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/validfrom","title":"case validFrom","type":"case"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/validuntil","title":"case validUntil","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var debugDescription: String","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/debugdescription"},{"type":"property","title":"var description: String","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/description"}]},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/equatable-implementations","title":"Equatable Implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}]},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/codingkeys\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/purchasedticket\/!=(_:_:)"}]}],"title":"TKBooking.PurchasedTicket"},{"path":"\/documentation\/tripkit\/tkbooking\/rider","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","type":"init","path":"\/documentation\/tripkit\/tkbooking\/rider\/init(from:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var description: String?","type":"property","path":"\/documentation\/tripkit\/tkbooking\/rider\/description"},{"title":"var id: TKBooking.Rider.ID","type":"property","path":"\/documentation\/tripkit\/tkbooking\/rider\/id-swift.property"},{"title":"var name: String","type":"property","path":"\/documentation\/tripkit\/tkbooking\/rider\/name"},{"title":"Type Aliases","type":"groupMarker"},{"title":"TKBooking.Rider.ID","type":"typealias","path":"\/documentation\/tripkit\/tkbooking\/rider\/id-swift.typealias"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKBooking.Rider.CodingKeys","type":"enum","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case description","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/description"},{"type":"case","title":"case id","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/id"},{"type":"case","title":"case name","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/name"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(intValue: Int)","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/init(intvalue:)"},{"type":"init","title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/init(rawvalue:)"},{"type":"init","title":"init?(stringValue: String)","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/init(stringvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/debugdescription","type":"property","title":"var debugDescription: String"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/description-swift.property","type":"property","title":"var description: String"}],"type":"symbol","title":"CodingKey Implementations","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/codingkey-implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/!=(_:_:)"}],"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/hash(into:)"}],"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkbooking\/rider\/codingkeys\/rawrepresentable-implementations"}]},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkbooking\/rider\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkbooking\/rider\/equatable-implementations"}],"title":"TKBooking.Rider"},{"path":"\/documentation\/tripkit\/tkbooking\/tspbranding","type":"struct","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var color: TKColor?","path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/color","type":"property"},{"title":"var downloadableLogoURL: URL?","path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/downloadablelogourl","type":"property"},{"title":"let logoImageName: String?","path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/logoimagename","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/!=(_:_:)"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkbooking\/tspbranding\/equatable-implementations","type":"symbol"}],"title":"TKBooking.TSPBranding"}]},{"path":"\/documentation\/tripkit\/tkerrorcode","type":"enum","title":"TKErrorCode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case arrivalTimeTooOld","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/arrivaltimetooold"},{"title":"case departureTimeTooOld","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/departuretimetooold"},{"title":"case destinationTooCloseToOrigin","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/destinationtooclosetoorigin"},{"title":"case internalError","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/internalerror"},{"title":"case noDestination","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/nodestination"},{"title":"case noOrigin","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/noorigin"},{"title":"case timeTooOld","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/timetooold"},{"title":"case unsupportedDestinationRegion","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/unsupporteddestinationregion"},{"title":"case unsupportedOriginRegion","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/unsupportedoriginregion"},{"title":"case unsupportedRegionCombination","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/unsupportedregioncombination"},{"title":"case userError","type":"case","path":"\/documentation\/tripkit\/tkerrorcode\/usererror"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","type":"init","path":"\/documentation\/tripkit\/tkerrorcode\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkerrorcode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkerrorcode\/equatable-implementations"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkerrorcode\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkerrorcode\/hash(into:)","type":"method"}],"title":"RawRepresentable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkerrorcode\/rawrepresentable-implementations"}]},{"path":"\/documentation\/tripkit\/tkfilecachedirectory","type":"enum","title":"TKFileCacheDirectory","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case cache","path":"\/documentation\/tripkit\/tkfilecachedirectory\/cache","type":"case"},{"title":"case documents","path":"\/documentation\/tripkit\/tkfilecachedirectory\/documents","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tkfilecachedirectory\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkfilecachedirectory\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkfilecachedirectory\/equatable-implementations","type":"symbol"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkfilecachedirectory\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkfilecachedirectory\/hash(into:)","title":"func hash(into: inout Hasher)"}],"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tkfilecachedirectory\/rawrepresentable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkgeojson","type":"enum","title":"TKGeoJSON","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/tripkit\/tkgeojson\/feature","title":"TKGeoJSON.Feature","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"let geometry: Geometry","path":"\/documentation\/tripkit\/tkgeojson\/feature\/geometry","type":"property"},{"title":"let properties: Decodable?","path":"\/documentation\/tripkit\/tkgeojson\/feature\/properties","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","path":"\/documentation\/tripkit\/tkgeojson\/feature\/decodable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkgeojson\/feature\/init(from:)","title":"init(from: Decoder) throws"}]}]},{"type":"struct","path":"\/documentation\/tripkit\/tkgeojson\/polygon","title":"TKGeoJSON.Polygon","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkgeojson\/polygon\/exterior","title":"let exterior: [Position]"},{"type":"property","path":"\/documentation\/tripkit\/tkgeojson\/polygon\/interiors","title":"let interiors: [[Position]]"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkgeojson\/polygon\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkgeojson\/polygon\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"}]},{"type":"struct","path":"\/documentation\/tripkit\/tkgeojson\/position","title":"TKGeoJSON.Position","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkgeojson\/position\/altitude","title":"let altitude: TKAPI.Distance?"},{"type":"property","path":"\/documentation\/tripkit\/tkgeojson\/position\/latitude","title":"let latitude: TKAPI.Degrees"},{"type":"property","path":"\/documentation\/tripkit\/tkgeojson\/position\/longitude","title":"let longitude: TKAPI.Degrees"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkgeojson\/position\/equatable-implementations","title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkgeojson\/position\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]}]},{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkgeojson\/collection(_:)","title":"case collection([Feature])"},{"type":"case","path":"\/documentation\/tripkit\/tkgeojson\/feature(_:)","title":"case feature(Feature)"},{"type":"groupMarker","title":"Enumerations"},{"type":"enum","path":"\/documentation\/tripkit\/tkgeojson\/geometry","title":"TKGeoJSON.Geometry","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case lineString([Position])","type":"case","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/linestring(_:)"},{"title":"case multiPolygon([Polygon])","type":"case","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/multipolygon(_:)"},{"title":"case point(Position)","type":"case","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/point(_:)"},{"title":"case polygon(Polygon)","type":"case","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/polygon(_:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Decodable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/init(from:)","title":"init(from: Decoder) throws"}],"type":"symbol","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/decodable-implementations"},{"title":"Equatable Implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkgeojson\/geometry\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}],"type":"symbol","path":"\/documentation\/tripkit\/tkgeojson\/geometry\/equatable-implementations"}]},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkgeojson\/decodable-implementations","title":"Decodable Implementations","children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkgeojson\/init(from:)","type":"init","title":"init(from: Decoder) throws"}]}]},{"path":"\/documentation\/tripkit\/tkinfoicontype","type":"enum","title":"TKInfoIconType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkinfoicontype\/alert","type":"case","title":"case alert"},{"path":"\/documentation\/tripkit\/tkinfoicontype\/none","type":"case","title":"case none"},{"path":"\/documentation\/tripkit\/tkinfoicontype\/unknownlocation","type":"case","title":"case unknownLocation"},{"path":"\/documentation\/tripkit\/tkinfoicontype\/warning","type":"case","title":"case warning"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkinfoicontype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tkinfoicontype\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkinfoicontype\/!=(_:_:)","type":"op"}]},{"path":"\/documentation\/tripkit\/tkinfoicontype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkinfoicontype\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkinfoicontype\/hash(into:)"}]}]},{"path":"\/documentation\/tripkit\/tkinfoiconusage","type":"enum","title":"TKInfoIconUsage","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/map","title":"case map","type":"case"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/normal","title":"case normal","type":"case"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/overlay","title":"case overlay","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/equatable-implementations","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkinfoiconusage\/!=(_:_:)","type":"op"}],"type":"symbol"},{"path":"\/documentation\/tripkit\/tkinfoiconusage\/rawrepresentable-implementations","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tkinfoiconusage\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tkinfoiconusage\/hash(into:)"}],"type":"symbol"}]},{"path":"\/documentation\/tripkit\/tklocalcostaccuracy","type":"enum","title":"TKLocalCostAccuracy","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case confirmed","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/confirmed","type":"case"},{"title":"case externalEstimate","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/externalestimate","type":"case"},{"title":"case internalEstimate","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/internalestimate","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: String)","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/equatable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tklocalcostaccuracy\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/init(from:)","title":"init(from: any Decoder) throws"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/encode(to:)","title":"func encode(to: any Encoder) throws"},{"type":"method","path":"\/documentation\/tripkit\/tklocalcostaccuracy\/hash(into:)","title":"func hash(into: inout Hasher)"}]}]},{"path":"\/documentation\/tripkit\/tklocationprovider","type":"enum","title":"TKLocationProvider","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func fetchLocations(center: CLLocationCoordinate2D, radius: CLLocationDistance, limit: Int, modes: [String]?, strictModeMatch: Bool) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tklocationprovider\/fetchlocations(center:radius:limit:modes:strictmodematch:)","type":"method"},{"title":"static func fetchLocations(center: CLLocationCoordinate2D, radius: CLLocationDistance, limit: Int, modes: [String]?, strictModeMatch: Bool, in: TKRegion) async throws -> [TKNamedCoordinate]","path":"\/documentation\/tripkit\/tklocationprovider\/fetchlocations(center:radius:limit:modes:strictmodematch:in:)","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"title":"TKLocationProvider.Error","path":"\/documentation\/tripkit\/tklocationprovider\/error","type":"enum","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tklocationprovider\/error\/serverreturnedbadformat","type":"case","title":"case serverReturnedBadFormat"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tklocationprovider\/error\/!=(_:_:)"}],"path":"\/documentation\/tripkit\/tklocationprovider\/error\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tklocationprovider\/error\/localizeddescription"}],"path":"\/documentation\/tripkit\/tklocationprovider\/error\/error-implementations","type":"symbol","title":"Error Implementations"}]}]},{"path":"\/documentation\/tripkit\/tkpathfriendliness","type":"enum","title":"TKPathFriendliness","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case dismount","path":"\/documentation\/tripkit\/tkpathfriendliness\/dismount"},{"type":"case","title":"case friendly","path":"\/documentation\/tripkit\/tkpathfriendliness\/friendly"},{"type":"case","title":"case unfriendly","path":"\/documentation\/tripkit\/tkpathfriendliness\/unfriendly"},{"type":"case","title":"case unknown","path":"\/documentation\/tripkit\/tkpathfriendliness\/unknown"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var color: TKColor","path":"\/documentation\/tripkit\/tkpathfriendliness\/color"},{"type":"property","title":"var title: String","path":"\/documentation\/tripkit\/tkpathfriendliness\/title"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tkpathfriendliness\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/tripkit\/tkpathfriendliness\/!=(_:_:)","type":"op","title":"static func != (Self, Self) -> Bool"}]}]},{"path":"\/documentation\/tripkit\/tkquickbookinghelper","type":"enum","title":"TKQuickBookingHelper","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func fetchQuickBookings(for: TKSegment) async throws -> [TKQuickBooking]","path":"\/documentation\/tripkit\/tkquickbookinghelper\/fetchquickbookings(for:)","type":"method"}]},{"path":"\/documentation\/tripkit\/tkrealtimeupdateprogress","type":"enum","title":"TKRealTimeUpdateProgress","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkrealtimeupdateprogress\/idle","type":"case","title":"case idle"},{"path":"\/documentation\/tripkit\/tkrealtimeupdateprogress\/updated(_:)","type":"case","title":"case updated(E)"},{"path":"\/documentation\/tripkit\/tkrealtimeupdateprogress\/updating","type":"case","title":"case updating"}]},{"path":"\/documentation\/tripkit\/tkregionparsererror","type":"enum","title":"TKRegionParserError","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case badTimeZoneIdentifier(String)","type":"case","path":"\/documentation\/tripkit\/tkregionparsererror\/badtimezoneidentifier(_:)"},{"title":"case cannotParseInternationalRegion","type":"case","path":"\/documentation\/tripkit\/tkregionparsererror\/cannotparseinternationalregion"},{"title":"case emptyPolygon","type":"case","path":"\/documentation\/tripkit\/tkregionparsererror\/emptypolygon"},{"title":"case fetchingRegionsFailed","type":"case","path":"\/documentation\/tripkit\/tkregionparsererror\/fetchingregionsfailed"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkit\/tkregionparsererror\/localizeddescription"}],"title":"Error Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkregionparsererror\/error-implementations"}]},{"path":"\/documentation\/tripkit\/tkroutingquerytime","type":"enum","title":"TKRoutingQueryTime","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkroutingquerytime\/arriveby(_:)","type":"case","title":"case arriveBy(Date)"},{"path":"\/documentation\/tripkit\/tkroutingquerytime\/leaveasap","type":"case","title":"case leaveASAP"},{"path":"\/documentation\/tripkit\/tkroutingquerytime\/leaveafter(_:)","type":"case","title":"case leaveAfter(Date)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkroutingquerytime\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkroutingquerytime\/equatable-implementations","type":"symbol","title":"Equatable Implementations"}]},{"path":"\/documentation\/tripkit\/tksegmentordering","type":"enum","title":"TKSegmentOrdering","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case end","path":"\/documentation\/tripkit\/tksegmentordering\/end","type":"case"},{"title":"case regular","path":"\/documentation\/tripkit\/tksegmentordering\/regular","type":"case"},{"title":"case start","path":"\/documentation\/tripkit\/tksegmentordering\/start","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tksegmentordering\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksegmentordering\/!=(_:_:)","type":"op"}],"path":"\/documentation\/tripkit\/tksegmentordering\/equatable-implementations","type":"symbol"},{"title":"RawRepresentable Implementations","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tksegmentordering\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tksegmentordering\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkit\/tksegmentordering\/rawrepresentable-implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tksegmenttype","type":"enum","title":"TKSegmentType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case scheduled","path":"\/documentation\/tripkit\/tksegmenttype\/scheduled","type":"case"},{"title":"case stationary","path":"\/documentation\/tripkit\/tksegmenttype\/stationary","type":"case"},{"title":"case unknown","path":"\/documentation\/tripkit\/tksegmenttype\/unknown","type":"case"},{"title":"case unscheduled","path":"\/documentation\/tripkit\/tksegmenttype\/unscheduled","type":"case"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tksegmenttype\/init(rawvalue:)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","path":"\/documentation\/tripkit\/tksegmenttype\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tksegmenttype\/!=(_:_:)","type":"op"}],"type":"symbol"},{"title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tksegmenttype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tksegmenttype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tksegmenttype\/hash(into:)","type":"method"}],"type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkservicetiming","type":"enum","title":"TKServiceTiming","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case frequencyBased(frequency: TimeInterval, start: Date?, end: Date?, totalTravelTime: TimeInterval?)","type":"case","path":"\/documentation\/tripkit\/tkservicetiming\/frequencybased(frequency:start:end:totaltraveltime:)"},{"title":"case timetabled(arrival: Date?, departure: Date?)","type":"case","path":"\/documentation\/tripkit\/tkservicetiming\/timetabled(arrival:departure:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","path":"\/documentation\/tripkit\/tkservicetiming\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkservicetiming\/!=(_:_:)","type":"op"}]}]},{"path":"\/documentation\/tripkit\/tkstylemodeicontype","type":"enum","title":"TKStyleModeIconType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkstylemodeicontype\/alert","title":"case alert"},{"type":"case","path":"\/documentation\/tripkit\/tkstylemodeicontype\/listmainmode","title":"case listMainMode"},{"type":"case","path":"\/documentation\/tripkit\/tkstylemodeicontype\/mapicon","title":"case mapIcon"},{"type":"case","path":"\/documentation\/tripkit\/tkstylemodeicontype\/resolutionindependent","title":"case resolutionIndependent"},{"type":"case","path":"\/documentation\/tripkit\/tkstylemodeicontype\/vehicle","title":"case vehicle"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkstylemodeicontype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkstylemodeicontype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tkstylemodeicontype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations"},{"type":"symbol","path":"\/documentation\/tripkit\/tkstylemodeicontype\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkstylemodeicontype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tktimetype","type":"enum","title":"TKTimeType","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktimetype\/arrivebefore","type":"case","title":"case arriveBefore"},{"path":"\/documentation\/tripkit\/tktimetype\/leaveasap","type":"case","title":"case leaveASAP"},{"path":"\/documentation\/tripkit\/tktimetype\/leaveafter","type":"case","title":"case leaveAfter"},{"path":"\/documentation\/tripkit\/tktimetype\/none","type":"case","title":"case none"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tktimetype\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/tripkit\/tktimetype\/equatable-implementations","type":"symbol","title":"Equatable Implementations","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/tripkit\/tktimetype\/!=(_:_:)"}]},{"path":"\/documentation\/tripkit\/tktimetype\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktimetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktimetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}]}]},{"path":"\/documentation\/tripkit\/tktransportmode","type":"enum","title":"TKTransportMode","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktransportmode\/bicycle","title":"case bicycle","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/bicycledeprecated","title":"case bicycleDeprecated","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/bicycleshared","title":"case bicycleShared","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/bikesharedeprecated","title":"case bikeShareDeprecated","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/car","title":"case car","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/carpool","title":"case carPool","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/carrental","title":"case carRental","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/carshare","title":"case carShare","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/drt","title":"case drt","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/flight","title":"case flight","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/limited","title":"case limited","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/micromobility","title":"case micromobility","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/micromobilityshared","title":"case micromobilityShared","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/motorbike","title":"case motorbike","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/publictransport","title":"case publicTransport","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/schoolbuses","title":"case schoolBuses","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/taxi","title":"case taxi","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/tnc","title":"case tnc","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/walking","title":"case walking","type":"case"},{"path":"\/documentation\/tripkit\/tktransportmode\/wheelchair","title":"case wheelchair","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktransportmode\/init(modeidentifier:)","title":"init?(modeIdentifier: String)","type":"init"},{"path":"\/documentation\/tripkit\/tktransportmode\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktransportmode\/modeidentifier","title":"var modeIdentifier: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktransportmode\/color(for:)","title":"static func color(for: String) -> TKColor","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/genericmodeidentifier(formodeidentifier:)","title":"static func genericModeIdentifier(forModeIdentifier: String) -> String","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/groupmodeidentifiers(_:includegroupforall:)","title":"static func groupModeIdentifiers(Set<String>, includeGroupForAll: Bool) -> Set<Set<String>>","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/image(for:)-1bw5y","title":"static func image(for: String) -> TKImage?","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/image(for:)-2r1rv","title":"static func image(for: TKTransportMode) -> TKImage?","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/modeidentifieriscycling(_:)","title":"static func modeIdentifierIsCycling(String) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/modeidentifierispublictransport(_:)","title":"static func modeIdentifierIsPublicTransport(String) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/modeidentifieriswalking(_:)","title":"static func modeIdentifierIsWalking(String) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/modeidentifieriswheelchair(_:)","title":"static func modeIdentifierIsWheelchair(String) -> Bool","type":"method"},{"path":"\/documentation\/tripkit\/tktransportmode\/title(for:)","title":"static func title(for: String) -> String?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktransportmode\/equatable-implementations","children":[{"title":"Operators","type":"groupMarker"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tktransportmode\/!=(_:_:)"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tktransportmode\/rawrepresentable-implementations","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","type":"property","path":"\/documentation\/tripkit\/tktransportmode\/hashvalue"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","type":"method","path":"\/documentation\/tripkit\/tktransportmode\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tktripcosttype","type":"enum","title":"TKTripCostType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","title":"case calories","path":"\/documentation\/tripkit\/tktripcosttype\/calories"},{"type":"case","title":"case carbon","path":"\/documentation\/tripkit\/tktripcosttype\/carbon"},{"type":"case","title":"case count","path":"\/documentation\/tripkit\/tktripcosttype\/count"},{"type":"case","title":"case duration","path":"\/documentation\/tripkit\/tktripcosttype\/duration"},{"type":"case","title":"case hassle","path":"\/documentation\/tripkit\/tktripcosttype\/hassle"},{"type":"case","title":"case price","path":"\/documentation\/tripkit\/tktripcosttype\/price"},{"type":"case","title":"case score","path":"\/documentation\/tripkit\/tktripcosttype\/score"},{"type":"case","title":"case time","path":"\/documentation\/tripkit\/tktripcosttype\/time"},{"type":"case","title":"case walking","path":"\/documentation\/tripkit\/tktripcosttype\/walking"},{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init?(rawValue: Int)","path":"\/documentation\/tripkit\/tktripcosttype\/init(rawvalue:)"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","title":"Equatable Implementations","path":"\/documentation\/tripkit\/tktripcosttype\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tktripcosttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}]},{"type":"symbol","title":"RawRepresentable Implementations","path":"\/documentation\/tripkit\/tktripcosttype\/rawrepresentable-implementations","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tktripcosttype\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tktripcosttype\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tktripcosttype\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tktripcosttype\/hash(into:)","type":"method"}]}]},{"path":"\/documentation\/tripkit\/tktripfetcher","type":"enum","title":"TKTripFetcher","children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripfetcher\/downloadtrip(_:identifier:into:)","title":"static func downloadTrip(URL, identifier: String?, into: NSManagedObjectContext) async throws -> Trip","type":"method"},{"path":"\/documentation\/tripkit\/tktripfetcher\/downloadtrip(_:identifier:into:completion:)","title":"static func downloadTrip(URL, identifier: String?, into: NSManagedObjectContext, completion: (Result<Trip, Error>) -> Void)","type":"method"},{"path":"\/documentation\/tripkit\/tktripfetcher\/update(_:url:aborter:)","title":"static func update(Trip, url: URL?, aborter: ((URL) -> Bool)) async throws -> (Trip, URL, didUpdate: Bool)","type":"method"},{"path":"\/documentation\/tripkit\/tktripfetcher\/update(_:url:aborter:completion:)","title":"static func update(Trip, url: URL?, aborter: ((URL) -> Bool), completion: (Result<(Trip, URL, didUpdate: Bool), Error>) -> Void)","type":"method"}]},{"path":"\/documentation\/tripkit\/tktrippattern","type":"enum","title":"TKTripPattern","children":[{"type":"groupMarker","title":"Type Methods"},{"path":"\/documentation\/tripkit\/tktrippattern\/modelabels(for:)-1vnec","type":"method","title":"static func modeLabels(for: [TKSegmentPattern]) -> [String]"},{"path":"\/documentation\/tripkit\/tktrippattern\/modelabels(for:)-nm1b","type":"method","title":"static func modeLabels(for: Trip) -> [String]"},{"path":"\/documentation\/tripkit\/tktrippattern\/od(for:)","type":"method","title":"static func od(for: [TKSegmentPattern]) -> (o: CLLocationCoordinate2D, d: CLLocationCoordinate2D)?"},{"path":"\/documentation\/tripkit\/tktrippattern\/pattern(for:)","type":"method","title":"static func pattern(for: Trip) -> [TKSegmentPattern]"}]},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility","type":"enum","title":"TKTripSegmentVisibility","children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/hidden","title":"case hidden","type":"case"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/indetails","title":"case inDetails","type":"case"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/insummary","title":"case inSummary","type":"case"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/onmap","title":"case onMap","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/equatable-implementations","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool"}],"title":"Equatable Implementations","type":"symbol"},{"path":"\/documentation\/tripkit\/tktripsegmentvisibility\/rawrepresentable-implementations","children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/init(from:)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/encode(to:)"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tktripsegmentvisibility\/hash(into:)"}],"title":"RawRepresentable Implementations","type":"symbol"}]},{"path":"\/documentation\/tripkit\/tkturnbyturnmode","type":"enum","title":"TKTurnByTurnMode","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkturnbyturnmode\/cycling","title":"case cycling"},{"type":"case","path":"\/documentation\/tripkit\/tkturnbyturnmode\/driving","title":"case driving"},{"type":"case","path":"\/documentation\/tripkit\/tkturnbyturnmode\/walking","title":"case walking"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkturnbyturnmode\/init(rawvalue:)","title":"init?(rawValue: String)"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/tripkit\/tkturnbyturnmode\/!=(_:_:)","type":"op"}],"type":"symbol","path":"\/documentation\/tripkit\/tkturnbyturnmode\/equatable-implementations","title":"Equatable Implementations"},{"children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(from: any Decoder) throws","path":"\/documentation\/tripkit\/tkturnbyturnmode\/init(from:)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/tripkit\/tkturnbyturnmode\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func encode(to: any Encoder) throws","path":"\/documentation\/tripkit\/tkturnbyturnmode\/encode(to:)","type":"method"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/tripkit\/tkturnbyturnmode\/hash(into:)","type":"method"}],"type":"symbol","path":"\/documentation\/tripkit\/tkturnbyturnmode\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tkvehicletype","type":"enum","title":"TKVehicleType","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"type":"case","path":"\/documentation\/tripkit\/tkvehicletype\/suv","title":"case SUV"},{"type":"case","path":"\/documentation\/tripkit\/tkvehicletype\/bicycle","title":"case bicycle"},{"type":"case","path":"\/documentation\/tripkit\/tkvehicletype\/car","title":"case car"},{"type":"case","path":"\/documentation\/tripkit\/tkvehicletype\/kickscooter","title":"case kickscooter"},{"type":"case","path":"\/documentation\/tripkit\/tkvehicletype\/motorbike","title":"case motorbike"},{"type":"case","path":"\/documentation\/tripkit\/tkvehicletype\/unknown","title":"case unknown"},{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/tripkit\/tkvehicletype\/init(rawvalue:)","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkvehicletype\/title","title":"var title: String"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkvehicletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkvehicletype\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkvehicletype\/hashvalue","type":"property","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkvehicletype\/hash(into:)","type":"method","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkit\/tkvehicletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility","type":"enum","title":"TKWheelchairAccessibility","children":[{"type":"groupMarker","title":"Enumeration Cases"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/accessible","type":"case","title":"case accessible"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/notaccessible","type":"case","title":"case notAccessible"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/unknown","type":"case","title":"case unknown"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/init(bool:)","type":"init","title":"init(bool: Bool?)"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/init(rawvalue:)","type":"init","title":"init?(rawValue: Int)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/title","type":"property","title":"var title: String"},{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/combine(with:preferunknown:)","type":"method","title":"func combine(with: TKWheelchairAccessibility, preferUnknown: Bool) -> TKWheelchairAccessibility"},{"type":"groupMarker","title":"Default Implementations"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/equatable-implementations","type":"symbol","title":"Equatable Implementations"},{"children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/tripkit\/tkwheelchairaccessibility\/rawrepresentable-implementations","type":"symbol","title":"RawRepresentable Implementations"}]},{"path":"\/documentation\/tripkit\/tripkit","type":"enum","title":"TripKit","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var apiKey: String","path":"\/documentation\/tripkit\/tripkit\/apikey","type":"property"},{"title":"static let bundle: Bundle","path":"\/documentation\/tripkit\/tripkit\/bundle","type":"property"},{"title":"static let shared: TKStore","path":"\/documentation\/tripkit\/tripkit\/shared","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func loadModel() -> NSManagedObjectModel?","path":"\/documentation\/tripkit\/tripkit\/loadmodel()","type":"method"},{"title":"static func prepareForNewSession()","path":"\/documentation\/tripkit\/tripkit\/preparefornewsession()","type":"method"}]},{"type":"groupMarker","title":"Extended Modules"},{"path":"\/documentation\/tripkit\/coredata","type":"extension","title":"CoreData","children":[{"type":"groupMarker","title":"Extended Classes"},{"path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext","children":[{"type":"groupMarker","title":"Instance Methods"},{"path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext\/containsobject(_:predicate:)","type":"method","title":"func containsObject<E>(E.Type, predicate: NSPredicate?) -> Bool"},{"path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext\/fetchobjects(_:predicate:sortdescriptors:)","type":"method","title":"func fetchObjects<E>(E.Type, predicate: NSPredicate?, sortDescriptors: [NSSortDescriptor]?) -> [E]"},{"path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext\/fetchobjects(_:sortdescriptors:predicate:relationshipkeypathsforprefetching:fetchlimit:)","type":"method","title":"func fetchObjects<E>(E.Type, sortDescriptors: [NSSortDescriptor], predicate: NSPredicate?, relationshipKeyPathsForPrefetching: [String]?, fetchLimit: Int?) -> [E]"},{"path":"\/documentation\/tripkit\/coredata\/nsmanagedobjectcontext\/fetchuniqueobject(_:predicate:)","type":"method","title":"func fetchUniqueObject<E>(E.Type, predicate: NSPredicate?) -> E?"}],"type":"extension","title":"NSManagedObjectContext"}]},{"path":"\/documentation\/tripkit\/corelocation","type":"extension","title":"CoreLocation","children":[{"title":"Extended Structures","type":"groupMarker"},{"path":"\/documentation\/tripkit\/corelocation\/cllocationcoordinate2d","title":"CLLocationCoordinate2D","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var isValid: Bool","path":"\/documentation\/tripkit\/corelocation\/cllocationcoordinate2d\/isvalid"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func distance(from: CLLocationCoordinate2D) -> CLLocationDistance?","path":"\/documentation\/tripkit\/corelocation\/cllocationcoordinate2d\/distance(from:)"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","title":"static let invalid: CLLocationCoordinate2D","path":"\/documentation\/tripkit\/corelocation\/cllocationcoordinate2d\/invalid"},{"type":"groupMarker","title":"Type Methods"},{"type":"method","title":"static func decodePolyline(String) -> [CLLocationCoordinate2D]","path":"\/documentation\/tripkit\/corelocation\/cllocationcoordinate2d\/decodepolyline(_:)"}],"type":"extension"}]},{"path":"\/documentation\/tripkit\/foundation","type":"extension","title":"Foundation","children":[{"type":"groupMarker","title":"Extended Classes"},{"path":"\/documentation\/tripkit\/foundation\/bundle","type":"extension","title":"Bundle","children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/foundation\/bundle\/productname","title":"var productName: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/tripkit\/foundation\/bundle\/tripkit","title":"static let tripKit: Bundle","type":"property"}]},{"path":"\/documentation\/tripkit\/foundation\/jsondecoder","type":"extension","title":"JSONDecoder","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func decode<T>(T.Type, withJSONObject: Any, options: JSONSerialization.WritingOptions) throws -> T","path":"\/documentation\/tripkit\/foundation\/jsondecoder\/decode(_:withjsonobject:options:)","type":"method"}]},{"path":"\/documentation\/tripkit\/foundation\/jsonencoder","type":"extension","title":"JSONEncoder","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func encodeJSONObject<T>(T, options: JSONSerialization.ReadingOptions) throws -> Any","path":"\/documentation\/tripkit\/foundation\/jsonencoder\/encodejsonobject(_:options:)","type":"method"}]},{"path":"\/documentation\/tripkit\/foundation\/nserror","type":"extension","title":"NSError","children":[{"title":"Initializers","type":"groupMarker"},{"title":"convenience init(code: Int, message: String)","path":"\/documentation\/tripkit\/foundation\/nserror\/init(code:message:)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func error(code: Int, message: String) -> NSError","path":"\/documentation\/tripkit\/foundation\/nserror\/error(code:message:)","type":"method"}]},{"path":"\/documentation\/tripkit\/foundation\/nsnumber","type":"extension","title":"NSNumber","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func toCarbonString() -> String","path":"\/documentation\/tripkit\/foundation\/nsnumber\/tocarbonstring()","type":"method"},{"title":"func toMoneyString(currencyCode: String, decimalPlaces: Int) -> String","path":"\/documentation\/tripkit\/foundation\/nsnumber\/tomoneystring(currencycode:decimalplaces:)","type":"method"},{"title":"func toMoneyString(currencyCode: String, locale: Locale) -> String","path":"\/documentation\/tripkit\/foundation\/nsnumber\/tomoneystring(currencycode:locale:)","type":"method"}]},{"path":"\/documentation\/tripkit\/foundation\/userdefaults","type":"extension","title":"UserDefaults","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static let shared: UserDefaults","path":"\/documentation\/tripkit\/foundation\/userdefaults\/shared","type":"property"}]},{"type":"groupMarker","title":"Extended Structures"},{"path":"\/documentation\/tripkit\/foundation\/date","type":"extension","title":"Date","children":[{"title":"Initializers","type":"groupMarker"},{"title":"init(iso8601: String) throws","type":"init","path":"\/documentation\/tripkit\/foundation\/date\/init(iso8601:)"},{"title":"Instance Properties","type":"groupMarker"},{"title":"var iso8601: String","type":"property","path":"\/documentation\/tripkit\/foundation\/date\/iso8601"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func durationLongSince(Date) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationlongsince(_:)"},{"title":"func durationShortSince(Date) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationshortsince(_:)"},{"title":"func durationSince(Date) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationsince(_:)"},{"title":"func midnight(in: TimeZone) -> Date","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/midnight(in:)"},{"title":"func minutesSince(Date) -> Int","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/minutessince(_:)"},{"title":"func nextMidnight(in: TimeZone) -> Date","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/nextmidnight(in:)"},{"title":"Type Methods","type":"groupMarker"},{"title":"static func durationString(forDays: Int) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationstring(fordays:)"},{"title":"static func durationString(forHours: Int) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationstring(forhours:)"},{"title":"static func durationString(forMinutes: Int) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationstring(forminutes:)"},{"title":"static func durationString(forSeconds: TimeInterval) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationstring(forseconds:)"},{"title":"static func durationStringLong(forMinutes: Int) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationstringlong(forminutes:)"},{"title":"static func durationStringMedium(forMinutes: Int) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationstringmedium(forminutes:)"},{"title":"static func durationStringShort(forMinutes: Int) -> String","type":"method","path":"\/documentation\/tripkit\/foundation\/date\/durationstringshort(forminutes:)"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case invalidISO8601(String)","path":"\/documentation\/tripkit\/foundation\/date\/dateconversionerror\/invalidiso8601(_:)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Error Implementations","path":"\/documentation\/tripkit\/foundation\/date\/dateconversionerror\/error-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedDescription: String","path":"\/documentation\/tripkit\/foundation\/date\/dateconversionerror\/localizeddescription"}]}],"title":"Date.DateConversionError","type":"enum","path":"\/documentation\/tripkit\/foundation\/date\/dateconversionerror"}]},{"type":"groupMarker","title":"Extended Types"},{"path":"\/documentation\/tripkit\/foundation\/nsnotification","type":"extension","title":"NSNotification","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"NSNotification.Name","type":"extension","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/foundation\/nsnotification\/name\/tkregionmanagerupdatedregions","type":"property","title":"static let TKRegionManagerUpdatedRegions: NSNotification.Name"},{"path":"\/documentation\/tripkit\/foundation\/nsnotification\/name\/tktripkitdidreset","type":"property","title":"static let TKTripKitDidReset: Notification.Name"}],"path":"\/documentation\/tripkit\/foundation\/nsnotification\/name"}]}]},{"path":"\/documentation\/tripkit\/mapkit","type":"extension","title":"MapKit","children":[{"type":"groupMarker","title":"Extended Classes"},{"type":"extension","children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var routeColor: TKColor?","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/routecolor","type":"property"},{"title":"var routeDashPattern: [NSNumber]?","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/routedashpattern","type":"property"},{"title":"var routeIsTravelled: Bool","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/routeistravelled","type":"property"},{"title":"var routePath: [Any]","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/routepath","type":"property"},{"title":"var selectionIdentifier: String?","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/selectionidentifier","type":"property"}],"path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline\/tkdisplayableroute-implementations","title":"TKDisplayableRoute Implementations","type":"symbol"}],"title":"MKGeodesicPolyline","path":"\/documentation\/tripkit\/mapkit\/mkgeodesicpolyline"},{"type":"extension","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/mapkit\/mkmultipoint\/closestpoint(to:)","title":"func closestPoint(to: MKMapPoint) -> (point: MKMapPoint, distance: CLLocationDistance)"}],"title":"MKMultiPoint","path":"\/documentation\/tripkit\/mapkit\/mkmultipoint"},{"type":"groupMarker","title":"Extended Protocols"},{"type":"extension","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/mapkit\/mkannotation\/tk_valid(geocoder:)","title":"func tk_valid(geocoder: TKGeocoding) async throws -> MKAnnotation"}],"title":"MKAnnotation","path":"\/documentation\/tripkit\/mapkit\/mkannotation"},{"type":"groupMarker","title":"Extended Structures"},{"type":"extension","children":[{"title":"Type Methods","type":"groupMarker"},{"title":"static func forCoordinateRegion(MKCoordinateRegion) -> MKMapRect","type":"method","path":"\/documentation\/tripkit\/mapkit\/mkmaprect\/forcoordinateregion(_:)"}],"title":"MKMapRect","path":"\/documentation\/tripkit\/mapkit\/mkmaprect"}]},{"path":"\/documentation\/tripkit\/swift","type":"extension","title":"Swift","children":[{"title":"Extended Structures","type":"groupMarker"},{"title":"Array","type":"extension","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var localizedShareString: String","path":"\/documentation\/tripkit\/swift\/array\/localizedsharestring"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func mergeWithPreferences([Element]) -> [Element]","path":"\/documentation\/tripkit\/swift\/array\/mergewithpreferences(_:)"},{"type":"method","title":"func tk_filterDuplicates(includeElement: (Element, Element) -> Bool) -> [Element]","path":"\/documentation\/tripkit\/swift\/array\/tk_filterduplicates(includeelement:)"}],"path":"\/documentation\/tripkit\/swift\/array"},{"title":"KeyedDecodingContainer","type":"extension","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-40dx3","title":"func decode<P>(DefaultCodable<P>.Type, forKey: KeyedDecodingContainer<K>.Key) throws -> DefaultCodable<P>"},{"type":"method","path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-5zja1","title":"func decode(OptionalISO8601OrSecondsSince1970.Type, forKey: KeyedDecodingContainer<K>.Key) throws -> OptionalISO8601OrSecondsSince1970"},{"type":"method","path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-6ie5y","title":"func decode<P>(DefaultCodable<P>.Type, forKey: KeyedDecodingContainer<K>.Key) throws -> DefaultCodable<P>"},{"type":"method","path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer\/decode(_:forkey:)-98ax1","title":"func decode(OptionalISO8601.Type, forKey: KeyedDecodingContainer<K>.Key) throws -> OptionalISO8601"}],"path":"\/documentation\/tripkit\/swift\/keyeddecodingcontainer"}]},{"path":"\/documentation\/tripkit\/uikit","type":"extension","title":"UIKit","children":[{"type":"groupMarker","title":"Extended Classes"},{"type":"extension","path":"\/documentation\/tripkit\/uikit\/uicolor","children":[{"title":"Type Properties","type":"groupMarker"},{"title":"static var routeDashColorNonTravelled: TKColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/routedashcolornontravelled","type":"property"},{"title":"static var tkAppTintColor: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkapptintcolor","type":"property"},{"title":"static var tkBackground: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackground","type":"property"},{"title":"static var tkBackgroundBelowTile: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundbelowtile","type":"property"},{"title":"static var tkBackgroundGrouped: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundgrouped","type":"property"},{"title":"static var tkBackgroundSecondary: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundsecondary","type":"property"},{"title":"static var tkBackgroundSelected: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundselected","type":"property"},{"title":"static var tkBackgroundTile: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbackgroundtile","type":"property"},{"title":"static var tkBarBackgroundColor: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbarbackgroundcolor","type":"property"},{"title":"static var tkBarForegroundColor: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbarforegroundcolor","type":"property"},{"title":"static var tkBarSecondary: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkbarsecondary","type":"property"},{"title":"static var tkEmptyButtonBackgroundColor: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkemptybuttonbackgroundcolor","type":"property"},{"title":"static var tkEmptyButtonTextColor: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkemptybuttontextcolor","type":"property"},{"title":"static var tkFilledButtonBackgroundColor: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkfilledbuttonbackgroundcolor","type":"property"},{"title":"static var tkFilledButtonTextColor: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkfilledbuttontextcolor","type":"property"},{"title":"static var tkLabelOnDark: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelondark","type":"property"},{"title":"static var tkLabelOnLight: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelonlight","type":"property"},{"title":"static var tkLabelPrimary: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelprimary","type":"property"},{"title":"static var tkLabelQuarternary: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelquarternary","type":"property"},{"title":"static var tkLabelSecondary: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabelsecondary","type":"property"},{"title":"static var tkLabelTertiary: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tklabeltertiary","type":"property"},{"title":"static var tkMapOverlay: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkmapoverlay","type":"property"},{"title":"static var tkNeutral: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral","type":"property"},{"title":"static var tkNeutral1: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral1","type":"property"},{"title":"static var tkNeutral2: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral2","type":"property"},{"title":"static var tkNeutral3: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral3","type":"property"},{"title":"static var tkNeutral4: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral4","type":"property"},{"title":"static var tkNeutral5: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkneutral5","type":"property"},{"title":"static var tkSeparator: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkseparator","type":"property"},{"title":"static var tkSeparatorSubtle: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkseparatorsubtle","type":"property"},{"title":"static let tkSheetOverlay: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tksheetoverlay","type":"property"},{"title":"static var tkStateError: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkstateerror","type":"property"},{"title":"static var tkStateSuccess: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkstatesuccess","type":"property"},{"title":"static var tkStateWarning: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkstatewarning","type":"property"},{"title":"static let tkStatusBarOverlay: UIColor","path":"\/documentation\/tripkit\/uikit\/uicolor\/tkstatusbaroverlay","type":"property"}],"title":"UIColor"},{"type":"extension","path":"\/documentation\/tripkit\/uikit\/uiimage","children":[{"type":"groupMarker","title":"Type Properties"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/backgroundnavsecondary","type":"property","title":"static let backgroundNavSecondary: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery","type":"property","title":"static let iconBattery: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery0","type":"property","title":"static let iconBattery0: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery100","type":"property","title":"static let iconBattery100: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery25","type":"property","title":"static let iconBattery25: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery50","type":"property","title":"static let iconBattery50: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconbattery75","type":"property","title":"static let iconBattery75: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodeaeroplane","type":"property","title":"static let iconModeAeroplane: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodebicycle","type":"property","title":"static let iconModeBicycle: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodebicycleelectric","type":"property","title":"static let iconModeBicycleElectric: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodebicyclefolding","type":"property","title":"static let iconModeBicycleFolding: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodebus","type":"property","title":"static let iconModeBus: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecar","type":"property","title":"static let iconModeCar: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecarpool","type":"property","title":"static let iconModeCarPool: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecarrideshare","type":"property","title":"static let iconModeCarRideShare: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecarshare","type":"property","title":"static let iconModeCarShare: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodecoach","type":"property","title":"static let iconModeCoach: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodeferry","type":"property","title":"static let iconModeFerry: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodehoverboard","type":"property","title":"static let iconModeHoverboard: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodekickscooter","type":"property","title":"static let iconModeKickscooter: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodemotorbike","type":"property","title":"static let iconModeMotorbike: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodemotoscooter","type":"property","title":"static let iconModeMotoscooter: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodeparking","type":"property","title":"static let iconModeParking: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodepublictransport","type":"property","title":"static let iconModePublicTransport: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodesegway","type":"property","title":"static let iconModeSegway: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodetaxi","type":"property","title":"static let iconModeTaxi: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodetrain","type":"property","title":"static let iconModeTrain: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodetrainintercity","type":"property","title":"static let iconModeTrainIntercity: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodetram","type":"property","title":"static let iconModeTram: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodeunicycle","type":"property","title":"static let iconModeUnicycle: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodewalk","type":"property","title":"static let iconModeWalk: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconmodewheelchair","type":"property","title":"static let iconModeWheelchair: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconpin","type":"property","title":"static let iconPin: TKImage"},{"path":"\/documentation\/tripkit\/uikit\/uiimage\/iconsearchtimetable","type":"property","title":"static let iconSearchTimetable: TKImage"}],"title":"UIImage"}]}],"title":"TripKit"}],"path":"\/documentation","title":"Documentation","type":"module"}]}}