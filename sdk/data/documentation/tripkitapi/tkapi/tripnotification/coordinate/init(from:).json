{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"decoder","kind":"internalParam"},{"text":": any ","kind":"text"},{"text":"Decoder","preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["iOS"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/TripKitAPI\/documentation\/TripKitAPI","doc:\/\/TripKitAPI\/documentation\/TripKitAPI\/TKAPI","doc:\/\/TripKitAPI\/documentation\/TripKitAPI\/TKAPI\/TripNotification","doc:\/\/TripKitAPI\/documentation\/TripKitAPI\/TKAPI\/TripNotification\/Coordinate"]]},"metadata":{"title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"preciseIdentifier":"s:s7DecoderP","kind":"typeIdentifier","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"externalID":"s:10TripKitAPI5TKAPIV0A12NotificationV10CoordinateV4fromAGs7Decoder_p_tKcfc","roleHeading":"Initializer","role":"symbol","modules":[{"name":"TripKitAPI"}],"symbolKind":"init"},"variants":[{"paths":["\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/init(from:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/TripKitAPI\/documentation\/TripKitAPI\/TKAPI\/TripNotification\/Coordinate\/init(from:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Decodable.init(from:)"},{"type":"text","text":"."}],"references":{"doc://TripKitAPI/documentation/TripKitAPI":{"identifier":"doc:\/\/TripKitAPI\/documentation\/TripKitAPI","title":"TripKitAPI","type":"topic","abstract":[{"type":"text","text":"Low-level API framework providing networking and data models for SkedGoâ€™s transportation services."}],"url":"\/documentation\/tripkitapi","role":"collection","kind":"symbol"},"doc://TripKitAPI/documentation/TripKitAPI/TKAPI/TripNotification":{"kind":"symbol","role":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"TripNotification"}],"type":"topic","title":"TKAPI.TripNotification","url":"\/documentation\/tripkitapi\/tkapi\/tripnotification","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TripNotification"}],"identifier":"doc:\/\/TripKitAPI\/documentation\/TripKitAPI\/TKAPI\/TripNotification"},"doc://TripKitAPI/documentation/TripKitAPI/TKAPI":{"type":"topic","abstract":[{"type":"text","text":"Top-Level Namespace for model structs that"},{"type":"text","text":" "},{"type":"text","text":"directly correspond to the TripGo API."}],"title":"TKAPI","role":"symbol","navigatorTitle":[{"text":"TKAPI","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TKAPI","kind":"identifier"}],"identifier":"doc:\/\/TripKitAPI\/documentation\/TripKitAPI\/TKAPI","kind":"symbol","url":"\/documentation\/tripkitapi\/tkapi"},"doc://TripKitAPI/documentation/TripKitAPI/TKAPI/TripNotification/Coordinate":{"identifier":"doc:\/\/TripKitAPI\/documentation\/TripKitAPI\/TKAPI\/TripNotification\/Coordinate","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Coordinate"}],"abstract":[],"navigatorTitle":[{"kind":"identifier","text":"Coordinate"}],"url":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate","title":"TKAPI.TripNotification.Coordinate","kind":"symbol","role":"symbol"},"doc://TripKitAPI/documentation/TripKitAPI/TKAPI/TripNotification/Coordinate/init(from:)":{"type":"topic","kind":"symbol","abstract":[],"identifier":"doc:\/\/TripKitAPI\/documentation\/TripKitAPI\/TKAPI\/TripNotification\/Coordinate\/init(from:)","title":"init(from:)","role":"symbol","url":"\/documentation\/tripkitapi\/tkapi\/tripnotification\/coordinate\/init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": any "},{"kind":"typeIdentifier","preciseIdentifier":"s:s7DecoderP","text":"Decoder"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}}}