{"relationshipsSections":[{"identifiers":["doc:\/\/TripKitUI\/objc(cs)NSObject"],"type":"inheritsFrom","kind":"relationships","title":"Inherits From"},{"identifiers":["doc:\/\/TripKitUI\/7Combine16ObservableObjectP","doc:\/\/TripKitUI\/objc(pl)NSObject","doc:\/\/TripKitUI\/7RxSwift18ReactiveCompatibleP","doc:\/\/TripKitUI\/s7CVarArgP","doc:\/\/TripKitUI\/s28CustomDebugStringConvertibleP","doc:\/\/TripKitUI\/s23CustomStringConvertibleP","doc:\/\/TripKitUI\/SQ","doc:\/\/TripKitUI\/SH","doc:\/\/TripKitUI\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TKUITripMonitorManager","kind":"identifier"}],"platforms":["iOS"]}]},{"kind":"content","content":[{"text":"Requirements:","anchor":"Requirements","level":3,"type":"heading"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Project > Your Target > Capabilities > Background Modes: Enable “Location Updates”"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Project > Your Target > Info: Include both ","type":"text"},{"type":"codeVoice","code":"NSLocationAlwaysAndWhenInUseUsageDescription"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"NSLocationWhenInUseUsageDescription"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Then call "},{"type":"codeVoice","code":"TKUINotificationManager.shared.subscribe(to: .tripAlerts) { ... }"},{"type":"text","text":" in your app."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Implement ","type":"text"},{"code":"TKUINotificationManagerDelegate","type":"codeVoice"},{"text":" and set it on ","type":"text"},{"code":"TKUINotificationManager.shared.delegate","type":"codeVoice"}]}]}],"type":"unorderedList"},{"text":"Push notifications:","anchor":"Push-notifications","level":3,"type":"heading"},{"inlineContent":[{"text":"An additional feature is server-side notifications related to a trip being monitored. This requires additional","type":"text"},{"text":" ","type":"text"},{"text":"set-up:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lastly, call "},{"type":"codeVoice","code":"TKUINotificationManager.shared.subscribe(to: .pushNotifications) { _ in }"}]}]}],"type":"unorderedList"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tripkitui\/tkuitripmonitormanager"]}],"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","metadata":{"modules":[{"name":"TripKitUI"}],"role":"symbol","symbolKind":"class","externalID":"c:@M@TripKitUI@objc(cs)TKUITripMonitorManager","navigatorTitle":[{"text":"TKUITripMonitorManager","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TKUITripMonitorManager","kind":"identifier"}],"roleHeading":"Class","title":"TKUITripMonitorManager"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager"},"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI"]]},"abstract":[{"type":"text","text":"The manager for trip notifications such as “get off at the next stop” or “your trip is about to start”"}],"topicSections":[{"identifiers":["doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/GeofenceMatch"],"anchor":"Structures","title":"Structures","generated":true},{"identifiers":["doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/match(geofenceID:)","doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/monitorRegions(from:includeTimeToLeaveNotification:)","doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/stopMonitoring()"],"anchor":"Instance-Methods","title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/shared","doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/tripNotificationCategoryIdentifier"],"anchor":"Type-Properties","title":"Type Properties","generated":true},{"identifiers":["doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/ObservableObject-Implementations"],"anchor":"Default-Implementations","title":"Default Implementations","generated":true}],"references":{"doc://TripKitUI/documentation/TripKitUI/TKUITripMonitorManager/tripNotificationCategoryIdentifier":{"kind":"symbol","type":"topic","url":"\/documentation\/tripkitui\/tkuitripmonitormanager\/tripnotificationcategoryidentifier","abstract":[{"type":"text","text":"Will be set on "},{"type":"codeVoice","code":"UNNotificationRequest.content.categoryIdentifier"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/tripNotificationCategoryIdentifier","title":"tripNotificationCategoryIdentifier","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tripNotificationCategoryIdentifier","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}]},"doc://TripKitUI/SH":{"type":"unresolvable","identifier":"doc:\/\/TripKitUI\/SH","title":"Swift.Hashable"},"doc://TripKitUI/s7CVarArgP":{"type":"unresolvable","identifier":"doc:\/\/TripKitUI\/s7CVarArgP","title":"Swift.CVarArg"},"doc://TripKitUI/documentation/TripKitUI/TKUITripMonitorManager/match(geofenceID:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"match","kind":"identifier"},{"text":"(","kind":"text"},{"text":"geofenceID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") -> ","kind":"text"},{"text":"GeofenceMatch","kind":"typeIdentifier","preciseIdentifier":"s:9TripKitUI22TKUITripMonitorManagerC13GeofenceMatchV"},{"text":"?","kind":"text"}],"type":"topic","url":"\/documentation\/tripkitui\/tkuitripmonitormanager\/match(geofenceid:)","title":"match(geofenceID:)","role":"symbol","abstract":[],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/match(geofenceID:)","kind":"symbol"},"doc://TripKitUI/documentation/TripKitUI/TKUITripMonitorManager":{"abstract":[{"type":"text","text":"The manager for trip notifications such as “get off at the next stop” or “your trip is about to start”"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager","type":"topic","url":"\/documentation\/tripkitui\/tkuitripmonitormanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"TKUITripMonitorManager"}],"kind":"symbol","title":"TKUITripMonitorManager","navigatorTitle":[{"kind":"identifier","text":"TKUITripMonitorManager"}],"role":"symbol"},"doc://TripKitUI/documentation/TripKitUI/TKUITripMonitorManager/stopMonitoring()":{"abstract":[],"url":"\/documentation\/tripkitui\/tkuitripmonitormanager\/stopmonitoring()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopMonitoring","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/stopMonitoring()","title":"stopMonitoring()","type":"topic"},"doc://TripKitUI/s28CustomDebugStringConvertibleP":{"identifier":"doc:\/\/TripKitUI\/s28CustomDebugStringConvertibleP","type":"unresolvable","title":"Swift.CustomDebugStringConvertible"},"doc://TripKitUI/objc(cs)NSObject":{"identifier":"doc:\/\/TripKitUI\/objc(cs)NSObject","type":"unresolvable","title":"ObjectiveC.NSObject"},"doc://TripKitUI/documentation/TripKitUI":{"role":"collection","kind":"symbol","title":"TripKitUI","abstract":[{"text":"User interface framework providing pre-built view controllers and UI components for transportation applications.","type":"text"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","url":"\/documentation\/tripkitui","type":"topic"},"doc://TripKitUI/documentation/TripKitUI/TKUITripMonitorManager/shared":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shared","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@TripKitUI@objc(cs)TKUITripMonitorManager","text":"TKUITripMonitorManager","kind":"typeIdentifier"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/shared","abstract":[],"role":"symbol","url":"\/documentation\/tripkitui\/tkuitripmonitormanager\/shared","title":"shared","type":"topic","kind":"symbol"},"doc://TripKitUI/7Combine16ObservableObjectP":{"identifier":"doc:\/\/TripKitUI\/7Combine16ObservableObjectP","type":"unresolvable","title":"Combine.ObservableObject"},"doc://TripKitUI/documentation/TripKitUI/TKUITripMonitorManager/GeofenceMatch":{"title":"TKUITripMonitorManager.GeofenceMatch","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GeofenceMatch","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/GeofenceMatch","url":"\/documentation\/tripkitui\/tkuitripmonitormanager\/geofencematch","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"GeofenceMatch","kind":"identifier"}]},"doc://TripKitUI/s23CustomStringConvertibleP":{"title":"Swift.CustomStringConvertible","type":"unresolvable","identifier":"doc:\/\/TripKitUI\/s23CustomStringConvertibleP"},"doc://TripKitUI/documentation/TripKitUI/TKUITripMonitorManager/ObservableObject-Implementations":{"title":"ObservableObject Implementations","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/ObservableObject-Implementations","role":"collectionGroup","abstract":[],"kind":"article","type":"topic","url":"\/documentation\/tripkitui\/tkuitripmonitormanager\/observableobject-implementations"},"doc://TripKitUI/7RxSwift18ReactiveCompatibleP":{"type":"unresolvable","identifier":"doc:\/\/TripKitUI\/7RxSwift18ReactiveCompatibleP","title":"RxSwift.ReactiveCompatible"},"doc://TripKitUI/SQ":{"type":"unresolvable","identifier":"doc:\/\/TripKitUI\/SQ","title":"Swift.Equatable"},"doc://TripKitUI/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/TripKitUI\/s8SendableP","title":"Swift.Sendable"},"doc://TripKitUI/documentation/TripKitUI/TKUITripMonitorManager/monitorRegions(from:includeTimeToLeaveNotification:)":{"abstract":[],"url":"\/documentation\/tripkitui\/tkuitripmonitormanager\/monitorregions(from:includetimetoleavenotification:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"monitorRegions","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Trip","kind":"typeIdentifier","preciseIdentifier":"c:@M@TripKit@objc(cs)Trip"},{"text":", ","kind":"text"},{"text":"includeTimeToLeaveNotification","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/TKUITripMonitorManager\/monitorRegions(from:includeTimeToLeaveNotification:)","title":"monitorRegions(from:includeTimeToLeaveNotification:)","type":"topic"},"doc://TripKitUI/objc(pl)NSObject":{"type":"unresolvable","identifier":"doc:\/\/TripKitUI\/objc(pl)NSObject","title":"ObjectiveC.NSObjectProtocol"}}}