{"kind":"symbol","metadata":{"externalID":"s:e:s:7RxSwift25ObservableConvertibleTypeP9TripKitUIE4bind2toAA10Disposable_pqd___tAD011AnyObserverD0Rd__6OutputQyd__7ElementRtzlF","title":"ObservableConvertibleType","role":"symbol","extendedModule":"RxSwift","symbolKind":"extension","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7RxSwift25ObservableConvertibleTypeP","kind":"identifier","text":"ObservableConvertibleType"}],"roleHeading":"Extended Protocol","navigatorTitle":[{"kind":"identifier","text":"ObservableConvertibleType"}],"modules":[{"relatedModules":["RxSwift"],"name":"TripKitUI"}]},"topicSections":[{"identifiers":["doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/ObservableConvertibleType\/publisher"],"title":"Instance Properties","generated":true,"anchor":"Instance-Properties"},{"identifiers":["doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/ObservableConvertibleType\/asPublisher()","doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/ObservableConvertibleType\/bind(to:)"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"sections":[],"identifier":{"url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/ObservableConvertibleType","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableConvertibleType","kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift25ObservableConvertibleTypeP"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/tripkitui\/rxswift\/observableconvertibletype"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift"]]},"references":{"doc://TripKitUI/documentation/TripKitUI/RxSwift/ObservableConvertibleType/bind(to:)":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/ObservableConvertibleType\/bind(to:)","kind":"symbol","role":"symbol","url":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/bind(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7RxSwift25ObservableConvertibleTypeP9TripKitUIE4bind2toAA10Disposable_pqd___tAD011AnyObserverD0Rd__6OutputQyd__7ElementRtzlF1SL_qd__mfp","text":"S","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7RxSwift10DisposableP","text":"Disposable","kind":"typeIdentifier"}],"title":"bind(to:)","abstract":[{"type":"text","text":"Creates new subscription and sends elements to a Combine Subject."}],"type":"topic"},"doc://TripKitUI/documentation/TripKitUI/RxSwift":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift","title":"RxSwift","abstract":[],"type":"topic","url":"\/documentation\/tripkitui\/rxswift","kind":"symbol","role":"collection"},"doc://TripKitUI/documentation/TripKitUI/RxSwift/ObservableConvertibleType/publisher":{"title":"publisher","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" of the underlying Observable’s Element type"},{"type":"text","text":" "},{"type":"text","text":"so the Observable pushes events to the Publisher."}],"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"publisher"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift25ObservableConvertibleTypeP7ElementQa","text":"Element"},{"kind":"text","text":", Swift"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/ObservableConvertibleType\/publisher","type":"topic","url":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/publisher"},"doc://TripKitUI/documentation/TripKitUI/RxSwift/ObservableConvertibleType":{"url":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype","abstract":[],"role":"symbol","navigatorTitle":[{"text":"ObservableConvertibleType","kind":"identifier"}],"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ObservableConvertibleType","kind":"identifier","preciseIdentifier":"s:7RxSwift25ObservableConvertibleTypeP"}],"kind":"symbol","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/ObservableConvertibleType","type":"topic","title":"ObservableConvertibleType"},"doc://TripKitUI/documentation/TripKitUI":{"title":"TripKitUI","abstract":[{"text":"User interface framework providing pre-built view controllers and UI components for transportation applications.","type":"text"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","kind":"symbol","url":"\/documentation\/tripkitui","role":"collection","type":"topic"},"doc://TripKitUI/documentation/TripKitUI/RxSwift/ObservableConvertibleType/asPublisher()":{"url":"\/documentation\/tripkitui\/rxswift\/observableconvertibletype\/aspublisher()","type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asPublisher","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Combine12AnyPublisherV","text":"AnyPublisher","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7RxSwift25ObservableConvertibleTypeP7ElementQa","text":"Element","kind":"typeIdentifier"},{"text":", Swift","kind":"text"},{"text":".","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"asPublisher()","kind":"symbol","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/ObservableConvertibleType\/asPublisher()","abstract":[{"type":"text","text":"Returns a "},{"type":"codeVoice","code":"AnyPublisher"},{"type":"text","text":" of the underlying Observable’s Element type"},{"type":"text","text":" "},{"type":"text","text":"so the Observable pushes events to the Publisher."}]}}}