{"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift","doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/Reactive"]]},"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"streamUpdates","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"trip","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Trip","kind":"typeIdentifier","preciseIdentifier":"c:@M@TripKit@objc(cs)Trip"},{"text":", ","kind":"text"},{"text":"updateInterval","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchTimeInterval","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"text":" = .seconds(10), ","kind":"text"},{"text":"active","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Observable","kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC"},{"text":"<","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":"> = .just(true)) -> ","kind":"text"},{"text":"Observable","kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC"},{"text":"<","kind":"text"},{"text":"Trip","kind":"typeIdentifier","preciseIdentifier":"c:@M@TripKit@objc(cs)Trip"},{"text":">","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"trip","content":[{"inlineContent":[{"type":"text","text":"The trip to update"}],"type":"paragraph"}]},{"name":"updateInterval","content":[{"inlineContent":[{"text":"The frequency at which the trip should be updated (default is every 10 seconds)","type":"text"}],"type":"paragraph"}]},{"name":"active","content":[{"inlineContent":[{"type":"text","text":"Optional stream whether updates should keep being performed, e.g., you can create a bunch of these, but only the active one will be updated. It’s expected that these go back and forth between "},{"type":"codeVoice","code":"true"},{"type":"text","text":" and "},{"type":"codeVoice","code":"false"}],"type":"paragraph"}]}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Stream of the trip, ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"whenever","type":"text"}]},{"text":" it gets updated, i.e., if there’s no update the stream won’t fire.","type":"text"}]}],"kind":"content"}],"metadata":{"externalID":"s:7RxSwift8ReactiveV9TripKitUI0dE017TKRealTimeFetcherCRbzlE13streamUpdates_14updateInterval6activeAA10ObservableCyAE0D0CGAN_8Dispatch0phM0OALySbGtFZ","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" inherits "},{"type":"codeVoice","code":"TKRealTimeFetcher"},{"type":"text","text":"."}]},"extendedModule":"RxSwift","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"streamUpdates"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@TripKit@objc(cs)Trip","text":"Trip"},{"kind":"text","text":", "},{"kind":"externalParam","text":"updateInterval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO","text":"DispatchTimeInterval"},{"kind":"text","text":", "},{"kind":"externalParam","text":"active"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@TripKit@objc(cs)Trip","text":"Trip"},{"kind":"text","text":">"}],"modules":[{"name":"TripKitUI","relatedModules":["RxSwift"]}],"role":"symbol","title":"streamUpdates(_:updateInterval:active:)","roleHeading":"Type Method","symbolKind":"method"},"variants":[{"paths":["\/documentation\/tripkitui\/rxswift\/reactive\/streamupdates(_:updateinterval:active:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","identifier":{"url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/Reactive\/streamUpdates(_:updateInterval:active:)","interfaceLanguage":"swift"},"sections":[],"abstract":[{"type":"text","text":"Stream real-time updates for the trip"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://TripKitUI/documentation/TripKitUI":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","role":"collection","abstract":[{"text":"User interface framework providing pre-built view controllers and UI components for transportation applications.","type":"text"}],"type":"topic","url":"\/documentation\/tripkitui","title":"TripKitUI","kind":"symbol"},"doc://TripKitUI/documentation/TripKitUI/RxSwift/Reactive":{"kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/tripkitui\/rxswift\/reactive","role":"symbol","navigatorTitle":[{"text":"Reactive","kind":"identifier"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/Reactive","title":"Reactive","fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Reactive","kind":"identifier","preciseIdentifier":"s:7RxSwift8ReactiveV"}]},"doc://TripKitUI/documentation/TripKitUI/RxSwift":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift","type":"topic","kind":"symbol","title":"RxSwift","role":"collection","abstract":[],"url":"\/documentation\/tripkitui\/rxswift"},"doc://TripKitUI/documentation/TripKitUI/RxSwift/Reactive/streamUpdates(_:updateInterval:active:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"streamUpdates"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Trip","preciseIdentifier":"c:@M@TripKit@objc(cs)Trip"},{"kind":"text","text":", "},{"kind":"externalParam","text":"updateInterval"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchTimeInterval","preciseIdentifier":"s:8Dispatch0A12TimeIntervalO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"active"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Trip","preciseIdentifier":"c:@M@TripKit@objc(cs)Trip"},{"kind":"text","text":">"}],"url":"\/documentation\/tripkitui\/rxswift\/reactive\/streamupdates(_:updateinterval:active:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Base","type":"codeVoice"},{"text":" inherits ","type":"text"},{"code":"TKRealTimeFetcher","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","title":"streamUpdates(_:updateInterval:active:)","type":"topic","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxSwift\/Reactive\/streamUpdates(_:updateInterval:active:)","abstract":[{"type":"text","text":"Stream real-time updates for the trip"}]}}}