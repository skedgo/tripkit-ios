{"abstract":[{"text":"Returns an Observable","type":"text"},{"text":" representing the underlying","type":"text"},{"text":" ","type":"text"},{"text":"Publisher. Upon subscription, the Publisher’s sink pushes","type":"text"},{"text":" ","type":"text"},{"text":"events into the Observable. Upon disposing of the subscription,","type":"text"},{"text":" ","type":"text"},{"text":"the sink is cancelled.","type":"text"}],"metadata":{"modules":[{"relatedModules":["Combine"],"name":"TripKitUI"}],"platforms":[{"beta":false,"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"iOS"},{"beta":false,"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"iPadOS"},{"beta":false,"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"Mac Catalyst"},{"beta":false,"deprecated":false,"introducedAt":"10.15","unavailable":false,"name":"macOS"},{"beta":false,"deprecated":false,"introducedAt":"13.0","unavailable":false,"name":"tvOS"},{"beta":false,"deprecated":false,"introducedAt":"6.0","unavailable":false,"name":"watchOS"}],"role":"symbol","title":"asObservable()","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"symbolKind":"method","extendedModule":"Combine","externalID":"s:7Combine9PublisherP9TripKitUIE12asObservable7RxSwift0G0Cy6OutputQzGyF"},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asObservable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output"},{"kind":"text","text":">"}],"platforms":["iOS"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"Observable","type":"text"}]}],"kind":"content"}],"kind":"symbol","identifier":{"url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher\/asObservable()","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine","doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tripkitui\/combine\/publisher\/asobservable()"]}],"sections":[],"references":{"doc://TripKitUI/documentation/TripKitUI/Combine":{"title":"Combine","kind":"symbol","type":"topic","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine","abstract":[],"url":"\/documentation\/tripkitui\/combine","role":"collection"},"doc://TripKitUI/documentation/TripKitUI/Combine/Publisher":{"kind":"symbol","abstract":[],"fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"Combine"},{"kind":"text","text":"."},{"kind":"identifier","preciseIdentifier":"s:7Combine9PublisherP","text":"Publisher"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher","type":"topic","role":"symbol","title":"Publisher","navigatorTitle":[{"text":"Publisher","kind":"identifier"}],"url":"\/documentation\/tripkitui\/combine\/publisher"},"doc://TripKitUI/documentation/TripKitUI/Combine/Publisher/asObservable()":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher\/asObservable()","abstract":[{"text":"Returns an Observable","type":"text"},{"text":" representing the underlying","type":"text"},{"text":" ","type":"text"},{"text":"Publisher. Upon subscription, the Publisher’s sink pushes","type":"text"},{"text":" ","type":"text"},{"text":"events into the Observable. Upon disposing of the subscription,","type":"text"},{"text":" ","type":"text"},{"text":"the sink is cancelled.","type":"text"}],"kind":"symbol","title":"asObservable()","url":"\/documentation\/tripkitui\/combine\/publisher\/asobservable()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"text":">","kind":"text"}],"type":"topic","role":"symbol"},"doc://TripKitUI/documentation/TripKitUI":{"url":"\/documentation\/tripkitui","abstract":[{"type":"text","text":"User interface framework providing pre-built view controllers and UI components for transportation applications."}],"kind":"symbol","role":"collection","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","type":"topic","title":"TripKitUI"}}}