{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tripkitui\/combine\/publisher\/asobservable()"]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Returns an Observable"},{"type":"text","text":" representing the underlying"},{"type":"text","text":" "},{"type":"text","text":"Publisher. Upon subscription, the Publisher’s sink pushes"},{"type":"text","text":" "},{"type":"text","text":"events into the Observable. Upon disposing of the subscription,"},{"type":"text","text":" "},{"type":"text","text":"the sink is cancelled."}],"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine","doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher"]]},"identifier":{"url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher\/asObservable()","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"extendedModule":"Combine","symbolKind":"method","role":"symbol","modules":[{"name":"TripKitUI","relatedModules":["Combine"]}],"roleHeading":"Instance Method","platforms":[{"name":"iOS","introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false},{"name":"iPadOS","introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false},{"name":"Mac Catalyst","introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false},{"name":"macOS","introducedAt":"10.15","deprecated":false,"unavailable":false,"beta":false},{"name":"tvOS","introducedAt":"13.0","deprecated":false,"unavailable":false,"beta":false},{"name":"watchOS","introducedAt":"6.0","deprecated":false,"unavailable":false,"beta":false}],"title":"asObservable()","externalID":"s:7Combine9PublisherP9TripKitUIE12asObservable7RxSwift0G0Cy6OutputQzGyF"},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asObservable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"kind":"text","text":">"}],"platforms":["iOS"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Observable"}]}],"kind":"content"}],"references":{"doc://TripKitUI/documentation/TripKitUI/Combine/Publisher/asObservable()":{"type":"topic","role":"symbol","url":"\/documentation\/tripkitui\/combine\/publisher\/asobservable()","abstract":[{"text":"Returns an Observable","type":"text"},{"text":" representing the underlying","type":"text"},{"text":" ","type":"text"},{"text":"Publisher. Upon subscription, the Publisher’s sink pushes","type":"text"},{"text":" ","type":"text"},{"text":"events into the Observable. Upon disposing of the subscription,","type":"text"},{"text":" ","type":"text"},{"text":"the sink is cancelled.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher\/asObservable()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"text":">","kind":"text"}],"title":"asObservable()"},"doc://TripKitUI/documentation/TripKitUI/Combine/Publisher":{"fragments":[{"text":"extension","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Combine","kind":"identifier"},{"text":".","kind":"text"},{"text":"Publisher","preciseIdentifier":"s:7Combine9PublisherP","kind":"identifier"}],"role":"symbol","url":"\/documentation\/tripkitui\/combine\/publisher","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher","type":"topic","title":"Publisher","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Publisher","kind":"identifier"}]},"doc://TripKitUI/documentation/TripKitUI/Combine":{"kind":"symbol","abstract":[],"type":"topic","title":"Combine","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine","role":"collection","url":"\/documentation\/tripkitui\/combine"},"doc://TripKitUI/documentation/TripKitUI":{"type":"topic","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","role":"collection","kind":"symbol","abstract":[{"type":"text","text":"User interface framework providing pre-built view controllers and UI components for transportation applications."}],"url":"\/documentation\/tripkitui","title":"TripKitUI"}}}