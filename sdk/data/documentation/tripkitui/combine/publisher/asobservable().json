{"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher\/asObservable()"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine","doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher"]]},"abstract":[{"text":"Returns an Observable","type":"text"},{"text":" representing the underlying","type":"text"},{"text":" ","type":"text"},{"text":"Publisher. Upon subscription, the Publisher’s sink pushes","type":"text"},{"text":" ","type":"text"},{"text":"events into the Observable. Upon disposing of the subscription,","type":"text"},{"text":" ","type":"text"},{"text":"the sink is cancelled.","type":"text"}],"metadata":{"title":"asObservable()","extendedModule":"Combine","symbolKind":"method","roleHeading":"Instance Method","role":"symbol","modules":[{"relatedModules":["Combine"],"name":"TripKitUI"}],"platforms":[{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"iOS"},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"iPadOS"},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"Mac Catalyst"},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"10.15","name":"macOS"},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"13.0","name":"tvOS"},{"deprecated":false,"unavailable":false,"beta":false,"introducedAt":"6.0","name":"watchOS"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asObservable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"kind":"text","text":">"}],"externalID":"s:7Combine9PublisherP9TripKitUIE12asObservable7RxSwift0G0Cy6OutputQzGyF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Observable"}],"type":"paragraph"}]}],"sections":[],"variants":[{"paths":["\/documentation\/tripkitui\/combine\/publisher\/asobservable()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://TripKitUI/documentation/TripKitUI":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","abstract":[{"type":"text","text":"User interface framework providing pre-built view controllers and UI components for transportation applications."}],"kind":"symbol","title":"TripKitUI","url":"\/documentation\/tripkitui","role":"collection","type":"topic"},"doc://TripKitUI/documentation/TripKitUI/Combine/Publisher":{"navigatorTitle":[{"kind":"identifier","text":"Publisher"}],"role":"symbol","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher","title":"Publisher","type":"topic","fragments":[{"kind":"keyword","text":"extension"},{"kind":"text","text":" "},{"kind":"identifier","text":"Combine"},{"kind":"text","text":"."},{"kind":"identifier","text":"Publisher","preciseIdentifier":"s:7Combine9PublisherP"}],"kind":"symbol","url":"\/documentation\/tripkitui\/combine\/publisher","abstract":[]},"doc://TripKitUI/documentation/TripKitUI/Combine":{"title":"Combine","kind":"symbol","abstract":[],"role":"collection","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine","url":"\/documentation\/tripkitui\/combine","type":"topic"},"doc://TripKitUI/documentation/TripKitUI/Combine/Publisher/asObservable()":{"type":"topic","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/Combine\/Publisher\/asObservable()","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Returns an Observable"},{"type":"text","text":" representing the underlying"},{"type":"text","text":" "},{"type":"text","text":"Publisher. Upon subscription, the Publisher’s sink pushes"},{"type":"text","text":" "},{"type":"text","text":"events into the Observable. Upon disposing of the subscription,"},{"type":"text","text":" "},{"type":"text","text":"the sink is cancelled."}],"url":"\/documentation\/tripkitui\/combine\/publisher\/asobservable()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asObservable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"kind":"text","text":">"}],"title":"asObservable()"}}}