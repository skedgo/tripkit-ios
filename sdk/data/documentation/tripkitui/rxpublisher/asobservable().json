{"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Returns an Observable"},{"type":"text","text":" representing the underlying"},{"type":"text","text":" "},{"type":"text","text":"Publisher. Upon subscription, the Publisher’s sink pushes"},{"type":"text","text":" "},{"type":"text","text":"events into the Observable. Upon disposing of the subscription,"},{"type":"text","text":" "},{"type":"text","text":"the sink is cancelled."}],"sections":[],"metadata":{"roleHeading":"Instance Method","platforms":[{"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"iOS","beta":false},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"iPadOS","beta":false},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"Mac Catalyst","beta":false},{"unavailable":false,"introducedAt":"10.15","deprecated":false,"name":"macOS","beta":false},{"unavailable":false,"introducedAt":"13.0","deprecated":false,"name":"tvOS","beta":false},{"unavailable":false,"introducedAt":"6.0","deprecated":false,"name":"watchOS","beta":false}],"title":"asObservable()","modules":[{"name":"TripKitUI","relatedModules":["Combine"]}],"role":"symbol","extendedModule":"Combine","externalID":"s:7Combine9PublisherP9TripKitUIE12asObservable7RxSwift0G0Cy6OutputQzGyF::SYNTHESIZED::s:9TripKitUI11RxPublisherC","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asObservable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output"},{"kind":"text","text":">"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/asObservable()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"text":">","kind":"text"}],"platforms":["iOS"]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"Observable","type":"text"}],"type":"paragraph"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/tripkitui\/rxpublisher\/asobservable()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://TripKitUI/documentation/TripKitUI/RxPublisher/asObservable()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"asObservable"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC","text":"Observable"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","text":"Output"},{"kind":"text","text":">"}],"title":"asObservable()","url":"\/documentation\/tripkitui\/rxpublisher\/asobservable()","role":"symbol","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/asObservable()","type":"topic","kind":"symbol","abstract":[{"text":"Returns an Observable","type":"text"},{"text":" representing the underlying","type":"text"},{"text":" ","type":"text"},{"text":"Publisher. Upon subscription, the Publisher’s sink pushes","type":"text"},{"text":" ","type":"text"},{"text":"events into the Observable. Upon disposing of the subscription,","type":"text"},{"text":" ","type":"text"},{"text":"the sink is cancelled.","type":"text"}]},"doc://TripKitUI/documentation/TripKitUI":{"role":"collection","kind":"symbol","title":"TripKitUI","abstract":[{"text":"User interface framework providing pre-built view controllers and UI components for transportation applications.","type":"text"}],"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","url":"\/documentation\/tripkitui","type":"topic"},"doc://TripKitUI/documentation/TripKitUI/RxPublisher":{"kind":"symbol","url":"\/documentation\/tripkitui\/rxpublisher","type":"topic","abstract":[{"text":"A Publisher pushing RxSwift events to a Downstream Combine subscriber.","type":"text"}],"title":"RxPublisher","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher","role":"symbol","navigatorTitle":[{"text":"RxPublisher","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RxPublisher","kind":"identifier"}]}}}