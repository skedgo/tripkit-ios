{"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tripkitui\/rxpublisher\/asobservable()"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"content","content":[{"text":"Return Value","level":2,"anchor":"return-value","type":"heading"},{"inlineContent":[{"type":"text","text":"Observable"}],"type":"paragraph"}]}],"metadata":{"modules":[{"name":"TripKitUI","relatedModules":["Combine"]}],"title":"asObservable()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","platforms":[{"name":"iOS","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"name":"iPadOS","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"name":"Mac Catalyst","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"name":"macOS","introducedAt":"10.15","unavailable":false,"deprecated":false,"beta":false},{"name":"tvOS","introducedAt":"13.0","unavailable":false,"deprecated":false,"beta":false},{"name":"watchOS","introducedAt":"6.0","unavailable":false,"deprecated":false,"beta":false}],"symbolKind":"method","extendedModule":"Combine","roleHeading":"Instance Method","externalID":"s:7Combine9PublisherP9TripKitUIE12asObservable7RxSwift0G0Cy6OutputQzGyF::SYNTHESIZED::s:9TripKitUI11RxPublisherC"},"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/asObservable()"},"sections":[],"abstract":[{"text":"Returns an Observable","type":"text"},{"text":" representing the underlying","type":"text"},{"text":" ","type":"text"},{"text":"Publisher. Upon subscription, the Publisher’s sink pushes","type":"text"},{"text":" ","type":"text"},{"text":"events into the Observable. Upon disposing of the subscription,","type":"text"},{"text":" ","type":"text"},{"text":"the sink is cancelled.","type":"text"}],"references":{"doc://TripKitUI/documentation/TripKitUI":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","role":"collection","abstract":[{"text":"User interface framework providing pre-built view controllers and UI components for transportation applications.","type":"text"}],"type":"topic","url":"\/documentation\/tripkitui","title":"TripKitUI","kind":"symbol"},"doc://TripKitUI/documentation/TripKitUI/RxPublisher":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RxPublisher"}],"title":"RxPublisher","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"RxPublisher"}],"type":"topic","url":"\/documentation\/tripkitui\/rxpublisher","abstract":[{"text":"A Publisher pushing RxSwift events to a Downstream Combine subscriber.","type":"text"}],"role":"symbol"},"doc://TripKitUI/documentation/TripKitUI/RxPublisher/asObservable()":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/asObservable()","kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/tripkitui\/rxpublisher\/asobservable()","abstract":[{"type":"text","text":"Returns an Observable"},{"type":"text","text":" representing the underlying"},{"type":"text","text":" "},{"type":"text","text":"Publisher. Upon subscription, the Publisher’s sink pushes"},{"type":"text","text":" "},{"type":"text","text":"events into the Observable. Upon disposing of the subscription,"},{"type":"text","text":" "},{"type":"text","text":"the sink is cancelled."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"asObservable()"}}}