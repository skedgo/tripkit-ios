{"sections":[],"identifier":{"url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/Publisher-Implementations","interfaceLanguage":"swift"},"metadata":{"role":"collectionGroup","title":"Publisher Implementations","modules":[{"name":"TripKitUI"}],"roleHeading":"API Collection"},"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"paths":["\/documentation\/tripkitui\/rxpublisher\/publisher-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher"]]},"kind":"article","topicSections":[{"identifiers":["doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/asObservable()"],"title":"Instance Methods","generated":true,"anchor":"Instance-Methods"}],"references":{"doc://TripKitUI/documentation/TripKitUI/RxPublisher":{"url":"\/documentation\/tripkitui\/rxpublisher","abstract":[{"text":"A Publisher pushing RxSwift events to a Downstream Combine subscriber.","type":"text"}],"title":"RxPublisher","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher","role":"symbol","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RxPublisher","kind":"identifier"}],"navigatorTitle":[{"text":"RxPublisher","kind":"identifier"}],"type":"topic"},"doc://TripKitUI/documentation/TripKitUI/RxPublisher/asObservable()":{"identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/asObservable()","kind":"symbol","abstract":[{"type":"text","text":"Returns an Observable"},{"type":"text","text":" representing the underlying"},{"type":"text","text":" "},{"type":"text","text":"Publisher. Upon subscription, the Publisherâ€™s sink pushes"},{"type":"text","text":" "},{"type":"text","text":"events into the Observable. Upon disposing of the subscription,"},{"type":"text","text":" "},{"type":"text","text":"the sink is cancelled."}],"url":"\/documentation\/tripkitui\/rxpublisher\/asobservable()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","preciseIdentifier":"s:7RxSwift10ObservableC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Output","preciseIdentifier":"s:7Combine9PublisherP6OutputQa","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","role":"symbol","title":"asObservable()"},"doc://TripKitUI/documentation/TripKitUI":{"title":"TripKitUI","kind":"symbol","url":"\/documentation\/tripkitui","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI","abstract":[{"type":"text","text":"User interface framework providing pre-built view controllers and UI components for transportation applications."}],"type":"topic","role":"collection"}}}