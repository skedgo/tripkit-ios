{"kind":"article","sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"modules":[{"name":"TripKitUI"}],"roleHeading":"API Collection","role":"collectionGroup","title":"Publisher Implementations"},"hierarchy":{"paths":[["doc:\/\/TripKitUI\/documentation\/TripKitUI","doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/tripkitui\/rxpublisher\/publisher-implementations"]}],"identifier":{"url":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/Publisher-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","generated":true,"anchor":"Instance-Methods","identifiers":["doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/asObservable()"]}],"references":{"doc://TripKitUI/documentation/TripKitUI/RxPublisher":{"type":"topic","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher","title":"RxPublisher","kind":"symbol","abstract":[{"type":"text","text":"A Publisher pushing RxSwift events to a Downstream Combine subscriber."}],"url":"\/documentation\/tripkitui\/rxpublisher","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RxPublisher"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RxPublisher"}]},"doc://TripKitUI/documentation/TripKitUI/RxPublisher/asObservable()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"asObservable","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Observable","kind":"typeIdentifier","preciseIdentifier":"s:7RxSwift10ObservableC"},{"text":"<","kind":"text"},{"text":"Output","kind":"typeIdentifier","preciseIdentifier":"s:7Combine9PublisherP6OutputQa"},{"text":">","kind":"text"}],"type":"topic","url":"\/documentation\/tripkitui\/rxpublisher\/asobservable()","kind":"symbol","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI\/RxPublisher\/asObservable()","role":"symbol","abstract":[{"type":"text","text":"Returns an Observable"},{"type":"text","text":" representing the underlying"},{"type":"text","text":" "},{"type":"text","text":"Publisher. Upon subscription, the Publisherâ€™s sink pushes"},{"type":"text","text":" "},{"type":"text","text":"events into the Observable. Upon disposing of the subscription,"},{"type":"text","text":" "},{"type":"text","text":"the sink is cancelled."}],"title":"asObservable()"},"doc://TripKitUI/documentation/TripKitUI":{"url":"\/documentation\/tripkitui","title":"TripKitUI","type":"topic","abstract":[{"text":"User interface framework providing pre-built view controllers and UI components for transportation applications.","type":"text"}],"role":"collection","kind":"symbol","identifier":"doc:\/\/TripKitUI\/documentation\/TripKitUI"}}}