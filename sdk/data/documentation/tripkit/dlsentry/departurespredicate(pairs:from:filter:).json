{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"departuresPredicate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"pairs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sh","kind":"typeIdentifier","text":"Set"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":" "},{"kind":"internalParam","text":"date"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":" = \"\") -> "},{"preciseIdentifier":"c:objc(cs)NSPredicate","kind":"typeIdentifier","text":"NSPredicate"}]}]},{"kind":"parameters","parameters":[{"name":"pairs","content":[{"type":"paragraph","inlineContent":[{"text":"Strings matched against the ","type":"text"},{"type":"codeVoice","code":"pairIdentifier"},{"text":" of the DLS entries.","type":"text"}]}]},{"name":"date","content":[{"inlineContent":[{"text":"Starting date and time.","type":"text"}],"type":"paragraph"}]},{"name":"filter","content":[{"inlineContent":[{"text":"Filter which the returnes DLS entries must match.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"text":"Predicate to query CoreData with","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","abstract":[{"text":"Creates a predicate to query the database for DLS entries for the specified list of pair identifiers after the given date and using the specific filter.","type":"text"}],"identifier":{"url":"doc:\/\/TripKit\/documentation\/TripKit\/DLSEntry\/departuresPredicate(pairs:from:filter:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"departuresPredicate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"pairs"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DateV","text":"Date"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSPredicate","text":"NSPredicate"}],"extendedModule":"TripKit","role":"symbol","externalID":"s:7TripKit8DLSEntryC19departuresPredicate5pairs4from6filterSo11NSPredicateCShySSG_10Foundation4DateVSStFZ","title":"departuresPredicate(pairs:from:filter:)","modules":[{"name":"TripKit"}],"roleHeading":"Type Method","symbolKind":"method"},"sections":[],"variants":[{"paths":["\/documentation\/tripkit\/dlsentry\/departurespredicate(pairs:from:filter:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/TripKit\/documentation\/TripKit","doc:\/\/TripKit\/documentation\/TripKit\/DLSEntry"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://TripKit/documentation/TripKit/DLSEntry":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"DLSEntry"},{"type":"text","text":" represents the connection of a particular service starting at a particular stop and going all the way an end stop without the passanger having to get off."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DLSEntry","kind":"identifier"}],"role":"symbol","url":"\/documentation\/tripkit\/dlsentry","navigatorTitle":[{"text":"DLSEntry","kind":"identifier"}],"title":"DLSEntry","type":"topic","identifier":"doc:\/\/TripKit\/documentation\/TripKit\/DLSEntry","kind":"symbol"},"doc://TripKit/documentation/TripKit":{"kind":"symbol","title":"TripKit","url":"\/documentation\/tripkit","role":"collection","identifier":"doc:\/\/TripKit\/documentation\/TripKit","type":"topic","abstract":[{"type":"text","text":"Core framework for trip planning, routing, and transportation data in iOS applications."}]},"doc://TripKit/documentation/TripKit/DLSEntry/departuresPredicate(pairs:from:filter:)":{"kind":"symbol","url":"\/documentation\/tripkit\/dlsentry\/departurespredicate(pairs:from:filter:)","type":"topic","title":"departuresPredicate(pairs:from:filter:)","identifier":"doc:\/\/TripKit\/documentation\/TripKit\/DLSEntry\/departuresPredicate(pairs:from:filter:)","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"departuresPredicate"},{"kind":"text","text":"("},{"kind":"externalParam","text":"pairs"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sh","kind":"typeIdentifier","text":"Set"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DateV","kind":"typeIdentifier","text":"Date"},{"kind":"text","text":", "},{"kind":"externalParam","text":"filter"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:objc(cs)NSPredicate","kind":"typeIdentifier","text":"NSPredicate"}],"abstract":[{"type":"text","text":"Creates a predicate to query the database for DLS entries for the specified list of pair identifiers after the given date and using the specific filter."}]}}}