{"abstract":[{"type":"text","text":"Called to fetch the annotation for a previously returned autocompletion result"}],"variants":[{"paths":["\/documentation\/tripkit\/tktripgogeocoder\/annotation(for:completion:)"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"annotation"},{"kind":"text","text":"("},{"kind":"externalParam","text":"for"},{"kind":"text","text":" "},{"kind":"internalParam","text":"result"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7TripKit22TKAutocompletionResultV","kind":"typeIdentifier","text":"TKAutocompletionResult","identifier":"doc:\/\/TripKit\/documentation\/TripKit\/TKAutocompletionResult"},{"kind":"text","text":", "},{"kind":"externalParam","text":"completion"},{"kind":"text","text":": "},{"kind":"attribute","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"MKAnnotation","preciseIdentifier":"c:objc(pl)MKAnnotation"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The result for which to fetch the annotation"}]}],"name":"result"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Completion handler thatâ€™s called with the annotation for the result, if representable as such. Called with ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if not representable, or can also be called with an error if it is representable but the conversion failed. Needs to be called.","type":"text"}]}],"name":"completion"}]}],"hierarchy":{"paths":[["doc:\/\/TripKit\/documentation\/TripKit","doc:\/\/TripKit\/documentation\/TripKit\/TKTripGoGeocoder"]]},"metadata":{"modules":[{"name":"TripKit"}],"extendedModule":"TripKit","role":"symbol","roleHeading":"Instance Method","title":"annotation(for:completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"annotation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TKAutocompletionResult","preciseIdentifier":"s:7TripKit22TKAutocompletionResultV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"MKAnnotation","preciseIdentifier":"c:objc(pl)MKAnnotation","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"externalID":"s:7TripKit16TKTripGoGeocoderC10annotation3for10completionyAA22TKAutocompletionResultV_ys0J0OySo12MKAnnotation_pSgs5Error_pGctF","symbolKind":"method"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/TripKit\/documentation\/TripKit\/TKTripGoGeocoder\/annotation(for:completion:)"},"references":{"doc://TripKit/documentation/TripKit/TKTripGoGeocoder":{"role":"symbol","title":"TKTripGoGeocoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TKTripGoGeocoder","kind":"identifier"}],"navigatorTitle":[{"text":"TKTripGoGeocoder","kind":"identifier"}],"url":"\/documentation\/tripkit\/tktripgogeocoder","type":"topic","identifier":"doc:\/\/TripKit\/documentation\/TripKit\/TKTripGoGeocoder","abstract":[{"text":"An autocompleter and geocoder for transport-related POIs in supported TripGo regions","type":"text"}],"kind":"symbol"},"doc://TripKit/documentation/TripKit/TKAutocompletionResult":{"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"text":"TKAutocompletionResult","kind":"identifier"}],"abstract":[],"identifier":"doc:\/\/TripKit\/documentation\/TripKit\/TKAutocompletionResult","title":"TKAutocompletionResult","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TKAutocompletionResult","kind":"identifier"}],"url":"\/documentation\/tripkit\/tkautocompletionresult"},"doc://TripKit/documentation/TripKit":{"type":"topic","identifier":"doc:\/\/TripKit\/documentation\/TripKit","kind":"symbol","role":"collection","title":"TripKit","abstract":[{"type":"text","text":"Core framework for trip planning, routing, and transportation data in iOS applications."}],"url":"\/documentation\/tripkit"},"doc://TripKit/documentation/TripKit/TKTripGoGeocoder/annotation(for:completion:)":{"identifier":"doc:\/\/TripKit\/documentation\/TripKit\/TKTripGoGeocoder\/annotation(for:completion:)","role":"symbol","title":"annotation(for:completion:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"annotation","kind":"identifier"},{"text":"(","kind":"text"},{"text":"for","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TKAutocompletionResult","preciseIdentifier":"s:7TripKit22TKAutocompletionResultV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","preciseIdentifier":"s:s6ResultO","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"MKAnnotation","preciseIdentifier":"c:objc(pl)MKAnnotation","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","type":"topic","url":"\/documentation\/tripkit\/tktripgogeocoder\/annotation(for:completion:)","abstract":[{"type":"text","text":"Called to fetch the annotation for a previously returned autocompletion result"}]}}}