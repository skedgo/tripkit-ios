[
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/TripKit.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 26,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/TripKit.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 14,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/TripKit.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TripKitVersionNumber",
          "key.parsed_declaration" : "extern double TripKitVersionNumber",
          "key.parsed_scope.end" : 14,
          "key.parsed_scope.start" : 14,
          "key.swift_declaration" : "var TripKitVersionNumber: Double",
          "key.swift_name" : "TripKitVersionNumber",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TripKitVersionNumber"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 39,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/TripKit.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 18,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/TripKit.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TripKitVersionString",
          "key.parsed_declaration" : "extern const unsigned char TripKitVersionString[]",
          "key.parsed_scope.end" : 18,
          "key.parsed_scope.start" : 18,
          "key.unavailable_message" : "",
          "key.usr" : "c:@TripKitVersionString"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
          "key.doc.line" : 13,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.category",
          "key.name" : "NSDate(NSDate_Helpers)",
          "key.parsed_declaration" : "@interface NSDate (NSDate_Helpers)\n\n- (BOOL)isInBetweenStartDate:(NSDate *)start andEnd:(NSDate *)end;\n\n- (NSDate *)dateAtMidnightInTimeZone:(nullable NSTimeZone *)timeZone;\n- (NSDate *)dateAtNextMidnightInTimeZone:(nullable NSTimeZone *)timeZone;\n- (NSDate*)dateAt12HoursToNoonInTimeZone:(NSTimeZone *)timeZone;\n\n- (NSDate *)dateAtPreviousHourInTimeZone:(nullable NSTimeZone *)timeZone;\n- (NSDate *)dateAtNextHourInTimeZone:(nullable NSTimeZone *)timeZone;\n\n- (NSDate *)dateAtSameTimeInTimeZone:(NSTimeZone *)timeZone afterAddingDays:(NSInteger)days;\n\n@end",
          "key.parsed_scope.end" : 26,
          "key.parsed_scope.start" : 13,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.doc.line" : 15,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-isInBetweenStartDate:andEnd:",
              "key.parsed_declaration" : "- (BOOL)isInBetweenStartDate:(NSDate *)start andEnd:(NSDate *)end;",
              "key.parsed_scope.end" : 15,
              "key.parsed_scope.start" : 15,
              "key.swift_declaration" : "func `is`(inBetweenStart start: Date, andEnd end: Date) -> Bool",
              "key.swift_name" : "is(inBetweenStart:andEnd:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSDate(im)isInBetweenStartDate:andEnd:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.doc.line" : 17,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-dateAtMidnightInTimeZone:",
              "key.parsed_declaration" : "- (NSDate *)dateAtMidnightInTimeZone:(nullable NSTimeZone *)timeZone;",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 17,
              "key.swift_declaration" : "func atMidnight(in timeZone: TimeZone?) -> Date",
              "key.swift_name" : "atMidnight(in:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSDate(im)dateAtMidnightInTimeZone:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.doc.line" : 18,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-dateAtNextMidnightInTimeZone:",
              "key.parsed_declaration" : "- (NSDate *)dateAtNextMidnightInTimeZone:(nullable NSTimeZone *)timeZone;",
              "key.parsed_scope.end" : 18,
              "key.parsed_scope.start" : 18,
              "key.swift_declaration" : "func atNextMidnight(in timeZone: TimeZone?) -> Date",
              "key.swift_name" : "atNextMidnight(in:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSDate(im)dateAtNextMidnightInTimeZone:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 12,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.doc.line" : 19,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-dateAt12HoursToNoonInTimeZone:",
              "key.parsed_declaration" : "- (NSDate*)dateAt12HoursToNoonInTimeZone:(NSTimeZone *)timeZone;",
              "key.parsed_scope.end" : 19,
              "key.parsed_scope.start" : 19,
              "key.swift_declaration" : "func dateAt12HoursToNoon(in timeZone: TimeZone) -> Date",
              "key.swift_name" : "dateAt12HoursToNoon(in:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSDate(im)dateAt12HoursToNoonInTimeZone:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.doc.line" : 21,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-dateAtPreviousHourInTimeZone:",
              "key.parsed_declaration" : "- (NSDate *)dateAtPreviousHourInTimeZone:(nullable NSTimeZone *)timeZone;",
              "key.parsed_scope.end" : 21,
              "key.parsed_scope.start" : 21,
              "key.swift_declaration" : "func atPreviousHour(in timeZone: TimeZone?) -> Date",
              "key.swift_name" : "atPreviousHour(in:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSDate(im)dateAtPreviousHourInTimeZone:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-dateAtNextHourInTimeZone:",
              "key.parsed_declaration" : "- (NSDate *)dateAtNextHourInTimeZone:(nullable NSTimeZone *)timeZone;",
              "key.parsed_scope.end" : 22,
              "key.parsed_scope.start" : 22,
              "key.swift_declaration" : "func atNextHour(in timeZone: TimeZone?) -> Date",
              "key.swift_name" : "atNextHour(in:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSDate(im)dateAtNextHourInTimeZone:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.doc.line" : 24,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSDate+Helpers.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-dateAtSameTimeInTimeZone:afterAddingDays:",
              "key.parsed_declaration" : "- (NSDate *)dateAtSameTimeInTimeZone:(NSTimeZone *)timeZone afterAddingDays:(NSInteger)days;",
              "key.parsed_scope.end" : 24,
              "key.parsed_scope.start" : 24,
              "key.swift_declaration" : "func atSameTime(in timeZone: TimeZone, afterAddingDays days: Int) -> Date",
              "key.swift_name" : "atSameTime(in:afterAddingDays:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSDate(im)dateAtSameTimeInTimeZone:afterAddingDays:"
            }
          ],
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cy)NSDate@NSDate_Helpers"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 14,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.category",
          "key.name" : "NSManagedObject(TKPersistence)",
          "key.parsed_declaration" : "@interface NSManagedObject (TKPersistence)",
          "key.parsed_scope.end" : 26,
          "key.parsed_scope.start" : 14,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 26,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
              "key.doc.line" : 16,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+objectFromPersistentId:inContext:",
              "key.parsed_declaration" : "+ (nullable instancetype)objectFromPersistentId:(NSString *)persistentId\n                                      inContext:(NSManagedObjectContext *)moc;",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 16,
              "key.swift_declaration" : "convenience init?(fromPersistentId persistentId: String, in moc: NSManagedObjectContext)",
              "key.swift_name" : "init(fromPersistentId:in:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObject(cm)objectFromPersistentId:inContext:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
              "key.doc.line" : 18,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-persistentId",
              "key.parsed_declaration" : "- (NSString *)persistentId;",
              "key.parsed_scope.end" : 18,
              "key.parsed_scope.start" : 18,
              "key.swift_declaration" : "func persistentId() -> String",
              "key.swift_name" : "persistentId()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObject(im)persistentId"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 26,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
              "key.doc.line" : 21,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+objectFromPersistentId:withAppURLSchemeString:inContext:",
              "key.parsed_declaration" : "+ (nullable instancetype)objectFromPersistentId:(NSString *)persistentId\n                         withAppURLSchemeString:(nullable NSString *)scheme\n                                      inContext:(NSManagedObjectContext *)moc;",
              "key.parsed_scope.end" : 23,
              "key.parsed_scope.start" : 21,
              "key.swift_declaration" : "convenience init?(fromPersistentId persistentId: String, withAppURLSchemeString scheme: String?, in moc: NSManagedObjectContext)",
              "key.swift_name" : "init(fromPersistentId:withAppURLSchemeString:in:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObject(cm)objectFromPersistentId:withAppURLSchemeString:inContext:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
              "key.doc.line" : 24,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObject+TKPersistence.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-persistentIdWithAppURLSchemeString:",
              "key.parsed_declaration" : "- (NSString *)persistentIdWithAppURLSchemeString:(nullable NSString *)scheme;",
              "key.parsed_scope.end" : 24,
              "key.parsed_scope.start" : 24,
              "key.swift_declaration" : "func persistentId(withAppURLSchemeString scheme: String?) -> String",
              "key.swift_name" : "persistentId(withAppURLSchemeString:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObject(im)persistentIdWithAppURLSchemeString:"
            }
          ],
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cy)NSManagedObject@TKPersistence"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 15,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKFetchRequestBlock",
          "key.parsed_declaration" : "typedef void(^TKFetchRequestBlock)(NSFetchRequest *)",
          "key.parsed_scope.end" : 16,
          "key.parsed_scope.start" : 16,
          "key.swift_declaration" : "typealias TKFetchRequestBlock = (NSFetchRequest<NSFetchRequestResult>?) -> Void",
          "key.swift_name" : "TKFetchRequestBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:NSManagedObjectContext+SimpleFetch.h@T@TKFetchRequestBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
          "key.doc.line" : 18,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.category",
          "key.name" : "NSManagedObjectContext(SimpleFetch)",
          "key.parsed_declaration" : "@interface NSManagedObjectContext(SimpleFetch)\n\n#pragma mark - Existence\n\n- (BOOL)containsObjectForEntityClass:(Class)entityClass\n                       withPredicate:(NSPredicate *)predOrNil NS_SWIFT_UNAVAILABLE(\"Use containsObject<E>\");\n\n#pragma mark - Fetch\n\n- (NSArray *)fetchObjectsForEntityClass:(Class)entityClass NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");\n\n- (NSArray *)fetchObjectsForEntityClass:(Class)entityClass\n                       withFetchRequest:(TKFetchRequestBlock)requestBlock NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");\n\n- (NSArray *)fetchObjectsForEntityClass:(Class)entityClass\n                          withPredicate:(NSPredicate *)predOrNil\n                     andSortDescriptors:(NSArray *)sortDescriptorsOrNil\n                          andFetchLimit:(NSInteger)limit NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");\n\n- (NSArray *)fetchObjectsForEntityClass:(Class)entityClass\n                          withPredicate:(NSPredicate *)predOrNil\n                     andSortDescriptors:(NSArray *)sortDescriptorsOrNil NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");\n\n- (NSSet *)fetchObjectsForEntityClass:(Class)entityClass\n                        withPredicate:(NSPredicate *)predOrNil NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");\n\n- (NSSet *)fetchObjectsForEntityClass:(Class)entityClass\n                  withPredicateString:(NSString *)predicateString, ... NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");\n\n- (id)fetchUniqueObjectForEntityClass:(Class)entityClass\n                        withPredicate:(NSPredicate *)predicate NS_SWIFT_UNAVAILABLE(\"Use fetchUniqueObject<E>\");\n\n- (id)fetchUniqueObjectForEntityClass:(Class)entityClass\n                  withPredicateString:(NSString *)predicateString, ... NS_SWIFT_UNAVAILABLE(\"Use fetchUniqueObject<E>\");\n\n@end",
          "key.parsed_scope.end" : 53,
          "key.parsed_scope.start" : 18,
          "key.substructure" : [
            {
              "key.doc.column" : 1,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 20,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.mark",
              "key.name" : "Existence",
              "key.parsed_scope.end" : 20,
              "key.parsed_scope.start" : 20
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-containsObjectForEntityClass:withPredicate:",
              "key.parsed_declaration" : "- (BOOL)containsObjectForEntityClass:(Class)entityClass\n                       withPredicate:(NSPredicate *)predOrNil NS_SWIFT_UNAVAILABLE(\"Use containsObject<E>\");",
              "key.parsed_scope.end" : 23,
              "key.parsed_scope.start" : 22,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)containsObjectForEntityClass:withPredicate:"
            },
            {
              "key.doc.column" : 1,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 25,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.mark",
              "key.name" : "Fetch",
              "key.parsed_scope.end" : 25,
              "key.parsed_scope.start" : 25
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 27,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchObjectsForEntityClass:",
              "key.parsed_declaration" : "- (NSArray *)fetchObjectsForEntityClass:(Class)entityClass NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");",
              "key.parsed_scope.end" : 27,
              "key.parsed_scope.start" : 27,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)fetchObjectsForEntityClass:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 29,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchObjectsForEntityClass:withFetchRequest:",
              "key.parsed_declaration" : "- (NSArray *)fetchObjectsForEntityClass:(Class)entityClass\n                       withFetchRequest:(TKFetchRequestBlock)requestBlock NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");",
              "key.parsed_scope.end" : 30,
              "key.parsed_scope.start" : 29,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)fetchObjectsForEntityClass:withFetchRequest:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 32,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchObjectsForEntityClass:withPredicate:andSortDescriptors:andFetchLimit:",
              "key.parsed_declaration" : "- (NSArray *)fetchObjectsForEntityClass:(Class)entityClass\n                          withPredicate:(NSPredicate *)predOrNil\n                     andSortDescriptors:(NSArray *)sortDescriptorsOrNil\n                          andFetchLimit:(NSInteger)limit NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");",
              "key.parsed_scope.end" : 35,
              "key.parsed_scope.start" : 32,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)fetchObjectsForEntityClass:withPredicate:andSortDescriptors:andFetchLimit:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 37,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchObjectsForEntityClass:withPredicate:andSortDescriptors:",
              "key.parsed_declaration" : "- (NSArray *)fetchObjectsForEntityClass:(Class)entityClass\n                          withPredicate:(NSPredicate *)predOrNil\n                     andSortDescriptors:(NSArray *)sortDescriptorsOrNil NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");",
              "key.parsed_scope.end" : 39,
              "key.parsed_scope.start" : 37,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)fetchObjectsForEntityClass:withPredicate:andSortDescriptors:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 12,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 41,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchObjectsForEntityClass:withPredicate:",
              "key.parsed_declaration" : "- (NSSet *)fetchObjectsForEntityClass:(Class)entityClass\n                        withPredicate:(NSPredicate *)predOrNil NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");",
              "key.parsed_scope.end" : 42,
              "key.parsed_scope.start" : 41,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)fetchObjectsForEntityClass:withPredicate:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 12,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 44,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchObjectsForEntityClass:withPredicateString:",
              "key.parsed_declaration" : "- (NSSet *)fetchObjectsForEntityClass:(Class)entityClass\n                  withPredicateString:(NSString *)predicateString, ... NS_SWIFT_UNAVAILABLE(\"Use fetchObjects<E>\");",
              "key.parsed_scope.end" : 45,
              "key.parsed_scope.start" : 44,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)fetchObjectsForEntityClass:withPredicateString:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 7,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 47,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchUniqueObjectForEntityClass:withPredicate:",
              "key.parsed_declaration" : "- (id)fetchUniqueObjectForEntityClass:(Class)entityClass\n                        withPredicate:(NSPredicate *)predicate NS_SWIFT_UNAVAILABLE(\"Use fetchUniqueObject<E>\");",
              "key.parsed_scope.end" : 48,
              "key.parsed_scope.start" : 47,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)fetchUniqueObjectForEntityClass:withPredicate:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 7,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.doc.line" : 50,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSManagedObjectContext+SimpleFetch.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchUniqueObjectForEntityClass:withPredicateString:",
              "key.parsed_declaration" : "- (id)fetchUniqueObjectForEntityClass:(Class)entityClass\n                  withPredicateString:(NSString *)predicateString, ... NS_SWIFT_UNAVAILABLE(\"Use fetchUniqueObject<E>\");",
              "key.parsed_scope.end" : 51,
              "key.parsed_scope.start" : 50,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSManagedObjectContext(im)fetchUniqueObjectForEntityClass:withPredicateString:"
            }
          ],
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cy)NSManagedObjectContext@SimpleFetch"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSUserDefaults+SharedDefaults.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSUserDefaults+SharedDefaults.h",
          "key.doc.line" : 11,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSUserDefaults+SharedDefaults.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.category",
          "key.name" : "NSUserDefaults(SharedDefaults)",
          "key.parsed_declaration" : "@interface NSUserDefaults (SharedDefaults)\n\n+ (nonnull NSUserDefaults *)sharedDefaults NS_REFINED_FOR_SWIFT;\n\n@end",
          "key.parsed_scope.end" : 15,
          "key.parsed_scope.start" : 11,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 29,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSUserDefaults+SharedDefaults.h",
              "key.doc.line" : 13,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/NSUserDefaults+SharedDefaults.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+sharedDefaults",
              "key.parsed_declaration" : "+ (nonnull NSUserDefaults *)sharedDefaults NS_REFINED_FOR_SWIFT;",
              "key.parsed_scope.end" : 13,
              "key.parsed_scope.start" : 13,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)NSUserDefaults(cm)sharedDefaults"
            }
          ],
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cy)NSUserDefaults@SharedDefaults"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 15,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
          "key.doc.line" : 14,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKActionBlock",
          "key.parsed_declaration" : "typedef void(^TKActionBlock)(void)",
          "key.parsed_scope.end" : 14,
          "key.parsed_scope.start" : 14,
          "key.swift_declaration" : "typealias TKActionBlock = () -> Void",
          "key.swift_name" : "TKActionBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKActions.h@T@TKActionBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 15,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
          "key.doc.line" : 15,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKActionTextfieldBlock",
          "key.parsed_declaration" : "typedef void(^TKActionTextfieldBlock)(NSString *value)",
          "key.parsed_scope.end" : 15,
          "key.parsed_scope.start" : 15,
          "key.swift_declaration" : "typealias TKActionTextfieldBlock = (String) -> Void",
          "key.swift_name" : "TKActionTextfieldBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKActions.h@T@TKActionTextfieldBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
          "key.doc.line" : 17,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKActions",
          "key.parsed_declaration" : "@interface TKActions : NSObject\n\n\/*\n @default YES\n *\/\n@property (nonatomic, assign) BOOL hasCancel;\n\n\/*\n @default UIAlertControllerStyleActionSheet\n *\/\n@property (nonatomic, assign) UIAlertControllerStyle type;\n\n\/*\n The message shown on alert sheets.\n *\/\n@property (nonatomic, copy) NSString *message;\n\n- (instancetype)initWithTitle:(nullable NSString *)title;\n\n- (void)addAction:(NSString *)title handler:(nullable TKActionBlock)handler;\n\n- (void)setTextFieldWithValue:(NSString *)value\n                      handler:(TKActionTextfieldBlock)handler;\n\n- (void)showForSender:(nullable id)sender\n         inController:(UIViewController *)controller;\n\n@end",
          "key.parsed_scope.end" : 44,
          "key.parsed_scope.start" : 17,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 36,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "hasCancel",
              "key.parsed_declaration" : "@property (nonatomic, assign) BOOL hasCancel",
              "key.parsed_scope.end" : 22,
              "key.parsed_scope.start" : 22,
              "key.swift_declaration" : "var hasCancel: Bool { get set }",
              "key.swift_name" : "hasCancel",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKActions(py)hasCancel"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 54,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.doc.line" : 27,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "type",
              "key.parsed_declaration" : "@property (nonatomic, assign) UIAlertControllerStyle type",
              "key.parsed_scope.end" : 27,
              "key.parsed_scope.start" : 27,
              "key.swift_declaration" : "var type: UIAlertController.Style { get set }",
              "key.swift_name" : "type",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKActions(py)type"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 39,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.doc.line" : 32,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "message",
              "key.parsed_declaration" : "@property (nonatomic, copy) NSString *message",
              "key.parsed_scope.end" : 32,
              "key.parsed_scope.start" : 32,
              "key.swift_declaration" : "var message: String { get set }",
              "key.swift_name" : "message",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKActions(py)message"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 17,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.doc.line" : 34,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-initWithTitle:",
              "key.parsed_declaration" : "- (instancetype)initWithTitle:(nullable NSString *)title;",
              "key.parsed_scope.end" : 34,
              "key.parsed_scope.start" : 34,
              "key.swift_declaration" : "init(title: String?)",
              "key.swift_name" : "init(title:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKActions(im)initWithTitle:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.doc.line" : 36,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-addAction:handler:",
              "key.parsed_declaration" : "- (void)addAction:(NSString *)title handler:(nullable TKActionBlock)handler;",
              "key.parsed_scope.end" : 36,
              "key.parsed_scope.start" : 36,
              "key.swift_declaration" : "func addAction(_ title: String, handler: TKActionBlock? = nil)",
              "key.swift_name" : "addAction(_:handler:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKActions(im)addAction:handler:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.doc.line" : 38,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-setTextFieldWithValue:handler:",
              "key.parsed_declaration" : "- (void)setTextFieldWithValue:(NSString *)value\n                      handler:(TKActionTextfieldBlock)handler;",
              "key.parsed_scope.end" : 39,
              "key.parsed_scope.start" : 38,
              "key.swift_declaration" : "func setTextFieldWithValue(_ value: String, handler: @escaping TKActionTextfieldBlock)",
              "key.swift_name" : "setTextFieldWithValue(_:handler:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKActions(im)setTextFieldWithValue:handler:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.doc.line" : 41,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKActions.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-showForSender:inController:",
              "key.parsed_declaration" : "- (void)showForSender:(nullable id)sender\n         inController:(UIViewController *)controller;",
              "key.parsed_scope.end" : 42,
              "key.parsed_scope.start" : 41,
              "key.swift_declaration" : "func showForSender(_ sender: Any?, in controller: UIViewController)",
              "key.swift_name" : "showForSender(_:in:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKActions(im)showForSender:inController:"
            }
          ],
          "key.swift_declaration" : "class TKActions : NSObject",
          "key.swift_name" : "TKActions",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKActions"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKAutocompletionResult",
          "key.parsed_declaration" : "@interface TKAutocompletionResult : NSObject\n\n+ (NSUInteger)scoreBasedOnDistanceFromCoordinate:(CLLocationCoordinate2D)coordinate\n                                        toRegion:(MKCoordinateRegion)coordinateRegion\n                                    longDistance:(BOOL)longDistance;\n\n\/**\n 0:   not match, e.g., we're missing a word\n 25:  same words but wrong order\n 33:  has all target words but missing a completed one\n 50:  matches somewhere in the word\n 66:  contains all words in right order\n 75:  matches start of word in search term (but starts don't match)\n 100: exact match at start\n *\/\n\n+ (NSUInteger)scoreBasedOnNameMatchBetweenSearchTerm:(NSString *)searchTerm\n                                           candidate:(NSString *)candidate;\n\n+ (NSUInteger)rangedScoreForScore:(NSUInteger)score\n                   betweenMinimum:(NSUInteger)minimum\n                       andMaximum:(NSUInteger)maximum;\n\n+ (NSString *)stringForScoringOfString:(NSString *)string;\n\n@property (nonatomic, weak, nullable) id provider;\n@property (nonatomic, strong) id object;\n\n@property (nonatomic, copy) NSString *title;\n@property (nonatomic, copy, nullable) NSString *subtitle;\n@property (nonatomic, strong) TKImage *image;\n@property (nonatomic, strong, nullable) TKImage *accessoryButtonImage;\n\n@property (nonatomic, strong, nullable) NSNumber *isInSupportedRegion;\n\n\/**\n A score of how this result should be ranked between 0 and 100\n \n 0: probably not a good result\n 25: matches only in secondary information\n 50: an average match\n 75: an good result matching the user input well\n 100: this gotta be what the user wanted!\n *\/\n@property (nonatomic, assign) NSInteger score;\n\n- (NSComparisonResult)compare:(TKAutocompletionResult *)other;\n\n@end",
          "key.parsed_scope.end" : 64,
          "key.parsed_scope.start" : 16,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 18,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+scoreBasedOnDistanceFromCoordinate:toRegion:longDistance:",
              "key.parsed_declaration" : "+ (NSUInteger)scoreBasedOnDistanceFromCoordinate:(CLLocationCoordinate2D)coordinate\n                                        toRegion:(MKCoordinateRegion)coordinateRegion\n                                    longDistance:(BOOL)longDistance;",
              "key.parsed_scope.end" : 20,
              "key.parsed_scope.start" : 18,
              "key.swift_declaration" : "class func scoreBasedOnDistance(from coordinate: CLLocationCoordinate2D, to coordinateRegion: MKCoordinateRegion, longDistance: Bool) -> UInt",
              "key.swift_name" : "scoreBasedOnDistance(from:to:longDistance:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(cm)scoreBasedOnDistanceFromCoordinate:toRegion:longDistance:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.comment" : "0:   not match, e.g., we're missing a word\n25:  same words but wrong order\n33:  has all target words but missing a completed one\n50:  matches somewhere in the word\n66:  contains all words in right order\n75:  matches start of word in search term (but starts don't match)\n100: exact match at start",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 32,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+scoreBasedOnNameMatchBetweenSearchTerm:candidate:",
              "key.parsed_declaration" : "+ (NSUInteger)\n    scoreBasedOnNameMatchBetweenSearchTerm:(nonnull NSString *)searchTerm\n                                 candidate:(nonnull NSString *)candidate;",
              "key.parsed_scope.end" : 33,
              "key.parsed_scope.start" : 32,
              "key.swift_declaration" : "class func scoreBased(onNameMatchBetweenSearchTerm searchTerm: String, candidate: String) -> UInt",
              "key.swift_name" : "scoreBased(onNameMatchBetweenSearchTerm:candidate:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(cm)scoreBasedOnNameMatchBetweenSearchTerm:candidate:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 35,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+rangedScoreForScore:betweenMinimum:andMaximum:",
              "key.parsed_declaration" : "+ (NSUInteger)rangedScoreForScore:(NSUInteger)score\n                   betweenMinimum:(NSUInteger)minimum\n                       andMaximum:(NSUInteger)maximum;",
              "key.parsed_scope.end" : 37,
              "key.parsed_scope.start" : 35,
              "key.swift_declaration" : "class func rangedScore(forScore score: UInt, betweenMinimum minimum: UInt, andMaximum maximum: UInt) -> UInt",
              "key.swift_name" : "rangedScore(forScore:betweenMinimum:andMaximum:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(cm)rangedScoreForScore:betweenMinimum:andMaximum:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 39,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+stringForScoringOfString:",
              "key.parsed_declaration" : "+ (NSString *)stringForScoringOfString:(NSString *)string;",
              "key.parsed_scope.end" : 39,
              "key.parsed_scope.start" : 39,
              "key.swift_declaration" : "class func stringForScoring(of string: String) -> String",
              "key.swift_name" : "stringForScoring(of:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(cm)stringForScoringOfString:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 42,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 41,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "provider",
              "key.parsed_declaration" : "@property (nonatomic, weak, nullable) id provider",
              "key.parsed_scope.end" : 41,
              "key.parsed_scope.start" : 41,
              "key.swift_declaration" : "weak var provider: AnyObject? { get set }",
              "key.swift_name" : "provider",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(py)provider"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 34,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 42,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "object",
              "key.parsed_declaration" : "@property (nonatomic, strong) id object",
              "key.parsed_scope.end" : 42,
              "key.parsed_scope.start" : 42,
              "key.swift_declaration" : "var object: Any { get set }",
              "key.swift_name" : "object",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(py)object"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 39,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 44,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "title",
              "key.parsed_declaration" : "@property (nonatomic, copy) NSString *title",
              "key.parsed_scope.end" : 44,
              "key.parsed_scope.start" : 44,
              "key.swift_declaration" : "var title: String { get set }",
              "key.swift_name" : "title",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(py)title"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 49,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 45,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "subtitle",
              "key.parsed_declaration" : "@property (nonatomic, copy, nullable) NSString *subtitle",
              "key.parsed_scope.end" : 45,
              "key.parsed_scope.start" : 45,
              "key.swift_declaration" : "var subtitle: String? { get set }",
              "key.swift_name" : "subtitle",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(py)subtitle"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 40,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 46,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "image",
              "key.parsed_declaration" : "@property (nonatomic, strong) TKImage *image",
              "key.parsed_scope.end" : 46,
              "key.parsed_scope.start" : 46,
              "key.swift_declaration" : "var image: UIImage { get set }",
              "key.swift_name" : "image",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(py)image"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 50,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 47,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "accessoryButtonImage",
              "key.parsed_declaration" : "@property (nonatomic, strong, nullable) TKImage *accessoryButtonImage",
              "key.parsed_scope.end" : 47,
              "key.parsed_scope.start" : 47,
              "key.swift_declaration" : "var accessoryButtonImage: UIImage? { get set }",
              "key.swift_name" : "accessoryButtonImage",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(py)accessoryButtonImage"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 51,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 49,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "isInSupportedRegion",
              "key.parsed_declaration" : "@property (nonatomic, strong, nullable) NSNumber *isInSupportedRegion",
              "key.parsed_scope.end" : 49,
              "key.parsed_scope.start" : 49,
              "key.swift_declaration" : "var isInSupportedRegion: NSNumber? { get set }",
              "key.swift_name" : "isInSupportedRegion",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(py)isInSupportedRegion"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 41,
              "key.doc.comment" : "A score of how this result should be ranked between 0 and 100\n\n0: probably not a good result\n25: matches only in secondary information\n50: an average match\n75: an good result matching the user input well\n100: this gotta be what the user wanted!",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 60,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "score",
              "key.parsed_declaration" : "@property (nonatomic, assign, unsafe_unretained, readwrite) NSInteger score;",
              "key.parsed_scope.end" : 60,
              "key.parsed_scope.start" : 60,
              "key.swift_declaration" : "var score: Int { get set }",
              "key.swift_name" : "score",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(py)score"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 23,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.doc.line" : 62,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKAutocompletionResult.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-compare:",
              "key.parsed_declaration" : "- (NSComparisonResult)compare:(TKAutocompletionResult *)other;",
              "key.parsed_scope.end" : 62,
              "key.parsed_scope.start" : 62,
              "key.swift_declaration" : "func compare(_ other: TKAutocompletionResult) -> ComparisonResult",
              "key.swift_name" : "compare(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKAutocompletionResult(im)compare:"
            }
          ],
          "key.swift_declaration" : "class TKAutocompletionResult : NSObject",
          "key.swift_name" : "TKAutocompletionResult",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKAutocompletionResult"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
          "key.doc.line" : 12,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKConfig",
          "key.parsed_declaration" : "@interface TKConfig : NSObject\n\n+ (TKConfig *)sharedInstance NS_REFINED_FOR_SWIFT;\n\n- (nullable NSString *)appGroupName;\n\n\/\/ Colors\n- (nullable NSDictionary *)globalTintColor;\n- (nullable NSDictionary *)globalAccentColor;\n- (nullable NSDictionary *)globalBarTintColor;\n- (nullable NSDictionary *)globalSecondaryBarTintColor;\n- (nullable NSDictionary *)globalViewBackgroundColor;\n- (BOOL)globalTranslucency;\n\n\/\/ Fonts\n- (nullable NSDictionary *)preferredFonts;\n\n\/\/ Complete raw config information\n@property (nonatomic, readonly) NSDictionary *configuration;\n\n@end",
          "key.parsed_scope.end" : 32,
          "key.parsed_scope.start" : 12,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 14,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+sharedInstance",
              "key.parsed_declaration" : "+ (TKConfig *)sharedInstance NS_REFINED_FOR_SWIFT;",
              "key.parsed_scope.end" : 14,
              "key.parsed_scope.start" : 14,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(cm)sharedInstance"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 16,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-appGroupName",
              "key.parsed_declaration" : "- (nullable NSString *)appGroupName;",
              "key.parsed_scope.end" : 16,
              "key.parsed_scope.start" : 16,
              "key.swift_declaration" : "func appGroupName() -> String?",
              "key.swift_name" : "appGroupName()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(im)appGroupName"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 28,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 19,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-globalTintColor",
              "key.parsed_declaration" : "- (nullable NSDictionary *)globalTintColor;",
              "key.parsed_scope.end" : 19,
              "key.parsed_scope.start" : 19,
              "key.swift_declaration" : "func globalTintColor() -> [AnyHashable : Any]?",
              "key.swift_name" : "globalTintColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(im)globalTintColor"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 28,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 20,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-globalAccentColor",
              "key.parsed_declaration" : "- (nullable NSDictionary *)globalAccentColor;",
              "key.parsed_scope.end" : 20,
              "key.parsed_scope.start" : 20,
              "key.swift_declaration" : "func globalAccentColor() -> [AnyHashable : Any]?",
              "key.swift_name" : "globalAccentColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(im)globalAccentColor"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 28,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 21,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-globalBarTintColor",
              "key.parsed_declaration" : "- (nullable NSDictionary *)globalBarTintColor;",
              "key.parsed_scope.end" : 21,
              "key.parsed_scope.start" : 21,
              "key.swift_declaration" : "func globalBarTintColor() -> [AnyHashable : Any]?",
              "key.swift_name" : "globalBarTintColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(im)globalBarTintColor"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 28,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-globalSecondaryBarTintColor",
              "key.parsed_declaration" : "- (nullable NSDictionary *)globalSecondaryBarTintColor;",
              "key.parsed_scope.end" : 22,
              "key.parsed_scope.start" : 22,
              "key.swift_declaration" : "func globalSecondaryBarTintColor() -> [AnyHashable : Any]?",
              "key.swift_name" : "globalSecondaryBarTintColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(im)globalSecondaryBarTintColor"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 28,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 23,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-globalViewBackgroundColor",
              "key.parsed_declaration" : "- (nullable NSDictionary *)globalViewBackgroundColor;",
              "key.parsed_scope.end" : 23,
              "key.parsed_scope.start" : 23,
              "key.swift_declaration" : "func globalViewBackgroundColor() -> [AnyHashable : Any]?",
              "key.swift_name" : "globalViewBackgroundColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(im)globalViewBackgroundColor"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 24,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-globalTranslucency",
              "key.parsed_declaration" : "- (BOOL)globalTranslucency;",
              "key.parsed_scope.end" : 24,
              "key.parsed_scope.start" : 24,
              "key.swift_declaration" : "func globalTranslucency() -> Bool",
              "key.swift_name" : "globalTranslucency()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(im)globalTranslucency"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 28,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 27,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-preferredFonts",
              "key.parsed_declaration" : "- (nullable NSDictionary *)preferredFonts;",
              "key.parsed_scope.end" : 27,
              "key.parsed_scope.start" : 27,
              "key.swift_declaration" : "func preferredFonts() -> [AnyHashable : Any]?",
              "key.swift_name" : "preferredFonts()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(im)preferredFonts"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 47,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.doc.line" : 30,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConfig.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "configuration",
              "key.parsed_declaration" : "@property (nonatomic, readonly) NSDictionary *configuration",
              "key.parsed_scope.end" : 30,
              "key.parsed_scope.start" : 30,
              "key.swift_declaration" : "var configuration: [AnyHashable : Any] { get }",
              "key.swift_name" : "configuration",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKConfig(py)configuration"
            }
          ],
          "key.swift_declaration" : "class TKConfig : NSObject",
          "key.swift_name" : "TKConfig",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKConfig"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 12,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileWeightCarbon",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileWeightCarbon",
          "key.parsed_scope.end" : 12,
          "key.parsed_scope.start" : 12,
          "key.swift_declaration" : "let TKDefaultsKeyProfileWeightCarbon: String",
          "key.swift_name" : "TKDefaultsKeyProfileWeightCarbon",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileWeightCarbon"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 14,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileWeightHassle",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileWeightHassle",
          "key.parsed_scope.end" : 14,
          "key.parsed_scope.start" : 14,
          "key.swift_declaration" : "let TKDefaultsKeyProfileWeightHassle: String",
          "key.swift_name" : "TKDefaultsKeyProfileWeightHassle",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileWeightHassle"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileWeightMoney",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileWeightMoney",
          "key.parsed_scope.end" : 16,
          "key.parsed_scope.start" : 16,
          "key.swift_declaration" : "let TKDefaultsKeyProfileWeightMoney: String",
          "key.swift_name" : "TKDefaultsKeyProfileWeightMoney",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileWeightMoney"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 18,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileWeightTime",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileWeightTime",
          "key.parsed_scope.end" : 18,
          "key.parsed_scope.start" : 18,
          "key.swift_declaration" : "let TKDefaultsKeyProfileWeightTime: String",
          "key.swift_name" : "TKDefaultsKeyProfileWeightTime",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileWeightTime"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 20,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileWeightExercise",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileWeightExercise",
          "key.parsed_scope.end" : 20,
          "key.parsed_scope.start" : 20,
          "key.swift_declaration" : "let TKDefaultsKeyProfileWeightExercise: String",
          "key.swift_name" : "TKDefaultsKeyProfileWeightExercise",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileWeightExercise"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 22,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileTransportWalkSpeed",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileTransportWalkSpeed",
          "key.parsed_scope.end" : 22,
          "key.parsed_scope.start" : 22,
          "key.swift_declaration" : "let TKDefaultsKeyProfileTransportWalkSpeed: String",
          "key.swift_name" : "TKDefaultsKeyProfileTransportWalkSpeed",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileTransportWalkSpeed"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 24,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileTransportWalkMaxDuration",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileTransportWalkMaxDuration",
          "key.parsed_scope.end" : 24,
          "key.parsed_scope.start" : 24,
          "key.swift_declaration" : "let TKDefaultsKeyProfileTransportWalkMaxDuration: String",
          "key.swift_name" : "TKDefaultsKeyProfileTransportWalkMaxDuration",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileTransportWalkMaxDuration"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 26,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileTransportCyclingSpeed",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileTransportCyclingSpeed",
          "key.parsed_scope.end" : 26,
          "key.parsed_scope.start" : 26,
          "key.swift_declaration" : "let TKDefaultsKeyProfileTransportCyclingSpeed: String",
          "key.swift_name" : "TKDefaultsKeyProfileTransportCyclingSpeed",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileTransportCyclingSpeed"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 28,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileTransportTransferTime",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileTransportTransferTime",
          "key.parsed_scope.end" : 28,
          "key.parsed_scope.start" : 28,
          "key.swift_declaration" : "let TKDefaultsKeyProfileTransportTransferTime: String",
          "key.swift_name" : "TKDefaultsKeyProfileTransportTransferTime",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileTransportTransferTime"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 30,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileTransportConcessionPricing",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileTransportConcessionPricing",
          "key.parsed_scope.end" : 30,
          "key.parsed_scope.start" : 30,
          "key.swift_declaration" : "let TKDefaultsKeyProfileTransportConcessionPricing: String",
          "key.swift_name" : "TKDefaultsKeyProfileTransportConcessionPricing",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileTransportConcessionPricing"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 32,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileTransportEmissions",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileTransportEmissions",
          "key.parsed_scope.end" : 32,
          "key.parsed_scope.start" : 32,
          "key.swift_declaration" : "let TKDefaultsKeyProfileTransportEmissions: String",
          "key.swift_name" : "TKDefaultsKeyProfileTransportEmissions",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileTransportEmissions"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 35,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKConstants.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyProfileBookingsUseSandbox",
          "key.parsed_declaration" : "extern NSString *const TKDefaultsKeyProfileBookingsUseSandbox",
          "key.parsed_scope.end" : 35,
          "key.parsed_scope.start" : 35,
          "key.swift_declaration" : "let TKDefaultsKeyProfileBookingsUseSandbox: String",
          "key.swift_name" : "TKDefaultsKeyProfileBookingsUseSandbox",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyProfileBookingsUseSandbox"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKCrossPlatform.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 1,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKCrossPlatform.h",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKCrossPlatform.h",
          "key.kind" : "sourcekitten.source.lang.objc.module.import",
          "key.name" : "UIKit",
          "key.parsed_declaration" : "@import UIKit",
          "key.parsed_scope.end" : 16,
          "key.parsed_scope.start" : 16,
          "key.unavailable_message" : "",
          "key.usr" : "c:"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
          "key.doc.line" : 14,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKTimeType",
          "key.parsed_declaration" : "typedef NS_CLOSED_ENUM(NSInteger, TKTimeType",
          "key.parsed_scope.end" : 14,
          "key.parsed_scope.start" : 14,
          "key.unavailable_message" : "",
          "key.usr" : "c:TKEnums.h@T@TKTimeType"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
          "key.doc.line" : 14,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.enum",
          "key.name" : "TKTimeType",
          "key.parsed_declaration" : "NS_CLOSED_ENUM(NSInteger, TKTimeType) {\n  TKTimeTypeLeaveASAP     = 0,\n  TKTimeTypeLeaveAfter    = 1,\n  TKTimeTypeArriveBefore  = 2,\n  TKTimeTypeNone\n}",
          "key.parsed_scope.end" : 19,
          "key.parsed_scope.start" : 14,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 15,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKTimeTypeLeaveASAP",
              "key.parsed_declaration" : "TKTimeTypeLeaveASAP     = 0",
              "key.parsed_scope.end" : 15,
              "key.parsed_scope.start" : 15,
              "key.swift_declaration" : "case leaveASAP = 0",
              "key.swift_name" : "leaveASAP",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKTimeType@TKTimeTypeLeaveASAP"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 16,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKTimeTypeLeaveAfter",
              "key.parsed_declaration" : "TKTimeTypeLeaveAfter    = 1",
              "key.parsed_scope.end" : 16,
              "key.parsed_scope.start" : 16,
              "key.swift_declaration" : "case leaveAfter = 1",
              "key.swift_name" : "leaveAfter",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKTimeType@TKTimeTypeLeaveAfter"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 17,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKTimeTypeArriveBefore",
              "key.parsed_declaration" : "TKTimeTypeArriveBefore  = 2",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 17,
              "key.swift_declaration" : "case arriveBefore = 2",
              "key.swift_name" : "arriveBefore",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKTimeType@TKTimeTypeArriveBefore"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 18,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKTimeTypeNone",
              "key.parsed_declaration" : "TKTimeTypeNone",
              "key.parsed_scope.end" : 18,
              "key.parsed_scope.start" : 18,
              "key.swift_declaration" : "case none = 3",
              "key.swift_name" : "none",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKTimeType@TKTimeTypeNone"
            }
          ],
          "key.swift_declaration" : "@frozen enum TKTimeType : Int",
          "key.swift_name" : "TKTimeType",
          "key.unavailable_message" : "",
          "key.usr" : "c:@E@TKTimeType"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
          "key.doc.line" : 21,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKGrouping",
          "key.parsed_declaration" : "typedef NS_ENUM(NSInteger, TKGrouping",
          "key.parsed_scope.end" : 21,
          "key.parsed_scope.start" : 21,
          "key.unavailable_message" : "",
          "key.usr" : "c:TKEnums.h@T@TKGrouping"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
          "key.doc.line" : 21,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.enum",
          "key.name" : "TKGrouping",
          "key.parsed_declaration" : "NS_ENUM(NSInteger, TKGrouping) {\n  TKGrouping_Start,\n  TKGrouping_Middle,\n  TKGrouping_End,\n  TKGrouping_Individual, \/\/ start + middle + end in one\n  TKGrouping_EdgeToEdge, \/\/ item should go edge-to-edge, so grouping is irrelevant\n}",
          "key.parsed_scope.end" : 27,
          "key.parsed_scope.start" : 21,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKGrouping_Start",
              "key.parsed_declaration" : "TKGrouping_Start",
              "key.parsed_scope.end" : 22,
              "key.parsed_scope.start" : 22,
              "key.swift_declaration" : "case start = 0",
              "key.swift_name" : "start",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKGrouping@TKGrouping_Start"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 23,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKGrouping_Middle",
              "key.parsed_declaration" : "TKGrouping_Middle",
              "key.parsed_scope.end" : 23,
              "key.parsed_scope.start" : 23,
              "key.swift_declaration" : "case middle = 1",
              "key.swift_name" : "middle",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKGrouping@TKGrouping_Middle"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 24,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKGrouping_End",
              "key.parsed_declaration" : "TKGrouping_End",
              "key.parsed_scope.end" : 24,
              "key.parsed_scope.start" : 24,
              "key.swift_declaration" : "case end = 2",
              "key.swift_name" : "end",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKGrouping@TKGrouping_End"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 25,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKGrouping_Individual",
              "key.parsed_declaration" : "TKGrouping_Individual",
              "key.parsed_scope.end" : 25,
              "key.parsed_scope.start" : 25,
              "key.swift_declaration" : "case individual = 3",
              "key.swift_name" : "individual",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKGrouping@TKGrouping_Individual"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.doc.line" : 26,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKEnums.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKGrouping_EdgeToEdge",
              "key.parsed_declaration" : "TKGrouping_EdgeToEdge",
              "key.parsed_scope.end" : 26,
              "key.parsed_scope.start" : 26,
              "key.swift_declaration" : "case edgeToEdge = 4",
              "key.swift_name" : "edgeToEdge",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKGrouping@TKGrouping_EdgeToEdge"
            }
          ],
          "key.swift_declaration" : "enum TKGrouping : Int",
          "key.swift_name" : "TKGrouping",
          "key.unavailable_message" : "",
          "key.usr" : "c:@E@TKGrouping"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
          "key.doc.line" : 15,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKLocationHelper",
          "key.parsed_declaration" : "@interface TKLocationHelper : NSObject\n\n+ (nullable NSString *)nameFromPlacemark:(CLPlacemark *)placemark;\n+ (nullable NSString *)addressForPlacemark:(CLPlacemark *)placemark;\n+ (nullable NSString *)suburbForPlacemark:(CLPlacemark *)placemark;\n+ (nullable NSString *)regionNameForPlacemark:(CLPlacemark *)placemark;\n\n+ (NSString *)expandAbbreviationInAddressString:(NSString *)address;\n\n+ (BOOL)coordinate:(CLLocationCoordinate2D)first isNear:(CLLocationCoordinate2D)second;\n\n@end",
          "key.parsed_scope.end" : 26,
          "key.parsed_scope.start" : 15,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.doc.line" : 17,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+nameFromPlacemark:",
              "key.parsed_declaration" : "+ (nullable NSString *)nameFromPlacemark:(CLPlacemark *)placemark;",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 17,
              "key.swift_declaration" : "class func name(from placemark: CLPlacemark) -> String?",
              "key.swift_name" : "name(from:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationHelper(cm)nameFromPlacemark:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.doc.line" : 18,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+addressForPlacemark:",
              "key.parsed_declaration" : "+ (nullable NSString *)addressForPlacemark:(CLPlacemark *)placemark;",
              "key.parsed_scope.end" : 18,
              "key.parsed_scope.start" : 18,
              "key.swift_declaration" : "class func address(for placemark: CLPlacemark) -> String?",
              "key.swift_name" : "address(for:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationHelper(cm)addressForPlacemark:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.doc.line" : 19,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+suburbForPlacemark:",
              "key.parsed_declaration" : "+ (nullable NSString *)suburbForPlacemark:(CLPlacemark *)placemark;",
              "key.parsed_scope.end" : 19,
              "key.parsed_scope.start" : 19,
              "key.swift_declaration" : "class func suburb(for placemark: CLPlacemark) -> String?",
              "key.swift_name" : "suburb(for:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationHelper(cm)suburbForPlacemark:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.doc.line" : 20,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+regionNameForPlacemark:",
              "key.parsed_declaration" : "+ (nullable NSString *)regionNameForPlacemark:(CLPlacemark *)placemark;",
              "key.parsed_scope.end" : 20,
              "key.parsed_scope.start" : 20,
              "key.swift_declaration" : "class func regionName(for placemark: CLPlacemark) -> String?",
              "key.swift_name" : "regionName(for:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationHelper(cm)regionNameForPlacemark:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+expandAbbreviationInAddressString:",
              "key.parsed_declaration" : "+ (NSString *)expandAbbreviationInAddressString:(NSString *)address;",
              "key.parsed_scope.end" : 22,
              "key.parsed_scope.start" : 22,
              "key.swift_declaration" : "class func expandAbbreviation(inAddressString address: String) -> String",
              "key.swift_name" : "expandAbbreviation(inAddressString:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationHelper(cm)expandAbbreviationInAddressString:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.doc.line" : 24,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationHelper.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+coordinate:isNear:",
              "key.parsed_declaration" : "+ (BOOL)coordinate:(CLLocationCoordinate2D)first isNear:(CLLocationCoordinate2D)second;",
              "key.parsed_scope.end" : 24,
              "key.parsed_scope.start" : 24,
              "key.swift_declaration" : "class func coordinate(_ first: CLLocationCoordinate2D, isNear second: CLLocationCoordinate2D) -> Bool",
              "key.swift_name" : "coordinate(_:isNear:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationHelper(cm)coordinate:isNear:"
            }
          ],
          "key.swift_declaration" : "class TKLocationHelper : NSObject",
          "key.swift_name" : "TKLocationHelper",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKLocationHelper"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 16,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
          "key.doc.line" : 17,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKLocationManagerLocationBlock",
          "key.parsed_declaration" : "typedef void (^TKLocationManagerLocationBlock)(CLLocation * location)",
          "key.parsed_scope.end" : 17,
          "key.parsed_scope.start" : 17,
          "key.swift_declaration" : "typealias TKLocationManagerLocationBlock = (CLLocation) -> Void",
          "key.swift_name" : "TKLocationManagerLocationBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKLocationManager.h@T@TKLocationManagerLocationBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 16,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
          "key.doc.line" : 18,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKLocationManagerFailureBlock",
          "key.parsed_declaration" : "typedef void (^TKLocationManagerFailureBlock)(NSError * error)",
          "key.parsed_scope.end" : 18,
          "key.parsed_scope.start" : 18,
          "key.swift_declaration" : "typealias TKLocationManagerFailureBlock = (Error) -> Void",
          "key.swift_name" : "TKLocationManagerFailureBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKLocationManager.h@T@TKLocationManagerFailureBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
          "key.doc.line" : 20,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKLocationManager",
          "key.parsed_declaration" : "@interface TKLocationManager : TKPermissionManager <CLLocationManagerDelegate>\n\n+ (TKLocationManager *)sharedInstance NS_REFINED_FOR_SWIFT;\n\n#pragma mark - Helpers\n\n- (BOOL)annotationIsCurrentLocation:(id<MKAnnotation>)currentLocation\n                      orCloseEnough:(BOOL)closeEnough;\n\n#pragma mark - Fetching locations\n\n- (id<MKAnnotation>)currentLocationPlaceholder NS_REFINED_FOR_SWIFT;\n\n- (nullable CLLocation *)lastKnownUserLocation;\n\n- (void)updatedLocation:(CLLocation *)newLocation;\n\n- (void)fetchCurrentLocationWithin:(NSTimeInterval)timeInterval\n\t\t\t\t\t\t\t\t\t\t\t\t\t success:(TKLocationManagerLocationBlock)success\n\t\t\t\t\t\t\t\t\t\t\t\t\t failure:(TKLocationManagerFailureBlock)failure;\n\n\/**\n * Subscripes to location updates and trigger the update block whenever\n * the location changes enough.\n *\n * If there's a location fix already, it'll trigger the update before returning!\n *\/\n- (void)subscribeToLocationUpdatesId:(id<NSCopying>)subscriber\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonUpdate:(TKLocationManagerLocationBlock)update;\n\n- (void)unsubscribeFromLocationUpdates:(id<NSCopying>)subscriber;\n\n\n@end",
          "key.parsed_scope.end" : 53,
          "key.parsed_scope.start" : 20,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+sharedInstance",
              "key.parsed_declaration" : "+ (TKLocationManager *)sharedInstance NS_REFINED_FOR_SWIFT;",
              "key.parsed_scope.end" : 22,
              "key.parsed_scope.start" : 22,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationManager(cm)sharedInstance"
            },
            {
              "key.doc.column" : 1,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 24,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.mark",
              "key.name" : "Helpers",
              "key.parsed_scope.end" : 24,
              "key.parsed_scope.start" : 24
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 26,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-annotationIsCurrentLocation:orCloseEnough:",
              "key.parsed_declaration" : "- (BOOL)annotationIsCurrentLocation:(id<MKAnnotation>)currentLocation\n                      orCloseEnough:(BOOL)closeEnough;",
              "key.parsed_scope.end" : 27,
              "key.parsed_scope.start" : 26,
              "key.swift_declaration" : "func annotationIsCurrentLocation(_ currentLocation: MKAnnotation, orCloseEnough closeEnough: Bool) -> Bool",
              "key.swift_name" : "annotationIsCurrentLocation(_:orCloseEnough:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationManager(im)annotationIsCurrentLocation:orCloseEnough:"
            },
            {
              "key.doc.column" : 1,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 29,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.mark",
              "key.name" : "Fetching locations",
              "key.parsed_scope.end" : 29,
              "key.parsed_scope.start" : 29
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 21,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 31,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-currentLocationPlaceholder",
              "key.parsed_declaration" : "- (id<MKAnnotation>)currentLocationPlaceholder NS_REFINED_FOR_SWIFT;",
              "key.parsed_scope.end" : 31,
              "key.parsed_scope.start" : 31,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationManager(im)currentLocationPlaceholder"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 26,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 33,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-lastKnownUserLocation",
              "key.parsed_declaration" : "- (nullable CLLocation *)lastKnownUserLocation;",
              "key.parsed_scope.end" : 33,
              "key.parsed_scope.start" : 33,
              "key.swift_declaration" : "func lastKnownUserLocation() -> CLLocation?",
              "key.swift_name" : "lastKnownUserLocation()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationManager(im)lastKnownUserLocation"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 35,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-updatedLocation:",
              "key.parsed_declaration" : "- (void)updatedLocation:(CLLocation *)newLocation;",
              "key.parsed_scope.end" : 35,
              "key.parsed_scope.start" : 35,
              "key.swift_declaration" : "func updatedLocation(_ newLocation: CLLocation)",
              "key.swift_name" : "updatedLocation(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationManager(im)updatedLocation:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 37,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-fetchCurrentLocationWithin:success:failure:",
              "key.parsed_declaration" : "- (void)fetchCurrentLocationWithin:(NSTimeInterval)timeInterval\n\t\t\t\t\t\t\t\t\t\t\t\t\t success:(TKLocationManagerLocationBlock)success\n\t\t\t\t\t\t\t\t\t\t\t\t\t failure:(TKLocationManagerFailureBlock)failure;",
              "key.parsed_scope.end" : 39,
              "key.parsed_scope.start" : 37,
              "key.swift_declaration" : "func fetchCurrentLocation(within timeInterval: TimeInterval, success: @escaping TKLocationManagerLocationBlock, failure: @escaping TKLocationManagerFailureBlock)",
              "key.swift_name" : "fetchCurrentLocation(within:success:failure:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationManager(im)fetchCurrentLocationWithin:success:failure:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : " Subscripes to location updates and trigger the update block whenever\n the location changes enough.\n\n If there's a location fix already, it'll trigger the update before returning!",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 47,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-subscribeToLocationUpdatesId:onUpdate:",
              "key.parsed_declaration" : "- (void)subscribeToLocationUpdatesId:(nonnull id<NSCopying>)subscriber\n                            onUpdate:\n                                (nonnull TKLocationManagerLocationBlock)update;",
              "key.parsed_scope.end" : 48,
              "key.parsed_scope.start" : 47,
              "key.swift_declaration" : "func subscribe(toLocationUpdatesId subscriber: NSCopying, onUpdate update: @escaping TKLocationManagerLocationBlock)",
              "key.swift_name" : "subscribe(toLocationUpdatesId:onUpdate:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationManager(im)subscribeToLocationUpdatesId:onUpdate:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.doc.line" : 50,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKLocationManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-unsubscribeFromLocationUpdates:",
              "key.parsed_declaration" : "- (void)unsubscribeFromLocationUpdates:(id<NSCopying>)subscriber;",
              "key.parsed_scope.end" : 50,
              "key.parsed_scope.start" : 50,
              "key.swift_declaration" : "func unsubscribe(fromLocationUpdates subscriber: NSCopying)",
              "key.swift_name" : "unsubscribe(fromLocationUpdates:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKLocationManager(im)unsubscribeFromLocationUpdates:"
            }
          ],
          "key.swift_declaration" : "class TKLocationManager : TKPermissionManager, CLLocationManagerDelegate",
          "key.swift_name" : "TKLocationManager",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKLocationManager"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 16,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.doc.line" : 13,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKPermissionCompletionBlock",
          "key.parsed_declaration" : "typedef void (^TKPermissionCompletionBlock)(BOOL enabled)",
          "key.parsed_scope.end" : 13,
          "key.parsed_scope.start" : 13,
          "key.swift_declaration" : "typealias TKPermissionCompletionBlock = (Bool) -> Void",
          "key.swift_name" : "TKPermissionCompletionBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKPermissionManager.h@T@TKPermissionCompletionBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 15,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.doc.line" : 14,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKPermissionsOpenSettingsHandler",
          "key.parsed_declaration" : "typedef void(^TKPermissionsOpenSettingsHandler)(void)",
          "key.parsed_scope.end" : 14,
          "key.parsed_scope.start" : 14,
          "key.swift_declaration" : "typealias TKPermissionsOpenSettingsHandler = () -> Void",
          "key.swift_name" : "TKPermissionsOpenSettingsHandler",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKPermissionManager.h@T@TKPermissionsOpenSettingsHandler"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKAuthorizationStatus",
          "key.parsed_declaration" : "typedef NS_CLOSED_ENUM(NSInteger, TKAuthorizationStatus",
          "key.parsed_scope.end" : 16,
          "key.parsed_scope.start" : 16,
          "key.unavailable_message" : "",
          "key.usr" : "c:TKPermissionManager.h@T@TKAuthorizationStatus"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.enum",
          "key.name" : "TKAuthorizationStatus",
          "key.parsed_declaration" : "NS_CLOSED_ENUM(NSInteger, TKAuthorizationStatus) {\n  TKAuthorizationStatusNotDetermined = 0,\n  TKAuthorizationStatusRestricted,\n  TKAuthorizationStatusDenied,\n  TKAuthorizationStatusAuthorized\n}",
          "key.parsed_scope.end" : 21,
          "key.parsed_scope.start" : 16,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 17,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKAuthorizationStatusNotDetermined",
              "key.parsed_declaration" : "TKAuthorizationStatusNotDetermined = 0",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 17,
              "key.swift_declaration" : "case notDetermined = 0",
              "key.swift_name" : "notDetermined",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKAuthorizationStatus@TKAuthorizationStatusNotDetermined"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 18,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKAuthorizationStatusRestricted",
              "key.parsed_declaration" : "TKAuthorizationStatusRestricted",
              "key.parsed_scope.end" : 18,
              "key.parsed_scope.start" : 18,
              "key.swift_declaration" : "case restricted = 1",
              "key.swift_name" : "restricted",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKAuthorizationStatus@TKAuthorizationStatusRestricted"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 19,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKAuthorizationStatusDenied",
              "key.parsed_declaration" : "TKAuthorizationStatusDenied",
              "key.parsed_scope.end" : 19,
              "key.parsed_scope.start" : 19,
              "key.swift_declaration" : "case denied = 2",
              "key.swift_name" : "denied",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKAuthorizationStatus@TKAuthorizationStatusDenied"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 20,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKAuthorizationStatusAuthorized",
              "key.parsed_declaration" : "TKAuthorizationStatusAuthorized",
              "key.parsed_scope.end" : 20,
              "key.parsed_scope.start" : 20,
              "key.swift_declaration" : "case authorized = 3",
              "key.swift_name" : "authorized",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKAuthorizationStatus@TKAuthorizationStatusAuthorized"
            }
          ],
          "key.swift_declaration" : "@frozen enum TKAuthorizationStatus : Int",
          "key.swift_name" : "TKAuthorizationStatus",
          "key.unavailable_message" : "",
          "key.usr" : "c:@E@TKAuthorizationStatus"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.doc.line" : 23,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKPermissionsChangedNotification",
          "key.parsed_declaration" : "FOUNDATION_EXPORT NSString *const TKPermissionsChangedNotification",
          "key.parsed_scope.end" : 23,
          "key.parsed_scope.start" : 23,
          "key.swift_declaration" : "static let TKPermissionsChanged: NSNotification.Name",
          "key.swift_name" : "TKPermissionsChanged",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKPermissionsChangedNotification"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.doc.line" : 25,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKPermissionManager",
          "key.parsed_declaration" : "@interface TKPermissionManager : NSObject\n\n@property (nonatomic, strong, nullable) TKPermissionsOpenSettingsHandler openSettingsHandler;\n\n\/\/ these are the main interface methods\n\n\/**\n * Is the app capable and authorized to use these kind of permissions?\n *\/\n- (BOOL)isAuthorized;\n\n\/\/ subclasses need to implement these\n- (BOOL)featureIsAvailable;\n- (void)askForPermission:(TKPermissionCompletionBlock)completion;\n- (BOOL)authorizationRestrictionsApply;\n- (TKAuthorizationStatus)authorizationStatus;\n- (NSString *)authorizationAlertText;\n\n@end",
          "key.parsed_scope.end" : 43,
          "key.parsed_scope.start" : 25,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 74,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 27,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "openSettingsHandler",
              "key.parsed_declaration" : "@property (nonatomic, strong, nullable) TKPermissionsOpenSettingsHandler openSettingsHandler",
              "key.parsed_scope.end" : 27,
              "key.parsed_scope.start" : 27,
              "key.swift_declaration" : "var openSettingsHandler: TKPermissionsOpenSettingsHandler? { get set }",
              "key.swift_name" : "openSettingsHandler",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKPermissionManager(py)openSettingsHandler"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "Is the app capable and authorized to use these kind of permissions?",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 34,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-isAuthorized",
              "key.parsed_declaration" : "- (BOOL)isAuthorized;",
              "key.parsed_scope.end" : 34,
              "key.parsed_scope.start" : 34,
              "key.swift_declaration" : "func isAuthorized() -> Bool",
              "key.swift_name" : "isAuthorized()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKPermissionManager(im)isAuthorized"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 37,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-featureIsAvailable",
              "key.parsed_declaration" : "- (BOOL)featureIsAvailable;",
              "key.parsed_scope.end" : 37,
              "key.parsed_scope.start" : 37,
              "key.swift_declaration" : "func featureIsAvailable() -> Bool",
              "key.swift_name" : "featureIsAvailable()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKPermissionManager(im)featureIsAvailable"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 38,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-askForPermission:",
              "key.parsed_declaration" : "- (void)askForPermission:(TKPermissionCompletionBlock)completion;",
              "key.parsed_scope.end" : 38,
              "key.parsed_scope.start" : 38,
              "key.swift_declaration" : "func askForPermission() async -> Bool",
              "key.swift_name" : "askForPermission()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKPermissionManager(im)askForPermission:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 39,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-authorizationRestrictionsApply",
              "key.parsed_declaration" : "- (BOOL)authorizationRestrictionsApply;",
              "key.parsed_scope.end" : 39,
              "key.parsed_scope.start" : 39,
              "key.swift_declaration" : "func authorizationRestrictionsApply() -> Bool",
              "key.swift_name" : "authorizationRestrictionsApply()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKPermissionManager(im)authorizationRestrictionsApply"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 26,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 40,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-authorizationStatus",
              "key.parsed_declaration" : "- (TKAuthorizationStatus)authorizationStatus;",
              "key.parsed_scope.end" : 40,
              "key.parsed_scope.start" : 40,
              "key.swift_declaration" : "func authorizationStatus() -> TKAuthorizationStatus",
              "key.swift_name" : "authorizationStatus()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKPermissionManager(im)authorizationStatus"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.doc.line" : 41,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKPermissionManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-authorizationAlertText",
              "key.parsed_declaration" : "- (NSString *)authorizationAlertText;",
              "key.parsed_scope.end" : 41,
              "key.parsed_scope.start" : 41,
              "key.swift_declaration" : "func authorizationAlertText() -> String",
              "key.swift_name" : "authorizationAlertText()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKPermissionManager(im)authorizationAlertText"
            }
          ],
          "key.swift_declaration" : "class TKPermissionManager : NSObject",
          "key.swift_name" : "TKPermissionManager",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKPermissionManager"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 16,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKServerSuccessBlock",
          "key.parsed_declaration" : "typedef void (^TKServerSuccessBlock)(NSInteger status, NSData * _Nullable data)",
          "key.parsed_scope.end" : 16,
          "key.parsed_scope.start" : 16,
          "key.swift_declaration" : "typealias TKServerSuccessBlock = (Int, Data?) -> Void",
          "key.swift_name" : "TKServerSuccessBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKServer.h@T@TKServerSuccessBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 16,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.doc.line" : 17,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKServerFullSuccessBlock",
          "key.parsed_declaration" : "typedef void (^TKServerFullSuccessBlock)(NSInteger status, NSDictionary<NSString *, id> *headers, NSData * _Nullable data)",
          "key.parsed_scope.end" : 17,
          "key.parsed_scope.start" : 17,
          "key.swift_declaration" : "typealias TKServerFullSuccessBlock = (Int, [String : Any], Data?) -> Void",
          "key.swift_name" : "TKServerFullSuccessBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKServer.h@T@TKServerFullSuccessBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 16,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.doc.line" : 18,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKServerFailureBlock",
          "key.parsed_declaration" : "typedef void (^TKServerFailureBlock)(NSError *error)",
          "key.parsed_scope.end" : 18,
          "key.parsed_scope.start" : 18,
          "key.swift_declaration" : "typealias TKServerFailureBlock = (Error) -> Void",
          "key.swift_name" : "TKServerFailureBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKServer.h@T@TKServerFailureBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 16,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.doc.line" : 19,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKServerGenericBlock",
          "key.parsed_declaration" : "typedef void (^TKServerGenericBlock)(NSInteger status, NSDictionary<NSString *, id> *headers, NSData * _Nullable data, NSError * _Nullable error)",
          "key.parsed_scope.end" : 19,
          "key.parsed_scope.start" : 19,
          "key.swift_declaration" : "typealias TKServerGenericBlock = (Int, [String : Any], Data?, Error?) -> Void",
          "key.swift_name" : "TKServerGenericBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKServer.h@T@TKServerGenericBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 16,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.doc.line" : 20,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKServerInfoBlock",
          "key.parsed_declaration" : "typedef void (^TKServerInfoBlock)(NSUUID *uuid, NSURLRequest *, NSURLResponse * _Nullable response, NSData * _Nullable data, NSError * _Nullable error)",
          "key.parsed_scope.end" : 20,
          "key.parsed_scope.start" : 20,
          "key.swift_declaration" : "typealias TKServerInfoBlock = (UUID, URLRequest, URLResponse?, Data?, Error?) -> Void",
          "key.swift_name" : "TKServerInfoBlock",
          "key.unavailable_message" : "",
          "key.usr" : "c:TKServer.h@T@TKServerInfoBlock"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 23,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyUserToken",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKDefaultsKeyUserToken",
          "key.parsed_scope.end" : 23,
          "key.parsed_scope.start" : 23,
          "key.swift_declaration" : "let TKDefaultsKeyUserToken: String",
          "key.swift_name" : "TKDefaultsKeyUserToken",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyUserToken"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 25,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKDefaultsKeyDevelopmentServer",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKDefaultsKeyDevelopmentServer",
          "key.parsed_scope.end" : 25,
          "key.parsed_scope.start" : 25,
          "key.swift_declaration" : "let TKDefaultsKeyDevelopmentServer: String",
          "key.swift_name" : "TKDefaultsKeyDevelopmentServer",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKDefaultsKeyDevelopmentServer"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.comment" : "Encapsulates the logic for talking to SkedGo's servers",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 30,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKServer",
          "key.parsed_declaration" : "@interface TKServer : NSObject",
          "key.parsed_scope.end" : 64,
          "key.parsed_scope.start" : 30,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.line" : 32,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+sharedInstance",
              "key.parsed_declaration" : "+ (TKServer *)sharedInstance NS_REFINED_FOR_SWIFT;",
              "key.parsed_scope.end" : 32,
              "key.parsed_scope.start" : 32,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(cm)sharedInstance"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 19,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.line" : 34,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+GETRequestWithSkedGoHTTPHeadersForURL:paras:",
              "key.parsed_declaration" : "+ (NSURLRequest *)GETRequestWithSkedGoHTTPHeadersForURL:(NSURL *)URL paras:(nullable NSDictionary *)paras;",
              "key.parsed_scope.end" : 34,
              "key.parsed_scope.start" : 34,
              "key.swift_declaration" : "class func getRequestWithSkedGoHTTPHeaders(for URL: URL, paras: [AnyHashable : Any]?) -> URLRequest",
              "key.swift_name" : "getRequestWithSkedGoHTTPHeaders(for:paras:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(cm)GETRequestWithSkedGoHTTPHeadersForURL:paras:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.line" : 36,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+xTripGoVersion",
              "key.parsed_declaration" : "+ (nullable NSString *)xTripGoVersion;",
              "key.parsed_scope.end" : 36,
              "key.parsed_scope.start" : 36,
              "key.swift_declaration" : "class func xTripGoVersion() -> String?",
              "key.swift_name" : "xTripGoVersion()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(cm)xTripGoVersion"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.line" : 38,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+userToken",
              "key.parsed_declaration" : "+ (nullable NSString *)userToken;",
              "key.parsed_scope.end" : 38,
              "key.parsed_scope.start" : 38,
              "key.swift_declaration" : "class func userToken() -> String?",
              "key.swift_name" : "userToken()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(cm)userToken"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.line" : 40,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+updateUserToken:",
              "key.parsed_declaration" : "+ (void)updateUserToken:(nullable NSString *)userToken;",
              "key.parsed_scope.end" : 40,
              "key.parsed_scope.start" : 40,
              "key.swift_declaration" : "class func updateUserToken(_ userToken: String?)",
              "key.swift_name" : "updateUserToken(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(cm)updateUserToken:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 39,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.line" : 42,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "APIKey",
              "key.parsed_declaration" : "@property (nonatomic, copy) NSString *APIKey",
              "key.parsed_scope.end" : 42,
              "key.parsed_scope.start" : 42,
              "key.swift_declaration" : "var apiKey: String { get set }",
              "key.swift_name" : "apiKey",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(py)APIKey"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.line" : 44,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-registerFileBundle:",
              "key.parsed_declaration" : "- (void)registerFileBundle:(NSBundle *)bundle;",
              "key.parsed_scope.end" : 44,
              "key.parsed_scope.start" : 44,
              "key.swift_declaration" : "func registerFileBundle(_ bundle: Bundle)",
              "key.swift_name" : "registerFileBundle(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(im)registerFileBundle:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : ":nodoc:",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 47,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-_hitSkedGoWithMethod:path:parameters:headers:baseURLs:callbackOnMain:info:success:failure:",
              "key.parsed_declaration" : "- (void)_hitSkedGoWithMethod:(nonnull NSString *)method\n                        path:(nonnull NSString *)path\n                  parameters:(nullable NSDictionary<NSString *, id> *)parameters\n                     headers:(nullable NSDictionary<NSString *, NSString *> *)\n                                 headers\n                    baseURLs:(nonnull NSMutableArray<NSURL *> *)baseURLs\n              callbackOnMain:(BOOL)callbackOnMain\n                        info:(nonnull TKServerInfoBlock)info\n                     success:(nonnull TKServerFullSuccessBlock)success\n                     failure:(nonnull TKServerFailureBlock)failure;",
              "key.parsed_scope.end" : 55,
              "key.parsed_scope.start" : 47,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(im)_hitSkedGoWithMethod:path:parameters:headers:baseURLs:callbackOnMain:info:success:failure:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : ":nodoc:",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 58,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKServer.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+_hitURL:method:parameters:info:completion:",
              "key.parsed_declaration" : "+ (void)_hitURL:(nonnull NSURL *)url\n         method:(nonnull NSString *)method\n     parameters:(nullable NSDictionary<NSString *, id> *)parameters\n           info:(nonnull TKServerInfoBlock)info\n     completion:(nonnull TKServerGenericBlock)completion;",
              "key.parsed_scope.end" : 62,
              "key.parsed_scope.start" : 58,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKServer(cm)_hitURL:method:parameters:info:completion:"
            }
          ],
          "key.swift_declaration" : "class TKServer : NSObject",
          "key.swift_name" : "TKServer",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKServer"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.doc.line" : 11,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKSettingsProfileWeight",
          "key.parsed_declaration" : "typedef NS_ENUM(NSInteger, TKSettingsProfileWeight",
          "key.parsed_scope.end" : 11,
          "key.parsed_scope.start" : 11,
          "key.unavailable_message" : "",
          "key.usr" : "c:TKSettings.h@T@TKSettingsProfileWeight"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.doc.line" : 11,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.enum",
          "key.name" : "TKSettingsProfileWeight",
          "key.parsed_declaration" : "NS_ENUM(NSInteger, TKSettingsProfileWeight) {\n  TKSettingsProfileWeight_Money,\n  TKSettingsProfileWeight_Carbon,\n  TKSettingsProfileWeight_Time,\n  TKSettingsProfileWeight_Hassle,\n  TKSettingsProfileWeight_Exercise,\n}",
          "key.parsed_scope.end" : 17,
          "key.parsed_scope.start" : 11,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.line" : 12,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKSettingsProfileWeight_Money",
              "key.parsed_declaration" : "TKSettingsProfileWeight_Money",
              "key.parsed_scope.end" : 12,
              "key.parsed_scope.start" : 12,
              "key.swift_declaration" : "case money = 0",
              "key.swift_name" : "money",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKSettingsProfileWeight@TKSettingsProfileWeight_Money"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.line" : 13,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKSettingsProfileWeight_Carbon",
              "key.parsed_declaration" : "TKSettingsProfileWeight_Carbon",
              "key.parsed_scope.end" : 13,
              "key.parsed_scope.start" : 13,
              "key.swift_declaration" : "case carbon = 1",
              "key.swift_name" : "carbon",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKSettingsProfileWeight@TKSettingsProfileWeight_Carbon"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.line" : 14,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKSettingsProfileWeight_Time",
              "key.parsed_declaration" : "TKSettingsProfileWeight_Time",
              "key.parsed_scope.end" : 14,
              "key.parsed_scope.start" : 14,
              "key.swift_declaration" : "case time = 2",
              "key.swift_name" : "time",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKSettingsProfileWeight@TKSettingsProfileWeight_Time"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.line" : 15,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKSettingsProfileWeight_Hassle",
              "key.parsed_declaration" : "TKSettingsProfileWeight_Hassle",
              "key.parsed_scope.end" : 15,
              "key.parsed_scope.start" : 15,
              "key.swift_declaration" : "case hassle = 3",
              "key.swift_name" : "hassle",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKSettingsProfileWeight@TKSettingsProfileWeight_Hassle"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.line" : 16,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKSettingsProfileWeight_Exercise",
              "key.parsed_declaration" : "TKSettingsProfileWeight_Exercise",
              "key.parsed_scope.end" : 16,
              "key.parsed_scope.start" : 16,
              "key.swift_declaration" : "case exercise = 4",
              "key.swift_name" : "exercise",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKSettingsProfileWeight@TKSettingsProfileWeight_Exercise"
            }
          ],
          "key.swift_declaration" : "enum TKSettingsProfileWeight : Int",
          "key.swift_name" : "TKSettingsProfileWeight",
          "key.unavailable_message" : "",
          "key.usr" : "c:@E@TKSettingsProfileWeight"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.doc.line" : 19,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKSettingsSpeed",
          "key.parsed_declaration" : "typedef NS_ENUM(NSInteger, TKSettingsSpeed",
          "key.parsed_scope.end" : 19,
          "key.parsed_scope.start" : 19,
          "key.unavailable_message" : "",
          "key.usr" : "c:TKSettings.h@T@TKSettingsSpeed"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.doc.line" : 19,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.enum",
          "key.name" : "TKSettingsSpeed",
          "key.parsed_declaration" : "NS_ENUM(NSInteger, TKSettingsSpeed) {\n  TKSettingsSpeed_Slow = 0,\n  TKSettingsSpeed_Average,\n  TKSettingsSpeed_Fast,\n}",
          "key.parsed_scope.end" : 23,
          "key.parsed_scope.start" : 19,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.line" : 20,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKSettingsSpeed_Slow",
              "key.parsed_declaration" : "TKSettingsSpeed_Slow = 0",
              "key.parsed_scope.end" : 20,
              "key.parsed_scope.start" : 20,
              "key.swift_declaration" : "case slow = 0",
              "key.swift_name" : "slow",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKSettingsSpeed@TKSettingsSpeed_Slow"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.line" : 21,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKSettingsSpeed_Average",
              "key.parsed_declaration" : "TKSettingsSpeed_Average",
              "key.parsed_scope.end" : 21,
              "key.parsed_scope.start" : 21,
              "key.swift_declaration" : "case average = 1",
              "key.swift_name" : "average",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKSettingsSpeed@TKSettingsSpeed_Average"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKSettingsSpeed_Fast",
              "key.parsed_declaration" : "TKSettingsSpeed_Fast",
              "key.parsed_scope.end" : 22,
              "key.parsed_scope.start" : 22,
              "key.swift_declaration" : "case fast = 2",
              "key.swift_name" : "fast",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKSettingsSpeed@TKSettingsSpeed_Fast"
            }
          ],
          "key.swift_declaration" : "enum TKSettingsSpeed : Int",
          "key.swift_name" : "TKSettingsSpeed",
          "key.unavailable_message" : "",
          "key.usr" : "c:@E@TKSettingsSpeed"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.doc.line" : 27,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKSettings",
          "key.parsed_declaration" : "@interface TKSettings : NSObject\n\n\/**\n The maximum walking duration is a per-segment limit for mixed results, i.e., it does not apply to walking-only trips.\n \n @param duration Seconds\n *\/\n+ (void)setMaximumWalkingDuration:(NSTimeInterval)duration;\n\n\/**\n The minimum transfer duration applies for trips with more than one public transport segment. It sets the minimum time that the user needs to arrive at every public transport segment after the first one.\n @param duration Seconds, which will get rounded up to the next minute.\n *\/\n+ (void)setMinimumTransferDuration:(NSTimeInterval)duration;\n\n\/**\n Sets the profile weight for a specific component. Each component should be in the range of [0.1, 2.0], otherwise this is enforced server side. Weights of the components are relative to each other.\n @param weight New weight, preferably in range [0.1, 2.0]\n @param component The component for which to set this weight.\n *\/\n+ (void)setProfileWeight:(float)weight forComponent:(TKSettingsProfileWeight)component;\n\n\/**\n @param speed The new walking speed. Slow is roughly 2km\/h, average 4km\/h, fast 6km\/h.\n *\/\n+ (void)setWalkingSpeed:(TKSettingsSpeed)speed;\n\n\/**\n @param speed The new cycling speed. Slow is roughly 8km\/h, average 12km\/h, fast 25km\/h.\n *\/\n+ (void)setCyclingSpeed:(TKSettingsSpeed)speed;\n\n\/**\n @param gramsCO2PerKm Emissions for supplied mode identifier in grams of CO2 per kilometre\n @param modeIdentifier Mode identifier for which to apply these emissions\n *\/\n+ (void)setEmissions:(float)gramsCO2PerKm forModeIdentifier:(NSString *)modeIdentifier;\n\n@end",
          "key.parsed_scope.end" : 65,
          "key.parsed_scope.start" : 27,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "The maximum walking duration is a per-segment limit for mixed results, i.e., it does not apply to walking-only trips.\n\n- parameter: duration Seconds",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 34,
              "key.doc.parameters" : [
                {
                  "discussion" : [
                    {
                      "kind" : "",
                      "Para" : "Seconds"
                    }
                  ],
                  "name" : "duration"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+setMaximumWalkingDuration:",
              "key.parsed_declaration" : "+ (void)setMaximumWalkingDuration:(NSTimeInterval)duration;",
              "key.parsed_scope.end" : 34,
              "key.parsed_scope.start" : 34,
              "key.swift_declaration" : "class func setMaximumWalkingDuration(_ duration: TimeInterval)",
              "key.swift_name" : "setMaximumWalkingDuration(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKSettings(cm)setMaximumWalkingDuration:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "The minimum transfer duration applies for trips with more than one public transport segment. It sets the minimum time that the user needs to arrive at every public transport segment after the first one.\n- parameter: duration Seconds, which will get rounded up to the next minute.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 40,
              "key.doc.parameters" : [
                {
                  "discussion" : [
                    {
                      "kind" : "",
                      "Para" : "Seconds, which will get rounded up to the next minute."
                    }
                  ],
                  "name" : "duration"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+setMinimumTransferDuration:",
              "key.parsed_declaration" : "+ (void)setMinimumTransferDuration:(NSTimeInterval)duration;",
              "key.parsed_scope.end" : 40,
              "key.parsed_scope.start" : 40,
              "key.swift_declaration" : "class func setMinimumTransferDuration(_ duration: TimeInterval)",
              "key.swift_name" : "setMinimumTransferDuration(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKSettings(cm)setMinimumTransferDuration:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "Sets the profile weight for a specific component. Each component should be in the range of [0.1, 2.0], otherwise this is enforced server side. Weights of the components are relative to each other.\n- parameter: weight New weight, preferably in range [0.1, 2.0]\n- parameter: component The component for which to set this weight.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 47,
              "key.doc.parameters" : [
                {
                  "discussion" : [
                    {
                      "kind" : "",
                      "Para" : "New weight, preferably in range [0.1, 2.0]\n"
                    }
                  ],
                  "name" : "weight"
                },
                {
                  "discussion" : [
                    {
                      "kind" : "",
                      "Para" : "The component for which to set this weight."
                    }
                  ],
                  "name" : "component"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+setProfileWeight:forComponent:",
              "key.parsed_declaration" : "+ (void)setProfileWeight:(float)weight\n            forComponent:(TKSettingsProfileWeight)component;",
              "key.parsed_scope.end" : 47,
              "key.parsed_scope.start" : 47,
              "key.swift_declaration" : "class func setProfileWeight(_ weight: Float, forComponent component: TKSettingsProfileWeight)",
              "key.swift_name" : "setProfileWeight(_:forComponent:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKSettings(cm)setProfileWeight:forComponent:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "- parameter: speed The new walking speed. Slow is roughly 2km\/h, average 4km\/h, fast 6km\/h.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 52,
              "key.doc.parameters" : [
                {
                  "discussion" : [
                    {
                      "kind" : "",
                      "Para" : "The new walking speed. Slow is roughly 2km\/h, average 4km\/h, fast 6km\/h."
                    }
                  ],
                  "name" : "speed"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+setWalkingSpeed:",
              "key.parsed_declaration" : "+ (void)setWalkingSpeed:(TKSettingsSpeed)speed;",
              "key.parsed_scope.end" : 52,
              "key.parsed_scope.start" : 52,
              "key.swift_declaration" : "class func setWalking(_ speed: TKSettingsSpeed)",
              "key.swift_name" : "setWalking(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKSettings(cm)setWalkingSpeed:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "- parameter: speed The new cycling speed. Slow is roughly 8km\/h, average 12km\/h, fast 25km\/h.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 57,
              "key.doc.parameters" : [
                {
                  "discussion" : [
                    {
                      "kind" : "",
                      "Para" : "The new cycling speed. Slow is roughly 8km\/h, average 12km\/h, fast 25km\/h."
                    }
                  ],
                  "name" : "speed"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+setCyclingSpeed:",
              "key.parsed_declaration" : "+ (void)setCyclingSpeed:(TKSettingsSpeed)speed;",
              "key.parsed_scope.end" : 57,
              "key.parsed_scope.start" : 57,
              "key.swift_declaration" : "class func setCycling(_ speed: TKSettingsSpeed)",
              "key.swift_name" : "setCycling(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKSettings(cm)setCyclingSpeed:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "- parameter: gramsCO2PerKm Emissions for supplied mode identifier in grams of CO2 per kilometre\n- parameter: modeIdentifier Mode identifier for which to apply these emissions",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 63,
              "key.doc.parameters" : [
                {
                  "discussion" : [
                    {
                      "kind" : "",
                      "Para" : "Emissions for supplied mode identifier in grams of CO2 per kilometre\n"
                    }
                  ],
                  "name" : "gramsCO2PerKm"
                },
                {
                  "discussion" : [
                    {
                      "kind" : "",
                      "Para" : "Mode identifier for which to apply these emissions"
                    }
                  ],
                  "name" : "modeIdentifier"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKSettings.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+setEmissions:forModeIdentifier:",
              "key.parsed_declaration" : "+ (void)setEmissions:(float)gramsCO2PerKm\n    forModeIdentifier:(nonnull NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 63,
              "key.parsed_scope.start" : 63,
              "key.swift_declaration" : "class func setEmissions(_ gramsCO2PerKm: Float, forModeIdentifier modeIdentifier: String)",
              "key.swift_name" : "setEmissions(_:forModeIdentifier:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKSettings(cm)setEmissions:forModeIdentifier:"
            }
          ],
          "key.swift_declaration" : "class TKSettings : NSObject",
          "key.swift_name" : "TKSettings",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKSettings"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 1,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
          "key.doc.line" : 9,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
          "key.kind" : "sourcekitten.source.lang.objc.module.import",
          "key.name" : "UIKit",
          "key.parsed_declaration" : "@import UIKit",
          "key.parsed_scope.end" : 9,
          "key.parsed_scope.start" : 9,
          "key.unavailable_message" : "",
          "key.usr" : "c:"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.category",
          "key.name" : "TKStyleManager(Fonts)",
          "key.parsed_declaration" : "@interface TKStyleManager (Fonts)\n\n\/\/\/ This method returns a regular font with custom font face for a given font size.\n\/\/\/ If there's no custom font face specified in the plist, system font face is used.\n\/\/\/ This method is recommended to use with system controls such as `UIButton`\n\/\/\/\n\/\/\/ - Parameter size: Font size desired\n\/\/\/ - Returns: A semibold font with custom font face.\n+ (UIFont *)systemFontWithSize:(CGFloat)size NS_SWIFT_NAME(systemFont(size:));\n\n\/\/\/ This method returns a bold font with custom font face for a given font size.\n\/\/\/ If there's no custom font face specified in the plist, system font face is used.\n\/\/\/ This method is recommended to use with system controls such as `UIButton`\n\/\/\/\n\/\/\/ - Parameter size: Font size desired\n\/\/\/ - Returns: A bold font with custom font face.\n+ (UIFont *)boldSystemFontWithSize:(CGFloat)size NS_SWIFT_NAME(boldSystemFont(size:));\n\n\/\/\/ This method returns a semibold font with custom font face for a given font size.\n\/\/\/ If there's no custom font face specified in the plist, system font face is used.\n\/\/\/ This method is recommended to use with system controls such as `UIButton`\n\/\/\/\n\/\/\/ - Parameter size: Font size desired\n\/\/\/ - Returns: A semibold font with custom font face.\n+ (UIFont *)semiboldSystemFontWithSize:(CGFloat)size NS_SWIFT_NAME(semiboldSystemFont(size:));\n\n\/\/\/ This method returns a medium font with custom font face for a given font size.\n\/\/\/ If there's no custom font face specified in the plist, system font face is used.\n\/\/\/ This method is recommended to use with system controls such as `UIButton`\n\/\/\/\n\/\/\/ - Parameter size: Font size desired\n\/\/\/ - Returns: A semibold font with custom font face.\n+ (UIFont *)mediumSystemFontWithSize:(CGFloat)size NS_SWIFT_NAME(mediumSystemFont(size:));\n\n@end",
          "key.parsed_scope.end" : 50,
          "key.parsed_scope.start" : 16,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.comment" : "This method returns a regular font with custom font face for a given font size.\nIf there's no custom font face specified in the plist, system font face is used.\nThis method is recommended to use with system controls such as `UIButton`\n\n- Parameter size: Font size desired\n- Returns: A semibold font with custom font face.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 24,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+systemFontWithSize:",
              "key.parsed_declaration" : "+ (nonnull UIFont *)systemFontWithSize:(CGFloat)size;",
              "key.parsed_scope.end" : 24,
              "key.parsed_scope.start" : 24,
              "key.swift_declaration" : "class func systemFont(size: CGFloat) -> UIFont",
              "key.swift_name" : "systemFont(size:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)systemFontWithSize:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.comment" : "This method returns a bold font with custom font face for a given font size.\nIf there's no custom font face specified in the plist, system font face is used.\nThis method is recommended to use with system controls such as `UIButton`\n\n- Parameter size: Font size desired\n- Returns: A bold font with custom font face.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 32,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+boldSystemFontWithSize:",
              "key.parsed_declaration" : "+ (nonnull UIFont *)boldSystemFontWithSize:(CGFloat)size;",
              "key.parsed_scope.end" : 32,
              "key.parsed_scope.start" : 32,
              "key.swift_declaration" : "class func boldSystemFont(size: CGFloat) -> UIFont",
              "key.swift_name" : "boldSystemFont(size:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)boldSystemFontWithSize:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.comment" : "This method returns a semibold font with custom font face for a given font size.\nIf there's no custom font face specified in the plist, system font face is used.\nThis method is recommended to use with system controls such as `UIButton`\n\n- Parameter size: Font size desired\n- Returns: A semibold font with custom font face.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 40,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+semiboldSystemFontWithSize:",
              "key.parsed_declaration" : "+ (nonnull UIFont *)semiboldSystemFontWithSize:(CGFloat)size;",
              "key.parsed_scope.end" : 40,
              "key.parsed_scope.start" : 40,
              "key.swift_declaration" : "class func semiboldSystemFont(size: CGFloat) -> UIFont",
              "key.swift_name" : "semiboldSystemFont(size:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)semiboldSystemFontWithSize:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 13,
              "key.doc.comment" : "This method returns a medium font with custom font face for a given font size.\nIf there's no custom font face specified in the plist, system font face is used.\nThis method is recommended to use with system controls such as `UIButton`\n\n- Parameter size: Font size desired\n- Returns: A semibold font with custom font face.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 48,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager+UIKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+mediumSystemFontWithSize:",
              "key.parsed_declaration" : "+ (nonnull UIFont *)mediumSystemFontWithSize:(CGFloat)size;",
              "key.parsed_scope.end" : 48,
              "key.parsed_scope.start" : 48,
              "key.swift_declaration" : "class func mediumSystemFont(size: CGFloat) -> UIFont",
              "key.swift_name" : "mediumSystemFont(size:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)mediumSystemFontWithSize:"
            }
          ],
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cy)TKStyleManager@Fonts"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 1,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.doc.line" : 9,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.module.import",
          "key.name" : "CoreLocation",
          "key.parsed_declaration" : "@import CoreLocation",
          "key.parsed_scope.end" : 9,
          "key.parsed_scope.start" : 9,
          "key.unavailable_message" : "",
          "key.usr" : "c:"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.doc.line" : 13,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKStyleModeIconType",
          "key.parsed_declaration" : "typedef NS_ENUM(NSInteger, TKStyleModeIconType",
          "key.parsed_scope.end" : 13,
          "key.parsed_scope.start" : 13,
          "key.unavailable_message" : "",
          "key.usr" : "c:TKStyleManager.h@T@TKStyleModeIconType"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.doc.line" : 13,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.enum",
          "key.name" : "TKStyleModeIconType",
          "key.parsed_declaration" : "NS_ENUM(NSInteger, TKStyleModeIconType) {\n\tTKStyleModeIconTypeListMainMode,\n  TKStyleModeIconTypeMapIcon,\n  TKStyleModeIconTypeResolutionIndependent, \/\/ SVGs! You probably need SVGKit to handle these.\n  TKStyleModeIconTypeVehicle,\n  TKStyleModeIconTypeAlert,\n}",
          "key.parsed_scope.end" : 19,
          "key.parsed_scope.start" : 13,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 2,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 14,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKStyleModeIconTypeListMainMode",
              "key.parsed_declaration" : "TKStyleModeIconTypeListMainMode",
              "key.parsed_scope.end" : 14,
              "key.parsed_scope.start" : 14,
              "key.swift_declaration" : "case listMainMode = 0",
              "key.swift_name" : "listMainMode",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKStyleModeIconType@TKStyleModeIconTypeListMainMode"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 15,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKStyleModeIconTypeMapIcon",
              "key.parsed_declaration" : "TKStyleModeIconTypeMapIcon",
              "key.parsed_scope.end" : 15,
              "key.parsed_scope.start" : 15,
              "key.swift_declaration" : "case mapIcon = 1",
              "key.swift_name" : "mapIcon",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKStyleModeIconType@TKStyleModeIconTypeMapIcon"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 16,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKStyleModeIconTypeResolutionIndependent",
              "key.parsed_declaration" : "TKStyleModeIconTypeResolutionIndependent",
              "key.parsed_scope.end" : 16,
              "key.parsed_scope.start" : 16,
              "key.swift_declaration" : "case resolutionIndependent = 2",
              "key.swift_name" : "resolutionIndependent",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKStyleModeIconType@TKStyleModeIconTypeResolutionIndependent"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 17,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKStyleModeIconTypeVehicle",
              "key.parsed_declaration" : "TKStyleModeIconTypeVehicle",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 17,
              "key.swift_declaration" : "case vehicle = 3",
              "key.swift_name" : "vehicle",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKStyleModeIconType@TKStyleModeIconTypeVehicle"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 18,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKStyleModeIconTypeAlert",
              "key.parsed_declaration" : "TKStyleModeIconTypeAlert",
              "key.parsed_scope.end" : 18,
              "key.parsed_scope.start" : 18,
              "key.swift_declaration" : "case alert = 4",
              "key.swift_name" : "alert",
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKStyleModeIconType@TKStyleModeIconTypeAlert"
            }
          ],
          "key.swift_declaration" : "enum TKStyleModeIconType : Int",
          "key.swift_name" : "TKStyleModeIconType",
          "key.unavailable_message" : "",
          "key.usr" : "c:@E@TKStyleModeIconType"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.doc.line" : 22,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKStyleManager",
          "key.parsed_declaration" : "@interface TKStyleManager : NSObject\n\n+ (TKColor *)darkTextColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");\n\n+ (TKColor *)lightTextColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");\n\n#if TARGET_OS_IPHONE\n+ (UIButton *)cellAccessoryButtonWithImage:(UIImage *)image\n                                    target:(nullable id)target\n                                    action:(nullable SEL)selector;\n#endif\n\n#pragma mark - Image names\n\n+ (NSBundle *)bundle NS_REFINED_FOR_SWIFT; \/\/ Wrong bundle for Swift!\n\n#pragma mark - Date formatting\n\n+ (NSString *)timeString:(NSDate *)time\n             forTimeZone:(nullable NSTimeZone *)timeZone;\n\n+ (NSString *)timeString:(NSDate *)time\n             forTimeZone:(nonnull NSTimeZone *)timeZone\n      relativeToTimeZone:(nullable NSTimeZone *)relativeTimeZone;\n\n+ (NSString *)dateString:(NSDate *)time\n\t\t\t\t\t\t forTimeZone:(NSTimeZone *)timeZone;\n\n+ (NSString *)stringForDate:(NSDate *)date\n                forTimeZone:(NSTimeZone *)timeZone\n                   showDate:(BOOL)showDate\n                   showTime:(BOOL)showTime;\n\n+ (NSString *)stringForDate:(NSDate *)date\n                forTimeZone:(NSTimeZone *)timeZone\n                forceFormat:(NSString *)format;\n\n+ (NSString *)stringForDate:(NSDate *)date\n                forTimeZone:(NSTimeZone *)timeZone\n                 forceStyle:(NSDateFormatterStyle)style;\n\n@end",
          "key.parsed_scope.end" : 63,
          "key.parsed_scope.start" : 22,
          "key.substructure" : [
            {
              "key.always_deprecated" : true,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 24,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+darkTextColor",
              "key.parsed_declaration" : "+ (TKColor *)darkTextColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");",
              "key.parsed_scope.end" : 24,
              "key.parsed_scope.start" : 24,
              "key.swift_declaration" : "class func darkTextColor() -> UIColor",
              "key.swift_name" : "darkTextColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)darkTextColor"
            },
            {
              "key.always_deprecated" : true,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 26,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+lightTextColor",
              "key.parsed_declaration" : "+ (TKColor *)lightTextColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");",
              "key.parsed_scope.end" : 26,
              "key.parsed_scope.start" : 26,
              "key.swift_declaration" : "class func lightTextColor() -> UIColor",
              "key.swift_name" : "lightTextColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)lightTextColor"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 29,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+cellAccessoryButtonWithImage:target:action:",
              "key.parsed_declaration" : "+ (UIButton *)cellAccessoryButtonWithImage:(UIImage *)image\n                                    target:(nullable id)target\n                                    action:(nullable SEL)selector;",
              "key.parsed_scope.end" : 31,
              "key.parsed_scope.start" : 29,
              "key.swift_declaration" : "class func cellAccessoryButton(with image: UIImage, target: Any?, action selector: Selector?) -> UIButton",
              "key.swift_name" : "cellAccessoryButton(with:target:action:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)cellAccessoryButtonWithImage:target:action:"
            },
            {
              "key.doc.column" : 1,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 34,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.mark",
              "key.name" : "Image names",
              "key.parsed_scope.end" : 34,
              "key.parsed_scope.start" : 34
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 36,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+bundle",
              "key.parsed_declaration" : "+ (NSBundle *)bundle NS_REFINED_FOR_SWIFT;",
              "key.parsed_scope.end" : 36,
              "key.parsed_scope.start" : 36,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)bundle"
            },
            {
              "key.doc.column" : 1,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 38,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.mark",
              "key.name" : "Date formatting",
              "key.parsed_scope.end" : 38,
              "key.parsed_scope.start" : 38
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 40,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+timeString:forTimeZone:",
              "key.parsed_declaration" : "+ (NSString *)timeString:(NSDate *)time\n             forTimeZone:(nullable NSTimeZone *)timeZone;",
              "key.parsed_scope.end" : 41,
              "key.parsed_scope.start" : 40,
              "key.swift_declaration" : "class func timeString(_ time: Date, for timeZone: TimeZone?) -> String",
              "key.swift_name" : "timeString(_:for:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)timeString:forTimeZone:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 43,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+timeString:forTimeZone:relativeToTimeZone:",
              "key.parsed_declaration" : "+ (NSString *)timeString:(NSDate *)time\n             forTimeZone:(nonnull NSTimeZone *)timeZone\n      relativeToTimeZone:(nullable NSTimeZone *)relativeTimeZone;",
              "key.parsed_scope.end" : 45,
              "key.parsed_scope.start" : 43,
              "key.swift_declaration" : "class func timeString(_ time: Date, for timeZone: TimeZone, relativeTo relativeTimeZone: TimeZone?) -> String",
              "key.swift_name" : "timeString(_:for:relativeTo:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)timeString:forTimeZone:relativeToTimeZone:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 47,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+dateString:forTimeZone:",
              "key.parsed_declaration" : "+ (NSString *)dateString:(NSDate *)time\n\t\t\t\t\t\t forTimeZone:(NSTimeZone *)timeZone;",
              "key.parsed_scope.end" : 48,
              "key.parsed_scope.start" : 47,
              "key.swift_declaration" : "class func dateString(_ time: Date, for timeZone: TimeZone) -> String",
              "key.swift_name" : "dateString(_:for:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)dateString:forTimeZone:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 50,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+stringForDate:forTimeZone:showDate:showTime:",
              "key.parsed_declaration" : "+ (NSString *)stringForDate:(NSDate *)date\n                forTimeZone:(NSTimeZone *)timeZone\n                   showDate:(BOOL)showDate\n                   showTime:(BOOL)showTime;",
              "key.parsed_scope.end" : 53,
              "key.parsed_scope.start" : 50,
              "key.swift_declaration" : "class func string(for date: Date, for timeZone: TimeZone, showDate: Bool, showTime: Bool) -> String",
              "key.swift_name" : "string(for:for:showDate:showTime:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)stringForDate:forTimeZone:showDate:showTime:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 55,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+stringForDate:forTimeZone:forceFormat:",
              "key.parsed_declaration" : "+ (NSString *)stringForDate:(NSDate *)date\n                forTimeZone:(NSTimeZone *)timeZone\n                forceFormat:(NSString *)format;",
              "key.parsed_scope.end" : 57,
              "key.parsed_scope.start" : 55,
              "key.swift_declaration" : "class func string(for date: Date, for timeZone: TimeZone, forceFormat format: String) -> String",
              "key.swift_name" : "string(for:for:forceFormat:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)stringForDate:forTimeZone:forceFormat:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 59,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+stringForDate:forTimeZone:forceStyle:",
              "key.parsed_declaration" : "+ (NSString *)stringForDate:(NSDate *)date\n                forTimeZone:(NSTimeZone *)timeZone\n                 forceStyle:(NSDateFormatterStyle)style;",
              "key.parsed_scope.end" : 61,
              "key.parsed_scope.start" : 59,
              "key.swift_declaration" : "class func string(for date: Date, for timeZone: TimeZone, force style: DateFormatter.Style) -> String",
              "key.swift_name" : "string(for:for:force:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)stringForDate:forTimeZone:forceStyle:"
            }
          ],
          "key.swift_declaration" : "class TKStyleManager : NSObject",
          "key.swift_name" : "TKStyleManager",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKStyleManager"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.doc.line" : 65,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.category",
          "key.name" : "TKStyleManager(Color)",
          "key.parsed_declaration" : "@interface TKStyleManager (Color)\n\n+ (TKColor *)globalTintColor;\n+ (TKColor *)globalAccentColor;\n+ (BOOL)globalTranslucency;\n\n+ (TKColor *)globalBarTintColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");\n+ (TKColor *)globalSecondaryBarTintColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");\n+ (TKColor *)globalViewBackgroundColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");\n\n@end",
          "key.parsed_scope.end" : 75,
          "key.parsed_scope.start" : 65,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 67,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+globalTintColor",
              "key.parsed_declaration" : "+ (TKColor *)globalTintColor;",
              "key.parsed_scope.end" : 67,
              "key.parsed_scope.start" : 67,
              "key.swift_declaration" : "class func globalTintColor() -> UIColor",
              "key.swift_name" : "globalTintColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)globalTintColor"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 68,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+globalAccentColor",
              "key.parsed_declaration" : "+ (TKColor *)globalAccentColor;",
              "key.parsed_scope.end" : 68,
              "key.parsed_scope.start" : 68,
              "key.swift_declaration" : "class func globalAccentColor() -> UIColor",
              "key.swift_name" : "globalAccentColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)globalAccentColor"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 69,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+globalTranslucency",
              "key.parsed_declaration" : "+ (BOOL)globalTranslucency;",
              "key.parsed_scope.end" : 69,
              "key.parsed_scope.start" : 69,
              "key.swift_declaration" : "class func globalTranslucency() -> Bool",
              "key.swift_name" : "globalTranslucency()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)globalTranslucency"
            },
            {
              "key.always_deprecated" : true,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 71,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+globalBarTintColor",
              "key.parsed_declaration" : "+ (TKColor *)globalBarTintColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");",
              "key.parsed_scope.end" : 71,
              "key.parsed_scope.start" : 71,
              "key.swift_declaration" : "class func globalBarTintColor() -> UIColor",
              "key.swift_name" : "globalBarTintColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)globalBarTintColor"
            },
            {
              "key.always_deprecated" : true,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 72,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+globalSecondaryBarTintColor",
              "key.parsed_declaration" : "+ (TKColor *)globalSecondaryBarTintColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");",
              "key.parsed_scope.end" : 72,
              "key.parsed_scope.start" : 72,
              "key.swift_declaration" : "class func globalSecondaryBarTintColor() -> UIColor",
              "key.swift_name" : "globalSecondaryBarTintColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)globalSecondaryBarTintColor"
            },
            {
              "key.always_deprecated" : true,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.doc.line" : 73,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKStyleManager.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+globalViewBackgroundColor",
              "key.parsed_declaration" : "+ (TKColor *)globalViewBackgroundColor DEPRECATED_MSG_ATTRIBUTE(\"Use dynamic colors that are compatible with Dark Mode, e.g., from TripKitUI\");",
              "key.parsed_scope.end" : 73,
              "key.parsed_scope.start" : 73,
              "key.swift_declaration" : "class func globalViewBackgroundColor() -> UIColor",
              "key.swift_name" : "globalViewBackgroundColor()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKStyleManager(cm)globalViewBackgroundColor"
            }
          ],
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cy)TKStyleManager@Color"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierFlight",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierFlight",
          "key.parsed_scope.end" : 16,
          "key.parsed_scope.start" : 16,
          "key.swift_declaration" : "let TKTransportModeIdentifierFlight: String",
          "key.swift_name" : "TKTransportModeIdentifierFlight",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierFlight"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 18,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierRegularPublicTransport",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierRegularPublicTransport",
          "key.parsed_scope.end" : 18,
          "key.parsed_scope.start" : 18,
          "key.swift_declaration" : "let TKTransportModeIdentifierRegularPublicTransport: String",
          "key.swift_name" : "TKTransportModeIdentifierRegularPublicTransport",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierRegularPublicTransport"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 20,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierSchoolBuses",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierSchoolBuses",
          "key.parsed_scope.end" : 20,
          "key.parsed_scope.start" : 20,
          "key.swift_declaration" : "let TKTransportModeIdentifierSchoolBuses: String",
          "key.swift_name" : "TKTransportModeIdentifierSchoolBuses",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierSchoolBuses"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 22,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierTaxi",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierTaxi",
          "key.parsed_scope.end" : 22,
          "key.parsed_scope.start" : 22,
          "key.swift_declaration" : "let TKTransportModeIdentifierTaxi: String",
          "key.swift_name" : "TKTransportModeIdentifierTaxi",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierTaxi"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 24,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierAutoRickshaw",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierAutoRickshaw",
          "key.parsed_scope.end" : 24,
          "key.parsed_scope.start" : 24,
          "key.swift_declaration" : "let TKTransportModeIdentifierAutoRickshaw: String",
          "key.swift_name" : "TKTransportModeIdentifierAutoRickshaw",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierAutoRickshaw"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 26,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierCar",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierCar",
          "key.parsed_scope.end" : 26,
          "key.parsed_scope.start" : 26,
          "key.swift_declaration" : "let TKTransportModeIdentifierCar: String",
          "key.swift_name" : "TKTransportModeIdentifierCar",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierCar"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 28,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierMotorbike",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierMotorbike",
          "key.parsed_scope.end" : 28,
          "key.parsed_scope.start" : 28,
          "key.swift_declaration" : "let TKTransportModeIdentifierMotorbike: String",
          "key.swift_name" : "TKTransportModeIdentifierMotorbike",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierMotorbike"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 30,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierBicycle",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierBicycle",
          "key.parsed_scope.end" : 30,
          "key.parsed_scope.start" : 30,
          "key.swift_declaration" : "let TKTransportModeIdentifierBicycle: String",
          "key.swift_name" : "TKTransportModeIdentifierBicycle",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierBicycle"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 32,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierBikeShare",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierBikeShare",
          "key.parsed_scope.end" : 32,
          "key.parsed_scope.start" : 32,
          "key.swift_declaration" : "let TKTransportModeIdentifierBikeShare: String",
          "key.swift_name" : "TKTransportModeIdentifierBikeShare",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierBikeShare"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 34,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierWalking",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierWalking",
          "key.parsed_scope.end" : 34,
          "key.parsed_scope.start" : 34,
          "key.swift_declaration" : "let TKTransportModeIdentifierWalking: String",
          "key.swift_name" : "TKTransportModeIdentifierWalking",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierWalking"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.comment" : ":nodoc:",
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.full_as_xml" : "",
          "key.doc.line" : 36,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTransportModeIdentifierWheelchair",
          "key.parsed_declaration" : "extern NSString *const _Nonnull TKTransportModeIdentifierWheelchair",
          "key.parsed_scope.end" : 36,
          "key.parsed_scope.start" : 36,
          "key.swift_declaration" : "let TKTransportModeIdentifierWheelchair: String",
          "key.swift_name" : "TKTransportModeIdentifierWheelchair",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTransportModeIdentifierWheelchair"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.doc.line" : 38,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKTransportModes",
          "key.parsed_declaration" : "@interface TKTransportModes : NSObject\n\n\/\/\/-----------------------------------------------------------------------------\n\/\/\/ @name Handling transport mode identifiers\n\/\/\/-----------------------------------------------------------------------------\n\n\/**\n @return The default set of mode identifiers\n *\/\n+ (NSArray<NSString *> *)defaultModeIdentifiers;\n\n\/**\n @return mode-related part of the image name\n *\/\n+ (nullable NSString *)modeImageNameForModeIdentifier:(NSString *)modeIdentifier;\n\n\/**\n @return The generic mode identifier part, e.g., `pt_pub` for `pt_pub_bus`,\n    which can be used as routing input\n *\/\n+ (NSString *)genericModeIdentifierForModeIdentifier:(NSString *)modeIdentifier;\n\n+ (BOOL)modeIdentifierIsPublicTransport:(NSString *)modeIdentifier;\n+ (BOOL)modeIdentifierIsWalking:(NSString *)modeIdentifier;\n+ (BOOL)modeIdentifierIsWheelchair:(NSString *)modeIdentifier;\n+ (BOOL)modeIdentifierIsCycling:(NSString *)modeIdentifier;\n+ (BOOL)modeIdentifierIsDriving:(NSString *)modeIdentifier;\n+ (BOOL)modeIdentifierIsSharedVehicle:(NSString *)modeIdentifier;\n+ (BOOL)modeIdentifierIsAffectedByTraffic:(NSString *)modeIdentifier;\n+ (BOOL)modeIdentifierIsFlight:(NSString *)modeIdentifier;\n+ (BOOL)modeIdentifierIsExpensive:(NSString *)modeIdentifier;\n\n@end",
          "key.parsed_scope.end" : 70,
          "key.parsed_scope.start" : 38,
          "key.substructure" : [
            {
              "key.doc.column" : 1,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 41,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.mark",
              "key.name" : "Handling transport mode identifiers",
              "key.parsed_scope.end" : 41,
              "key.parsed_scope.start" : 41
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 26,
              "key.doc.comment" : "- returns: The default set of mode identifiers",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 47,
              "key.doc.result_discussion" : [
                {
                  "kind" : "",
                  "Para" : "The default set of mode identifiers"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+defaultModeIdentifiers",
              "key.parsed_declaration" : "+ (nonnull NSArray<NSString *> *)defaultModeIdentifiers;",
              "key.parsed_scope.end" : 47,
              "key.parsed_scope.start" : 47,
              "key.swift_declaration" : "class func defaultModeIdentifiers() -> [String]",
              "key.swift_name" : "defaultModeIdentifiers()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)defaultModeIdentifiers"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.comment" : "- returns: mode-related part of the image name",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 52,
              "key.doc.result_discussion" : [
                {
                  "kind" : "",
                  "Para" : "mode-related part of the image name"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeImageNameForModeIdentifier:",
              "key.parsed_declaration" : "+ (nullable NSString *)modeImageNameForModeIdentifier:\n    (nonnull NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 52,
              "key.parsed_scope.start" : 52,
              "key.swift_declaration" : "class func modeImageName(forModeIdentifier modeIdentifier: String) -> String?",
              "key.swift_name" : "modeImageName(forModeIdentifier:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeImageNameForModeIdentifier:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.comment" : "- returns: The generic mode identifier part, e.g., `pt_pub` for `pt_pub_bus`,\n   which can be used as routing input",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 58,
              "key.doc.result_discussion" : [
                {
                  "kind" : "",
                  "Para" : "The generic mode identifier part, e.g., `pt_pub` for `pt_pub_bus`,\n   which can be used as routing input"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+genericModeIdentifierForModeIdentifier:",
              "key.parsed_declaration" : "+ (nonnull NSString *)genericModeIdentifierForModeIdentifier:\n    (nonnull NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 58,
              "key.parsed_scope.start" : 58,
              "key.swift_declaration" : "class func genericModeIdentifier(forModeIdentifier modeIdentifier: String) -> String",
              "key.swift_name" : "genericModeIdentifier(forModeIdentifier:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)genericModeIdentifierForModeIdentifier:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 60,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsPublicTransport:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsPublicTransport:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 60,
              "key.parsed_scope.start" : 60,
              "key.swift_declaration" : "class func modeIdentifierIsPublicTransport(_ modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsPublicTransport(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsPublicTransport:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 61,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsWalking:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsWalking:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 61,
              "key.parsed_scope.start" : 61,
              "key.swift_declaration" : "class func modeIdentifierIsWalking(_ modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsWalking(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsWalking:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 62,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsWheelchair:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsWheelchair:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 62,
              "key.parsed_scope.start" : 62,
              "key.swift_declaration" : "class func modeIdentifierIsWheelchair(_ modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsWheelchair(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsWheelchair:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 63,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsCycling:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsCycling:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 63,
              "key.parsed_scope.start" : 63,
              "key.swift_declaration" : "class func modeIdentifierIsCycling(_ modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsCycling(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsCycling:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 64,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsDriving:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsDriving:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 64,
              "key.parsed_scope.start" : 64,
              "key.swift_declaration" : "class func modeIdentifierIsDriving(_ modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsDriving(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsDriving:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 65,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsSharedVehicle:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsSharedVehicle:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 65,
              "key.parsed_scope.start" : 65,
              "key.swift_declaration" : "class func modeIdentifierIsSharedVehicle(_ modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsSharedVehicle(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsSharedVehicle:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 66,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsAffectedByTraffic:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsAffectedByTraffic:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 66,
              "key.parsed_scope.start" : 66,
              "key.swift_declaration" : "class func modeIdentifierIsAffected(byTraffic modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsAffected(byTraffic:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsAffectedByTraffic:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 67,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsFlight:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsFlight:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 67,
              "key.parsed_scope.start" : 67,
              "key.swift_declaration" : "class func modeIdentifierIsFlight(_ modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsFlight(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsFlight:"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.doc.line" : 68,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTransportModes.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+modeIdentifierIsExpensive:",
              "key.parsed_declaration" : "+ (BOOL)modeIdentifierIsExpensive:(NSString *)modeIdentifier;",
              "key.parsed_scope.end" : 68,
              "key.parsed_scope.start" : 68,
              "key.swift_declaration" : "class func modeIdentifierIsExpensive(_ modeIdentifier: String) -> Bool",
              "key.swift_name" : "modeIdentifierIsExpensive(_:)",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTransportModes(cm)modeIdentifierIsExpensive:"
            }
          ],
          "key.swift_declaration" : "class TKTransportModes : NSObject",
          "key.swift_name" : "TKTransportModes",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKTransportModes"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 1,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
          "key.doc.line" : 9,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
          "key.kind" : "sourcekitten.source.lang.objc.module.import",
          "key.name" : "CoreData",
          "key.parsed_declaration" : "@import CoreData",
          "key.parsed_scope.end" : 9,
          "key.parsed_scope.start" : 9,
          "key.unavailable_message" : "",
          "key.usr" : "c:"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 35,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
          "key.doc.line" : 13,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.constant",
          "key.name" : "TKTripKitDidResetNotification",
          "key.parsed_declaration" : "FOUNDATION_EXPORT NSString *const TKTripKitDidResetNotification",
          "key.parsed_scope.end" : 13,
          "key.parsed_scope.start" : 13,
          "key.swift_declaration" : "static let TKTripKitDidReset: NSNotification.Name",
          "key.swift_name" : "TKTripKitDidReset",
          "key.unavailable_message" : "",
          "key.usr" : "c:@TKTripKitDidResetNotification"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
          "key.doc.line" : 15,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.class",
          "key.name" : "TKTripKit",
          "key.parsed_declaration" : "@interface TKTripKit : NSObject\n\n@property (nonatomic, strong, null_resettable) NSPersistentStoreCoordinator  *persistentStoreCoordinator;\n@property (nonatomic, strong, null_resettable) NSManagedObjectContext        *tripKitContext;\n\n+ (NSBundle *)bundle NS_REFINED_FOR_SWIFT;\n\n+ (TKTripKit *)sharedInstance NS_REFINED_FOR_SWIFT;\n\n\/**\n Reloads the coordinator and context, which will be set to new instances. Call this when using multiple TripKit instances in different processes and they went out of sync.\n *\/\n- (void)reload;\n\n\/**\n Wipes TripKit and effectively clears the cache. Following calls to the context and coordinator will return new instances, so make sure you clear local references to those.\n *\/\n- (void)reset;\n\n\/**\n The date TripKit was last reset when the context and coordinator were initialised. If you have multiple TripKit instances in different processes accessing the same underlying store, you can use this to determine if they are still in sync. If they aren't you'll likely want to call `reload` on the TripKit instance which wasn't reloaded since the other one was reset.\n \n @return Reset date as when the context\/coordinator were initialised\n *\/\n- (nonnull NSDate *)resetDateFromInitialization;\n\n- (NSCache *)inMemoryCache;\n\n@end",
          "key.parsed_scope.end" : 43,
          "key.parsed_scope.start" : 15,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 79,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.doc.line" : 17,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "persistentStoreCoordinator",
              "key.parsed_declaration" : "@property (nonatomic, strong, null_resettable) NSPersistentStoreCoordinator  *persistentStoreCoordinator",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 17,
              "key.swift_declaration" : "var persistentStoreCoordinator: NSPersistentStoreCoordinator! { get set }",
              "key.swift_name" : "persistentStoreCoordinator",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTripKit(py)persistentStoreCoordinator"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 79,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.doc.line" : 18,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.property",
              "key.name" : "tripKitContext",
              "key.parsed_declaration" : "@property (nonatomic, strong, null_resettable) NSManagedObjectContext        *tripKitContext",
              "key.parsed_scope.end" : 18,
              "key.parsed_scope.start" : 18,
              "key.swift_declaration" : "var tripKitContext: NSManagedObjectContext! { get set }",
              "key.swift_name" : "tripKitContext",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTripKit(py)tripKitContext"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 15,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.doc.line" : 20,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+bundle",
              "key.parsed_declaration" : "+ (NSBundle *)bundle NS_REFINED_FOR_SWIFT;",
              "key.parsed_scope.end" : 20,
              "key.parsed_scope.start" : 20,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTripKit(cm)bundle"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 16,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.doc.line" : 22,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+sharedInstance",
              "key.parsed_declaration" : "+ (TKTripKit *)sharedInstance NS_REFINED_FOR_SWIFT;",
              "key.parsed_scope.end" : 22,
              "key.parsed_scope.start" : 22,
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTripKit(cm)sharedInstance"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "Reloads the coordinator and context, which will be set to new instances. Call this when using multiple TripKit instances in different processes and they went out of sync.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 27,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-reload",
              "key.parsed_declaration" : "- (void)reload;",
              "key.parsed_scope.end" : 27,
              "key.parsed_scope.start" : 27,
              "key.swift_declaration" : "func reload()",
              "key.swift_name" : "reload()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTripKit(im)reload"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.comment" : "Wipes TripKit and effectively clears the cache. Following calls to the context and coordinator will return new instances, so make sure you clear local references to those.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 32,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-reset",
              "key.parsed_declaration" : "- (void)reset;",
              "key.parsed_scope.end" : 32,
              "key.parsed_scope.start" : 32,
              "key.swift_declaration" : "func reset()",
              "key.swift_name" : "reset()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTripKit(im)reset"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 21,
              "key.doc.comment" : "The date TripKit was last reset when the context and coordinator were initialised. If you have multiple TripKit instances in different processes accessing the same underlying store, you can use this to determine if they are still in sync. If they aren't you'll likely want to call `reload` on the TripKit instance which wasn't reloaded since the other one was reset.\n\n- returns: Reset date as when the context\/coordinator were initialised",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 39,
              "key.doc.result_discussion" : [
                {
                  "kind" : "",
                  "Para" : "Reset date as when the context\/coordinator were initialised"
                }
              ],
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-resetDateFromInitialization",
              "key.parsed_declaration" : "- (nonnull NSDate *)resetDateFromInitialization;",
              "key.parsed_scope.end" : 39,
              "key.parsed_scope.start" : 39,
              "key.swift_declaration" : "func resetDateFromInitialization() -> Date",
              "key.swift_name" : "resetDateFromInitialization()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTripKit(im)resetDateFromInitialization"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 14,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.doc.line" : 41,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKTripKit.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-inMemoryCache",
              "key.parsed_declaration" : "- (NSCache *)inMemoryCache;",
              "key.parsed_scope.end" : 41,
              "key.parsed_scope.start" : 41,
              "key.swift_declaration" : "func inMemoryCache() -> Any!",
              "key.swift_name" : "inMemoryCache()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)TKTripKit(im)inMemoryCache"
            }
          ],
          "key.swift_declaration" : "class TKTripKit : NSObject",
          "key.swift_name" : "TKTripKit",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cs)TKTripKit"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
          "key.doc.line" : 12,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.typedef",
          "key.name" : "TKVehicleType",
          "key.parsed_declaration" : "typedef NS_ENUM(NSInteger, TKVehicleType",
          "key.parsed_scope.end" : 12,
          "key.parsed_scope.start" : 12,
          "key.unavailable_message" : "",
          "key.usr" : "c:TKVehicleType.h@T@TKVehicleType"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 28,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
          "key.doc.line" : 12,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.enum",
          "key.name" : "TKVehicleType",
          "key.parsed_declaration" : "NS_ENUM(NSInteger, TKVehicleType) {\n  TKVehicleType_None = 0,\n  TKVehicleType_Bicycle,\n\tTKVehicleType_Car,\n  TKVehicleType_Motorbike,\n  TKVehicleType_SUV,\n}",
          "key.parsed_scope.end" : 18,
          "key.parsed_scope.start" : 12,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.doc.line" : 13,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKVehicleType_None",
              "key.parsed_declaration" : "TKVehicleType_None = 0",
              "key.parsed_scope.end" : 13,
              "key.parsed_scope.start" : 13,
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKVehicleType@TKVehicleType_None"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.doc.line" : 14,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKVehicleType_Bicycle",
              "key.parsed_declaration" : "TKVehicleType_Bicycle",
              "key.parsed_scope.end" : 14,
              "key.parsed_scope.start" : 14,
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKVehicleType@TKVehicleType_Bicycle"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 2,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.doc.line" : 15,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKVehicleType_Car",
              "key.parsed_declaration" : "TKVehicleType_Car",
              "key.parsed_scope.end" : 15,
              "key.parsed_scope.start" : 15,
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKVehicleType@TKVehicleType_Car"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.doc.line" : 16,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKVehicleType_Motorbike",
              "key.parsed_declaration" : "TKVehicleType_Motorbike",
              "key.parsed_scope.end" : 16,
              "key.parsed_scope.start" : 16,
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKVehicleType@TKVehicleType_Motorbike"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 3,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.doc.line" : 17,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicleType.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.enumcase",
              "key.name" : "TKVehicleType_SUV",
              "key.parsed_declaration" : "TKVehicleType_SUV",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 17,
              "key.unavailable_message" : "",
              "key.usr" : "c:@E@TKVehicleType@TKVehicleType_SUV"
            }
          ],
          "key.unavailable_message" : "",
          "key.usr" : "c:@E@TKVehicleType"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 11,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
          "key.doc.line" : 16,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.protocol",
          "key.name" : "TKVehicular",
          "key.parsed_declaration" : "@protocol TKVehicular <NSObject>\n\n\/**\n Optional name to use in the UI to refer to this vehicle.\n *\/\n- (nullable NSString *)name;\n\n\/**\n What kind of vehicle it is. Required field.\n *\/\n- (TKVehicleType)vehicleType;\n\n@optional\n\n\/**\n Where this vehicle is garaged. Can be `nil` but the algorithms won't try to\n take it back to the garage then.\n \n @note `nil` is the same as getting a lift\n *\/\n- (nullable id<MKAnnotation>)garage;\n\n\/**\n The unique identifier that identifies this vehicle.\n \n @note Getting a lift instances don't have a UUID\n *\/\n- (nullable NSString *)vehicleUUID;\n\n@end",
          "key.parsed_scope.end" : 45,
          "key.parsed_scope.start" : 16,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.comment" : "Optional name to use in the UI to refer to this vehicle.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 21,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-name",
              "key.parsed_declaration" : "- (nullable NSString *)name;",
              "key.parsed_scope.end" : 21,
              "key.parsed_scope.start" : 21,
              "key.swift_declaration" : "func name() -> String?",
              "key.swift_name" : "name()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(pl)TKVehicular(im)name"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 18,
              "key.doc.comment" : "What kind of vehicle it is. Required field.",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 26,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-vehicleType",
              "key.parsed_declaration" : "- (TKVehicleType)vehicleType;",
              "key.parsed_scope.end" : 26,
              "key.parsed_scope.start" : 26,
              "key.swift_declaration" : "func vehicleType() -> TKVehicleType",
              "key.swift_name" : "vehicleType()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(pl)TKVehicular(im)vehicleType"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 30,
              "key.doc.comment" : "Where this vehicle is garaged. Can be `nil` but the algorithms won't try to\ntake it back to the garage then.\n\n- note: `nil` is the same as getting a lift",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 36,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-garage",
              "key.parsed_declaration" : "- (nullable id<MKAnnotation>)garage;",
              "key.parsed_scope.end" : 36,
              "key.parsed_scope.start" : 36,
              "key.swift_declaration" : "optional func garage() -> MKAnnotation?",
              "key.swift_name" : "garage()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(pl)TKVehicular(im)garage"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.comment" : "The unique identifier that identifies this vehicle.\n\n- note: Getting a lift instances don't have a UUID",
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
              "key.doc.full_as_xml" : "",
              "key.doc.line" : 43,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/TKVehicular.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.instance",
              "key.name" : "-vehicleUUID",
              "key.parsed_declaration" : "- (nullable NSString *)vehicleUUID;",
              "key.parsed_scope.end" : 43,
              "key.parsed_scope.start" : 43,
              "key.swift_declaration" : "optional func vehicleUUID() -> String?",
              "key.swift_name" : "vehicleUUID()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(pl)TKVehicular(im)vehicleUUID"
            }
          ],
          "key.swift_declaration" : "protocol TKVehicular : NSObjectProtocol",
          "key.swift_name" : "TKVehicular",
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(pl)TKVehicular"
        }
      ]
    }
  },
  {
    "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h" : {
      "key.diagnostic_stage" : "",
      "key.substructure" : [
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 1,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
          "key.doc.line" : 9,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
          "key.kind" : "sourcekitten.source.lang.objc.module.import",
          "key.name" : "UIKit",
          "key.parsed_declaration" : "@import UIKit",
          "key.parsed_scope.end" : 9,
          "key.parsed_scope.start" : 9,
          "key.unavailable_message" : "",
          "key.usr" : "c:"
        },
        {
          "key.always_deprecated" : false,
          "key.always_unavailable" : false,
          "key.deprecation_message" : "",
          "key.doc.column" : 12,
          "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
          "key.doc.line" : 13,
          "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
          "key.kind" : "sourcekitten.source.lang.objc.decl.category",
          "key.name" : "UIFont(CustomFonts)",
          "key.parsed_declaration" : "@interface UIFont (CustomFonts)\n\n+ (nullable NSString *)preferredFontName;\n\n+ (nullable NSString *)preferredBoldFontName;\n\n+ (nullable NSString *)preferredSemiboldFontName;\n\n+ (nullable NSString *)preferredMediumFontName;\n\n+ (void)printIncludedCustomFontsByNames;\n\n@end",
          "key.parsed_scope.end" : 25,
          "key.parsed_scope.start" : 13,
          "key.substructure" : [
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.doc.line" : 15,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+preferredFontName",
              "key.parsed_declaration" : "+ (nullable NSString *)preferredFontName;",
              "key.parsed_scope.end" : 15,
              "key.parsed_scope.start" : 15,
              "key.swift_declaration" : "class func preferredFontName() -> String?",
              "key.swift_name" : "preferredFontName()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)UIFont(cm)preferredFontName"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.doc.line" : 17,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+preferredBoldFontName",
              "key.parsed_declaration" : "+ (nullable NSString *)preferredBoldFontName;",
              "key.parsed_scope.end" : 17,
              "key.parsed_scope.start" : 17,
              "key.swift_declaration" : "class func preferredBoldFontName() -> String?",
              "key.swift_name" : "preferredBoldFontName()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)UIFont(cm)preferredBoldFontName"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.doc.line" : 19,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+preferredSemiboldFontName",
              "key.parsed_declaration" : "+ (nullable NSString *)preferredSemiboldFontName;",
              "key.parsed_scope.end" : 19,
              "key.parsed_scope.start" : 19,
              "key.swift_declaration" : "class func preferredSemiboldFontName() -> String?",
              "key.swift_name" : "preferredSemiboldFontName()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)UIFont(cm)preferredSemiboldFontName"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 24,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.doc.line" : 21,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+preferredMediumFontName",
              "key.parsed_declaration" : "+ (nullable NSString *)preferredMediumFontName;",
              "key.parsed_scope.end" : 21,
              "key.parsed_scope.start" : 21,
              "key.swift_declaration" : "class func preferredMediumFontName() -> String?",
              "key.swift_name" : "preferredMediumFontName()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)UIFont(cm)preferredMediumFontName"
            },
            {
              "key.always_deprecated" : false,
              "key.always_unavailable" : false,
              "key.deprecation_message" : "",
              "key.doc.column" : 9,
              "key.doc.file" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.doc.line" : 23,
              "key.filepath" : "\/Users\/adrian\/SkedGo\/tripgo-ios\/Libraries\/TripKit\/Sources\/TripKitObjc\/include\/TripKitObjc\/UIFont+CustomFonts.h",
              "key.kind" : "sourcekitten.source.lang.objc.decl.method.class",
              "key.name" : "+printIncludedCustomFontsByNames",
              "key.parsed_declaration" : "+ (void)printIncludedCustomFontsByNames;",
              "key.parsed_scope.end" : 23,
              "key.parsed_scope.start" : 23,
              "key.swift_declaration" : "class func printIncludedCustomFontsByNames()",
              "key.swift_name" : "printIncludedCustomFontsByNames()",
              "key.unavailable_message" : "",
              "key.usr" : "c:objc(cs)UIFont(cm)printIncludedCustomFontsByNames"
            }
          ],
          "key.unavailable_message" : "",
          "key.usr" : "c:objc(cy)UIFont@CustomFonts"
        }
      ]
    }
  }
]

