stages:
  - build
  - examples
  - deploy

variables:
  LC_ALL: "en_US.UTF-8"
  LANG: "en_US.UTF-8"

before_script:
  - ruby --version
  - bundle install --quiet

build_ios_base:
  stage: build
  script:
    - export XCODE_XCCONFIG_FILE=$(pwd)/carthage.xcconfig
    - carthage bootstrap --cache-builds --platform iOS
    - xcodebuild test -project TripKit.xcodeproj -scheme "TripKit-iOS" -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8' | xcpretty -c -r html && exit ${PIPESTATUS[0]}
  retry: 1
  cache:
    key:
      files:
        - Cartfile.resolved
    paths:
      - Carthage/Build
      - Carthage/Checkouts
  artifacts:
    paths:
    - build/reports/tests.html
  tags:
    - ios

build_ios_ui:
  stage: build
  script:
    - export XCODE_XCCONFIG_FILE=$(pwd)/carthage.xcconfig
    - carthage bootstrap --cache-builds --platform iOS --no-use-binaries
    - xcodebuild build -project TripKit.xcodeproj -scheme "TripKitUI-iOS" -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8' | xcpretty -c -r html && exit ${PIPESTATUS[0]}
  cache:
    key: 
      files:
        - Cartfile.resolved
    paths:
      - Carthage/Build
      - Carthage/Checkouts
  tags:
    - ios

build_ios_interapp:
  stage: build
  script:
    - export XCODE_XCCONFIG_FILE=$(pwd)/carthage.xcconfig
    - carthage bootstrap --cache-builds --platform iOS --no-use-binaries
    - xcodebuild build -project TripKit.xcodeproj -scheme "TripKitInterApp-iOS" -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8' | xcpretty -c -r html && exit ${PIPESTATUS[0]}
  cache:
    key: 
      files:
        - Cartfile.resolved
    paths:
      - Carthage/Build
      - Carthage/Checkouts
  tags:
    - ios

build_mac_base:
  stage: build
  script:
    - mv Cartfile.resolved Cartfile.resolved.ios
    - mv Cartfile.resolved.macos Cartfile.resolved
    - export XCODE_XCCONFIG_FILE=$(pwd)/carthage.xcconfig
    - carthage bootstrap --cache-builds --platform macOS --no-use-binaries
    - xcodebuild build -project TripKit.xcodeproj -scheme "TripKit-macOS" | xcpretty -c && exit ${PIPESTATUS[0]}
    - mv Cartfile.resolved Cartfile.resolved.macos
    - mv Cartfile.resolved.ios Cartfile.resolved
  cache:
    key:
      files:
        - Cartfile.resolved.macos
    paths:
      - Carthage/Build
      - Carthage/Checkouts
  tags:
    - ios

build_tripkitui_example:
  stage: examples
  script:
    - export XCODE_XCCONFIG_FILE=$(pwd)/carthage.xcconfig
    - carthage bootstrap --cache-builds --platform iOS --no-use-binaries
    - xcodebuild build -project TripKit.xcodeproj -scheme TripKitUIExample -sdk iphonesimulator -destination 'platform=iOS Simulator,name=iPhone 8' | xcpretty -c && exit ${PIPESTATUS[0]}
  cache:
    key:
      files:
        - Cartfile.resolved
    paths:
      - Carthage/Build
      - Carthage/Checkouts
  tags:
    - ios

build_minimap_example:
  stage: examples
  script:
    - cd Examples/MiniMap
    - pod install
    - xcodebuild build -workspace MiniMap.xcworkspace -scheme MiniMap | xcpretty -c -r html && exit ${PIPESTATUS[0]}
  cache:
    key:
      files:
        - Examples/MiniMap/Podfile
    paths:
      - Examples/MiniMap/Pods
  tags:
    - ios

build_cocoapodstest_example:
  stage: examples
  script:
    - cd Examples/CocoaPodsTest
    - pod install
    - xcodebuild build -workspace CocoaPodsTest.xcworkspace -scheme CocoaPodsTest ONLY_ACTIVE_ARCH=NO | xcpretty -c -r html && exit ${PIPESTATUS[0]}
  retry: 1
  cache:
    key:
      files:
        - Examples/MiniMap/Podfile.lock
    paths:
      - Examples/CocoaPodsTest/Pods
  tags:
    - ios

# code_quality:
#   stage: deploy
#   image: docker:stable
#   variables:
#     DOCKER_DRIVER: overlay2
#   allow_failure: true
#   services:
#     - docker:stable-dind
#   script: 
#     - export SP_VERSION=$(echo "$CI_SERVER_VERSION" | sed 's/^\([0-9]*\)\.\([0-9]*\).*/\1-\2-stable/')
#     - docker run
#         --env SOURCE_CODE="$PWD"
#         --volume "$PWD":/code
#         --volume /var/run/docker.sock:/var/run/docker.sock
#         "registry.gitlab.com/gitlab-org/security-products/codequality:$SP_VERSION" /code
#   tags:
#     - docker
#   artifacts:
#     paths: [gl-code-quality-report.json]

pages_dryrun:
  stage: deploy
  before_script:
    - brew install sourcekitten
  script:
    - export XCODE_XCCONFIG_FILE=$(pwd)/carthage.xcconfig
    - carthage bootstrap --cache-builds --platform iOS --no-use-binaries
    - ./docs.sh
  cache:
    key:
      files:
        - Cartfile.resolved
    paths:
      - Carthage/Build
      - Carthage/Checkouts
  tags:
    - ios
  artifacts:
    paths:
      - public
  except:
    - master

pages:
  stage: deploy
  before_script:
    - brew install sourcekitten
  script:
    - export XCODE_XCCONFIG_FILE=$(pwd)/carthage.xcconfig
    - carthage bootstrap --cache-builds --platform iOS
    - ./docs.sh
  cache:
    key:
      files:
        - Cartfile.resolved
    paths:
      - Carthage/Build
      - Carthage/Checkouts
  tags:
    - ios
  artifacts:
    paths:
      - public
  only:
    - master
